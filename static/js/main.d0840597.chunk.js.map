{"version":3,"sources":["ExtLink/ExtLink.js","Breadcrumb/Breadcrumb.js","utilities/components/ShortHash.js","LoadingSpinner/LoadingSpinner.js","ButtonLoader/ButtonLoader.js","RoundIconButton/RoundIconButton.js","TrancheWelcome/TrancheWelcome.module.scss","SmartNumber/SmartNumber.js","PageNotFound/PageNotFound.module.scss","CustomTooltip/CustomTooltip.js","AllocationChart/AllocationChart.js","CustomTooltip/CustomTooltipRow.js","Faquestion/Faquestion.js","ActiveCoverages/ActiveCoverages.js","PortfolioEquity/PortfolioEquity.js","TrancheField/TrancheField.js","CardIconButton/CardIconButton.js","TxProgressBar/TxProgressBar.js","GenericSelector/GenericSelector.js","theme.js","TwitterShareButton/TwitterShareButton.js","utilities/components/ShareModal.js","utilities/components/ModalCard.module.scss","TwitterShareButton/TwitterShareButton.module.scss","TableCellHeader/TableCellHeader.module.scss","TransactionListFilters/TransactionListFilters.module.scss","Web3ConnectionButtons/Web3ConnectionButtons.module.scss","IconBox/IconBox.js","GenericChart/GenericChart.js","AssetSelector/AssetSelector.js","utilities/components/Header.module.scss","Tos/Tos.module.scss","TransactionField/TransactionField.js","ExecuteTransaction/ExecuteTransaction.js","utilities/IdleGovToken.js","utilities/FunctionsUtil.js","DashboardCard/DashboardCard.module.scss","TableRow/TableRow.js","TableHeader/TableHeader.js","FastBalanceSelector/FastBalanceSelector.js","DashboardCard/DashboardCard.js","utilities/components/BuyModal.js","Staking/Staking.js","GenericFaqs/GenericFaqs.js","SendTxWithBalance/SendTxWithBalance.js","utilities/components/LimitReachedModal.js","TrancheDetails/TrancheDetails.js","PortfolioEquityTranches/PortfolioEquityTranches.js","FundsOverviewTranche/FundsOverviewTranche.js","StakingRewardsTranche/StakingRewardsTranche.js","TranchePage/TranchePage.js","TranchesList/TranchesList.js","TrancheBox/TrancheBox.js","TrancheFlash/TrancheFlash.js","TrancheWelcome/TrancheWelcome.js","GenericPieChart/GenericPieChart.js","TotalBalanceCounter/TotalBalanceCounter.js","TotalEarningsCounter/TotalEarningsCounter.js","Tranches/Tranches.js","TokenSwap/TokenSwap.js","LpStaking/LpStaking.js","IdleStaking/IdleStaking.js","NexusMutual/NexusMutual.js","TokenWrapper/TokenWrapper.js","PortfolioDonut/PortfolioDonut.js","EarningsEstimation/EarningsEstimation.js","DashboardIconButton/DashboardIconButton.js","StrategyPage/StrategyPage.js","BatchDeposit/BatchDeposit.js","CoverProtocol/CoverProtocol.js","TokenMigration/TokenMigration.js","BatchMigration/BatchMigration.js","DeployB2BVesting/DeployB2BVesting.js","configs/globalConfigs.js","Tos/Tos.js","theme-dark.js","App/connectors/TorusConnector.js","App/connectors/AuthereumConnector.js","App/connectors/GnosisSafeConnector.js","App/connectors/WalletLinkConnector.js","App/connectors/WalletConnectConnector.js","App/connectors.js","utilities/components/WrongNetworkBanner.js","utilities/NetworkUtil.js","utilities/components/NoWeb3BrowserModal.js","utilities/components/NoWalletModal.js","utilities/GeneralUtil.js","utilities/components/WrongNetworkModal.js","utilities/components/TransactionFeeModal.js","Web3ConnectionButtons/Web3ConnectionButtons.js","utilities/components/ConnectionModal.js","utilities/components/ConnectionPendingModal.js","utilities/components/UserRejectedConnectionModal.js","utilities/components/LowFundsModal.js","utilities/ConnectionModalsUtil.js","utilities/components/ConnectionErrorModal.js","utilities/components/TransactionErrorModal.js","utilities/RimbleWeb3.js","utilities/components/Header.js","ScrollToTop/ScrollToTop.js","PageNotFound/PageNotFound.js","utilities/components/NetworkOverview.js","Web3Debugger/Web3Debugger.js","abis/compound/cDAI.js","abis/tokens/ERC20.js","configs/availableTokens.js","configs/availableTranches.js","utilities/TransactionToastMessages.js","utilities/TransactionToastUtil.js","App/App.js","serviceWorker.js","index.js","ConnectBox/ConnectBox.js","TransactionListFilters/TransactionListFilters.js","TransactionsList/TransactionsList.js","Migrate/Migrate.js","ChartCustomTooltipRow/ChartCustomTooltipRow.js","AssetsList/AssetsList.js","Footer/Footer.module.scss","utilities/components/ModalCard.js","colors.js","VariationNumber/VariationNumber.js","GenericSelector/GenericSelector.module.scss","LoadingSpinner/LoadingSpinner.module.scss","Footer/Footer.js","TableCellHeader/TableCellHeader.js","ChartCustomTooltip/ChartCustomTooltip.js","CustomField/CustomField.js","CustomList/CustomList.js","FlexLoader/FlexLoader.js","Title/Title.js","AssetField/AssetField.js","RoundButton/RoundButton.js","ImageButton/ImageButton.js"],"names":["ExtLink","react__WEBPACK_IMPORTED_MODULE_6___default","a","createElement","rimble_ui__WEBPACK_IMPORTED_MODULE_5__","Object","assign","target","rel","this","props","children","Component","Breadcrumb","_this","showPathMobile","react__WEBPACK_IMPORTED_MODULE_5___default","rimble_ui__WEBPACK_IMPORTED_MODULE_6__","width","id","alignItems","handleClick","_RoundIconButton_RoundIconButton__WEBPACK_IMPORTED_MODULE_7__","buttonProps","border","height","iconSize","iconName","text","length","ml","fontSize","fontWeight","color","hoverColor","onClick","isMobile","path","map","index","link","pathLink","Link","Text","pl","style","maxWidth","overflow","whiteSpace","textOverflow","borderLeft","concat","theme","colors","divider","key","e","goToSection","ShortHash","state","functionsUtil","setProps","FunctionsUtil","loadUtils","loadData","prevProps","prevState","resolveAddress","shortenHash","hash","getENSName","ensName","setState","loader","react__WEBPACK_IMPORTED_MODULE_7___default","rimble_ui__WEBPACK_IMPORTED_MODULE_8__","size","display","LoadingSpinner","react_default","index_es","justifyContent","className","styles","mx","ButtonLoader","flexDirection","isLoading","src_LoadingSpinner_LoadingSpinner","buttonText","RoundIconButton","p","borderRadius","mainColor","disabled","minWidth","_RoundButton_RoundButton__WEBPACK_IMPORTED_MODULE_7__","name","module","exports","trancheFlash","mobile","SmartNumber","_this2","formattedNumber","number","isNaN","type","formatMoney","precision","abbreviateNumber","decimals","maxPrecision","minPrecision","flexProps","keys","forEach","showUnit","unitPos","react__WEBPACK_IMPORTED_MODULE_8___default","rimble_ui__WEBPACK_IMPORTED_MODULE_7__","unit","unitProps","headerContainer","headerBgFiller","bgContainer","list","textContainer","CustomTooltip","_DashboardCard_DashboardCard__WEBPACK_IMPORTED_MODULE_7__","point","cardProps","py","px","left","data","itemPos","xFormatted","mb","textAlign","AllocationChart","chartData","chartProps","selectedSlice","totalAllocation","protocolsAllocations","protocolsAllocationsPerc","componentUnmounted","selectedToken","setStateSafe","newState","callback","getTokenAllocation","tokenConfig","padAngle","animate","borderWidth","cornerRadius","motionDamping","innerRadius","motionStiffness","d","onMouseEnter","_this3","onMouseLeave","tooltipFormat","v","sliceLabel","value","radialLabel","tooltip","container","inline","background","cardBg","labels","fontFamily","fonts","sansSerif","legends","slicesLabelsSkipAngle","radialLabelsSkipAngle","enableRadialLabels","radialLabelsTextXOffset","slicesLabelsTextColor","radialLabelsTextColor","radialLabelsLinkStrokeWidth","radialLabelsLinkDiagonalLength","radialLabelsLinkHorizontalLength","enableSlicesLabels","radialLabelsLinkColor","from","borderColor","modifiers","margin","top","right","bottom","protocols","protocolInfo","i","protocolName","protocolAddr","address","toLowerCase","protocolAllocationPercParsed","parseFloat","times","toFixed","push","globalConfigs","stats","hsl","join","label","capitalize","protocolIcon","icon","rimble_ui__WEBPACK_IMPORTED_MODULE_9__","position","zIndex","src","_SmartNumber_SmartNumber__WEBPACK_IMPORTED_MODULE_10__","_GenericChart_GenericChart__WEBPACK_IMPORTED_MODULE_13__","Pie","showLoader","CustomTooltipRow","pr","flexBasis","flex","mr","backgroundColor","textTransform","dangerouslySetInnerHTML","__html","Faquestion","isShowingAnswer","preventDefault","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_0__","my","isOpened","boxShadow","cursor","h4","question","answer","Base","loaded","activeCoverages","loadCoverages","account","getActiveCoverages","coverages","c","availableTokens","includes","collateral","statusColors","transactions","status","statusIcon","statusColor","completed","failed","pending","statusIconProps","portfolioCoverage","react__WEBPACK_IMPORTED_MODULE_9___default","title","_Title_Title__WEBPACK_IMPORTED_MODULE_8__","titleProps","_CustomList_CustomList__WEBPACK_IMPORTED_MODULE_10__","rows","row","fileClaimUrl","openWindow","cols","fields","themeMode","parentProps","funcProps","actionLabel","actionDisabled","actionUrl","PortfolioEquity","startDate","chartwidth","chartHeight","loadChartData","quickDateSelectionChanged","quickDateSelection","JSON","stringify","enabledTokens","componentDidMount","mobileChanged","themeModeChanged","getEtherscanTxs","etherscanTxs","tokensBalance","firstTxTimestamp","asyncForEach","_ref","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default","mark","_callee3","filteredTxs","amountLent","wrap","_context3","prev","next","values","filter","tx","token","BNify","Math","min","parseInt","timeStamp","tokenAmount","action","plus","minus","lt","balance","tokenPrice","idleTokens","stop","_x3","apply","arguments","currentDate","strToMoment","Date","clone","subtract","days","prevBalances","prevTimestamp","minChartValue","maxChartValue","aggregatedBalance","aggregatedBalancesKeys","tokensBalancesPerDate","currTimestamp","getTime","tokensData","isRisk","selectedStrategy","_ref2","_callee4","_context4","getTokenApiData","sent","_x4","idleTokenBalance","foundBalances","tokensBalances","lastTokenData","lastTokenDataUnfiltered","pop","filteredTokenData","timestamp","tokenDecimals","filteredBalances","lastFilteredTx","idlePrice","fixTokenDecimals","newBalance","lastTx","lastTxBalance","gt","tokenUsdConversionRate","conversionRateField","getGlobalConfig","chartToken","conversionRate","momentDate","isSameOrAfter","isSameOrBefore","formattedDate","format","max","frequencySeconds","_loop","aggregatedBalances","date","x","y","balances","itemIndex","item","floor","toUpperCase","yFormatDecimals","gridYStep","gridYValues","gridYValue","daysCount","daysFrequency","ceil","xScale","yScale","stacked","xFormat","yFormat","axisBottom","legend","tickSize","tickPadding","orient","legendOffset","legendPosition","tickValues","pointSize","useMesh","axisLeft","tickRotation","pointLabel","enableArea","enableSlices","enableGridY","curve","enableGridX","pointBorderWidth","pointLabelYOffset","areaBaselineValue","pointColor","areaOpacity","axis","ticks","fill","grid","line","stroke","lineChartStroke","strokeDasharray","sliceTooltip","slideData","slice","points","_ChartCustomTooltip_ChartCustomTooltip__WEBPACK_IMPORTED_MODULE_11__","_ChartCustomTooltipRow_ChartCustomTooltipRow__WEBPACK_IMPORTED_MODULE_12__","serieId","yFormatted","formattedBalance","_GenericChart_GenericChart__WEBPACK_IMPORTED_MODULE_10__","Line","parentId","parentIdHeight","TrancheField","ready","loadField","_callee","fieldName","fieldInfo","fieldProps","addGovTokens","formatValue","addTokenName","output","_args","_context","undefined","protocol","abrupt","t0","loadTrancheField","tranche","trancheConfig","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_1__","tokenChanged","accountChanged","trancheChanged","protocolChanged","fieldChanged","contractInitialized","contractsInitialized","transactionsChanged","oldState","rimble_ui__WEBPACK_IMPORTED_MODULE_13__","tokenName","trancheDetails","rgb","align","hex","buttonLabel","_CustomField_CustomField__WEBPACK_IMPORTED_MODULE_11__","feesCounter","feesStart","feesEnd","react_countup__WEBPACK_IMPORTED_MODULE_8___default","delay","decimal","separator","useEasing","duration","end","start","formattingFn","n","countUpRef","ref","earningsCounter","earningsStart","earningsEnd","_ref3","govTokenConfig","govTokenIndex","_AssetField_AssetField__WEBPACK_IMPORTED_MODULE_10__","tooltipProps","message","getGovTokensDistributionSpeed","distributionFrequency","formattedValue","_isBigNumber","CardIconButton","isInteractive","isActive","isDisabled","image","imageProps","useIconOnly","iconColor","iconProps","iconBgColor","actionBg","redeem","textProps","TxProgressBar","txCount","error","ended","percentage","processing","txTimestamp","initialized","estimatedTime","remainingTime","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_2___default","initProgressBar","getTransaction","transaction","Promise","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_3__","_callee2","resolve","reject","_context2","web3","eth","err","_x","_x2","getBlockTime","pt","blockTime","axios","get","getPredictionTable","_callee5","predictTable","_context5","getTxEstimatedTime","gasPrice","prediction","gasprice","pdValues","_estimateWait","gas","txMeanSecs","block_time","customLog","calculateRemainingTime","_callee6","secondsPassed","timePassed","_context6","blockNumber","div","toString","setTimeout","updateProgressBar","getTxInfo","_callee7","txProgressBarKey","txHash","txProgressBarData","_ref8","_ref9","_context7","localStorage","getItem","parse","all","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_1__","setLocalStorage","_callee8","_context8","window","clearTimeout","gasoffered","minedProb","expectedWait","sum1","sum2","prob","exp","minutes","seconds","substr","react__WEBPACK_IMPORTED_MODULE_10___default","_FlexLoader_FlexLoader__WEBPACK_IMPORTED_MODULE_11__","textColor","loaderProps","endMessage","waitText","span","renderRemainingTime","loadingMessage","sendingMessage","mt","href","getEtherscanTransactionUrl","cancelTransaction","cancelTextColor","cancelTextHoverColor","GenericSelector","loadComponents","selectedTokenChanged","optionsChanged","options","defaultValueChanged","defaultValue","componentsChanged","CustomOptionValue","CustomValueContainer","ControlComponent","innerProps","menuIsOpen","_DashboardCard_DashboardCard__WEBPACK_IMPORTED_MODULE_12__","CustomIndicatorSeparator","CustomMenu","selectProps","CustomInputContainer","isSearchable","fontSizes","copyColor","fontWeights","searchInput","dark","searchInputHidden","CustomOption","selectedValue","o","indexOf","genericSelector","isFocused","react_select__WEBPACK_IMPORTED_MODULE_7__","onChange","components","Menu","Option","Control","Input","SingleValue","IndicatorSeparator","_colors__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","polished__WEBPACK_IMPORTED_MODULE_1__","__webpack_exports__","breakpoints","letterSpacings","lineHeights","solid","copy","serif","counter","space","radii","widths","minWidths","maxWidths","heights","minHeights","maxHeights","borders","borderWidths","shadows","opacity","primary","blue","base","gradient-bg","primary-light","light","primary-dark","bgBlue","tick","dark-blue","skyBlue","lightBlue","subColor","black","baseColors","near-black","dark-gray","mid-gray","gray","grey","silver","light-silver","moon-gray","light-gray","near-white","white","transparent","newblue","alert","arrowActive","arrowInactive","selectBgFocused","selectBg","backButtonBg","wrongNetworkBannerBg","dashboardBg","statValue","boxBorder","cellTitle","cellText","divider2","deposit","migrate","menuBg","menuHover","cardBgContrast","flashColor","menuRightBorder","cardHoverShadow","cardBgHover","cardBorder","pageActive","pageInactive","send","swap","boost","swapout","curvein","receive","default","curveout","withdraw","curvedepositin","curvedepositout","blacks","whites","zIndices","messageStyle","shade","tint","success","green","warning","yellow","danger","red","info","buttons","--main-color","--contrast-color","normal","buttonSizes","small","padding","medium","large","TwitterShareButton","share","sendGoogleAnalyticsEvent","eventCategory","eventAction","eventLabel","parent","w","innerWidth","open","tweet","contrastColor","twitterIcon","ShareModal","closeModal","regenerator_default","getGlobalConfigs","analytics","google","events","enabled","escape","customText","isOpen","ModalCard","closeFunc","confettiEnabled","react_confetti_default","run","recycle","innerHeight","Header","Body","src_TwitterShareButton_TwitterShareButton","React","bg","radioBtn","button","IconBox","isVisible","GenericChart","addEventListener","handleWindowSizeChange","bind","removeEventListener","chartContainer","document","getElementById","chartWidth","offsetWidth","chartContainerH","ChartType","_FlexLoader_FlexLoader__WEBPACK_IMPORTED_MODULE_7__","minHeight","loaderText","AssetSelector","find","_AssetField_AssetField__WEBPACK_IMPORTED_MODULE_9__","showCustomField","cachedData","setCachedData","showBalance","_GenericSelector_GenericSelector__WEBPACK_IMPORTED_MODULE_11__","changeToken","gradientButton","empty","select","selectDark","input","TransactionField","hashChanged","bgColor","rimble_ui__WEBPACK_IMPORTED_MODULE_12__","_utilities_components_ShortHash__WEBPACK_IMPORTED_MODULE_11__","_SmartNumber_SmartNumber__WEBPACK_IMPORTED_MODULE_9__","amount","tokenSymbol","iconSrc","CustomComponent","customValue","getArrayPath","Image","Icon","ExecuteTransaction","txStatus","loading","console","log","eventData","methodName","contractName","getTransactionError","callbackReceipt","transactionHash","params","getTransactionParams","getTransactionParamsAsync","transactionParams","sendRawTransaction","contractMethodSendWrapper","ExecuteComponent","_TxProgressBar_TxProgressBar__WEBPACK_IMPORTED_MODULE_11__","network","progressBarProps","execute","componentProps","IdleGovToken","classCallCheck","getBalance","asyncToGenerator","getTokenBalance","claimRewards","getPriorVotes","priorVotes","_args3","genericContractCall","refreshIdleSpeed","getUnclaimedTokens","getAPR","_ref6","IDLETokenConfig","cachedDataKey","APR","_ref7","idleDistribution","tokenAllocation","DAITokenConfig","tokenPool","idleDistributedPerYearUSD","_args6","idle","getDistribution","slicedToArray","getUniswapConversionRate","lte","convertTokenBalance","totalAllocationWithUnlent","getSpeed","idleTokenAddress","idleSpeeds","getCachedDataWithLocalStorage","setCachedDataWithLocalStorage","_x5","_ref10","blocksPerYear","distribution","_x6","getUserDistribution","_callee10","fixByFrequency","totalSpeed","_args10","_context10","availableStrategies","_ref12","_callee9","_ref13","_ref14","idleSpeed","userPoolShare","tokenSpeed","_context9","disabledTokens","getUserPoolShare","_x7","fixDistributionSpeed","getAvgApr","_callee12","_args12","_context12","_ref16","_callee11","_ref17","_ref18","idleApr","_context11","_x8","ethereumjsABI","require","env","process","profiler","idleGovToken","trimEth","toBN","utils","BN","toEth","wei","fromWei","toWei","htmlDecode","innerHTML","childNodes","nodeValue","BNify_obj","s","BigNumber","String","_len","Array","_key","logs","messagesEnabled","moment","customLogError","_console","_len2","_key2","errorsEnabled","getContractByName","contract","contracts","normalizeSimpleIDNotification","replace","str","replaceArrayProps","arr1","arr2","replaceArrayPropsRecursive","objectSpread","stripHtml","html","tmp","textContent","innerText","scrollTo","to","scrollY","change","currentTime","easeInOutQuad","t","b","animateScroll","val","getQueryStringParameterByName","url","location","results","RegExp","exec","decodeURIComponent","getTxAction","depositProxyContractInfo","migrationContractAddr","migration","migrationContract","migrationContractOldAddrs","oldAddresses","batchMigration","batchMigrationContractAddr","isMigrationTx","contractAddress","isSendTransferTx","isReceiveTransferTx","isDepositTx","isRedeemTx","isSwapTx","shortHash","txStart","txEnd","networkId","ensConfig","TTL","provider","ens","addressCheck","current","supportedNetworks","checkAddress","currentProvider","ENS","ensAddress","getEnsAddress","getName","getAddress","getAccountPortfolioTranches","availableTranches","portfolio","tranches","avgAPY","totalEarnings","totalAmountLent","totalEarningsPerc","_args5","tranchesBalance","totalBalance","protocolConfig","_ref4","_ref5","trancheTokenBalance","tranchePool","tranchePrice","tokenBalance","trancheUserInfo","trancheApy","poolShare","amountDeposited","trancheEarnings","loadTrancheFieldRaw","getTrancheUserInfo","toConsumableArray","trancheInfo","trancheWeight","getAccountPortfolio","orderedTokensBalance","depositedTokens","_args8","totalBalanceConverted","_ref11","tokenBalanceConverted","getIdleTokenPrice","tokenAprs","tokenAPY","tokenWeight","amountLentToken","tokenEarnings","getAmountDeposited","getTokenAprs","avgApy","getCurveAvgSlippage","processedTxs","processedHashes","curveTokensBalance","curveTxs","avgSlippage","totalDeposited","_args9","getCurveAvailableTokens","getCurveTxs","curveTokens","curveTokenPrice","price","received","slippage","deposited","getCurveAvgBuyPrice","avgBuyPrice","prevAvgBuyPrice","getAvgBuyPrice","_args11","idleTokensBalance","getFirstDepositTx","deposits","firstDepositTx","getDashboardSectionUrl","section","origin","asyncTimeout","ms","getDepositTimestamp","_callee13","firstDepositTxs","_args13","_context13","reduce","acc","getTrancheRewardTokensInfo","_callee15","stakingRewards","tokensDistribution","_context15","_ref19","_callee14","eventFilters","transfers","firstHarvest","latestHarvest","firstBlock","_ref20","_ref21","prevBlockInfo","lastBlockInfo","lastBlockPoolSize","poolSize","elapsedBlocks","elapsedSeconds","lastAmount","totalAmount","tokensPerBlock","tokensPerSecond","tokensPerDay","tokensPerYear","convertedTokensPerYear","tokenApr","tokenApy","_context14","CDO","CDORewards","getContractEvents","fromBlock","toBlock","getBlockInfo","genericContractCallCached","returnValues","total","apr2apy","apr","apy","_x9","_ref22","_callee17","defaultEventsConfig","underlyingEventsConfig","underlyingEventsFilters","_ref23","_ref24","underlying_transfers","trancheToken_transfers","totalAmountDeposited","_context17","_ref25","_callee16","trancheTokenTransferEvent","tokenTransferEvent","trancheTokenAmount","blockInfo","hashKey","_context16","trancheTokens","_x13","_x10","_x11","_x12","getTrancheUserTransactions","_ref26","_callee18","_context18","_x14","_x15","_x16","getTrancheFirstDepositTx","_ref27","_callee19","_context19","_x17","_x18","_x19","getAmountDepositedTranche","_ref28","_callee20","_context20","_x20","_x21","_x22","_ref29","_callee21","_ref30","_ref31","userAvgPrice","_context21","_x23","_x24","getAmountLent","_callee22","amountLents","_args22","_context22","getEtherscanBaseTxs","_callee23","firstBlockNumber","endBlockNumber","debug","firstIdleBlockNumber","requiredNetwork","etherscanInfo","etherscanBaseTxs","etherscanBaseEndpoint","etherscanApiUrl","lastCachedTx","lastCachedBlockNumber","etherscanEndpointLastBlock","latestTxs","latestBlockNumbers","txs","requestCount","requestStatus","cachedRequests","_args23","_context23","endpoints","REACT_APP_ETHERSCAN_KEY","getCachedRequest","result","makeCachedRequest","filterEtherscanTxs","saveEtherscanTxs","makeRequest","now","_callee24","_args24","_context24","filterCurveTxs","endpoint","txsToStore","cachedRequest","saveCachedRequest","_callee25","_ref36","allAvailableTokens","_args25","_context25","processStoredTxs","sort","_ref37","_callee26","_args26","_context26","_x25","_ref38","_callee27","processTxs","curveTransfersTxs","curveTransfersTxsToDelete","curveZapContract","curvePoolContract","curveSwapContract","curveDepositContract","_args27","_context27","tokenMigrationToolParams","curveTokenConfig","idleToken","internalTxs","r","isRightToken","iTx","isBatchMigrationTx","isDepositInternalTx","iTx2","isRedeemInternalTx","isConversionTx","isWithdrawTx","curveTx","isCurveTx","isCurveDepositTx","isCurveRedeemTx","isCurveDepositIn","isCurveDepositOut","isCurveZapIn","isCurveZapOut","isCurveTransferOut","isCurveTransferIn","isSwapOutTx","tokenDecimal","tokenValue","newValue","iTxs","withdrawnValue","processEtherscanTransactions","_x26","addStoredTransaction","txKey","tokenKey","storedTxs","getStoredTransactions","updateStoredTransactions","getStoredItem","_ref39","_callee32","txReceipts","baseTokensConfigs","baseTokensAddresses","curveAvailableTokens","_args32","_context32","baseTokenConfig","baseToken","baseTokenAddress","_ref40","_callee31","minedTxs","_context31","_ref41","_callee30","storedTx","tokensTransfered","_curveTokenPrice","_curveTokenPrice2","curveTxReceipt","filteredLogs","_curveTokenPrice3","_curveTxReceipt","idleTokenDecimals","_filteredLogs","_context30","getCurveTokenPrice","t1","_ref42","_callee28","_context28","getTransactionReceipt","_x31","_x32","topics","baseTokensConfig","t2","_ref43","_callee29","_context29","_x33","_x34","_x29","_x30","_x28","_x27","_ref44","_callee38","txsToProcess","_args38","_context38","_ref45","_callee37","_context37","_ref46","_callee36","isStoredTx","allowedMethods","pendingStatus","txSucceeded","txPending","isMetaTx","methodIsAllowed","realTx","txValue","redeemedValueFixed","executeMetaTransactionReceipt","executeMetaTransactionContractAddr","executeMetaTransactionInternalTransfers","IdleProxyMinterInfo","internalTransfer","metaTxValue","metaTxValueFixed","migrationTxReceipt","migrationTxInternalTransfers","migrationInternalTransfer","decodedLogs","migrationValue","migrationValueFixed","_context36","mintIdleToken","redeemIdleToken","migrateFromToIdle","mintIdleTokensProxy","migrateFromAaveToIdle","migrateFromIearnToIdle","executeMetaTransaction","migrateFromFulcrumToIdle","migrateFromCompoundToIdle","method","created","_ref47","_callee33","_context33","txReceipt","_x39","_x40","_ref48","_callee34","_context34","_x41","_x42","oldContract","raw","_ref49","_callee35","_context35","_x43","_x44","abi","decodeLog","internalType","_token","_x37","_x38","_x36","_x35","alias","getCustomAddress","setCustomAddress","customAddress","_ref50","_callee39","error_callback","config","_args39","_context39","catch","_x45","makeEtherscanApiRequest","_ref51","_callee40","apiKeyIndex","apiKey","_args40","_context40","_x46","_ref52","_callee41","return_data","_args41","_context41","_x47","code","errorCode","split","array","prop","shift","configs","checkUrlOrigin","baseURL","checkUrlBeta","betaURL","sendGoogleAnalyticsPageview","_callee42","page","googlePageviewInfo","isOrigin","_args42","_context42","ga","_ref54","_callee44","googleEventsInfo","debugEnabled","originOk","currentNetwork","_args44","_context44","addPostfixForTestnet","availableNetworks","_ref55","_callee43","_context43","hitCallback","hitCallbackFail","_x49","_x50","_x48","createContract","_ref56","_callee45","_context45","Contract","_x51","_x52","_x53","getWalletProvider","defaultProvider","simpleIDPassUserInfo","userInfo","simpleID","email","initSimpleID","passUserInfo","baseurl","getEtherscanAddressUrl","decimalCount","thousands","abs","negativeSign","Number","j","getSnapshotProposals","_callee48","activeOnly","whitelist","proposals","currTime","validProposals","_args48","_context48","getCachedData","addr","msg","payload","_ref58","_callee47","checkedStrategies","_context47","snapshot","metadata","strategies","_ref59","_callee46","_context46","symbol","_x55","_x54","_ref60","_callee49","startTimestamp","endTimestamp","forceStartTimestamp","frequency","order","limit","filteredCachedData","_filteredData","apiInfo","filteredData","_args49","_context49","rates","_x56","getTokenExchangeRate","_ref61","_callee50","exchangeRateParams","exchangeRate","_context50","_x57","_x58","getTokenDecimals","_ref62","_callee51","_context51","_x59","aprs","allocations","avgApr","aprWeighted","allocation","getFrequencySeconds","quantity","hour","day","week","getIdleStakingRewardsTxs","_callee52","idleTokenConfig","feeDistributorConfig","etherscanEndpoint","etherscanTxlist","_context52","getProtocolInfoByAddress","integerValue","ROUND_FLOOR","normalizeTokenDecimals","normalizeTokenAmount","normalizedTokenDecimals","checkContractPaused","_callee53","contractPaused","_args53","_context53","parse_json","return_default","clearStoredData","excludeKeys","clear","storedKeysToRemove","storedKey","removeStoredItem","removeItem","setItem","checkRebalance","_ref65","_callee55","lastAllocationsPromises","protocolIndex","newAllocations","diff","_context55","lastAllocationsPromise","_ref66","_callee54","lastAllocations","_context54","_x61","_x62","alloc","_x60","checkMigration","_ref67","_callee56","migrationEnabled","oldContractBalance","oldContractTokenDecimals","oldContractBalanceFormatted","oldContractName","_context56","getContractBalance","_x63","_x64","_ref68","_callee57","eventName","_args57","_context57","getContractPastEvents","_x65","_x66","estimateMethodGasUsage","_ref69","_callee58","methodParams","_contract$methods","functionCall","gasLimit","_ref70","_ref71","_args58","_context58","methods","getGasPrice","estimateGas","_x67","_x68","_ref72","_callee59","userAddress","signedParameters","callback_receipt","_contract$methods2","_context59","on","once","confirmationNumber","receipt","_x69","_x70","_x71","_x72","_x73","getSignatureParameters_v4","signature","isHexStrict","Error","hexToNumber","constructMetaTransactionMessage","nonce","chainId","functionSignature","soliditySHA3","toBuffer","checkBiconomyLimits","_ref73","_callee60","biconomyInfo","res","_context60","limits","apiId","headers","x-api-key","_x74","sendTxWithPermit","_ref74","_callee61","_contract$methods3","messageToSign","_this$getSignaturePar","_context61","encodeABI","_address","personal","sign","_x75","_x76","_x77","_x78","_x79","_x80","buildBiconomyErc20ForwarderTx","_ref75","_callee62","tokenAddress","permitType","callData","buildParams","_context62","txGas","erc20ForwarderClient","buildTx","_x81","_x82","_x83","_x84","_x85","_ref76","_callee64","_context64","_ref77","_callee63","_context63","_x87","_x88","_x86","sendBiconomyTxWithErc20Forwarder","_ref78","_callee65","req","metaInfo","txResponse","fetchReceiptIntervalId","_context65","permitAndSendTxEIP712","setInterval","clearInterval","updateTransaction","_x89","_x90","_x91","_x92","sendBiconomyTxWithPersonalSign","_ref79","_callee66","_this$getSignaturePar2","_context66","getNonce","call","_x93","_x94","_x95","_x96","signPermitEIP2612","_ref80","_callee67","erc20Name","owner","spender","deadline","domain","permit","domainData","_context67","getChainId","version","verifyingContract","types","EIP712Domain","Permit","primaryType","jsonrpc","substring","_x97","_x98","_x99","_x100","_x101","_x102","_x103","_x104","signPermit","_ref81","_callee68","baseContractName","holder","spenderContractName","addToNonce","baseContract","spenderContract","permitConfig","expiry","EIPVersion","permitName","_args68","_context68","net","getId","round","nonceMethod","pow","allowed","response","_x105","_x106","_x107","_ref82","_callee69","permitParams","methodAbi","useNonce","_args69","_context69","_jsonInterface","f","inputs","unshift","_x108","_x109","_x110","_x111","_x112","_x113","_x114","sendSignedTx","_ref83","_callee70","MetaTransaction","dataToSign","_context70","_x115","_x116","_x117","_x118","_x119","checkTokenApproved","_ref84","_callee71","contractAddr","walletAddr","_ref85","_ref86","allowance","_context71","getAllowance","gte","_x120","_x121","_x122","_ref87","_callee72","_context72","_x123","_x124","_x125","contractMethodSendWrapperWithValue","txData","disableERC20","toTwosComplement","enableERC20","getTrancheStakedBalance","_ref88","_callee73","stakedBalance","_args73","_context73","_x126","_x127","getTrancheStakingRewards","_ref89","_callee75","_context75","_ref90","_callee74","tokenGlobalConfig","_context74","_x130","_x128","_x129","_ref91","_callee76","field","_args76","_context76","_x131","_x132","_x133","_x134","_x135","_x136","_x137","_x138","_ref92","_callee77","strategyConfig","idleStrategyAddress","idleGovTokenConfig","_ref93","_ref94","totalSupply","virtualPrice","_ref95","_ref96","staked1","lastPrice1","_ref97","_ref98","deposited1","lastPrice","_ref99","_ref100","redeemable1","staked2","_ref101","_ref102","trancheApy2","deposited3","_ref103","_ref104","trancheFee","_ref105","_ref106","deposited4","redeemable3","_ref107","_ref108","deposited2","redeemable2","_ref109","_ref110","earningsPerc","secondsFromFirstTx","rewardsTokensInfo","_ref111","_ref112","rewardsTokens","incentiveTokens","govTokens","_args77","_context77","Strategy","initContract","AA","BB","getTokenTotalSupply","IDLE","rewardTokenAddr","govTokenAddress","getGovTokenConfigByAddress","_x139","_x140","_x141","_x142","_x143","_x144","_x145","loadAssetField","_ref113","_callee78","addCurveApy","strategyInfo","govTokenAvailableTokens","newTokenConfig","_ref114","_ref115","curveAvgSlippage","curveAvgBuyPrice","curveTokenBalance","_ref116","_ref117","amountLentCurve1","redeemableBalanceCurve","_ref118","_ref119","curveApy","amountLentCurve","redeemableBalanceCurveStart","redeemableBalanceCurveEnd","earningPerYear","_ref120","_ref121","amountLent1","redeemableBalance1","depositTimestamp","_idleGovToken","blocksPerDay","blocksPerWeek","blocksPerMonth","selectedTokenConfig","_idleGovToken2","_idleGovToken3","tokenApys","curveAPY","_ref122","_ref123","tokenPriceFirstDeposit","_ref124","_ref125","daysFirstDeposit","depositTimestamps","_govTokenConfig","_ref126","_ref127","tokenAPY1","amountLent2","redeemableBalanceStart","redeemableBalanceEnd","_earningPerYear","_govTokenConfig2","_ref128","_ref129","idleTokenPrice1","idleTokenBalance2","govTokensBalance","_tokenBalance","redeemableBalance","_ref130","_ref131","amountLentCurve2","redeemableBalanceCurve1","_ref132","_ref133","redeemableBalance2","_args78","_context78","getCurveTokenBalance","getCurveAPY","getCurveRedeemableIdleTokens","getGovTokenPool","getTokenPool","getCompUserDistribution","getStkAaveUserDistribution","getIdleGovToken","distributionMode","t3","getCompDistribution","getStkAaveDistribution","t4","getCompAvgApr","t5","t6","t7","getTokenPrice","getUserTokenFees","t8","t9","getGovTokenUserBalance","getGovTokensUserTotalBalance","_x146","_x147","_x148","_x149","getIdleTokenSupply","_ref134","_callee79","idleTokenSupply","_args79","_context79","_x150","getIdleTokenPriceWithFee","_ref135","_callee80","_ref136","_ref137","fee","priceWFee","_args80","_context80","eq","_x151","_x152","_ref138","_callee81","tokenData","beforePrice","afterPrice","tokenPriceBefore","tokenPriceAfter","timeBefore","timeAfter","timeDiff","priceDiff","priceAcceleration","timeDiffFromBeforePrice","_args81","_context81","_x153","clearCachedData","clear_all","useLocalStorage","expirationDate","_ref139","_callee82","_ref140","_ref141","idleTokensTotalSupply","userShare","_context82","_x154","_x155","_callee84","coverProtocolConfig","nexusMutualConfig","_args84","_context84","_ref143","_callee83","coverage","coverageTokens","protocolImage","_context83","tokens","expirationTimestamp","utc","_x156","getNexusMutualCoverages","sumAssured","coverAssetConfig","yieldTokenConfig","collateralIcon","incident","claimId","protocolImageDark","coverDetails","validUntil","route","_ref144","_callee86","incidentsInfo","_ref145","_ref146","coverBoughtEvents","claimSubmittedEvents","nexusMutualCoverages","_context86","directProps","startBlock","contractInfo","buyer","_ref147","_callee85","cover","coverId","claimSubmittedEvent","_ref148","_ref149","incidentEvents","matchedIncidents","matchedIncident","expiryDate","payoutOutcome","claimedAmount","claimTxReceipt","claimedAmountLog","claimableAmount","claimablePrice","maxCoveredAmount","coveredTokenAmount","_ref150","_ref151","_context85","claim","productId","incidentDate","yieldTokenCoverGracePeriod","curr","priceBefore","underlying","underlyingConfig","coverAsset","findIndex","_x158","_x157","getBatchedDepositExecutions","_ref152","_callee87","_context87","_x159","getBatchedDeposits","_callee89","filter_by_status","batchDepositConfig","batchedDeposits","_args89","_context89","_ref154","_callee88","currBatchIndex","batchIndex","_ref155","_ref156","batchExecutions","batchTotal","batchRedeem","batchDeposit","batchTotals","batchRedeems","batchDeposits","lastExecution","_context88","_x160","getETHBalance","_ref157","_callee90","fixDecimals","_args90","_context90","_x161","_ref158","_callee91","_ref159","_ref160","_args91","_context91","_x162","_x163","copyToClipboard","copyText","setSelectionRange","execCommand","loadScript","script","attr","readyState","onreadystatechange","onload","body","appendChild","isValidJSON","match","_ref161","_callee92","_args92","_context92","_x164","_ref162","_callee93","_args93","_context93","_x165","_ref163","_callee94","_args94","_context94","_x166","_x167","getProtocolBalance","_ref164","_callee95","_context95","_x168","_x169","getAprs","_ref165","_callee96","_context96","addresses","_x170","genericIdleCall","_ref166","_callee97","callParams","_args97","_context97","_x171","_ref167","_callee98","_contract$methods4","_args98","_context98","_x172","_x173","getTxDecodedLogs","_ref168","_callee100","logAddr","decodeLogs","internalTransfers","_context100","_ref169","_callee99","_context99","_x178","_x179","_x174","_x175","_x176","_x177","blocksToSeconds","blocks","blocksPerSeconds","getBlockNumber","_callee101","_context101","_ref171","_callee102","_context102","getBlock","_x180","_ref172","_callee103","_args103","_context103","getPastEvents","_x181","_x182","_ref173","_callee104","_args104","_context104","_x183","_x184","_ref174","_callee105","_contract$methods5","_args105","_context105","_x185","_x186","_ref175","_callee106","_args106","_context106","_x187","_x188","getUnlentBalance","_ref176","_callee107","unlentBalance","_context107","_x189","_ref177","_callee108","_args108","_context108","_x190","_ref178","_callee109","protocolsAprs","_ref179","_ref180","tokenAllocations","govTokensBalances","_args109","_context109","totalAllocationConverted","totalAllocationWithUnlentConverted","getTokenConversionRate","getGovTokensBalances","protocolAllocationPerc","protocolAllocation","_x191","getSushiswapPoolTokenPrice","_ref181","_callee110","pairAddresses","_ref182","_ref183","token0_address","token1_address","poolReserves","token0_config","token1_config","_ref184","_ref185","token0_price","token1_price","token0_pool","token1_pool","totalPoolSize","poolTokenPrice","_context110","getSushiswapConversionRate","_x192","_x193","_ref186","_callee111","tokenConfigFrom","tokenConfigDest","WETHAddr","one","_context111","_x194","_x195","_ref187","_callee112","unires","_context112","addressForPrice","_x196","_x197","getCurveDepositedTokens","_ref188","_callee113","idleTokensBalances","remainingCurveTokens","_args113","_context113","_x198","getCurveUnevenTokenAmounts","_ref189","_callee114","amounts","max_burn_amount","unevenAmounts","_context114","getCurveDepositContract","_x199","_x200","_callee115","curveRatesInfo","_context115","strategyTokens","getCurveAPYContract","_callee116","blocksForPrevTokenPrice","_ref192","_ref193","prevTokenPrice","blocksMultiplier","curveAPR","_context116","getCurveTokenSupply","_callee117","_context117","getCurvePoolContract","_callee118","_args118","_context118","_callee119","_args119","_context119","_ref197","_callee120","_ref198","_ref199","_context120","_x201","_callee121","depositContractInfo","_context121","getCurveZapContract","_callee122","zapContractInfo","_context122","_callee123","poolContractInfo","_context123","getCurveSwapContract","_callee124","migrationContractInfo","_context124","getCurveIdleTokensAmounts","_callee126","max_slippage","curveTokenSupply","curveTokenShare","n_coins","_args126","_context126","_ref205","_callee125","coinIndex","curveIdleTokens","_context125","migrationParams","_x202","getCurveTokensAmounts","_callee128","useCoinIndex","_args128","_context128","_ref207","_callee127","_ref208","_ref209","idleTokenPrice","totalTokenSupply","_context127","_x203","getCurveAmounts","_ref210","_callee130","_args130","_context130","_ref211","_callee129","_context129","_x206","_x204","_x205","getCurveTokenAmount","_ref212","_callee131","_args131","_context131","_x207","getCurveSlippage","_ref213","_callee132","uneven_amounts","depositContract","_ref214","_ref215","Sv","_args132","_context132","_x208","_x209","_ref216","_callee133","aTokenIdleSupply","annualize","aaveDistribution","stkAAVETokenConfig","aTokenConfig","aaveIncentivesController_address","IAaveIncentivesController_name","_ref217","_ref218","aTokenTotalSupply","assetData","aaveAllocationPerc","aaveSpeed","secondsPerYear","aavePoolShare","_args133","_context133","_x210","_callee135","_args135","_context135","_ref220","_callee134","_ref221","_ref222","_context134","_x211","getStkAaveApr","_ref223","_callee136","aaveConversionRate","stkAaveAPR","destTokenConfig","stkAaveValue","_args136","_context136","_x212","_x213","getCompAPR","_ref224","_callee137","cTokenIdleSupply","compConversionRate","COMPTokenConfig","compAPR","compDistribution","compValue","_args137","_context137","_x214","_x215","getCompSpeed","_ref225","_callee138","cTokenAddress","compSpeed","_context138","_x216","_ref226","_callee139","cTokenInfo","compoundAllocationPerc","_ref227","_ref228","cTokenTotalSupply","compoundPoolShare","_args139","_context139","_x217","_callee141","_args141","_context141","_ref230","_callee140","_ref231","_ref232","_context140","_x218","_callee143","_args143","_context143","_ref234","_callee142","_ref235","_ref236","compApr","_context142","_x219","getTokensCsv","_callee146","csv","_context146","prototype","sum","pv","cv","avg","_ref238","_callee145","strategy","_context145","_ref239","_callee144","header","aprAvg","scoreAvg","lastRow","_context144","protocolsData","p1","foundProtocol","p2","rate","idleRate","score","idleScore","pInfo","pData","pRate","pScore","defiScore","additionalRate","avgRate","avgScore","_x221","_x220","_callee148","govToken","convertToken","_args148","_context148","_ref241","_callee147","compTokenBalance","_context147","_x222","getTokenGovTokens","speed","mode","multipliers","block","second","month","year","getGovTokensUserDistributionSpeed","_ref242","_callee150","govTokensUserDistribution","_args150","_context150","_ref243","_callee149","_context149","_x224","_x223","_ref244","_callee152","govTokensDistribution","tokenGovTokens","_args152","_context152","_ref245","_callee151","govSpeed","_context151","_x226","_x225","getGovTokensAprs","_ref246","_callee154","govTokensAprs","_args154","_context154","_ref247","_callee153","_ref248","_ref249","_ref250","_ref251","cTokenConfig","_context153","aprTooltipMode","_x229","_x227","_x228","_callee156","_args156","_context156","_ref253","_callee155","govTokenBalance","tokenConversionRate","fromTokenConfig","_context155","_x230","_callee157","checkShowBalance","govTokensUserBalances","govTokensEarnings","_args157","_context157","getGovTokensUserBalances","govTokenAmount","getGovTokensIndexes","_ref255","_callee159","govTokensAmounts","_context159","getGovTokensUserAmounts","_ref256","_callee158","_context158","getGovTokenAddessByIndex","_x233","_x234","_x231","_x232","_ref257","_callee160","_context160","_x235","_x236","_ref258","_callee161","_context161","_x237","_x238","_callee164","govTokenConfigForced","_args164","_context164","_ref260","_callee163","_context163","_ref261","_callee162","_context162","_x240","_x241","_x239","getTokenFees","_callee165","_args165","_context165","_callee166","_ref264","_ref265","feePercentage","gain","fees","_args166","_context166","_ref266","_callee167","_args167","_context167","_x242","getTotalTVL","_callee168","tokensTVL","_context168","getTokensTVL","totalTVL","tokenInfo","tokenTVL","_callee172","_context172","_ref269","_callee171","_context171","_ref270","_callee170","oldTokenTVL","idleTokenName","_ref271","_ref272","oldTokenConfig","_ref276","_ref277","oldTokenPrice","oldTotalSupply","_context170","showAUM","_ref273","_callee169","_ref274","_ref275","govTokenConversionRate","govTokenBalanceConverted","_context169","_x245","oldProtocols","oldProtocol","protocolPos","_x244","_x243","getSubstackLatestFeed","_callee173","endpointInfo","idleSubstackFeed","latestFeed","_context173","items","getAggregatedStats","_callee174","tvls","totalAUM","_args174","_context174","getAggregatedStats_chain","_callee178","avgAPR","_args178","_context178","_ref281","_callee177","_context177","_ref282","_callee176","tokenAUM","oldTokenAllocation","oldTokenTotalAllocation","_context176","_ref283","_callee175","_ref284","_ref285","_context175","_x248","_x247","_x246","getTokenApy","_ref286","_callee179","_context179","_x249","getTokensToMigrate","_callee182","tokensToMigrate","_args182","_context182","_ref288","_callee181","_context181","_ref289","_callee180","_ref290","_context180","_x251","_x250","getProtocolsTokensBalances","_callee184","tokenBalances","minTokenBalance","protocolsTokens","_args184","_context184","_ref292","_callee183","tokenContract","_context183","_x252","_ref293","_callee185","_args185","_context185","_x253","_x254","_x255","getAvgAPYStats","_ref294","_callee186","apiResults","_args186","_context186","_x256","_x257","_ref295","_callee187","count","_conversionRate","_args187","_context187","_x258","_x259","getTokenScore","_ref296","_callee188","_ref297","_ref298","tokenScore","_context188","protocolScore","getTokenScoreApi","_x260","_x261","_ref299","_callee189","scores","_context189","_x262","_x263","_ref300","_callee190","idleGovTokenShowAPR","idleAPR","_args190","_context190","_x264","isNegative","suffixNum","decimalPart","mod","toPrecision","difference","maxLen","highlightedDecimals","numLen","intPart","decPart","repeat","highlightedDec","highlightedIntPart","Fragment","defaultOpacity","hidden","interactive","rainbow","TableRow","FieldComponent","fieldComponent","_DashboardCard_DashboardCard__WEBPACK_IMPORTED_MODULE_10__","cardId","rowProps","rowId","colInfo","colIndex","visibleOnDesktop","visible","fieldIndex","colProps","TableHeader","pb","_TableCellHeader_TableCellHeader__WEBPACK_IMPORTED_MODULE_7__","desc","FastBalanceSelector","onMouseDown","DashboardCard","mouseOver","isRainbow","active","onMouseOut","setMouseOver","onMouseOver","titleParentProps","lineHeight","description","placement","BuyModal","selectedMethod","availableMethods","selectedCountry","selectedProvider","availableProviders","buyToken","renderPaymentMethod","buyParams","onSuccess","onClose","paymentProvider","initParams","currentState","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_1___default","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_2__","toastProvider","addMessage","secondaryMessage","colorTheme","actionHref","actionText","variant","getAccountBalance","payments","providers","getInitParams","render","goBack","resetModal","componentWillMount","showInline","getProviderInfo","providerInfo","getInfo","newProviderInfo","getDefaultPaymentProvider","paymentMethod","getAvailablePaymentProviders","providerSupportMethod","supportedMethods","providerSupportToken","supportedTokens","defaultPaymentProvider","showDefaultOnly","selectProvider","ethAvailable","tokenAvailable","selectMethod","selectToken","loadRemoteResources","handleCountryChange","getAvailableCountries","availableCountries","supportedCountries","countryCode","countries","remoteResources","scriptID","remoteResourceParams","precall","async","parentElement","head","stylesheetId","methodInfo","loadAvailableMethods","_this4","caption","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__","showAllTokens","InnerComponent","flexWrap","_ImageButton_ImageButton__WEBPACK_IMPORTED_MODULE_12__","imageSrc","imagePropsExtended","react_select__WEBPACK_IMPORTED_MODULE_10__","placeholder","noOptionsMessage","inputValue","_ModalCard__WEBPACK_IMPORTED_MODULE_11__","Footer","Staking","selectedOption","toolProps","SelectedComponent","component","AssetField","FlexLoader","GenericFaqs","openedAnswer","selectedSection","questions","setSection","showSections","isSelected","borderBottom","q","toggleAnswer","SendTxWithBalance","permitEnabled","showPermitBox","approveEnabled","buttonDisabled","contractApproved","fastBalanceSelector","changeInputValue","call_callback","changeInputCallback","setInputValue","selectedPercentage","getFastBalanceSelector","setFastBalanceSelector","checkButtonDisabled","approve","callbackApprove","callbackReceiptApprove","checkContractApproved","executeTx","_amount","_params","checkLimit","eventValue","getPermitTransactionParams","approveCallback","actionChanged","tokenBalanceChanged","permitEnabledChanged","approveEnabledChanged","contractChanged","tokenConfigChanged","viewOnly","connectorName","infoBox","steps","step","stepIndex","required","checked","togglePermitEnabled","approveDescription","RoundButton","balanceSelectorInfo","ConnectBox","LimitReachedModal","possibleConstructorReturn","getPrototypeOf","componentDidUpdate","iconHeight","TrancheDetails","infoText","canUnstake","canWithdraw","activeModal","balanceProp","trancheBalance","selectedAction","userHasAvailableFunds","loadActionData","selectedProtocol","selectedTranche","trancheAPY","cdoConfig","cantUnstake","cantWithdraw","functions","trancheLimit","otherTrancheType","otherTrancheDetails","showSelectButton","selectTrancheType","setSelectedAction","src_SendTxWithBalance_SendTxWithBalance","transactionSucceeded","contractApprovedCallback","components_LimitReachedModal","PortfolioEquityTranches","transactionsList","ChartCustomTooltip","ChartCustomTooltipRow","FundsOverviewTranche","aggregatedValues","govTokensTotalApr","govTokensUserBalance","govTokensTotalBalance","govTokensTotalAprTooltip","idleTokenUserDistribution","govTokensDistributionTooltip","govTokensTotalBalanceTooltip","src_PortfolioEquityTranches_PortfolioEquityTranches","Title","Heading","h3","StakingRewardsTranche","stakingRewardsRows","loadUserRewards","portfolioChanged","trancheConfigChanged","rewardTokensInfo","trancheStakedAmount","trancheBalanceInfo","rewardToken","rewardTokenInfo","distributionSpeed","staked","reedemable","tokenIcon","CustomList","Button","claimCallback","TranchePage","componentLoaded","loadTransactions","trancheType","tranchesDetails","filteredTranchesTypes","src_TrancheDetails_TrancheDetails","userHasFunds","src_StakingRewardsTranche_StakingRewardsTranche","src_FundsOverviewTranche_FundsOverviewTranche","TransactionsList","availableActions","src_GenericFaqs_GenericFaqs","","TranchesList","enabledProtocols","alt","baseName","showTooltip","justifyItems","long","features","feature","TrancheFlash","flashData","bold","subtitle","helpcircle","openTooltipModal","arrows","seniorinfo","juniorinfo","TrancheWelcome","aligItems","src_TrancheFlash_TrancheFlash","TrancheBox","GenericPieChart","showLegend","itemWidth","itemHeight","translateY","symbolSize","anchor","direction","itemTextColor","symbolShape","effects","defaultImage","defaultLabel","TotalBalanceCounter","counterEnd","counterStart","loadTotalEarnings","counterStyle","build_default","TotalEarningsCounter","Tranches","trancheRoute","useTrancheType","portfolioLoaded","allocationChartData","portfolioEquityQuickSelection","loadPortfolio","then","urlParams","param1","param3","param2","availableTranchesChanged","tranchesConfig","tranchesTokens","tranchesBalances","weight","portfolioDonutData","balanceValue","trancheName","balanceInfo","_this5","breadcrumbPath","src_TranchePage_TranchePage","src_TotalBalanceCounter_TotalBalanceCounter","src_TotalEarningsCounter_TotalEarningsCounter","src_GenericPieChart_GenericPieChart","setPortfolioEquityQuickSelection","src_TranchesList_TranchesList","selectTranche","src_TrancheWelcome_TrancheWelcome","textSize","TokenSwap","selectedFromToken","selectedDestToken","availableDestinationTokens","selectFromToken","selectDestToken","initProps","buttonId","loadTokens","fromTokenChanged","destTokenChanged","loadKyberWidget","LpStaking","globalStats","statsLoaded","rewardMultiplier","accountingData","successMessage","rewardTokenPrice","tokenWrapperProps","showTokenWrapperEnabled","updateData","selectedActionChanged","contractApprovedChanged","contractInfoChanged","userStakedBalance","totalStakedBalance","totalStakingShares","userTotalStakingShare","rewardsPerDay","stakedBalanceUSD","rewardsPerYearUSD","normalizedInputValue","unstakeRewards","totalLocked","totalUnlocked","unlockScheduleCount","collectedRewards","unlockSchedulesPromises","unlockSchedules","totalRewards","totalDeposits","lockedRewards","unlockedRewards","programEndTime","endTime","endAtSec","programDuration","initialLockedShares","durationSec","stakingShare","maxMultiplier","distributionSpeedMultiplier","userDistributionSpeed","maxBonusDays","currentRewards","stakedTokensLog","stakedTokens","unstakedTokensLog","unstakedTokens","rewardTokenConfig","receivedRewardsLog","receivedRewards","startContract","wrapMethod","destContract","unwrapMethod","_this6","loadStats","_this7","StatsCard","isStake","isUnstake","isStats","txAction","poolLink","statInfo","ImageButton","setAction","IdleStaking","maxApr","lockPeriods","lockedEnd","lockExpired","claimedRewards","increaseAction","lockPeriodInput","internalInfoBox","distributedRewards","selectedLockPeriod","lockPeriodTimestamp","lockEndDateIsMaxEndDate","feeDistributor","lockPeriodChanged","increaseActionChanged","calculateStkIDLEAmount","minLockPeriod","maxLockPeriod","minDate","add","mDate","maxDate","isAfter","endDate","endDateTime","_d","maxDateTime","stkIDLEAmount","_value","_unlock_time","etherscanRewardsTxs","tokenTotalSupply","claimableRewards","lockedInfo","tokenUserBalance","claimable","claimEvents","depositEvents","totalRewardsDays","totalClaimedUser","recipient","totalLockedFunds","stkTokenTotalSupply","claimableRewardsFormatted","totalRewardsFormatted","userDeposited","totalCollectedRewards","stakeStartTime","stakedTime","event","ts","depositValue","stakePeriod","currentProfit","stakePeriodWeeks","lockEndDate","currDate","isValid","lockedTokensLog","lockedTokens","increaseAmountTokensLog","increaseTokens","_this8","isLock","isClaim","isIncrease","canIncrease","reward","setIncreaseAction","changelockPeriodInput","selectLockPeriod","getIncreaseTimeParams","NexusMutual","quote","1","2","periodOptions","30","60","90","365","capacity","coverCost","amountValue","periodValue","yearlyCost","maxCapacity","amountValid","periodValid","claimableCovers","tokenApproved","selectedPeriod","maxPriceWithFee","transactionValue","yieldTokenBalance","selectedUnderlying","yieldTokenApproved","claimButtonDisabled","selectedCoverToClaim","defaultClaimableCover","selectedUnderlyingConfig","changeAmount","changePeriod","selectPeriod","approveSucceeded","yieldTokenApproveSucceeded","claimInputChange","normalizedAmount","getClaimTransactionParams","realAddress","claimTransactionSucceeded","loadContracts","buyCoverTransactionSucceeded","validClaimableCoverFromParam","paramIsValidToken","changeSelectedToken","baseEndpoint","selectedUnderlyingChanged","loadTokenData","isETH","getPoolCapacity","coverData","period","coverAmount","currency","asset","quoteURL","encodeParameters","priceInNXM","expiresAt","generatedAt","COVER_TYPE","basePrice","priceWithFee","mul","divn","amountInWei","textDecoration","activeColor","reset","changeSelectedUnderlying","setMaxCoverAmount","borderStyle","periodInfo","getQuote","selectCoverToClaim","TokenWrapper","balanceDest","balanceStart","startContractChanged","destContractChanged","loadBalance","updateActionData","mintLog","mintedAmount","withdrawLog","withdrawnAmount","fullWidth","connectAndValidateAccount","PortfolioDonut","totalFunds","parentWidth","tokenPercentage","tokenColorHsl","radialLabelsLinkOffset","strategyIcon","EarningsEstimation","tokensEarnings","estimationStepsPerc","estimationStepsOptions","estimationStepsDefaultOption","estimationSteps","0","Month","perc","2 months","3 months","optionName","25","8 months","Year","2 Years","5 Years","loadEarnings","stepsCount","aggregatedEarnings","earnings","earningsYear","earningsPercStep","possibleSteps","maxPossibleStep","maxCountStep","orderedTokensEarnings","estimationStep","option","setEstimationStepsPerc","tokenIndex","estimationStepPerc","finalEarnings","cursorPerc","tokenRGBColor","borderTop","estimateIndex","estimationStepEarnings","estimationStepEarningsFormatted","borderRight","wordBreak","estimationLabel","DashboardIconButton","StrategyPage","remainingTokens","availableGovTokens","portfolioEquityStartDate","batchedDepositsAvailableTokens","availableTokensChanged","batchInfo","redeemable","totalBalanceWithScore","apyLong","riskScore","yieldFarming","src_PortfolioDonut_PortfolioDonut","toolName","toolIndex","toolConfig","src_DashboardIconButton_DashboardIconButton","ActiveCoverages","AssetsList","showDirection","src_EarningsEstimation_EarningsEstimation","BatchDeposit","canClaim","canDeposit","usePermit","hasDeposited","permitSigned","batchCompleted","claimSucceeded","executeSucceeded","migrationSucceeded","batchDepositEnabled","migrationContractApproved","migrationEnabledCallback","migrationCallback","checkBatchs","loadStrategies","executeSucceededChanged","callbackExecute","callbackReceiptExecute","functionInfo","permitContract","batchDepositInfo","depositEnabled","availableStrategiesKeys","selectStrategy","obj","strategyAvailableTokens","migrateFunction","setStrategyToken","batchId","callbackClaim","callbackReceiptClaim","canExecuteBatch","strategyDefaultValue","Migrate","useMetaTx","showActions","isMigrationTool","showBalanceSelector","migrationIcon","toMigrate","callbackPermit","migrationText","minPoolSize","CoverProtocol","swapInfo","defaultCoverage","selectedCoverage","inputValueChanged","swapInfoChanged","swapFee","covTokens","tokenAmountOut","getSwapInfo","MAX_UINT256","balancerTokenConfig","dashboardUrl","fixedAmount","mintedClaimLog","mintedNoClaimLog","mintedClaimAmount","mintedNoClaimAmount","claimTokenConfig","claimTokensLog","receivedClaimAmount","balancerPool","noClaimTokenConfig","noClaimTokensLog","receivedNoClaimAmount","collateralAmount","balancerClaimConfig","balancerNoClaimConfig","claimTokenBalance","noClaimTokenBalance","balancerPoolClaimBalance","balancerPoolNoClaimBalance","hasMintedTokens","apyPrice","selectCoverage","isMint","isBuyClaim","isBuyNoClaim","subcaption","TokenMigration","changeFromToken","convertTool","BatchMigration","batchMigrationInfo","batchMigrationDepositEnabled","DeployB2BVesting","actions","actionIndex","validated","viewAction","editAction","newAction","maxContracts","actionValid","actionInputs","claimedTokens","deployedContracts","contractDeployed","validateForm","checkInputs","vesterImplementation","proxyCreated","deployedContractsAddresses","implementation","proxy","vestingPeriod","availableBalance","depositAmounts","claimedTokensLog","returnString","fieldPattern","inputIndex","inputInfo","getPatternByFieldType","inputValid","actionValue","defineProperty","txError","deployedContract","idleAddress","isLastAction","clonedVesterAddress","ProxyCreated","ownerAddress","recipientAddress","initData","depositContracts","claimContracts","onSubmit","handleSubmit","setEditAction","fieldType","pattern","inputChange","addAction","deleteAction","setNewAction","setViewAction","readOnly","depositCallback","appName","forumURL","darkModeEnabled","USA","GBR","AUS","BRA","CHN","CAN","EUR","HKG","IND","MEX","RUS","ZAF","KOR","connectors","metamask","opera","dapper","coinbase","trustwallet","walletconnect","iconModal","walletlink","gnosis","fortmatic","portis","authereum","torus","trezor","ledger","ledgerlive","custom","newsletterSubscription","messages","scoreShort","apyShort","cheapRedeem","curveBonusSlippage","directMint","performanceFee","govTokenApr","govTokenRedeemableBalance","riskScoreShort","redeemSkipGov","batchDepositExecutionSchedule","curveInstructions","pageView","modals","first_deposit_referral","first_deposit_share","welcome","dashboard","baseRoute","governance","test","availableContracts","FeeTreasury","PriceOracle","GovernorAlpha","EcosystemFund","IdleController","7","delegates","imageInactive","poolContract","CurvePool","CurveDeposit","gaugeContract","LiquidityGaugeV2","zapContract","CurveZap","idleDAIYield","idleUSDCYield","idleUSDTYield","DAI","USDC","SLP","showAPR","showPrice","COMP","stkAAVE","aToken","ProxyFactory","MinimalInitializableProxyFactory","LockedIDLE","Timelock","VesterFactory","EarlyRewards","Comptroller","SushiswapRouter","SushiV2Router02","UniswapRouter","UniswapV2Router02","BalancerExchangeProxy","zeroExInstant","orderSource","affiliateInfo","feeRecipient","tranchflash","bubble","stake","unstake","comingSoon","titlePostfix","govTokensEnabled","chartColor","iconInactive","iconInactiveDark","descShort","descLong","best","risk","substack","REACT_APP_IDLE_KEY","Authorization","versions","v3","additionalProtocols","showPerformanceTooltip","strategiesParams","enabledStrategies","v4","chart","labelTextColorModifiers","performanceTooltip","USD","USDT","TUSD","SUSD","WBTC","WETH","RAI","disabledCharts","FEI","idleDAI+idleUSDC+idleUSDT","compound","aavev2WithStkAAVE","rateField","compoundWithCOMP","fulcrum","dsr","dydx","iearn","aave","aavev2","cream","fuse","skipRebalance","metaTransactionsEnabled","skipMint","minAmountForMint","erc20ForwarderEnabled","skipMintCheckboxEnabled","erc20ForwarderProxyContract","forwarder","erc20Forwarder","function","IdleDepositForwarder","proxyContract","IdleProxyMinter","minAmountForRebalance","minAmountForRebalanceMetaTx","redeemGovTokens","rebalance","IdleRebalancerV3","3","4","42","1337","isForked","requiredConfirmations","enabledNetworks","accountBalanceMinimum","infura","nexus","etherscan","REACT_APP_ETHERSCAN_KEY2","REACT_APP_ETHERSCAN_KEY3","REACT_APP_ETHERSCAN_KEY4","baseUrl","urls","biconomy","enableLogin","disabledWallets","REACT_APP_BICONOMY_KEY","dappId","REACT_APP_BICONOMY_APPID","getNetwork","networkName","appOrigin","appId","renderNotifications","notifications","tools","subComponent","stkIDLE","StakingFeeDistributor","LpStakingAbi","SushiLiquidityPool","nexusMutual","IdleTokenV4","ERC20","NexusMutualDistributor","NexusMutualIncidents","b2bVesting","B2BVester","ethWrapper","coverProtocol","CoverMint","Claim","CovToken","BalancerPool","NoClaim","claimEnabled","IdleBatchedMint","IdleTokenV3","IdleBatchConverter","idleSUSDYield","idleTUSDYield","idleWBTCYield","idleDAISafe","idleUSDCSafe","idleUSDTSafe","tokenMigration","IdleConverterPersonalSignV4","idleDAIv2","IdleTokenV2","cDAI","iDAI","aDAI","yDAIv3","yDAIv2","idleUSDCv2","cUSDC","iUSDC","aUSDC","yUSDCv3","yUSDCv2","cUSDT","iUSDT","aUSDT","yUSDTv3","yUSDTv2","idleSUSDv2","aSUSD","ySUSDv3","idleTUSDv2","aTUSD","yTUSDv3","cWBTC","iWBTC","aWBTC","addFunds","tokenSwap","ETH","USDS","BUSD","EURS","2KEY","ABT","ABYSS","AMPL","ANT","BAM","BAND","BAT","BLZ","BNT","BQX","BTU","CDT","CVC","DAT","DGX","EKG","ELF","ENJ","EQUAD","FXC","GDC","GEN","GHT","GNO","IOST","KEY","KNC","LEND","LINK","LOOM","LRC","MANA","MCO","MET","MFG","MKR","MLN","MTL","MYB","NEXXO","NPXS","OGN","OMG","OST","PAX","PBTC","PLR","PNK","POLY","POWR","PT","QKC","QNT","RAE","REN","REP","REQ","RLC","RSR","RSV","SAN","SNT","SNX","SPIKE","SPN","TKN","TKX","TRYB","UBT","UPP","ZRX","insurance","imageDark","bank","card","wallet","wyre","captionPos","envParams","accountId","prod","referrerAccountId","dest","destCurrency","redirectUrl","k","encodeURIComponent","iframeBox","wyreStyle","ramp","badge","hostAppName","hostApiKey","REACT_APP_RAMP_KEY","hostLogoUrl","swapAsset","RampInstantSDK","purchase","show","transak","https://global.transak.com/v1/widget.js","REACT_APP_TRANSAK_KEY_TEST","REACT_APP_TRANSAK_KEY_PROD","fiatCurrency","cryptoCurrencyCode","currencyCode","walletAddress","partnerCustomerId","disableWalletAddressForm","transakGlobal","transakStyle","moonpay","REACT_APP_MOONPAY_KEY_TEST","REACT_APP_MOONPAY_KEY_PROD","baseCurrencyCode","showWalletAddressForm","enabledPaymentMethods","navigator","userAgent","cookie","moonpayStyle","https://instant.0x.org/v3/instant.js","tokenParams","RimbleWeb3_context","connector","ethereum","defaultSelectedAssetData","availableAssetDatas","shouldDisableAnalyticsTracking","defaultAssetBuyAmount","kyberSwap","web3Subscription","decodeLogsData","https://widget.kyber.network/v0.7.5/widget.css","https://widget.kyber.network/v0.7.5/widget.js","querySelectorAll","remove","scripts","lang","paramForwarding","pinnedTokens","defaultPair","commissionId","click","airSwap","https://cdn.airswap.io/airswap-instant-widget.js","onComplete","AirSwapInstant","totle","https://widget.totle.com/latest/dist.js","sourceAssetAddress","sourceAmountDecimal","destinationAssetAddress","destinationAmountDecimal","partnerContractAddress","TotleWidget","nodeId","totleWidgetContainer","Tos","h1","h2","listStyle","theme_dark","TorusConnector","kwargs","Torus","api","rest","objectWithoutProperties","buttonPosition","init","login","getUserInfo","getPublicAddress","verifier","verifierId","logout","updateNetworkId","Connector","AuthereumConnector","Authereum","getProvider","enable","getAccounts","accounts","disable","constructor","GnosisSafeConnector","SafeAppConnector","safeLoaded","checkSafeApp","activate","getAccount","getSafeInfo","isSafeApp","deactivate","WalletLinkConnector","WalletLink","infuraUrl","appLogoUrl","walletLink","darkMode","makeWeb3Provider","disconnect","close","WalletConnectConnector","WalletConnectProvider","infuraId","defaultNetwork","InjectedConnector","Connectors","NetworkOnlyConnector","TrezorConnector","LedgerConnector","FortmaticConnector","PortisConnector","manifestEmail","REACT_APP_TREZOR_MANIFEST_EMAIL","manifestAppUrl","REACT_APP_TREZOR_MANIFEST_URL","fortmaticApiKey","REACT_APP_FORTMATIC_KEY_MAINNET","portisDAppId","REACT_APP_PORTIS_DAPP_ID","portisNetwork","REACT_APP_PORTIS_NETWORK","supportedNetworkURLs","REACT_APP_INFURA_KEY","Injected","Infura","providerURL","Trezor","TrezorApi","Ledger","WalletConnect","bridge","Fortmatic","FortmaticApi","logoutOnDeactivation","Portis","PortisApi","dAppId","AuthereumApi","TorusApi","buildEnv","enableLogging","host","showTorusButton","WrongNetworkBanner","NetworkUtil","isCorrectNetwork","components_WrongNetworkBanner","NoWeb3BrowserModal","renderContent","RimbleUtil","isMobileDevice","NoWalletModal","icononly","Outline","GeneralUtil","hasMetaMask","isMetaMask","isTrustWallet","isTrust","isCoinbaseWallet","hasDapper","DapperEthereum","isDapper","isOpera","isAndroid","isIos","MSStream","WrongNetworkModal","RimbleUtils","TransactionFeeModal","subtitle2","Web3ConnectionButtons","context","useWeb3Context","setConnector","walletProvider","connectionCallback","unsetConnector","isMetamask","isGnosisSafe","safe","browserWalletDetected","allowedConnectors","registerPage","registerPageByDefault","basicConnectorsName","injectedIndex","splice","gnosisIndex","connectorInfo","walletIcon","buttonStyle","ConnectionModal","showTxFees","currentSection","showInstructions","askCustomAddress","closeRemainingTime","customAddressError","newToEthereumChoice","toggleShowTxFees","setStoredSection","closeCountdown","setWalletChoice","choice","setCurrentSection","connectCustomAddress","updateCustomAddress","renderModalContent","TOSacceptance","react_router_dom","newToEthereum","showConnectionButtons","assertThisInitialized","marginBottom","renderFooter","components_TransactionFeeModal","ConnectionPendingModal","UserRejectedConnectionModal","sendMessageAgain","initAccount","LowFundsModal","showSecondary","toggleQRVisible","maxHeight","alignContent","as","h5","ConnectionModalUtil","components_NoWeb3BrowserModal","closeNoWeb3BrowserModal","noWeb3BrowserModalIsOpen","components_NoWalletModal","closeNoWalletModal","noWalletModalIsOpen","components_WrongNetworkModal","closeWrongNetworkModal","wrongNetworkModalIsOpen","components_ConnectionModal","validateAccount","closeConnectionModal","connectionModalIsOpen","accountValidated","components_ConnectionPendingModal","closeConnectionPendingModal","accountConnectionPending","components_UserRejectedConnectionModal","closeUserRejectedConnectionModal","userRejectedConnect","components_LowFundsModal","closeLowFundsModal","lowFundsModalIsOpen","ConnectionErrorModal","setFirstValidConnector","closeConnectionErrorModal","isLedger","connectionError","TransactionErrorModal","closeTransactionErrorModal","isLedgerError","transactionError","isSlowTxError","INFURA_KEY","RimbleTransactionContext","createContext","web3Infura","permitClient","accountBalance","initWeb3","accountBalanceLow","accountBalanceToken","checkPreflight","checkNetwork","accountInizialized","rejectValidation","accountValidationPending","initializeContracts","rejectAccountConnect","enableUnderlyingWithdraw","userRejectedValidation","transactionConnectionModalIsOpen","openLowFundsModal","openWrongNetworkModal","openNoWeb3BrowserModal","openConnectionErrorModal","openTransactionErrorModal","openConnectionPendingModal","openUserRejectedConnectionModal","openUserRejectedValidationModal","closeUserRejectedValidationModal","meta","setConnectorName","biconomyLoginProcessing","RimbleTransaction","connectGnosisSafe","testTransaction","createTransaction","addTransaction","errorMessage","isWalletConnectClosedModalError","availableStrategiesChanged","gnosisSafeLoaded","setNetwork","metamaskProvider","connectorNameChanged","web3Host","web3Provider","forceCallback","web3Callback","originalWeb3","biconomyWeb3Provider","_args4","detectEthereumProvider","Web3","HttpProvider","library","IFrameEthereumProvider","web3Injected","callbackAfterLogin","setCallbackAfterLogin","isLogin","userContract","Biconomy","onEvent","READY","ERROR","useInfuraProvider","simpleIDInfo","simpleIDParams","SimpleID","wallets","shownNotifications","isError","_args7","race","$crisp","notificationId","content","Sentry","increaseAmount","_ref15","balanceOf","determineAccountLowBalance","openConnectionModal","getRequiredNetwork","getNetworkId","getNetworkName","getNetworkType","contractMethod","_this$state","manualConfirmationTimeoutId","confirmationCallback","manualConfirmation","receiptCallback","isDeniedTx","confirmationCount","confidenceThreshold","recentEvent","timeout","lastUpdated","updatedTransaction","openNoWalletModal","CrispClient","accountBalanceDAI","subscribedTransactions","connectionErrorModalOpened","transactionErrorModalOpened","Provider","ConnectionModalsUtil","components_TransactionErrorModal","components_ConnectionErrorModal","utilities_NetworkUtil","Consumer","governanceEnabled","offsetTop","ScrollToTop","pathname","useLocation","useEffect","PageNotFound","Header_styles","NetworkOverview","getNetworkCircleColor","circleColor","networkCircle","DebuggerButtons","Web3Debugger","components_NetworkOverview","Web3Debugger_DebuggerButtons","node","constant","outputs","payable","stateMutability","anonymous","indexed","govTokensDisabled","defiPrime","cToken","yToken","iToken","CHAI","skipMintForDeposit","enabledEnvs","crToken","fToken","defiScoreDisabled","IdleCDO","IdleStrategy","IdleCDOTrancheRewards","TransactionToastMessages","started","confirmed","TransactionToastUtil","collectionHasNewObject","prevCollection","currentCollection","getNewObjectFromCollection","objectKey","getUpdatedObjectFromCollection","object","getTransactionFromCollection","identifier","collection","getUpdatedTransaction","currentTx","prevTx","processTransactionUpdates","showTransactionToast","toastMeta","getTransactionToastMeta","closeElem","transactionToastMeta","transactionAction","charAt","newMessage","Landing","lazy","Dashboard","Governance","App","currentEnv","selectedTab","connecting","genericError","selectedTheme","buyModalOpened","toastMessageProps","unsubscribeFromHistory","closeToastMessage","showToastMessage","processCustomParam","storedCachedData","cachedKeyFound","widthChanged","heightChanged","tabIndex","envEnabled","loadAvailableTokens","warn","jQuery","setThemeMode","closeIframe","iFrames","getElementsByTagName","iframe","contentWindow","parents","loadCustomAddress","loadCurrentEnvironment","strategyChanged","networkChanged","_this9","hasMetamask","store","themeDark","_this10","SuspenseLoader","web3_react_dist_default","web3Api","libraryName","web3_react_dist","RimbleWeb3","needsPreflight","react_router","react","fallback","isDashboard","setToken","setStrategy","openBuyModal","handleMenuClick","selectTab","closeBuyModal","isGovernance","components_Header","src_Web3Debugger_Web3Debugger","exact","updateSelectedTab","expires","acceptOnScroll","cookieName","acceptOnScrollPercentage","marginTop","overflowY","src_Tos_Tos","src_PageNotFound_PageNotFound","utilities_TransactionToastUtil","Boolean","hostname","dsn","beforeSend","hint","originalException","ReactDOM","src_App_App","serviceWorker","registration","unregister","_RoundButton_RoundButton__WEBPACK_IMPORTED_MODULE_10__","TransactionListFilters","activeFilters","assets","setFilter","applyFilters","toggle","toggleOpened","resetFilter","resetFilters","transition","filters","filterCategory","filterValues","TableCellHeader","filterValue","filterLabel","isChecked","filterName","prevTxs","txsPerPage","totalTxs","totalPages","renderedTxs","lastBlockNumber","txsIndexes","parsedValue","loadTxs","enabledActions","hasActiveFilters","m","src_TransactionListFilters_TransactionListFilters","txHashKey","prevPage","nextPage","oldTokenName","oldIdleTokens","skipMigration","biconomyLimitReached","toggleSkipMigration","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_5__","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_4__","executeAction","idleTokenToRedeem","_clientProtocolAmountsRedeem","gasLimitRedeem","callbackRedeem","callbackReceiptRedeem","toggleMetaTransactionsEnabled","checkMigrationContractApproved","migrationContractName","oldIdleTokensConverted","oldContractInfo","oldContractABI","biconomyLimits","disapproveMigration","approveMigration","migrationMethod","callbackMigrate","callbackReceiptMigrate","_skipRebalance","_migrationContract$me","biconomyChanged","usePermitChanged","fastBalanceSelectorChanged","batchMigrationEnabled","SkipMigrationComponent","react__WEBPACK_IMPORTED_MODULE_11___default","_DashboardCard_DashboardCard__WEBPACK_IMPORTED_MODULE_16__","rimble_ui__WEBPACK_IMPORTED_MODULE_20__","biconomyEnabled","_FlexLoader_FlexLoader__WEBPACK_IMPORTED_MODULE_13__","migrateTextBefore","migrateText","_TransactionField_TransactionField__WEBPACK_IMPORTED_MODULE_18__","_TxProgressBar_TxProgressBar__WEBPACK_IMPORTED_MODULE_17__","_FastBalanceSelector_FastBalanceSelector__WEBPACK_IMPORTED_MODULE_19__","functionName","_RoundButton_RoundButton__WEBPACK_IMPORTED_MODULE_14__","migrationImage","migrationTextProps","approveText","_TableHeader_TableHeader__WEBPACK_IMPORTED_MODULE_11__","_TableRow_TableRow__WEBPACK_IMPORTED_MODULE_9__","footer","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_1___default","rimble_ui__WEBPACK_IMPORTED_MODULE_3__","bgLayer","backgroundRepeat","backgroundPosition","backgroundSize","backgroundImage","subtitleProps","BackButton","polished__WEBPACK_IMPORTED_MODULE_0__","darkBlue","blurple","consensysblue","readableColor","VariationNumber","IconDirection","iconPos","loading-dots","loading-dots--dot","dot-keyframes","currYear","getFullYear","columnWidth","_ExtLink_ExtLink__WEBPACK_IMPORTED_MODULE_8__","role","aria-label","react_router_dom__WEBPACK_IMPORTED_MODULE_7__","ColTitle","_DashboardCard_DashboardCard__WEBPACK_IMPORTED_MODULE_9__","CustomField","componentHasChildren","fieldPath","customFieldName","customFieldProps","rowIndex","HeadingComponent","earningsCurveStart","earningsCurveEnd","tokenAPY2","tokenAPR","allocationChartWidth","allocationChartHeight","resizeAllocationChart","aprChartEndTimestamp","aprChartStartTimestamp","aprChartData","newPoint","aprChartWidth","aprChartHeight","resizeAprChart","aprChartType","aprChartProps","firstTokenPrice","firstIdleBlock","performanceChartWidth","performanceChartHeight","resizePerformanceChart","apr_end_date","apr_start_date","apr_start_timestamp","apiResultsPerformanceChart","idleTokenPerformance","performanceChartData","performanceChartType","performanceChartProps","amountToMigrate","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_2__","earningsPercCurveDirection","earningsPercCurve","earningsPercDirection","oldAPY","tokenAPYNoGov","allocationChartRowElement","$allocationChartRowElement","css","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_9__","random","aprChartRowElement","$aprChartRowElement","lineWidth","defs","linearGradientDef","offset","react__WEBPACK_IMPORTED_MODULE_12___default","_CustomTooltip_CustomTooltip__WEBPACK_IMPORTED_MODULE_17__","protocolEarning","_CustomTooltip_CustomTooltipRow__WEBPACK_IMPORTED_MODULE_20__","PerformanceChartRowElement","$PerformanceChartRowElement","blocknumber","rimble_ui__WEBPACK_IMPORTED_MODULE_21__","icon1","icon2","strategyName","_SmartNumber_SmartNumber__WEBPACK_IMPORTED_MODULE_14__","react_countup__WEBPACK_IMPORTED_MODULE_11___default","_VariationNumber_VariationNumber__WEBPACK_IMPORTED_MODULE_18__","earningsCurve","governanceTokenName","tooltipMode","_GenericChart_GenericChart__WEBPACK_IMPORTED_MODULE_16__","_AllocationChart_AllocationChart__WEBPACK_IMPORTED_MODULE_19__"],"mappings":"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CA,+BACA,iCAEFzO,YAAa,CACXwO,KACE,uIACF78E,QACE,4IACF6jG,MACE,0EACFC,QACE,4EACF1iG,SAAU,4DACVs3E,YACE,2FACFC,aACE,uGAGNtqC,GAAI,CACFl6D,MAAO,CACLuc,IAAK,UACLF,IAAK,CAAC,IAAK,IAAK,IAChBlR,IAAK,CAAC,KAAM,MAAO,QAErBzG,KAAM,KACN8gE,MAAO,SACPh6D,KAAM,aACNkT,MAAO,2BACP+wG,OAAQ,0BACRlnB,SAAU,SACVvkG,KAAM,iBACN2kG,SAAU,CACR,6CACA,qDACA,8BACA,+BACA,iCAEFzO,YAAa,CACXwO,KACE,iIACF78E,QACE,+IACF6jG,MACE,0EACFC,QACE,4EACF1iG,SAAU,4DACVs3E,YACE,2FACFC,aACE,wGAIR9kD,WAAY,CACVxf,SAAU,CACRvuB,MAAO,MACPqnF,SAAS,EACTt0F,KAAM,UACNwW,SAAU,OACVlb,MAAO,UACP4vH,YAAY,EACZjhH,MAAO,WACPgM,cAAc,EACdk1G,aAAc,KACdnwH,SAAU,WACVggG,UAAWoL,GACXglB,kBAAkB,EAClBC,WAAY,kBACZvkH,KAAM,oCACNwkH,aAAc,qCACdC,iBAAkB,uCAClB32B,KACE,sEACF42B,UACE,mKACFC,SACE,oLAEJC,KAAM,CACJz+G,MAAO,MACPqnF,SAAS,EACTh5F,MAAO,UACP0E,KAAM,WACNkrH,YAAY,EACZj1G,cAAc,EACdk1G,aAAc,KACdlhH,MAAO,aACPjP,SAAU,WACVowH,kBAAkB,EAClBpwB,UAAWqf,GACXgR,WAAY,kBACZvkH,KAAM,gCACNwkH,aAAc,iCACdC,iBAAkB,mCAClB32B,KAAM,8CACN62B,SACE,4lBACFD,UACE,0JAEJG,KAAM,CACJ1+G,MAAO,MACPqnF,SAAS,EACTh5F,MAAO,UACP0E,KAAM,WACNkrH,YAAY,EACZC,aAAc,KACdl1G,cAAc,EACdjb,SAAU,WACViP,MAAO,gBACPmhH,kBAAkB,EAClBpwB,UAAWqf,GACXgR,WAAY,mBACZvkH,KAAM,gCACNwkH,aAAc,iCACdC,iBAAkB,mCAClB32B,K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","file":"static/js/main.d0840597.chunk.js","sourcesContent":["import { Link } from \"rimble-ui\";\nimport React, { Component } from 'react';\n\nclass ExtLink extends Component {\n\n  render() {\n    return (\n      <Link\n        target={'_blank'}\n        rel={'nofollow noopener noreferrer'}\n        {...this.props}\n      >\n        {this.props.children}\n      </Link>\n    );\n  }\n}\n\nexport default ExtLink;\n","import React, { Component } from 'react';\nimport { Flex, Link, Text } from \"rimble-ui\";\nimport RoundIconButton from '../RoundIconButton/RoundIconButton';\n\nclass Breadcrumb extends Component {\n  render() {\n\n    const showPathMobile = !!this.props.showPathMobile;\n\n    return (\n      <Flex\n        width={1}\n        id={'breadcrumb'}\n        alignItems={'center'}\n      >\n        {\n          this.props.handleClick && \n           <RoundIconButton\n             buttonProps={{\n               border:2,\n               width:'35px',\n               height:'35px'\n             }}\n             iconSize={'1.2em'}\n             iconName={'ArrowBack'}\n             handleClick={this.props.handleClick}\n           />\n        }\n        {\n          this.props.text && this.props.text.length>0 &&\n           <Link\n             ml={[2,3]}\n             fontSize={[1,2]}\n             fontWeight={3}\n             color={'cellText'}\n             hoverColor={'copyColor'}\n             onClick={this.props.handleClick}\n           >\n            {this.props.text}\n           </Link>\n        }\n        {\n          (!this.props.isMobile || showPathMobile) && this.props.path && this.props.path.length>0 &&\n            this.props.path.map((path,index) => {\n              const link = this.props.pathLink ? (this.props.pathLink[index] || null) : null;\n              const Component = link ? Link : Text;\n              return (\n                <Component\n                  pl={[1,3]}\n                  ml={[1,3]}\n                  fontWeight={3}\n                  fontSize={[1,2]}\n                  hoverColor={'copyColor'}\n                  style={ !this.props.isMobile ? {\n                    maxWidth:'30%',\n                    overflow: 'hidden',\n                    whiteSpace: 'nowrap',\n                    textOverflow: 'ellipsis',\n                    borderLeft: `1px solid ${this.props.theme.colors.divider}`\n                  } : null }\n                  key={`breadcrumb_path_${index}`}\n                  color={link ? 'cellText' : 'statValue'}\n                  onClick={link ? e => this.props.goToSection(link) : null}\n                >\n                  {path}\n                </Component>\n              );\n          })\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default Breadcrumb;","import React, { Component } from 'react';\nimport { Text, Loader } from \"rimble-ui\";\nimport FunctionsUtil from '../FunctionsUtil';\n\nclass ShortHash extends Component {\n\n  state = {\n    text:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  async loadData(){\n    const resolveAddress = this.props.resolveAddress !== false;\n    let text = this.functionsUtil.shortenHash(this.props.hash);\n    const ensName = resolveAddress ? await this.functionsUtil.getENSName(this.props.hash) : null;\n    // console.log('ShortHash',resolveAddress,this.props.hash,ensName);\n    if (ensName){\n      text = ensName;\n    }\n    this.setState({\n      text\n    });\n  }\n\n  render() {\n    const loader = (<Loader size=\"20px\" />);\n    return this.state.text ? <Text display={'inline'} {...this.props}>{this.state.text}</Text> : loader;\n  }\n}\n\nexport default ShortHash;","import React, { Component } from 'react';\nimport {\n  Flex, Box\n} from \"rimble-ui\";\nimport styles from './LoadingSpinner.module.scss';\n\nclass LoadingSpinner extends Component {\n  render() {\n    return (\n      <Flex\n        alignItems={'center'}\n        justifyContent={'center'}\n      >\n        <Box className={[styles[\"loading-dots\"]]}>\n          <Box className={[styles[\"loading-dots--dot\"]]} mx={[1,2]}></Box>\n          <Box className={[styles[\"loading-dots--dot\"]]} mx={[1,2]}></Box>\n          <Box className={[styles[\"loading-dots--dot\"]]} mx={[1,2]}></Box>\n        </Box>\n      </Flex>\n    );\n  }\n}\n\nexport default LoadingSpinner;\n","import React, { Component } from 'react';\nimport {\n  Flex,\n  Button\n} from \"rimble-ui\";\nimport LoadingSpinner from '../LoadingSpinner/LoadingSpinner.js';\n\nclass ButtonLoader extends Component {\n  render() {\n    return (\n       <Button\n        onClick={this.props.handleClick}\n         {...this.props.buttonProps}\n       >\n        <Flex flexDirection={'column'} alignItems={'center'} justifyContent={'center'}>\n          <Flex width={1} display={ this.props.isLoading ? 'flex' : 'none' }>\n            <LoadingSpinner />\n          </Flex>\n          <Flex width={1} display={ this.props.isLoading ? 'none' : 'flex' }>\n            {this.props.buttonText}\n          </Flex>\n        </Flex>\n       </Button>\n    );\n  }\n}\n\nexport default ButtonLoader;\n","import { Icon } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport RoundButton from '../RoundButton/RoundButton';\n\nclass RoundIconButton extends Component {\n  render() {\n    const buttonProps = Object.assign({\n      p:0,\n      border:1,\n      width:'40px',\n      height:'40px',\n      borderRadius:'50%',\n      mainColor:'backButtonBg',\n      disabled:this.props.disabled\n    },this.props.buttonProps);\n\n    buttonProps.minWidth = buttonProps.width;\n\n    return (\n       <RoundButton\n         buttonProps={buttonProps}\n         handleClick={this.props.handleClick}\n       >\n         <Icon\n           color={'copyColor'}\n           name={this.props.iconName}\n           size={ this.props.iconSize ? this.props.iconSize : '1.3em'}\n         />\n       </RoundButton>\n    );\n  }\n}\n\nexport default RoundIconButton;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"trancheFlash\":\"TrancheWelcome_trancheFlash__2aaz5\",\"mobile\":\"TrancheWelcome_mobile__fIBQP\"};","import { Flex, Text } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass SmartNumber extends Component {\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  render() {\n    let formattedNumber = '-';\n    const number = typeof this.props.number !== 'undefined' && !isNaN(this.props.number) && this.props.number !== false && this.props.number !== null ? this.props.number : null;\n\n    if (number){\n      switch (this.props.type){\n        case 'money':\n          formattedNumber = this.functionsUtil.formatMoney(number,this.props.precision);\n        break;\n        default:\n          formattedNumber = this.functionsUtil.abbreviateNumber(number,this.props.decimals,this.props.maxPrecision,this.props.minPrecision);\n        break;\n      }\n    } else {\n      formattedNumber = '-';\n    }\n\n    const flexProps = {\n      width:1,\n      alignItems:'center',\n      flexDirection:'row',\n      justifyContent:'center'\n    };\n\n    // Replace props\n    if (this.props.flexProps && Object.keys(this.props.flexProps).length){\n      Object.keys(this.props.flexProps).forEach(p => {\n        flexProps[p] = this.props.flexProps[p];\n      });\n    }\n\n    const showUnit = formattedNumber !== '-';\n    const unitPos = this.props.unitPos ? this.props.unitPos : 'right';\n\n    return (\n      <Flex\n        {...flexProps}\n      >\n        {\n          this.props.unit && unitPos === 'left' && showUnit &&\n            <Text {...this.props.unitProps}>{this.props.unit}</Text>\n        }\n        <Text {...this.props}>{formattedNumber}</Text>\n        {\n          this.props.unit && unitPos === 'right' && showUnit &&\n            <Text {...this.props.unitProps}>{this.props.unit}</Text>\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default SmartNumber;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"headerContainer\":\"PageNotFound_headerContainer__Ly5Tz\",\"headerBgFiller\":\"PageNotFound_headerBgFiller__1NzlO\",\"bgContainer\":\"PageNotFound_bgContainer__1Racj\",\"list\":\"PageNotFound_list__Cnz-b\",\"textContainer\":\"PageNotFound_textContainer__g_kTm\"};","import { Flex, Text } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass CustomTooltip extends Component {\n\n  render() {\n    return (\n      <DashboardCard\n        key={this.props.point.id}\n        cardProps={{\n          py:2,\n          px:3,\n          width:1,\n          left: this.props.point.data.itemPos>50 ? '-110%' : '0'\n        }}\n      >\n        <Flex\n          width={1}\n          flexDirection={'column'}\n        >\n          {\n            this.props.point.data.xFormatted && \n              <Text\n                mb={2}\n                fontSize={1}\n                fontWeight={3}\n                color={'cellText'}\n                textAlign={'left'}\n              >\n                {this.props.point.data.xFormatted}\n              </Text>\n          }\n          {this.props.children}\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default CustomTooltip;","import { Pie } from '@nivo/pie';\nimport React, { Component } from 'react';\nimport { Flex, Text, Image } from \"rimble-ui\";\nimport SmartNumber from '../SmartNumber/SmartNumber';\nimport globalConfigs from '../configs/globalConfigs';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericChart from '../GenericChart/GenericChart';\n\nclass AllocationChart extends Component {\n  state = {\n    chartData:null,\n    chartProps:null,\n    selectedSlice:null,\n    totalAllocation:null,\n    protocolsAllocations:null,\n    protocolsAllocationsPerc:null\n  };\n\n  // Utils\n  functionsUtil = null;\n  componentUnmounted = false;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentDidMount(){\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const tokenChanged = prevProps.selectedToken !== this.props.selectedToken;\n    if (tokenChanged){\n      this.setStateSafe({\n        chartData:null,\n        chartProps:null,\n        selectedSlice:null,\n        totalAllocation:null,\n        protocolsAllocations:null,\n        protocolsAllocationsPerc:null\n      },() => {\n        this.loadData();\n      });\n    } else if (prevProps.isMobile !== this.props.isMobile){\n      this.loadData()\n    }\n  }\n\n  async setStateSafe(newState,callback=null) {\n    if (!this.componentUnmounted){\n      return this.setState(newState,callback);\n    }\n    return null;\n  }\n\n  async loadData(){\n    const {\n      totalAllocation,\n      protocolsAllocations,\n      protocolsAllocationsPerc\n    } = await this.functionsUtil.getTokenAllocation(this.props.tokenConfig);\n\n    const chartProps = {\n      padAngle:0,\n      animate:true,\n      borderWidth: 0,\n      cornerRadius:0,\n      motionDamping:15,\n      innerRadius: 0.65,\n      motionStiffness:90,\n      colors:d => d.color,\n      onMouseEnter:(data, e) => {\n        this.setStateSafe({\n          selectedSlice:data\n        });\n      },\n      onMouseLeave:(data, e) => {\n        this.setStateSafe({\n          selectedSlice:null\n        });\n      },\n      tooltipFormat: v => v+'%',\n      sliceLabel: d => d.value+'%',\n      radialLabel: d => {\n        return null;\n      },\n      theme:{\n        tooltip: {\n          container: this.props.inline ? {\n            background: this.props.theme.colors.cardBg\n          } : {\n            display: 'none',\n          }\n        },\n        labels:{\n          text:{\n            fontWeight:600,\n            fontSize:this.props.isMobile ? 13 : 15,\n            fontFamily: this.props.theme.fonts.sansSerif\n          }\n        },\n        legends:{\n          text:{\n            fontSize:13,\n            fontWeight:500,\n            fontFamily: this.props.theme.fonts.sansSerif\n          }\n        }\n      },\n      slicesLabelsSkipAngle:5,\n      radialLabelsSkipAngle:10,\n      enableRadialLabels:false,\n      radialLabelsTextXOffset:0,\n      slicesLabelsTextColor:'#fff',\n      radialLabelsTextColor:'#333',\n      radialLabelsLinkStrokeWidth:0,\n      radialLabelsLinkDiagonalLength:0,\n      radialLabelsLinkHorizontalLength:0,\n      enableSlicesLabels: !this.props.inline,\n      radialLabelsLinkColor:{ from: 'color' },\n      borderColor:{ from: 'color', modifiers: [ [ 'darker', 0.2 ] ] },\n      margin: this.props.inline ? {top:0,right:15,bottom:0,left:1} : (this.props.isMobile ? { top: 10, right: 15, bottom: 0, left: 15 } : { top: 10, right: 35, bottom: 0, left: 35 }),\n    };\n\n    const chartData = [];\n\n    this.props.tokenConfig.protocols.forEach((protocolInfo,i)=>{\n      const protocolName = protocolInfo.name;\n      const protocolAddr = protocolInfo.address.toLowerCase();\n      if (protocolsAllocationsPerc[protocolAddr]){\n        const protocolAllocationPercParsed = parseFloat(protocolsAllocationsPerc[protocolAddr].times(100).toFixed(2));\n        chartData.push({\n          id:protocolAddr,\n          name:protocolName,\n          value:protocolAllocationPercParsed,\n          color:'hsl('+globalConfigs.stats.protocols[protocolName].color.hsl.join(',')+')',\n          label: globalConfigs.stats.protocols[protocolName].label ? globalConfigs.stats.protocols[protocolName].label : this.functionsUtil.capitalize(protocolName)\n        });\n      }\n    });\n\n    this.setStateSafe({\n      chartData,\n      chartProps,\n      totalAllocation,\n      protocolsAllocations,\n      protocolsAllocationsPerc\n    });\n  }\n\n  render() {\n    \n    const selectedSlice = this.state.selectedSlice !== null && this.state.protocolsAllocations[this.state.selectedSlice.id] ? this.state.protocolsAllocations[this.state.selectedSlice.id] : false;\n    const protocolIcon = this.state.selectedSlice !== null ? (globalConfigs.stats.protocols[this.state.selectedSlice.name] && globalConfigs.stats.protocols[this.state.selectedSlice.name].icon ? globalConfigs.stats.protocols[this.state.selectedSlice.name].icon : `${this.state.selectedSlice.name}.svg`) : null;\n\n    return (\n      <Flex\n        width={1}\n        position={'relative'}\n      >\n        {\n          this.state.totalAllocation && !this.props.inline &&\n            <Flex\n              zIndex={0}\n              top={['23%','25%']}\n              left={['20%','27%']}\n              textAlign={'center'}\n              alignItems={'center'}\n              position={'absolute'}\n              width={['60%','46%']}\n              height={['53%','46%']}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              {\n                selectedSlice ? (\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <Image\n                      mb={1}\n                      width={['1.8em','2em']}\n                      height={['1.8em','2em']}\n                      src={`/images/protocols/${protocolIcon}`}\n                    />\n                    <SmartNumber\n                      fontSize={[3,4]}\n                      decimals={3}\n                      fontWeight={4}\n                      maxPrecision={5}\n                      number={selectedSlice}\n                    />\n                    <Text\n                      fontSize={[1,2]}\n                      fontWeight={3}\n                      color={'cellTitle'}\n                    >\n                      Funds in {this.state.selectedSlice.label}\n                    </Text>\n                  </Flex>\n                ) : (\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <Image\n                      mb={1}\n                      width={['1.8em','2em']}\n                      height={['1.8em','2em']}\n                      src={`/images/idle-mark.png`}\n                    />\n                    <SmartNumber\n                      unitProps={{\n                        ml:2,\n                        fontWeight:3,\n                        fontSize:[3,4]\n                      }}\n                      decimals={3}\n                      fontWeight={4}\n                      fontSize={[3,4]}\n                      maxPrecision={5}\n                      number={this.state.totalAllocation}\n                    />\n                    <Text\n                      fontWeight={3}\n                      fontSize={[1,2]}\n                      color={'cellTitle'}\n                    >\n                      Total funds\n                    </Text>\n                  </Flex>\n                )\n              }\n            </Flex>\n        }\n        <GenericChart\n          type={Pie}\n          showLoader={true}\n          {...this.props}\n          {...this.state.chartProps}\n          data={this.state.chartData}\n        />\n      </Flex>\n    );\n  }\n}\n\nexport default AllocationChart;","import React, { Component } from 'react';\nimport { Flex, Box, Text } from \"rimble-ui\";\n\nclass CustomTooltipRow extends Component {\n\n  render() {\n    return (\n      <Flex\n        mb={2}\n        width={1}\n        alignItems={'center'}\n        flexDirection={'row'}\n      >\n        <Flex\n          pr={2}\n          style={{\n            flexBasis:'0',\n            flex:'1 1 0px'\n          }}\n          alignItems={'center'}\n          justifyContent={'flex-start'}\n        > \n          {\n            this.props.color && \n            <Box\n              mr={2}\n              width={'10px'}\n              height={'10px'}\n              borderRadius={'50%'}\n              backgroundColor={this.props.color}\n            >\n            </Box>\n          }\n          <Text\n            fontSize={1}\n            fontWeight={2}\n            textAlign={'left'}\n            color={'dark-gray'}\n            style={{\n              whiteSpace:'nowrap',\n              textTransform:'capitalize'\n            }}\n          >\n            {this.props.label}\n          </Text>\n        </Flex>\n        <Flex\n          style={{\n            flexBasis:'0',\n            flex:'1 1 0px'\n          }}\n          alignItems={'center'}\n          justifyContent={'flex-end'}\n        >\n          <Text\n            fontSize={1}\n            fontWeight={3}\n            color={'cellText'}\n            textAlign={'right'}\n            style={{\n              whiteSpace:'nowrap'\n            }}\n            dangerouslySetInnerHTML={{\n              __html: this.props.value\n            }}\n          >\n          </Text>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default CustomTooltipRow;","import React, { Component } from 'react';\nimport { Box, Flex, Icon, Text, Heading } from 'rimble-ui'\n// import styles from './Faquestion.module.scss';\n\nclass Faquestion extends Component {\n  state = {\n    isShowingAnswer: false\n  };\n  toggleAnswer(e) {\n    e.preventDefault();\n    this.setState(state => ({...state, isShowingAnswer: !state.isShowingAnswer}));\n  };\n  render() {\n    return (\n      <Flex\n        my={[3,3]}\n        py={[3,3]}\n        px={[4,4]}\n        flexDirection={'column'}\n        alignItems={'baseline'}\n        justifyContent={'center'}\n        backgroundColor={'cardBg'}\n        borderRadius={ this.props.isOpened ? '30px' : '50px' }\n        boxShadow={1}\n      >\n        <Flex flexDirection={'row'} alignItems={'center'} width={1} onClick={this.props.handleClick} style={{cursor: 'pointer'}}>\n          <Box width={4/5}>\n            <Heading.h4\n              my={0}\n              fontWeight={3}\n              fontSize={[1,2]}\n              fontFamily={'sansSerif'}\n              color={this.props.isOpened ? 'link' : 'dark-gray'}\n            >\n              {this.props.question}\n            </Heading.h4>\n          </Box>\n          <Flex\n            width={1/5}\n            justifyContent={'flex-end'}\n          >\n            <Icon\n              size={\"1.5em\"}\n              color={this.props.isOpened ? 'link' : 'copyColor'}\n              name={this.props.isOpened ? 'KeyboardArrowUp' : 'KeyboardArrowDown'}\n            />\n          </Flex>\n        </Flex>\n        <Flex\n          width={1}\n        >\n          {this.props.isOpened &&\n            <Text.p\n              textAlign={'justify'}\n              fontSize={[1,2]}\n              dangerouslySetInnerHTML={{ __html: this.props.answer }}\n            >\n            </Text.p>\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default Faquestion;\n","import { Flex } from \"rimble-ui\";\nimport Title from '../Title/Title';\nimport React, { Component } from 'react';\nimport CustomList from '../CustomList/CustomList';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass Base extends Component {\n\n  state = {\n    loaded:false,\n    activeCoverages:null\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n    this.loadCoverages();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const accountChanged = prevProps.account !== this.props.account;\n    if (accountChanged){\n      this.loadCoverages();\n    }\n  }\n\n  async loadCoverages(){\n    if (!this.props.account){\n      return false;\n    }\n\n    const coverages = await this.functionsUtil.getActiveCoverages(this.props.account);\n    const activeCoverages = [];\n    if (coverages && coverages.length>0){\n      coverages.forEach( c => {\n        if (!this.props.availableTokens || !this.props.availableTokens.length || this.props.availableTokens.includes(c.collateral)){\n          const statusColors = this.props.theme.colors.transactions.status;\n          let statusIcon = 'VerifiedUser';\n          let statusColor = statusColors.completed;\n          switch (c.status){\n            case 'Expired':\n              statusIcon = 'Error';\n              statusColor = statusColors.failed;\n            break;\n            case 'Claimed':\n              statusIcon = 'Error';\n              statusColor = statusColors.pending;\n            break;\n            default:\n            case 'Active':\n              statusIcon = 'VerifiedUser';\n              statusColor = statusColors.completed;\n            break;\n          }\n\n          const statusIconProps = {\n            color:statusColor\n          };\n\n          const portfolioCoverage = c.portfolioCoverage || 'N/A';\n\n          activeCoverages.push(Object.assign(c,{\n            statusIcon,\n            statusIconProps,\n            portfolioCoverage\n          }));\n        }\n      })\n    }\n\n    this.setState({\n      loaded:true,\n      activeCoverages\n    });\n  }\n\n  render() {\n\n    if (!this.state.loaded){\n      return null;\n    }\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        {\n          this.props.title && ((this.state.activeCoverages && this.state.activeCoverages.length>0) || this.props.children) && (\n            <Title\n              {...this.props.titleProps}\n            >\n              {this.props.title}\n            </Title>\n          )\n        }\n        {\n          this.state.activeCoverages && this.state.activeCoverages.length>0 ? (\n            <CustomList\n              rows={this.state.activeCoverages}\n              handleClick={ this.props.isMobile ? (props) => props.row.status!=='Expired' && props.row.fileClaimUrl && this.functionsUtil.openWindow(props.row.fileClaimUrl) : null }\n              cols={[\n                {\n                  title:'PROTOCOL',\n                  props:{\n                    width:[0.28,0.14]\n                  },\n                  fields:[\n                    {\n                      type:'image',\n                      props:{\n                        mr:[1,2],\n                        size:this.props.isMobile ? '1.2em' : '1.8em'\n                      },\n                      path:[this.props.themeMode === 'dark' ? 'protocolImageDark' : 'protocolImage']\n                    },\n                    {\n                      type:'text',\n                      path:['protocolName'],\n                    }\n                  ]\n                },\n                {\n                  title:'TOKEN',\n                  props:{\n                    width:[0.33,0.14]\n                  },\n                  fields:[\n                    {\n                      type:'image',\n                      props:{\n                        mr:[1,2],\n                        size:this.props.isMobile ? '1.2em' : '1.8em'\n                      },\n                      path:['collateralIcon']\n                    },\n                    {\n                      type:'text',\n                      path:['collateral'],\n                    }\n                  ]\n                },\n                {\n                  title:'AMOUNT',\n                  props:{\n                    width:[0.24, 0.12],\n                  },\n                  fields:[\n                    {\n                      type:'number',\n                      path:['balance'],\n                      props:{\n                        decimals: this.props.isMobile ? 2 :  4,\n                      }\n                    },\n                    {\n                      type:'text',\n                      path:['token'],\n                      props:{\n                        ml:[1,2],\n                        style:{\n                          textTransform:'uppercase'\n                        }\n                      }\n                    }\n                  ]\n                },\n                {\n                  mobile:false,\n                  title:'EXPIRATION DATE',\n                  props:{\n                    width:0.19,\n                    justifyContent:['center','flex-start']\n                  },\n                  fields:[\n                    {\n                      type:'text',\n                      path:['expirationDate'],\n                      props:{\n                        \n                      }\n                    },\n                  ]\n                },\n                {\n                  mobile:false,\n                  title:'COVERED FUNDS',\n                  props:{\n                    width:0.14,\n                    justifyContent:['center','flex-start']\n                  },\n                  fields:[\n                    {\n                      type:'text',\n                      path:['portfolioCoverage'],\n                      props:{\n                        \n                      }\n                    },\n                  ]\n                },\n                {\n                  title:'STATUS',\n                  props:{\n                    width:[0.15,0.12],\n                    justifyContent:['center','flex-start']\n                  },\n                  fields:[\n                    {\n                      type:'icon',\n                      name:'custom',\n                      path:['statusIcon'],\n                      props:{\n                        mr:[1,2],\n                        size:this.props.isMobile ? '1.2em' : '1.8em'\n                      }\n                    },\n                    {\n                      mobile:false,\n                      name:'custom',\n                      path:['status'],\n                      props:{\n                        style:{\n                          textTransform:'capitalize'\n                        }\n                      }\n                    }\n                  ]\n                },\n                {\n                  title:'',\n                  mobile:false,\n                  props:{\n                    width:0.17,\n                  },\n                  parentProps:{\n                    width:1\n                  },\n                  fields:[\n                    {\n                      type:'button',\n                      name:'custom',\n                      funcProps:{\n                        label:(props) => (props.row.actionLabel),\n                        disabled:(props) => (props.row.actionDisabled)\n                      },\n                      props:{\n                        width:1,\n                        fontSize:3,\n                        fontWeight:3,\n                        height:'45px',\n                        borderRadius:4,\n                        boxShadow:null,\n                        mainColor:'redeem',\n                        size: this.props.isMobile ? 'small' : 'medium',\n                        handleClick:(props) => props.row.status!=='Expired' && props.row.actionUrl && this.functionsUtil.openWindow(props.row.actionUrl)\n                      }\n                    }\n                  ]\n                }\n              ]}\n              {...this.props}\n            />\n          ) : this.props.children\n        }\n      </Flex>\n    )\n  }\n}\n\nexport default Base;\n","import { Line } from '@nivo/line';\nimport React, { Component } from 'react';\n// import { linearGradientDef } from '@nivo/core'\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericChart from '../GenericChart/GenericChart';\nimport ChartCustomTooltip from '../ChartCustomTooltip/ChartCustomTooltip';\nimport ChartCustomTooltipRow from '../ChartCustomTooltipRow/ChartCustomTooltipRow';\n\nclass PortfolioEquity extends Component {\n  state = {\n    startDate:null,\n    chartData:null,\n    chartProps:null,\n    chartwidth:null,\n    chartHeight:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n    this.loadChartData();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const quickDateSelectionChanged = prevProps.quickDateSelection !== this.props.quickDateSelection;\n    const tokenChanged = JSON.stringify(prevProps.enabledTokens) !== JSON.stringify(this.props.enabledTokens);\n    if (tokenChanged || quickDateSelectionChanged){\n      this.setState({\n        chartData:null\n      },() => {\n        this.componentDidMount();\n      });\n    }\n\n    const mobileChanged = prevProps.isMobile !== this.props.isMobile;\n    const themeModeChanged = prevProps.themeMode !== this.props.themeMode;\n    if (mobileChanged || themeModeChanged){\n      this.loadChartData();\n    }\n  }\n\n  async loadChartData() {\n\n    let enabledTokens = this.props.enabledTokens;\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    const etherscanTxs = await this.functionsUtil.getEtherscanTxs(this.props.account,0,'latest',enabledTokens);\n\n    const chartData = [];\n    let tokensBalance = {};\n    let firstTxTimestamp = null;\n\n    await this.functionsUtil.asyncForEach(enabledTokens,async (selectedToken) => {\n\n      tokensBalance[selectedToken] = [];\n\n      const filteredTxs = Object.values(etherscanTxs).filter(tx => (tx.token === selectedToken));\n      if (filteredTxs && filteredTxs.length){\n\n        let amountLent = this.functionsUtil.BNify(0);\n\n        filteredTxs.forEach((tx,index) => {\n\n          // Skip transactions with no hash or pending\n          if (!tx.hash || (tx.status && tx.status === 'Pending')){\n            return false;\n          }\n          \n          firstTxTimestamp = firstTxTimestamp ? Math.min(firstTxTimestamp,parseInt(tx.timeStamp)) : parseInt(tx.timeStamp);\n\n          const tokenAmount = this.functionsUtil.BNify(tx.tokenAmount);\n\n          switch (tx.action){\n            case 'Swap':\n            case 'Deposit':\n            case 'Receive':\n            case 'Migrate':\n            case 'CurveOut':\n              amountLent = amountLent.plus(tokenAmount);\n            break;\n            case 'Send':\n            case 'Redeem':\n            case 'SwapOut':\n            case 'CurveIn':\n            case 'Withdraw':\n              amountLent = amountLent.minus(tokenAmount);\n            break;\n            default:\n            break;\n          }\n\n          // Reset amountLent if below zero\n          if (amountLent.lt(0)){\n            amountLent = this.functionsUtil.BNify(0);\n          }\n\n          const balance = amountLent;\n          const action = tx.action;\n          const timeStamp = parseInt(tx.timeStamp);\n          const tokenPrice = this.functionsUtil.BNify(tx.tokenPrice);\n          const idleTokens = this.functionsUtil.BNify(tx.idleTokens);\n\n          if (!tokenPrice.isNaN() && !tokenPrice.isNaN()){\n            tokensBalance[selectedToken].push({\n              action,\n              balance,\n              timeStamp,\n              tokenPrice,\n              idleTokens,\n              tokenAmount\n            });\n          }\n        });\n      }\n    });\n\n    // Calculate Start Date\n    let startDate = null;\n    const currentDate = this.functionsUtil.strToMoment(new Date());\n\n    switch (this.props.quickDateSelection){\n      case 'week':\n        startDate = currentDate.clone().subtract(1,'week');\n      break;\n      case 'month':\n        startDate = currentDate.clone().subtract(1,'month');\n      break;\n      case 'month3':\n        startDate = currentDate.clone().subtract(3,'month');\n      break;\n      case 'month6':\n        startDate = currentDate.clone().subtract(6,'month');\n      break;\n      default:\n        startDate = null;\n      break;\n    }\n\n    const days = {};\n    let prevBalances = {};\n    let prevTimestamp = null;\n    let minChartValue = null;\n    let maxChartValue = null;\n    let aggregatedBalance = null;\n    const aggregatedBalancesKeys = {};\n    const tokensBalancesPerDate = {};\n    const currTimestamp = parseInt(new Date().getTime()/1000)+86400;\n\n    const tokensData = {};\n    const isRisk = this.props.selectedStrategy === 'risk';\n\n    await this.functionsUtil.asyncForEach(Object.keys(tokensBalance),async (token) => {\n      tokensData[token] = await this.functionsUtil.getTokenApiData(this.props.availableTokens[token].address,isRisk,firstTxTimestamp,null,false,3600);\n    });\n\n    // debugger;\n\n    const idleTokenBalance = {};\n\n    for (let timeStamp=firstTxTimestamp;timeStamp<=currTimestamp;timeStamp+=this.props.frequencySeconds){\n\n      const foundBalances = {};\n      const tokensBalances = {};\n      timeStamp = Math.min(currTimestamp,timeStamp);\n      aggregatedBalance = this.functionsUtil.BNify(0);\n\n      // await this.functionsUtil.asyncForEach(Object.keys(tokensBalance),async (token) => {\n      // eslint-disable-next-line\n      Object.keys(tokensBalance).forEach(token => {\n\n        let lastTokenData = null;\n        const lastTokenDataUnfiltered = Object.values(tokensData[token]).pop();\n        const filteredTokenData = tokensData[token].filter(tx => (tx.timestamp>=prevTimestamp && tx.timestamp<=timeStamp));\n        if (filteredTokenData && filteredTokenData.length){\n          lastTokenData = filteredTokenData.pop();\n        }\n\n        if (!idleTokenBalance[token]){\n          idleTokenBalance[token] = this.functionsUtil.BNify(0);\n        }\n\n        const tokenConfig = this.props.availableTokens[token];\n        const tokenDecimals = tokenConfig.decimals;\n        let filteredBalances = tokensBalance[token].filter(tx => (tx.timeStamp<=timeStamp && (!prevTimestamp || tx.timeStamp>prevTimestamp)));\n        \n        if (!filteredBalances.length){\n          if (prevBalances && prevBalances[token]){\n            filteredBalances = prevBalances[token];\n            const lastFilteredTx = Object.assign([],filteredBalances).pop();\n            const currentBalance = parseFloat(lastFilteredTx.balance);\n\n            // Take idleToken price from API and calculate new balance\n            if (currentBalance>0 && timeStamp>firstTxTimestamp && lastTokenData){\n              const idleTokens = idleTokenBalance[token];\n              const idlePrice = this.functionsUtil.fixTokenDecimals(lastTokenData.idlePrice,tokenDecimals);\n              let newBalance = idleTokens.times(idlePrice);\n\n              // Set new balance and tokenPrice\n              lastFilteredTx.balance = newBalance;\n              lastFilteredTx.tokenPrice = idlePrice;\n              filteredBalances = [lastFilteredTx];\n            }\n          } else {\n            filteredBalances = [{\n              balance:this.functionsUtil.BNify(0),\n              tokenPrice:this.functionsUtil.BNify(0)\n            }];\n          }\n        } else {\n          filteredBalances.forEach(tx => {\n            switch (tx.action){\n              case 'Swap':\n              case 'Deposit':\n              case 'Migrate':\n              case 'Receive':\n              case 'CurveOut':\n                idleTokenBalance[token] = idleTokenBalance[token].plus(tx.idleTokens);\n              break;\n              default:\n                idleTokenBalance[token] = idleTokenBalance[token].minus(tx.idleTokens);\n                if (idleTokenBalance[token].lt(0)){\n                  idleTokenBalance[token] = this.functionsUtil.BNify(0);\n                }\n              break;\n            }\n          });\n        }\n\n        const lastTx = Object.assign([],filteredBalances).pop();\n        // let lastTxBalance = this.functionsUtil.BNify(lastTx.balance);\n        let lastTxBalance = idleTokenBalance[token].times(lastTx.tokenPrice);\n\n        if (lastTxBalance.gt(0)){\n          // Convert token balance to USD\n          let tokenUsdConversionRate = null;\n          const conversionRateField = this.functionsUtil.getGlobalConfig(['stats','tokens',token,'conversionRateField']);\n          if (!this.props.chartToken && conversionRateField){\n            const conversionRate = lastTokenData && lastTokenData[conversionRateField] ? lastTokenData[conversionRateField] : (lastTokenDataUnfiltered && lastTokenDataUnfiltered[conversionRateField] ? lastTokenDataUnfiltered[conversionRateField] : null);\n            if (conversionRate){\n              tokenUsdConversionRate = this.functionsUtil.fixTokenDecimals(conversionRate,18);\n              if (tokenUsdConversionRate.gt(0)){\n                lastTxBalance = lastTxBalance.times(tokenUsdConversionRate);\n              }\n            }\n          }\n          \n          tokensBalances[token] = lastTxBalance;\n\n          aggregatedBalance = aggregatedBalance.plus(lastTxBalance);\n        }\n\n        foundBalances[token] = filteredBalances;\n      });\n\n      let momentDate = this.functionsUtil.strToMoment(timeStamp*1000);\n\n      if (startDate === null || (momentDate.isSameOrAfter(startDate) && momentDate.isSameOrBefore(new Date(),'day'))){\n        \n        // if (momentDate.isAfter(new Date(),'day')){\n        //   momentDate = this.functionsUtil.strToMoment(new Date());\n        // }\n\n        // Force date to midnight\n        const formattedDate = momentDate.format('YYYY/MM/DD 00:00');\n\n        // Save days for axisBottom format\n        days[momentDate.format('YYYY/MM/DD')] = 1;\n\n        aggregatedBalance = parseFloat(parseFloat(aggregatedBalance.toFixed(6)));\n\n        tokensBalancesPerDate[formattedDate] = tokensBalances;\n        aggregatedBalancesKeys[formattedDate] = aggregatedBalance;\n\n        // console.log(formattedDate,tokensBalances);\n\n        minChartValue = minChartValue === null ? aggregatedBalance : Math.min(minChartValue,aggregatedBalance);\n        maxChartValue = maxChartValue === null ? aggregatedBalance : Math.max(maxChartValue,aggregatedBalance);\n      }\n\n      prevTimestamp = timeStamp;\n      prevBalances = foundBalances;\n    }\n\n    const aggregatedBalances = Object.keys(aggregatedBalancesKeys).map(date => ({\n      x:date,\n      y:aggregatedBalancesKeys[date],\n      balances:tokensBalancesPerDate[date]\n    }));\n\n    let itemIndex = 0;\n    aggregatedBalances.forEach( (item,index) => {\n      const itemPos = Math.floor(itemIndex/aggregatedBalances.length*100);\n      aggregatedBalances[index].itemPos = itemPos;\n      itemIndex++;\n    });\n\n    /*\n    aggregatedBalances.push({\n      x:momentDate.format('YYYY/MM/DD HH:mm'),\n      y:aggregatedBalance\n    });\n    */\n\n    // Add day before to start with zero balance\n    /*\n    const firstTxMomentDate = this.functionsUtil.strToMoment(firstTxTimestamp*1000);\n    if ((startDate === null || startDate.isSameOrBefore(firstTxMomentDate)) && aggregatedBalances.length){\n      const firstItem = aggregatedBalances[0];\n      const firstDate = this.functionsUtil.strToMoment(firstItem.x,'YYYY/MM/DD HH:mm');\n      firstDate.subtract(1,'day');\n      aggregatedBalances.unshift({\n        x:firstDate.format('YYYY/MM/DD HH:mm'),\n        y:0\n      });\n    }\n    */\n\n    const chartToken = this.props.chartToken ? this.props.chartToken.toUpperCase() : 'USD';\n\n    // Add token Data\n    chartData.push({\n      id:chartToken,\n      color: 'hsl('+ this.functionsUtil.getGlobalConfig(['stats','tokens',chartToken,'color','hsl']).join(',')+')',\n      data:aggregatedBalances\n    });\n\n    let yFormatDecimals = 2;\n    if (maxChartValue-minChartValue<1){\n      yFormatDecimals = 4;\n    }\n\n    if (maxChartValue === minChartValue){\n      minChartValue = Math.max(0,maxChartValue-1);\n    }\n\n    const maxGridLines = 5;\n    const gridYStep = (maxChartValue-minChartValue)/maxGridLines;\n    const gridYValues = [];\n    for (let i=0;i<=maxGridLines;i++){\n      const gridYValue = parseFloat(parseFloat(minChartValue+(i*gridYStep)).toFixed(6));\n      gridYValues.push(gridYValue);\n    }\n    \n    const axisBottomMaxValues = 10;\n    const daysCount = Object.values(days).length;    \n    const daysFrequency = Math.max(1,Math.ceil(daysCount/axisBottomMaxValues));\n\n    const chartProps = {\n      xScale:{\n        type: 'time',\n        format: '%Y/%m/%d %H:%M',\n      },\n      yScale:{\n        type: 'linear',\n        stacked: false,\n        min: minChartValue,\n        max: maxChartValue\n      },\n      xFormat:'time:%b %d %Y',\n      yFormat:value => this.functionsUtil.formatMoney(value,yFormatDecimals),\n      axisBottom: this.props.isMobile ? null : {\n        legend: '',\n        tickSize:0,\n        format: '%b %d',\n        tickPadding: 15,\n        orient: 'bottom',\n        legendOffset: 36,\n        legendPosition: 'middle',\n        tickValues:'every '+daysFrequency+' days'\n      },\n      gridYValues,\n      pointSize:0,\n      useMesh:true,\n      axisLeft: this.props.isMobile ? null : {\n        legend: '',\n        tickSize: 0,\n        orient: 'left',\n        tickPadding: 10,\n        tickRotation: 0,\n        legendOffset: -70,\n        tickValues:gridYValues,\n        legendPosition: 'middle',\n        format: v => this.functionsUtil.abbreviateNumber(v,2),\n      },\n      animate:true,\n      pointLabel:'y',\n      enableArea:true,\n      enableSlices:'x',\n      enableGridY:true,\n      curve:'monotoneX',\n      enableGridX:false,\n      pointBorderWidth:1,\n      colors:d => d.color,\n      pointLabelYOffset:-12,\n      areaBaselineValue:minChartValue,\n      pointColor:{ from: 'color', modifiers: []},\n      areaOpacity:this.props.themeMode === 'light' ? 0.1 : 0.5,\n      theme:{\n        axis: {\n          ticks: {\n            text: {\n              fontSize:12,\n              fontWeight:600,\n              fill:this.props.theme.colors.legend,\n              fontFamily:this.props.theme.fonts.sansSerif\n            }\n          }\n        },\n        grid: {\n          line: {\n            stroke: this.props.theme.colors.lineChartStroke, strokeDasharray: '8 4'\n          }\n        },\n      },\n      /*\n      defs:[\n        linearGradientDef('gradientA', [\n          { offset: 0, color: 'inherit' },\n          { offset: 100, color: 'inherit', opacity: 0 },\n        ]),\n      ],\n      fill:[{ match: '*', id: 'gradientA' }],\n      */\n      margin: this.props.isMobile ? { top: 20, right: 25, bottom: 25, left: 20 } : { top: 30, right: 50, bottom: 45, left: 60 },\n      sliceTooltip:(slideData) => {\n        const { slice } = slideData;\n        const point = slice.points[0];\n        return (\n          <ChartCustomTooltip\n            point={point}\n          >\n            <ChartCustomTooltipRow\n              color={point.color}\n              label={point.serieId}\n              value={`$ ${point.data.yFormatted}`}\n            />\n            {\n            (typeof point.data.balances === 'object' && Object.keys(point.data.balances).length>0) &&\n              Object.keys(point.data.balances).map(token => {\n                if (token === point.serieId){\n                  return null;\n                }\n                const color = this.functionsUtil.getGlobalConfig(['stats','tokens',token,'color','hex']);\n                const balance = point.data.balances[token];\n                let formattedBalance = this.functionsUtil.formatMoney(balance,2);\n                if (parseFloat(balance)>=0.01){\n                  return (\n                    <ChartCustomTooltipRow\n                      label={token}\n                      color={color}\n                      key={`row_${token}`}\n                      value={`$ ${formattedBalance}`}\n                    />\n                  );\n                }\n                return null;\n              })\n            }\n          </ChartCustomTooltip>\n        );\n      }\n    };\n\n    this.setState({\n      chartData,\n      chartProps\n    });\n  }\n\n  render() {\n    return (\n      <GenericChart\n        type={Line}\n        showLoader={true}\n        {...this.state.chartProps}\n        data={this.state.chartData}\n        parentId={this.props.parentId}\n        height={this.props.chartHeight}\n        parentIdHeight={this.props.parentIdHeight}\n      />\n    );\n  }\n}\n\nexport default PortfolioEquity;","// import { Line } from '@nivo/line';\nimport CountUp from 'react-countup';\nimport React, { Component } from 'react';\nimport AssetField from '../AssetField/AssetField';\nimport CustomField from '../CustomField/CustomField';\n// import SmartNumber from '../SmartNumber/SmartNumber';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n// import GenericChart from '../GenericChart/GenericChart';\n// import CustomTooltip from '../CustomTooltip/CustomTooltip';\nimport { Image, Text, Loader, Button, Flex, Icon } from \"rimble-ui\";\n// import VariationNumber from '../VariationNumber/VariationNumber';\n// import AllocationChart from '../AllocationChart/AllocationChart';\n// import CustomTooltipRow from '../CustomTooltip/CustomTooltipRow';\n\nclass TrancheField extends Component {\n\n  state = {\n    ready:false\n  };\n\n  // Utils\n  functionsUtil = null;\n  componentUnmounted = false;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n    this.loadField();\n  }\n\n  async setStateSafe(newState,callback=null) {\n    if (!this.componentUnmounted){\n      return this.setState(newState,callback);\n    }\n    return null;\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const tokenChanged = prevProps.token !== this.props.token;\n    const accountChanged = prevProps.account !== this.props.account;\n    const trancheChanged = prevProps.tranche !== this.props.tranche;\n    const mobileChanged = prevProps.isMobile !== this.props.isMobile;\n    const protocolChanged = prevProps.protocol !== this.props.protocol;\n    const themeModeChanged = prevProps.themeMode !== this.props.themeMode;\n    const fieldChanged = prevProps.fieldInfo.name !== this.props.fieldInfo.name;\n    const contractInitialized = prevProps.contractsInitialized !== this.props.contractsInitialized && this.props.contractsInitialized;\n    const transactionsChanged = prevProps.transactions && this.props.transactions && Object.values(prevProps.transactions).filter(tx => (tx.status==='success')).length !== Object.values(this.props.transactions).filter(tx => (tx.status==='success')).length;\n\n    if (fieldChanged || tokenChanged || protocolChanged || trancheChanged || accountChanged || transactionsChanged || (contractInitialized && !this.state.ready)){\n      // console.log('componentDidUpdate-1',fieldChanged,tokenChanged,protocolChanged,trancheChanged,accountChanged,transactionsChanged,(contractInitialized && !this.state.ready));\n      this.setStateSafe({\n        ready:false\n      },() => {\n        this.loadField();\n      });\n    } else if (mobileChanged || themeModeChanged){\n      // console.log('componentDidUpdate-2',mobileChanged,themeModeChanged);\n      const oldState = Object.assign({},this.state);\n      this.setStateSafe({\n        ready:false\n      },() => {\n        this.setState(oldState);\n      });\n    }\n  }\n\n  loadField = async(fieldName=null) => {\n\n    if (this.componentUnmounted || !this.props.protocol || !this.props.token || !this.props.tokenConfig){\n      return false;\n    }\n\n    const setState = fieldName === null;\n    const fieldInfo = this.props.fieldInfo;\n    if (!fieldName){\n      fieldName = fieldInfo.name;\n    }\n\n    const fieldProps = fieldInfo.props;\n    const addGovTokens = typeof this.props.addGovTokens !== 'undefined' ? this.props.addGovTokens : true;\n    const formatValue = typeof this.props.formatValue !== 'undefined' ? this.props.formatValue : true;\n    const addTokenName = typeof this.props.addTokenName !== 'undefined' ? this.props.addTokenName : true;\n\n    let output = null;\n    if (this.props.token){\n      switch (fieldName){\n        default:\n          output = await this.functionsUtil.loadTrancheField(fieldName,fieldProps,this.props.protocol,this.props.token,this.props.tranche,this.props.tokenConfig,this.props.trancheConfig,this.props.account,addGovTokens,formatValue,addTokenName);\n          if (output && setState){\n            this.setStateSafe({\n              ready:true,\n              [fieldName]:output\n            });\n          }\n        break;\n      }\n    }\n\n    return output;\n  }\n\n  render(){\n    const fieldInfo = this.props.fieldInfo;\n    let output = null;\n\n    const showLoader = fieldInfo.showLoader === undefined || fieldInfo.showLoader;\n    const loader = showLoader ? (<Loader size=\"20px\" />) : null;\n\n    const fieldProps = {\n      fontWeight:3,\n      fontSize:[0,2],\n      color:'cellText',\n      flexProps:{\n        justifyContent:'flex-start'\n      }\n    };\n\n    // Replace props\n    if (fieldInfo.props && Object.keys(fieldInfo.props).length){\n      Object.keys(fieldInfo.props).forEach(p => {\n        fieldProps[p] = fieldInfo.props[p];\n      });\n    }\n\n    // Merge with funcProps\n    if (fieldInfo.funcProps && Object.keys(fieldInfo.funcProps).length){\n      Object.keys(fieldInfo.funcProps).forEach(p => {\n        if (typeof fieldInfo.funcProps[p]==='function'){\n          fieldProps[p] = fieldInfo.funcProps[p](this.props);\n        }\n      });\n    }\n\n    const tokenName = this.functionsUtil.getGlobalConfig(['stats','tokens',this.props.token,'label']) || this.functionsUtil.capitalize(this.props.token);\n\n    // const tokenConfig = this.props.tokenConfig;// || this.functionsUtil.getGlobalConfig(['stats','tokens',this.props.token]);\n    const maxPrecision = fieldProps && fieldProps.maxPrecision ? fieldProps.maxPrecision : 5;\n    const decimals = fieldProps && fieldProps.decimals ? fieldProps.decimals : ( this.props.isMobile ? 2 : 3 );\n    const minPrecision = fieldProps && fieldProps.minPrecision ? fieldProps.minPrecision : ( this.props.isMobile ? 3 : 4 );\n\n    // console.log('TrancheField',fieldInfo.name,fieldProps);\n    const flexProps = fieldProps.flexProps;\n    delete fieldProps.flexProps;\n\n    switch (fieldInfo.name){\n      case 'protocolIcon':\n        output = (\n          <Image src={`images/protocols/${this.props.protocol}.svg`} {...fieldProps} />\n        );\n      break;\n      case 'trancheTypeIcon':\n        const trancheDetails = this.functionsUtil.getGlobalConfig(['tranches',this.props.tranche]);\n        output = (\n          <Flex\n            p={'6px'}\n            borderRadius={'50%'}\n            alignItems={'center'}\n            justifyContent={'center'}\n            backgroundColor={`rgba(${trancheDetails.color.rgb.join(',')},0.2)`}\n            {...flexProps}\n          >\n            <Icon\n              {...fieldProps}\n              align={'center'}\n              name={trancheDetails.icon}\n              color={trancheDetails.color.hex}\n            />\n          </Flex>\n        );\n      break;\n      case 'tokenIcon':\n        output = (\n          <Image src={`images/tokens/${this.props.token}.svg`} {...fieldProps} />\n        );\n      break;\n      case 'button':\n        const buttonLabel = typeof fieldInfo.label === 'function' ? fieldInfo.label(this.props) : fieldInfo.label;\n        output = (\n          <Button {...fieldProps} onClick={() => fieldProps.handleClick(this.props) }>{buttonLabel}</Button>\n        );\n      break;\n      case 'custom':\n        output = (\n          <CustomField\n            row={this.props}\n            fieldInfo={fieldInfo}\n          />\n        );\n      break;\n      case 'feesCounter':\n        output = this.state.ready && this.state.feesCounter.feesStart && this.state.feesCounter.feesEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.feesCounter.feesEnd)}\n            start={parseFloat(this.state.feesCounter.feesStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'earningsCounter':\n        output = this.state.ready && this.state.earningsCounter && this.state.earningsCounter.earningsStart && this.state.earningsCounter.earningsEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.earningsCounter.earningsEnd)}\n            start={parseFloat(this.state.earningsCounter.earningsStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision)+` ${tokenName}` }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'govTokens':\n      case 'autoFarming':\n      case 'stakingRewards':\n        output = this.state[fieldInfo.name] && Object.keys(this.state[fieldInfo.name]).length>0 ? (\n          <Flex\n            width={1}\n            alignItems={'center'}\n            flexDirection={'row'}\n            justifyContent={'flex-start'}\n            {...fieldInfo.parentProps}\n          >\n            {\n              Object.values(this.state[fieldInfo.name]).map( (govTokenConfig,govTokenIndex) => (\n                <AssetField\n                  token={govTokenConfig.token}\n                  tokenConfig={govTokenConfig}\n                  key={`asset_${govTokenIndex}`}\n                  fieldInfo={{\n                    name:'iconTooltip',\n                    tooltipProps:{\n                      message:`${govTokenConfig.token}`+(this.state.getGovTokensDistributionSpeed && this.state.getGovTokensDistributionSpeed[govTokenConfig.token] ? `: ${this.state.getGovTokensDistributionSpeed[govTokenConfig.token].toFixed(decimals)}/${govTokenConfig.distributionFrequency} (for the whole pool)` : '')\n                    },\n                    props:{\n                      borderRadius:'50%',\n                      position:'relative',\n                      height:['1.4em','2em'],\n                      ml:govTokenIndex ? '-10px' : 0,\n                      zIndex:Object.values(this.state[fieldInfo.name]).length-govTokenIndex,\n                      boxShadow:['1px 1px 1px 0px rgba(0,0,0,0.1)','1px 2px 3px 0px rgba(0,0,0,0.1)'],\n                    }\n                  }}\n                />\n              ))\n            }\n          </Flex>\n        ) : this.state[fieldInfo.name] ? (\n          <Text {...fieldProps}>-</Text>\n        ) : loader\n      break;\n      default:\n        let formattedValue = this.state[fieldInfo.name];\n        if (this.state[fieldInfo.name] && this.state[fieldInfo.name]._isBigNumber){\n          formattedValue = this.state[fieldInfo.name].toFixed(decimals);\n        }\n        output = this.state[fieldInfo.name] ? (\n          <Text {...fieldProps}>{formattedValue}</Text>\n        ) : loader\n      break;\n    }\n    return output;\n  }\n}\n\nexport default TrancheField;\n","import React, { Component } from 'react';\nimport { Flex, Text, Icon, Image } from \"rimble-ui\";\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass CardIconButton extends Component {\n  render() {\n    const cardProps = Object.assign({\n      py:1,\n      width:'auto',\n      px:['12px',3],\n    },this.props.cardProps);\n\n    return (\n       <DashboardCard\n         cardProps={cardProps}\n         isInteractive={true}\n         isActive={this.props.isActive}\n         isDisabled={this.props.isDisabled}\n         handleClick={this.props.handleClick}\n       >\n         <Flex\n           my={1}\n           alignItems={'center'}\n           flexDirection={'row'}\n           justifyContent={'center'}\n         >\n          {\n            this.props.image ? (\n              <Image\n                align={'center'}\n                src={this.props.image}\n                height={ this.props.isMobile ? '1.2em' : '1.4em' }\n                width={ this.props.isMobile ? '1.2em' : '1.4em' }\n                {...this.props.imageProps}\n              />\n            ) : this.props.useIconOnly ? (\n              <Icon\n                align={'center'}\n                name={this.props.icon}\n                size={ this.props.isMobile ? '1.2em' : '1.4em' }\n                color={ this.props.iconColor ? this.props.iconColor : 'redeem' }\n                {...this.props.iconProps}\n              />\n            ) : (\n             <Flex\n               mr={2}\n               p={['4px','7px']}\n               borderRadius={'50%'}\n               alignItems={'center'}\n               justifyContent={'center'}\n               backgroundColor={ this.props.iconBgColor ? this.props.iconBgColor : this.props.theme.colors.transactions.actionBg.redeem }\n             >\n               <Icon\n                 align={'center'}\n                 name={this.props.icon}\n                 size={ this.props.isMobile ? '1.2em' : '1.4em' }\n                 color={ this.props.iconColor ? this.props.iconColor : 'redeem' }\n                 {...this.props.iconProps}\n               />\n             </Flex>\n            )\n          }\n           <Text\n             fontWeight={3}\n             fontSize={[1,3]}\n             {...this.props.textProps}\n           >\n             {this.props.text}\n           </Text>\n         </Flex>\n       </DashboardCard>\n    );\n  }\n}\n\nexport default CardIconButton;","import axios from 'axios';\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport { Flex, Text, Progress, Icon, Link } from 'rimble-ui'\n\nclass TxProgressBar extends Component {\n  state = {\n    txCount:0,\n    error:null,\n    ended:false,\n    percentage:0,\n    processing:true,\n    txTimestamp:null,\n    initialized:false,\n    estimatedTime:null,\n    remainingTime:null\n  };\n\n  componentUnmounted = false;\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillUnmount(){\n\n    this.componentUnmounted = true;\n\n    var id = window.setTimeout(function() {}, 0);\n\n    while (id--) {\n        window.clearTimeout(id); // will do nothing if no timeout with id is present\n    }\n\n    window.initProgressBar = this.initProgressBar;\n  }\n\n  componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps){\n    this.loadUtils();\n\n    if (!this.state.initialized && this.props.web3){\n      this.initProgressBar();\n    }\n  }\n\n  componentDidMount = async () => {\n    this.initProgressBar();\n  }\n\n  getTransaction = async () => {\n    const transaction = await (new Promise( async (resolve, reject) => {\n      // console.log('getTransaction',this.props.hash);\n      this.props.web3.eth.getTransaction(this.props.hash,(err,transaction) => {\n        resolve(transaction);\n      });\n    }));\n\n    // console.log('getTransaction',transaction);\n\n    const newState = {};\n    if (transaction){\n      newState.transaction = transaction;\n    } else {\n      newState.processing = false;\n      newState.error = 'Unable to find the transaction';\n    }\n\n    this.setState(newState);\n    return transaction;\n  }\n\n  /*\n  Taken from https://ethgasstation.info/calculatorTxV.php\n  */\n  _estimateWait (prediction, gasoffered) {\n    var minedProb;\n    var expectedWait;\n    var sum1, sum2;\n    var intercept = 4.2794;\n    var hpa = .0329;\n    var hgo = -3.2836;\n    var tx = -0.0004;\n    var intercept2 = 7.5375;\n    var hpa_coef = -0.0801;\n    var txatabove_coef= 0.0003;\n    var high_gas_coef = .3532;\n\n    if (gasoffered > 1000000) {    \n      sum1 = intercept + (prediction['hashpower_accepting'] * hpa) + hgo  + (prediction['tx_atabove'] * tx);\n      sum2 = intercept2 + (prediction['hashpower_accepting'] * hpa_coef) + (prediction['tx_atabove'] * txatabove_coef) + high_gas_coef;\n    } else {\n      sum1 = intercept + (prediction['hashpower_accepting'] * hpa) + (prediction['tx_atabove'] * tx);\n      sum2 = intercept2 + (prediction['tx_atabove'] * txatabove_coef) + (prediction['hashpower_accepting'] * hpa_coef);\n    }\n\n    var factor = Math.exp(- 1 * sum1);\n    const prob = 1 / (1 + factor);\n\n    if (prob > .95) {\n      minedProb = 'Very High';\n    } else if (prob > .9 && prob <= .95) {\n      minedProb = 'Medium'\n    } else {\n      minedProb = 'Low';\n    }\n\n    expectedWait = Math.exp(sum2);\n    if (expectedWait < 2) {\n      expectedWait = 2;\n    }\n\n    if (gasoffered > 2000000) {\n      expectedWait += 100;\n    }\n\n    return [expectedWait, prediction['hashpower_accepting'], prediction['tx_atabove'], minedProb];\n  }\n\n  getBlockTime = async () => {\n    const pt = await axios.get('https://ethgasstation.info/json/ethgasAPI.json');\n    if (pt){\n      const blockTime = pt.data;\n      this.setState({\n        blockTime\n      });\n      return blockTime;\n    }\n    return null;\n  }\n\n  getPredictionTable = async () => {\n    const pt = await axios.get('https://ethgasstation.info/json/predictTable.json');\n    if (pt){\n      const predictTable = pt.data;\n      this.setState({\n        predictTable\n      });\n      return predictTable;\n    }\n    return null;\n  }\n\n  getTxEstimatedTime = (gasPrice) => {\n    let prediction = null;\n    if (this.state.predictTable){\n      this.state.predictTable.forEach((p,i) => {\n        if (!prediction && parseFloat(p.gasprice)>=parseFloat(gasPrice)){\n          prediction = p;\n          return true;\n        }\n      });\n    }\n\n    if (this.state.blockTime && prediction){\n      const pdValues = this._estimateWait(prediction,this.state.transaction.gas);\n      const blocksWait = pdValues[0];\n      const blockInterval = this.state.blockTime.block_time;\n      let txMeanSecs = blocksWait * blockInterval;\n      txMeanSecs = parseInt(txMeanSecs.toFixed(0));\n      this.functionsUtil.customLog('getTxEstimatedTime',prediction,this.state.transaction.gas,pdValues,txMeanSecs);\n      return txMeanSecs; // Customized\n    }\n\n    return null;\n  }\n\n  calculateRemainingTime = async () => {\n    let remainingTime = 0;\n    let estimatedTime = 0;\n\n    if (!this.state.transaction || this.componentUnmounted){\n      return false;\n    }\n\n    if (!this.state.transaction.blockNumber){\n      const gasPrice = parseFloat(this.functionsUtil.BNify(this.state.transaction.gasPrice).div(1e9).toString());\n      remainingTime = this.getTxEstimatedTime(gasPrice);\n    }\n\n    estimatedTime = remainingTime ? remainingTime : 0;\n\n    if (this.state.txTimestamp){\n      const currTimestamp = new Date().getTime();\n      const secondsPassed = parseInt((currTimestamp-parseInt(this.state.txTimestamp))/1000);\n      \n      // Calculate new remaining time\n      remainingTime -= secondsPassed;\n      remainingTime = Math.max(remainingTime,0);\n\n      this.functionsUtil.customLog('Estimated time',estimatedTime,'secondsPassed',secondsPassed,'New remaining time',remainingTime);\n    }\n\n    const timePassed = estimatedTime-remainingTime;\n    const percentage = estimatedTime>0 ? parseFloat(timePassed/estimatedTime) : 1;\n\n    this.setState({\n      estimatedTime,\n      remainingTime,\n      percentage\n    });\n\n    setTimeout(()=>{this.updateProgressBar()},1000);\n  }\n\n  updateProgressBar = () => {\n\n    if (this.componentUnmounted){\n      return false;\n    }\n\n    let remainingTime = this.state.remainingTime;\n    if (remainingTime){\n      remainingTime--;\n      if (!remainingTime){\n        this.setState({\n          percentage:1,\n          ended:true\n        });\n      } else {\n        const timePassed = this.state.estimatedTime-remainingTime;\n        const percentage = parseFloat(timePassed/this.state.estimatedTime);\n        this.setState({\n          percentage,\n          remainingTime\n        });\n        setTimeout(()=>{this.updateProgressBar()},1000);\n      }\n    } else {\n      this.setState({\n        percentage:1,\n        ended:true\n      });\n    }\n  }\n\n  getTxInfo = async () => {\n\n    // Get tx timestamp\n    const txProgressBarKey = `txProgressBarData`;\n    const txHash = this.props.hash.toLowerCase();\n\n    let txProgressBarData = null;\n    let txTimestamp = null;\n    let newState = {};\n\n    if (localStorage){\n      txProgressBarData = localStorage.getItem(txProgressBarKey);\n      if (txProgressBarData){\n        txProgressBarData = JSON.parse(txProgressBarData);\n      }\n    }\n\n    if (!txProgressBarData || !txProgressBarData[txHash]){\n      txTimestamp = new Date().getTime();\n\n      const [predictTable,blockTime] = await Promise.all([\n        this.getPredictionTable(),\n        this.getBlockTime()\n      ]);\n\n      txProgressBarData = {};\n      txProgressBarData[txHash] = {\n        txTimestamp,\n        blockTime,\n        predictTable\n      };\n\n      // Save progress bar status in localStorage\n      this.functionsUtil.setLocalStorage(txProgressBarKey,JSON.stringify(txProgressBarData));\n\n      newState = txProgressBarData[txHash];\n\n      if (!predictTable || !blockTime){\n        newState.error = 'Processing transaction';\n      }\n    }\n\n    this.setState(newState);\n  }\n\n  initProgressBar = async () => {\n\n    if (!this.props.hash || !this.props.web3){\n      return false;\n    }\n\n    const newState = {\n      initialized:true\n    };\n    this.setState(newState);\n\n    // console.log('initProgressBar',this.state.txCount,this.props.hash);\n\n    const transaction = await this.getTransaction();\n\n    if (transaction){\n      await this.getTxInfo();\n      try{\n        this.calculateRemainingTime();\n      } catch (err) {\n        newState.error = 'Processing transaction';\n        // const errStringified = JSON.stringify(err);\n      }\n\n      this.setState(newState);\n    } else {\n      const txCount = this.state.txCount++;\n      if (txCount<5){\n        this.setState({\n          txCount\n        },() => {\n          window.setTimeout(() => {\n            this.initProgressBar();\n          },1000);\n        });\n      }\n    }\n  }\n\n  renderRemainingTime(){\n    // More than 60 seconds\n    if (this.state.remainingTime>60){\n      const minutes = Math.floor(this.state.remainingTime/60);\n      const seconds = this.state.remainingTime-(minutes*60);\n      return ('0'+minutes).substr(-2)+':'+('0'+seconds).substr(-2)+' min';\n    } else {\n      return this.state.remainingTime+'s';\n    }\n  }\n\n  render() {\n    return (\n      <Flex flexDirection={'column'} alignItems={'center'}>\n        {\n          this.state.remainingTime !== null ? (\n            this.state.ended ? (\n              <FlexLoader\n                textProps={{\n                  ml:2,\n                  color:this.props.textColor ? this.props.textColor : 'copyColor'\n                }}\n                loaderProps={{\n                  size:'25px',\n                  ...this.props.loaderProps\n                }}\n                flexProps={{\n                  textAlign:'center',\n                  alignItems:'center',\n                  justifyContent:'center',\n                }}\n                text={this.props.endMessage ? this.props.endMessage : 'Finalizing transaction...'}\n              />\n            ) : (\n              <Flex\n                mb={2}\n                alignItems={'center'}\n                flexDirection={'column'}\n                justifyContent={'center'}\n              >\n                <Text mb={2} color={ this.props.textColor ? this.props.textColor : 'copyColor'}>{ this.props.waitText ? this.props.waitText : 'Remaining time:' } <Text.span color={ this.props.textColor ? this.props.textColor : 'copyColor'} fontWeight={3}>{ this.renderRemainingTime() }</Text.span></Text>\n                <Progress value={ this.state.percentage } />\n              </Flex>\n            )\n          ) : (\n            this.state.error !== null && !this.state.processing ? (\n              <Flex\n                alignItems={'center'}\n                flexDirection={'column'}\n              >\n                <Icon\n                  size={'2em'}\n                  name={'Warning'}\n                  color={'cellText'}\n                />\n                <Text\n                  mt={0}\n                  fontSize={2}\n                  textAlign={'center'}\n                  color={this.props.textColor ? this.props.textColor : 'cellText'}\n                >\n                  {this.state.error}\n                </Text>\n              </Flex>\n            ) : (\n              <FlexLoader\n                textProps={{\n                  ml:2,\n                  color:this.props.textColor ? this.props.textColor : 'copyColor'\n                }}\n                loaderProps={{\n                  size:'25px',\n                  ...this.props.loaderProps\n                }}\n                flexProps={{\n                  textAlign:'center',\n                  alignItems:'center',\n                  justifyContent:'center',\n                }}\n                text={ this.state.error ? this.state.error : (this.props.hash ? (this.props.loadingMessage ? this.props.loadingMessage : 'Calculating estimated time...') : (this.props.sendingMessage ? this.props.sendingMessage : 'Sending transaction...') ) }\n              />\n            )\n          )\n        }\n        {\n          this.props.hash ? (\n            <Link\n              mt={0}\n              target={'_blank'}\n              hoverColor={'dark-gray'}\n              rel={\"nofollow noopener noreferrer\"}\n              color={this.props.textColor ? this.props.textColor : 'cellText'}\n              href={this.functionsUtil.getEtherscanTransactionUrl(this.props.hash)}\n            >\n              <Flex\n                alignItems={'center'}\n                flexDirection={'row'}\n                justifyContent={'center'}\n              >\n                <Text\n                  fontSize={0}\n                  textAlign={'center'}\n                  color={this.props.textColor ? this.props.textColor : 'cellText'}\n                >\n                  View in Etherscan\n                </Text>\n                <Icon\n                  ml={1}\n                  size={'0.75em'}\n                  name={'OpenInNew'}\n                  color={this.props.textColor ? this.props.textColor : 'cellText'}\n                />\n              </Flex>\n            </Link>\n          ) : typeof this.props.cancelTransaction === 'function' ? (\n              <Link\n                mt={0}\n                href={`javascript:void(0)`}\n                onClick={ e => this.props.cancelTransaction() }\n                color={this.props.cancelTextColor ? this.props.cancelTextColor : 'cellText'}\n                hoverColor={this.props.cancelTextHoverColor ? this.props.cancelTextHoverColor : 'dark-gray'}\n              >\n                <Flex\n                  alignItems={'center'}\n                  flexDirection={'row'}\n                  justifyContent={'center'}\n                >\n                  <Text\n                    fontSize={0}\n                    textAlign={'center'}\n                    color={this.props.cancelTextColor ? this.props.cancelTextColor : 'cellText'}\n                  >\n                    Cancel transaction\n                  </Text>\n                  <Icon\n                    ml={1}\n                    size={'0.85em'}\n                    name={'Cancel'}\n                    color={this.props.cancelTextColor ? this.props.cancelTextColor : 'cellText'}\n                  />\n                </Flex>\n              </Link>\n          ) : null\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default TxProgressBar;","import Select from 'react-select';\nimport React, { Component } from 'react';\nimport { Flex, Text, Input } from \"rimble-ui\";\nimport styles from './GenericSelector.module.scss';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass GenericSelector extends Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    await this.loadComponents();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const selectedTokenChanged = prevProps.selectedToken !== this.props.selectedToken;\n    const optionsChanged = JSON.stringify(prevProps.options) !== JSON.stringify(this.props.options);\n    const defaultValueChanged = JSON.stringify(prevProps.defaultValue) !== JSON.stringify(this.props.defaultValue);\n    const componentsChanged = prevProps.CustomOptionValue !== this.props.CustomOptionValue || prevProps.CustomValueContainer !== this.props.CustomValueContainer;\n\n    if (optionsChanged || selectedTokenChanged || defaultValueChanged || componentsChanged){\n      this.loadComponents();\n    }\n  }\n\n  async loadComponents(){\n    \n    const ControlComponent = props => {\n      const cardProps = Object.assign(\n        props.innerProps,\n        {\n          p:2,\n          width:1,\n          style:{cursor:'pointer'}\n        },\n        (this.props.innerProps ? this.props.innerProps : {})\n      );\n\n      if (props.menuIsOpen){\n        cardProps.boxShadow = 4;\n      }\n      return (\n        <DashboardCard\n          isInteractive={true}\n          cardProps={cardProps}\n        >\n          <Flex\n            width={1}\n            flexDirection={'row'}\n          >\n            {props.children}\n          </Flex>\n        </DashboardCard>\n      );\n    };\n\n    const CustomIndicatorSeparator = props => null;\n\n    const CustomMenu = props => {\n      const cardProps = Object.assign(props.innerProps,{\n        mt:2,\n        zIndex:1,\n        boxShadow:null,\n        position:'absolute'\n      });\n      return (\n        <DashboardCard\n          cardProps={cardProps}\n        >\n          {props.children}\n        </DashboardCard>\n      );\n    }\n\n    const CustomValueContainer = this.props.CustomValueContainer ? this.props.CustomValueContainer : props => {\n      return (\n        <Flex\n          {...props.innerProps}\n        >\n          <Flex\n            width={1}\n            alignItems={'center'}\n            flexDirection={'row'}\n          >\n            <Text\n              fontWeight={3}\n            >\n              {props.selectProps.value.label}\n            </Text>\n          </Flex>\n        </Flex>\n      );\n    }\n\n    const CustomOptionValue = this.props.CustomOptionValue ? this.props.CustomOptionValue : (props) => {\n      return (\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'row'}\n        >\n          <Text>\n            {props.label}\n          </Text>\n        </Flex>\n      );\n    };\n\n    const CustomInputContainer = this.props.CustomInputContainer ? this.props.CustomInputContainer : (props) => {\n\n      if (!props.selectProps.isSearchable){\n        return null;\n      }\n\n      return (\n        <Input\n          {...props}\n          fontSize={this.props.theme.fontSizes[2]}\n          color={this.props.theme.colors.copyColor}\n          fontWeight={this.props.theme.fontWeights[3]}\n          fontFamily={this.props.theme.fonts.sansSerif}\n          backgroundColor={this.props.theme.colors.cardBg}\n          className={[styles.searchInput,this.props.themeMode==='dark' ? styles.dark : null,!props.selectProps.menuIsOpen ? styles.searchInputHidden : null]}\n        />\n      );\n    };\n\n    const CustomOption = (props) => {\n\n      const options = props.selectProps.options;\n      let selectedValue = props.selectProps && props.selectProps.value && props.selectProps.value.value;\n\n      // Check if the selectedValue is included in options\n      if (selectedValue && options.map( o => o.value ).indexOf(selectedValue) === -1 && this.props.defaultValue){\n        selectedValue = this.props.defaultValue.value;\n      }\n\n      // Don't show selected value\n      if (selectedValue && selectedValue === props.value){\n        return null;\n      }\n\n      return (\n        <Flex\n          px={3}\n          py={2}\n          width={1}\n          {...props.innerProps}\n          alignItems={'center'}\n          flexDirection={'row'}\n          style={{cursor:'pointer'}}\n          justifyContent={'flex-start'}\n          className={styles.genericSelector}\n          backgroundColor={ props.isFocused ? 'selectBgFocused' : 'selectBg' }\n        >\n          <CustomOptionValue\n            {...props}\n          />\n        </Flex>\n      );\n    }\n\n    await this.setState({\n      CustomMenu,\n      CustomOption,\n      ControlComponent,\n      CustomValueContainer,\n      CustomInputContainer,\n      CustomIndicatorSeparator\n    });\n  }\n\n  render() {\n    const isSearchable = typeof this.props.isSearchable !== 'undefined' ? this.props.isSearchable : false;\n    return (\n      <Select\n        name={this.props.name}\n        isSearchable={isSearchable}\n        options={this.props.options}\n        defaultValue={this.props.defaultValue}\n        onChange={ v => this.props.onChange(v.value) }\n        components={{\n            Menu: this.state.CustomMenu,\n            Option: this.state.CustomOption,\n            Control: this.state.ControlComponent,\n            Input: this.state.CustomInputContainer,\n            SingleValue: this.state.CustomValueContainer,\n            IndicatorSeparator: this.state.CustomIndicatorSeparator\n        }}\n      />\n    );\n  }\n}\n\nexport default GenericSelector;\n","import baseColors, { blue, green, yellow, red } from \"./colors\";\nimport { tint, shade } from \"polished\";\n\n// theme.js\nexport default {\n  breakpoints: [\"52em\", \"64em\"],\n  // breakpoints: ['40em', '52em', '64em', '80em'],\n  fontSizes: [12, 14, 16, 18, 21, 32, 38, 48, 54, 64, 72, 84],\n  fontWeights: [0, 300, 400, 600, 700, 800],\n  letterSpacings: [0, 1, 2, 4, 8],\n  lineHeights: {\n    solid: 1,\n    title: 1.25,\n    copy: 1.5\n  },\n  fonts: {\n    serif: '\"georgia regular\", athelas, times, serif',\n    sansSerif: '\"Inter\", -apple-system, sans-serif',\n    counter: '\"Roboto Mono\", Arial, -apple-system, sans-serif'\n  },\n  space: [0, 4, 8, 16, 32, 64, 128, 256],\n  radii: [\"0\", \"4px\", \"8px\", \"16px\", \"2rem\"],\n  widths: [0, 16, 32, 64, 128, 256, 550],\n  minWidths: [0, 16, 32, 64, 128, 256],\n  maxWidths: [0, 16, 32, 64, 128, 256, 512, 768, 1024, 1536],\n  heights: [0, 16, 32, 64, 128, 256],\n  minHeights: [0, 16, 32, 64, 128, 256],\n  maxHeights: [0, 16, 32, 64, 128, 256],\n  borders: [0, \"1px solid #eee\", \"1px solid #b6c2ff\"],\n  borderWidths: [\"0\", \"1px\", \"2px\", \"4px\"],\n  shadows: [\n    \"0\",\n    \"0px 2px 4px rgba(0, 0, 0, 0.1)\",\n    \"0 7px 14px rgba(50,50,93,.1)\",\n    \"1px 1px 0px rgba(0,0,0,0.2)\",\n    \"0px 0px 16px 2px rgba(0,54,255,0.3)\"\n  ],\n  opacity: {\n    disabled: 0.4\n  },\n  colors: {\n    primary: blue.base,\n    \"gradient-bg\": \"linear-gradient(120deg, #f6d365 0%, #ea0d73 100%)\",\n    \"primary-light\": blue.light[1],\n    \"primary-dark\": blue.dark[1],\n    bgBlue: \"#0030e0\",\n    blue: \"#0036ff\",\n    tick: \"#00b84a\",\n    \"dark-blue\": \"#00219a\",\n    skyBlue: \"#00abfe\",\n    lightBlue: \"#79f4e1\",\n    copyColor: \"#3F3D4B\",\n    subColor: \"#a7a7a7\",\n    black: baseColors.black,\n    \"near-black\": \"#111\",\n    \"dark-gray\": \"#4e4e4e\",\n    \"mid-gray\": \"#999\",\n    gray: \" #e0e0e0\",\n    grey: \"#CCC\",\n    silver: \"#999\",\n    \"light-silver\": \"#aaa\",\n    \"moon-gray\": \"#ccc\",\n    \"light-gray\": \"#eee\",\n    \"near-white\": \"#f4f4f4\",\n\n    white: \"#fff\",\n    transparent: \"transparent\",\n    /*\n    NEW COLORS\n    */\n    newblue: \"#2B65D9\",\n    alert: \"#ff9900\",\n    arrowActive: \"#4f4f4f\",\n    arrowInactive: \"#d8d8d8\",\n    selectBgFocused: \"#fbfbfb\",\n    selectBg: \"#ffffff\",\n    backButtonBg: \"#ffffff\",\n    lineChartStroke: \"#dbdbdb\",\n    wrongNetworkBannerBg: \"#ffffff\",\n    dashboardBg: \"#f9fafd\",\n    statValue: \"#959595\",\n    boxBorder: \"#eeeeee\",\n    cellTitle: \"#a3a4a5\",\n    cellText: \"#a6a6a6\",\n    divider: \"#d8d8d8\",\n    divider2: \"#EBEBEB\",\n    counter: \"#5d5d5d\",\n    redeem: \"#00a9fe\",\n    link: \"#0036ff\",\n    deposit: \"#0239ff\",\n    migrate: \"#00a9fe\",\n    legend: \"#c9c9c9\",\n    menuBg: \"#fff\",\n    menuHover: \"#f3f6ff\",\n    cardBg: \"#fff\",\n    cardBgContrast:\"#fafafa\",\n    flashColor: \"#3f4e9a\",\n    menuRightBorder: \"#eee\",\n    cardHoverShadow: \"0px 0px 0px 1px rgba(0, 54, 255, 0.3)\",\n    cardBgHover: \"#f7f8ff\",\n    cardBorder: \"#eee\",\n    pageActive: \"#4f4f4f\",\n    pageInactive: \"#d8d8d8\",\n    transactions: {\n      action: {\n        send: \"#10a0dd\",\n        swap: \"#3d53c0\",\n        boost: \"#ffff00\",\n        redeem: \"#10a0dd\",\n        swapout: \"#10a0dd\",\n        deposit: \"#3d53c0\",\n        curvein: \"#10a0dd\",\n        receive: \"#3d53c0\",\n        migrate: \"#3d53c0\",\n        default: \"#4f4f4f\",\n        curveout: \"#3d53c0\",\n        withdraw: \"#10a0dd\",\n        curvedepositin: \"#10a0dd\",\n        curvedepositout: \"#3d53c0\"\n      },\n      actionBg: {\n        send: \"#ceeff6\",\n        swap: \"#ced6ff\",\n        boost: \"#ff7979\",\n        redeem: \"#ceeff6\",\n        swapout: \"#ceeff6\",\n        deposit: \"#ced6ff\",\n        curvein: \"#ceeff6\",\n        default: \"#dadada\",\n        receive: \"#ced6ff\",\n        migrate: \"#ced6ff\",\n        withdraw: \"#ceeff6\",\n        curveout: \"#ced6ff\",\n        curvedepositin: \"#ceeff6\",\n        curvedepositout: \"#ced6ff\"\n      },\n      status: {\n        completed: \"#00b84a\",\n        pending: \"#a5a5a5\",\n        failed: \"#fa0000\"\n      }\n    },\n    blacks: [\n      \"rgba(0,0,0,.0125)\",\n      \"rgba(0,0,0,.025)\",\n      \"rgba(0,0,0,.05)\",\n      \"rgba(0,0,0,.1)\",\n      \"rgba(0,0,0,.2)\",\n      \"rgba(0,0,0,.3)\",\n      \"rgba(0,0,0,.4)\",\n      \"rgba(0,0,0,.5)\",\n      \"rgba(0,0,0,.6)\",\n      \"rgba(0,0,0,.7)\",\n      \"rgba(0,0,0,.8)\",\n      \"rgba(0,0,0,.9)\"\n    ],\n    whites: [\n      \"rgba(255,255,255,.0125)\",\n      \"rgba(255,255,255,.025)\",\n      \"rgba(255,255,255,.05)\",\n      \"rgba(255,255,255,.1)\",\n      \"rgba(255,255,255,.2)\",\n      \"rgba(255,255,255,.3)\",\n      \"rgba(255,255,255,.4)\",\n      \"rgba(255,255,255,.5)\",\n      \"rgba(255,255,255,.6)\",\n      \"rgba(255,255,255,.7)\",\n      \"rgba(255,255,255,.8)\",\n      \"rgba(255,255,255,.9)\"\n    ]\n  },\n  zIndices: [0, 9, 99, 999, 9999],\n  messageStyle: {\n    base: {\n      color: shade(0.4, \"#AAA\"),\n      backgroundColor: tint(0.9, \"#AAA\"),\n      borderColor: \"#AAA\"\n    },\n    success: {\n      color: shade(0.4, green.base),\n      backgroundColor: tint(0.9, green.base),\n      borderColor: green.base\n    },\n    warning: {\n      color: shade(0.4, yellow.base),\n      backgroundColor: tint(0.9, yellow.base),\n      borderColor: yellow.base\n    },\n    danger: {\n      color: shade(0.4, red.base),\n      backgroundColor: tint(0.9, red.base),\n      borderColor: red.base\n    },\n    info: {\n      color: shade(0.4, blue.base),\n      backgroundColor: \"#f3f6ff\",\n      borderColor: \"#b6c2ff\"\n    }\n  },\n  buttons: {\n    primary: {\n      color: blue.text,\n      backgroundColor: blue.base,\n      // use css custom props\n      \"--main-color\": blue.base,\n      \"--contrast-color\": blue.text\n    },\n    normal: {\n      color: baseColors.black,\n      \"--contrast-color\": baseColors.black\n    },\n    success: {\n      \"--main-color\": green.base,\n      \"--contrast-color\": green.text\n    },\n    danger: {\n      \"--main-color\": red.base,\n      \"--contrast-color\": red.text\n    }\n  },\n  buttonSizes: {\n    small: {\n      fontSize: \"0.75rem\",\n      height: \"2rem\",\n      minWidth: \"2rem\",\n      padding: \"0 1rem\"\n    },\n    medium: {\n      fontSize: \"1rem\",\n      height: \"3rem\",\n      minWidth: \"3rem\"\n    },\n    large: {\n      fontSize: \"1.5rem\",\n      height: \"4rem\",\n      minWidth: \"4rem\",\n      borderRadius: \"2rem\"\n    }\n  }\n};\n","import React, { Component } from 'react';\nimport {\n  Button,\n  Flex,\n  Box,\n  Text\n} from \"rimble-ui\";\nimport styles from './TwitterShareButton.module.scss';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass TwitterShareButton extends Component {\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n  }\n\n  componentDidMount() {\n    this.loadUtils();\n  }\n\n  componentDidUpdate() {\n    this.loadUtils();\n  }\n\n  share = () => {\n    // Send Google Analytics event\n    this.functionsUtil.sendGoogleAnalyticsEvent({\n      eventCategory: 'Share',\n      eventAction: 'twitter',\n      eventLabel: this.props.parent\n    });\n\n    const w = Math.min(window.innerWidth,600);\n    const h = 350;\n    const x = (window.innerWidth-w)/2;\n    const y = 150;\n    window.open(`https://twitter.com/intent/tweet?text=${this.props.tweet}`,\"_blank\",`toolbar=yes,scrollbars=no,resizable=no,top=${y},left=${x},width=${w},height=${h}`);\n  }\n\n  render() {\n    return (\n        <Button\n          borderRadius={1}\n          mainColor={'#2aa6f2'}\n          contrastColor={'white'}\n          onClick={ e => { this.share() } }\n        >\n          <Flex flexDirection={'row'} alignItems={'center'} justifyContent={'center'}>\n            <Box className={styles.twitterIcon} />\n            <Text color={'white'} fontWeight={3} ml={2}>{ this.props.text ? this.props.text : 'Tweet' }</Text>\n          </Flex>\n        </Button>\n    );\n  }\n}\n\nexport default TwitterShareButton;\n","import React from \"react\";\nimport {\n  Text,\n  Modal,\n  Link,\n  Flex\n} from \"rimble-ui\";\nimport ModalCard from './ModalCard';\nimport TwitterShareButton from '../../TwitterShareButton/TwitterShareButton.js';\nimport Confetti from 'react-confetti/dist/react-confetti';\nimport FunctionsUtil from '../../utilities/FunctionsUtil';\n\nclass ShareModal extends React.Component {\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n  }\n\n  componentDidMount() {\n    this.loadUtils();\n  }\n\n  componentDidUpdate() {\n    this.loadUtils();\n  }\n\n  closeModal = async (action) => {\n    const globalConfigs = this.functionsUtil.getGlobalConfigs();\n    // Send Google Analytics event\n    if (globalConfigs.analytics.google.events.enabled){\n      await this.functionsUtil.sendGoogleAnalyticsEvent({\n        eventCategory: 'Share',\n        eventAction: action,\n        eventLabel: 'ShareModal'\n      });\n      this.props.closeModal();\n    } else {\n      this.props.closeModal();\n    }\n  }\n\n  render() {\n    const tweet = window.escape(this.props.tweet);\n    const customText = {__html: this.props.text};\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.props.closeModal}>\n          {\n            this.props.confettiEnabled &&\n            <Confetti\n              style={{ position: 'fixed','zIndex':9999 }}\n              run={true}\n              recycle={true}\n              width={window.innerWidth}\n              height={window.innerHeight}\n            />\n          }\n          <ModalCard.Header title={this.props.title} icon={this.props.icon}></ModalCard.Header>\n          <ModalCard.Body>\n            <Flex my={3} width={1} flexDirection={'column'} mx={'auto'}>\n              <Text color={'dark-gray'} textAlign={'center'} fontSize={3} mb={2} dangerouslySetInnerHTML={customText}></Text>\n            </Flex>\n            <Flex mb={3} flexDirection={'column'} alignItems={'center'} justifyContent={'center'}>\n              <TwitterShareButton tweet={tweet} text={'Share now'} parent={'ShareModal'} />\n              <Link mt={2} onClick={ e => this.closeModal('continue_without_sharing') } hoverColor={'blue'}>continue without sharing</Link>\n            </Flex>\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default ShareModal;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"bg\":\"ModalCard_bg__3ocwQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"twitterIcon\":\"TwitterShareButton_twitterIcon__2QCmn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tooltip\":\"TableCellHeader_tooltip__3xM3k\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"radioBtn\":\"TransactionListFilters_radioBtn__1vgHa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Web3ConnectionButtons_button__1Wov0\"};","import React, { Component } from 'react';\nimport { Icon, Text, Flex } from \"rimble-ui\";\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass IconBox extends Component {\n\n  render() {\n    const cardProps = Object.assign({\n      p:3\n    },this.props.cardProps);\n    return (\n      <DashboardCard\n        cardProps={cardProps}\n        isActive={this.props.isActive}\n        isVisible={this.props.isVisible}\n        isInteractive={this.props.isInteractive}\n      >\n        <Flex\n          alignItems={'center'}\n          flexDirection={'column'}\n        >\n          <Icon\n            size={'1.8em'}\n            color={'cellText'}\n            name={this.props.icon ? this.props.icon : 'InfoOutline'}\n            {...this.props.iconProps}\n          />\n          {\n            this.props.text && \n              <Text\n                mt={1}\n                fontSize={2}\n                color={'cellText'}\n                textAlign={'center'}\n                dangerouslySetInnerHTML={{\n                  __html:this.props.text\n                }}\n                {...this.props.textProps}\n              />\n          }\n          {\n            this.props.children\n          }\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default IconBox;\n","/*\nTheming: https://github.com/plouc/nivo/issues/308\n*/\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\n\nclass GenericChart extends Component {\n  state = {\n    width:null,\n    height:null\n  };\n\n  componentUnmounted = false;\n\n  componentWillMount() {\n    window.addEventListener('resize', this.handleWindowSizeChange.bind(this));\n  }\n\n  componentWillUnmount() {\n    this.componentUnmounted = true;\n    window.removeEventListener('resize', this.handleWindowSizeChange);\n  }\n\n  componentDidMount(){\n    this.handleWindowSizeChange();\n  }\n\n  componentDidUpdate(prevProps){\n    if (prevProps.isMobile !== this.props.isMobile){\n      this.handleWindowSizeChange();\n    }\n  }\n\n  handleWindowSizeChange(){\n    if (this.componentUnmounted){\n      return false;\n    }\n\n    const newState = {...this.state};\n\n    if (this.props.parentId){\n      const chartContainer = document.getElementById(this.props.parentId);\n      if (chartContainer){\n        const chartWidth = parseFloat(chartContainer.offsetWidth)>0 ? chartContainer.offsetWidth : 0;\n\n        if (chartWidth && chartWidth !== newState.width){\n          newState.width = chartWidth;\n        }\n      }\n    }\n\n    if (!newState.width && this.props.width && this.props.width !== newState.width) {\n      newState.width = this.props.width;\n    }\n\n    if (this.props.parentIdHeight){\n      const chartContainerH = document.getElementById(this.props.parentIdHeight);\n      if (chartContainerH){\n        const chartHeight = parseFloat(chartContainerH.offsetWidth)>0 ? chartContainerH.offsetWidth : 0;\n        if (chartHeight && chartHeight !== newState.height){\n          newState.height = chartHeight;\n          if (!newState.width){\n            newState.width = chartHeight;\n          }\n        }\n      }\n    }\n\n    if (!newState.height && this.props.height && this.props.height !== newState.height) {\n      newState.height = this.props.height;\n    }\n\n    newState.height = newState.height || newState.width;\n\n    if (Object.keys(newState).length>0){\n      this.setState(newState);\n    }\n  };\n\n  render() {\n    const ChartType = this.props.type;\n\n    const height = this.state.height && !isNaN(this.state.height) ? parseInt(this.state.height) : 350;\n    const width = this.state.width && !isNaN(this.state.width) ? parseInt(this.state.width) : 0;\n\n    let chartProps = Object.assign({},this.props);\n    chartProps = {\n      ...chartProps,\n      height,\n      width\n    }\n\n    return chartProps.showLoader && (!chartProps.data || !width || !height) ? (\n      <FlexLoader\n        flexProps={{\n          flexDirection:'row',\n          minHeight:height\n        }}\n        loaderProps={ this.props.loaderProps ? this.props.loaderProps : {\n          size:'30px'\n        }}\n        textProps={{\n          ml:2\n        }}\n        text={ this.props.loaderText !== undefined ? this.props.loaderText : 'Loading graph data...'}\n      />\n    ) : this.props.data && (\n      <ChartType\n        {...chartProps}\n      />\n    )\n  }\n}\n\nexport default GenericChart;","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport AssetField from '../AssetField/AssetField';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericSelector from '../GenericSelector/GenericSelector';\n\nclass AssetSelector extends Component {\n\n  state = {\n    options:null,\n    defaultValue:null,\n    CustomOptionValue:null,\n    CustomValueContainer:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  loadComponents(){\n    const options = Object.keys(this.props.availableTokens).map(token => {\n      const tokenConfig = this.props.availableTokens[token];\n      return {\n        value:token,\n        label:token,\n        tokenConfig\n      };\n    });\n\n    const defaultValue = this.props.selectedToken ? options.find(v => (v.value.toUpperCase() === this.props.selectedToken.toUpperCase())) : null;\n\n    const CustomOptionValue = props => {\n      const token = props.value;\n      const tokenConfig = props.data.tokenConfig;\n\n      return (\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'row'}\n          justifyContent={'space-between'}\n        >\n          <Flex\n            alignItems={'center'}\n          >\n            <AssetField\n              token={token}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  width:'2em',\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={token}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n          {\n            this.state.props.showCustomField ? (\n              <Flex\n                alignItems={'center'}\n                justifyContent={'flex-end'}\n              >\n                <AssetField\n                  token={token}\n                  {...this.state.props}\n                  fieldInfo={{\n                    name:this.state.props.showCustomField,\n                    props:{\n                      fontSize:[1,2],\n                      fontWeight:500,\n                      color:'cellText'\n                    }\n                  }}\n                  tokenConfig={tokenConfig}\n                  account={this.state.props.account}\n                  cachedData={this.props.cachedData}\n                  setCachedData={this.props.setCachedData}\n                />\n              </Flex>\n            ) : this.props.showBalance &&\n              <Flex\n                alignItems={'center'}\n                justifyContent={'flex-end'}\n              >\n                <AssetField\n                  token={token}\n                  {...this.state.props}\n                  fieldInfo={{\n                    name:'tokenBalance',\n                    props:{\n                      fontSize:[1,2],\n                      fontWeight:500,\n                      color:'cellText'\n                    }\n                  }}\n                  tokenConfig={tokenConfig}\n                  account={this.state.props.account}\n                  cachedData={this.props.cachedData}\n                  setCachedData={this.props.setCachedData}\n                />\n              </Flex>\n          }\n        </Flex>\n      );\n    }\n\n    const CustomValueContainer = props => {\n      const options = props.selectProps.options;\n      const selectProps = options.indexOf(props.selectProps.value) !== -1 ? props.selectProps.value : defaultValue;\n\n      if (!selectProps){\n        return null;\n      }\n\n      const token = selectProps.value;\n      const tokenConfig = selectProps.tokenConfig;\n      return (\n        <Flex\n          style={{\n            flex:'1'\n          }}\n          justifyContent={'space-between'}\n          {...props.innerProps}\n        >\n          <Flex\n            p={0}\n            width={1}\n            {...props.innerProps}\n            alignItems={'center'}\n            flexDirection={'row'}\n            style={{cursor:'pointer'}}\n            justifyContent={'flex-start'}\n          >\n            <AssetField\n              token={token}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={token}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n\n          {\n            this.props.showBalance &&\n              <Flex\n                alignItems={'center'}\n                justifyContent={'flex-end'}\n              >\n                <AssetField\n                  token={token}\n                  {...this.state.props}\n                  fieldInfo={{\n                    name:'tokenBalance',\n                    props:{\n                      fontSize:[1,2],\n                      fontWeight:500,\n                      color:'cellText'\n                    }\n                  }}\n                  tokenConfig={tokenConfig}\n                  account={this.state.props.account}\n                  cachedData={this.props.cachedData}\n                  setCachedData={this.props.setCachedData}\n                />\n              </Flex>\n          }\n        </Flex>\n      );\n    }\n\n    this.setState({\n      options,\n      defaultValue,\n      CustomOptionValue,\n      CustomValueContainer\n    });\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadComponents();\n\n    this.setState({\n      props:this.props\n    });\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const selectedTokenChanged = prevProps.selectedToken !== this.props.selectedToken;\n    const availableTokensChanged = JSON.stringify(Object.keys(prevProps.availableTokens)) !== JSON.stringify(Object.keys(this.props.availableTokens));\n    if (availableTokensChanged || selectedTokenChanged){\n      this.loadComponents();\n    }\n  }\n\n  render() {\n    if (!this.state.options || !this.state.defaultValue || !this.state.CustomOptionValue || !this.state.CustomValueContainer || !this.props.availableTokens || !Object.keys(this.props.availableTokens).length){\n      return null;\n    }\n\n    return (\n      <GenericSelector\n        {...this.props}\n        name={'assets'}\n        options={this.state.options}\n        innerProps={this.props.innerProps}\n        isSearchable={this.props.isSearchable}\n        defaultValue={this.state.defaultValue}\n        selectedToken={this.props.selectedToken}\n        CustomOptionValue={this.state.CustomOptionValue}\n        CustomValueContainer={this.state.CustomValueContainer}\n        onChange={ this.props.onChange ? this.props.onChange : this.props.changeToken}\n      />\n    );\n  }\n}\n\nexport default AssetSelector;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"gradientButton\":\"Header_gradientButton__2mrQl\",\"empty\":\"Header_empty__3fhiX\",\"select\":\"Header_select__27Xyx\",\"selectDark\":\"Header_selectDark__EHAAP\",\"input\":\"Header_input__3dr8P\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"headerContainer\":\"Tos_headerContainer__23W_f\",\"headerBgFiller\":\"Tos_headerBgFiller__36Nfk\",\"bgContainer\":\"Tos_bgContainer__rX7uJ\",\"list\":\"Tos_list__3bMLG\",\"textContainer\":\"Tos_textContainer__3hUuq\"};","import theme from '../theme';\nimport React, { Component } from 'react';\nimport SmartNumber from '../SmartNumber/SmartNumber';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport ShortHash from \"../utilities/components/ShortHash\";\nimport { Flex, Text, Icon, Link, Image } from \"rimble-ui\";\n\nclass TransactionField extends Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n    this.loadField();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const hashChanged = prevProps.hash !== this.props.hash;\n    const accountChanged = prevProps.account !== this.props.account;\n    const fieldChanged = prevProps.fieldInfo.name !== this.props.fieldInfo.name;\n    if (fieldChanged || hashChanged || accountChanged){\n      this.loadField();\n    }\n  }\n\n  async loadField(){\n    const fieldInfo = this.props.fieldInfo;\n    if (this.props.hash && this.props.account){\n      switch (fieldInfo.name){\n        case 'icon':\n        break;\n        case 'hash':\n          \n        break;\n        case 'action':\n          \n        break;\n        case 'date':\n        break;\n        case 'status':\n        break;\n        case 'amount':\n        break;\n        case 'asset':\n        break;\n        case 'custom':\n        break;\n        default:\n        break;\n      }\n    }\n  }\n\n  render(){\n    let icon = null;\n    let color = null;\n    let output = null;\n    const fieldInfo = this.props.fieldInfo;\n    const transaction = this.props.transaction;\n    let bgColor = theme.colors.transactions.actionBg.default;\n\n    const fieldProps = {\n      fontWeight:3,\n      fontSize:[0,2],\n      color:'cellText',\n      style:{\n        maxWidth:'100%',\n        overflow: 'hidden',\n        textOverflow: 'ellipsis'\n      },\n      flexProps:{\n        justifyContent:'flex-start'\n      }\n    };\n\n    // Replace props\n    if (fieldInfo.props && Object.keys(fieldInfo.props).length){\n      Object.keys(fieldInfo.props).forEach(p => {\n        fieldProps[p] = fieldInfo.props[p];\n      });\n    }\n\n    switch (fieldInfo.name){\n      case 'icon':\n        if (transaction.action){\n          color = theme.colors.transactions.action[transaction.action.toLowerCase()] ? theme.colors.transactions.action[transaction.action.toLowerCase()] : color;\n          bgColor = theme.colors.transactions.actionBg[transaction.action.toLowerCase()] ? theme.colors.transactions.actionBg[transaction.action.toLowerCase()] : bgColor;\n        }\n        switch (transaction.action.toLowerCase()) {\n          case 'deposit':\n          case 'curveout':\n          case 'curvezapout':\n          case 'curvedepositout':\n            icon = \"ArrowDownward\";\n          break;\n          case 'boost':\n            icon = \"TrendingUp\";\n          break;\n          case 'redeem':\n          case 'curvein':\n          case 'curvezapin':\n          case 'curvedepositin':\n            icon = \"ArrowUpward\";\n          break;\n          case 'send':\n            icon = \"Send\";\n          break;\n          case 'receive':\n            icon = \"Redo\";\n          break;\n          case 'migrate':\n            // icon = \"Sync\";\n            icon = \"Repeat\";\n          break;\n          case 'swap':\n            icon = \"SwapHoriz\";\n          break;\n          case 'swapout':\n            icon = \"SwapHoriz\";\n          break;\n          case 'withdraw':\n            icon = \"ArrowUpward\";\n          break;\n          default:\n            icon = \"Refresh\";\n          break;\n        }\n        output = (\n          <Flex\n            p={'5px'}\n            borderRadius={'50%'}\n            {...fieldProps}\n            alignItems={'center'}\n            backgroundColor={bgColor}\n            justifyContent={'center'}\n          >\n            <Icon\n              name={icon}\n              color={color}\n              align={'center'}\n              size={this.props.isMobile ? '1em' : '1.4em'}\n            />\n          </Flex>\n        );\n      break;\n      case 'hash':\n        if (transaction.hash){\n          output = (\n            <Link\n              target={'_blank'}\n              rel={'nofollow noopener noreferrer'}\n              href={`https://etherscan.io/tx/${transaction.hash}`}\n            >\n              <ShortHash\n                fontSize={1}\n                color={'white'}\n                {...fieldProps}\n                resolveAddress={false}\n                hash={transaction.hash}\n              />\n            </Link>\n          );\n        }\n      break;\n      case 'action':\n        let action = transaction.action;\n        switch (transaction.action) {\n          case 'Swap':\n            action = \"Swap In\";\n          break;\n          case 'SwapOut':\n            action = \"Swap Out\";\n          break;\n          default:\n          break;\n        }\n        output = (\n          <Text {...fieldProps}>{action.toUpperCase()}</Text>\n        );\n      break;\n      case 'date':\n        const formattedDate = transaction.momentDate.format('DD MMM, YYYY');\n        output = (\n          <Text {...fieldProps}>{formattedDate}</Text>\n        );\n      break;\n      case 'statusIcon':\n        color = theme.colors.transactions.status[transaction.status.toLowerCase()];\n        switch (transaction.status) {\n          case 'Completed':\n            icon = \"Done\";\n          break;\n          case 'Pending':\n            icon = \"Timelapse\";\n          break;\n          case 'Failed':\n            icon = \"ErrorOutline\";\n          break;\n          default:\n          break;\n        }\n        output = (\n          <Flex\n            p={[0,'1px']}\n            borderRadius={'50%'}\n            {...fieldProps}\n            alignItems={'center'}\n            width={['24px','26px']}\n            height={['24px','26px']}\n            justifyContent={'center'}\n            border={ this.props.isMobile ? `1px solid ${color}` : `2px solid ${color}` }\n          >\n            <Icon\n              name={icon}\n              color={color}\n              align={'center'}\n              size={ this.props.isMobile ? '1em' : '1.2em'}\n            />\n          </Flex>\n        );\n      break;\n      case 'status':\n        output = (\n          <Text {...fieldProps}>{transaction.status}</Text>\n        );\n      break;\n      case 'amount':\n        output = (\n          <SmartNumber {...fieldProps} number={transaction.amount} />\n        );\n      break;\n      case 'tokenIcon':\n        const tokenSymbol = transaction.tokenSymbol.toUpperCase();\n        const tokenConfig = this.functionsUtil.getGlobalConfig(['stats','tokens',tokenSymbol]);\n        const iconSrc = tokenConfig && tokenConfig.icon ? tokenConfig.icon : `images/tokens/${tokenSymbol}.svg`;\n        output = (\n          <Image src={iconSrc} {...fieldProps} />\n        );\n      break;\n      case 'tokenName':\n        output = (\n          <Text {...fieldProps}>{transaction.tokenSymbol.toUpperCase()}</Text>\n        );\n      break;\n      case 'custom':\n        let CustomComponent = null;\n        let customValue = this.functionsUtil.getArrayPath(fieldInfo.path,this.props.transaction);\n        switch (fieldInfo.type){\n          case 'number':\n            customValue = this.functionsUtil.BNify(customValue).toString();\n            CustomComponent = SmartNumber;\n            fieldProps.number = customValue;\n            customValue = null;\n          break;\n          case 'image':\n            CustomComponent = Image;\n            fieldProps.src = customValue;\n            customValue = null;\n          break;\n          case 'icon':\n            CustomComponent = Icon;\n            fieldProps.name = customValue;\n            customValue = null;\n          break;\n          default:\n            CustomComponent = Text;\n          break;\n        }\n        output = customValue ? (\n          <CustomComponent {...fieldProps}>{customValue}</CustomComponent>\n        ) : <CustomComponent {...fieldProps} />\n      break;\n      default:\n      break;\n    }\n    return output;\n  }\n}\n\nexport default TransactionField;\n","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\n\nclass ExecuteTransaction extends Component {\n\n  state = {\n    txStatus:null,\n    processing:{\n      txHash:null,\n      loading:false\n    }\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  async cancelTransaction(){\n    this.setState({\n      processing: {\n        txHash:null,\n        loading:false\n      }\n    });\n  }\n\n  async execute(){\n\n    const callback = (tx,error) => {\n\n      console.log('callback',tx,error);\n\n      // Send Google Analytics event\n      const eventData = {\n        eventCategory: 'Transaction',\n        eventLabel: this.props.methodName,\n        eventAction: this.props.contractName\n      };\n\n      if (error){\n        eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n      }\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n      const txSucceeded = tx && tx.status === 'success';\n      if (txSucceeded){\n        if (typeof this.props.callback === 'function'){\n          this.props.callback(tx);\n        }\n      }\n\n      this.setState({\n        processing: {\n          txHash:null,\n          loading:false\n        },\n        txStatus:tx ? tx.status : null\n      });\n    };\n\n    const callbackReceipt = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        txStatus:'processing',\n        processing: {\n          ...prevState.processing,\n          txHash\n        }\n      }));\n    };\n\n    this.setState((prevState) => ({\n      txStatus:'loading',\n      processing: {\n        ...prevState.processing,\n        loading:true\n      }\n    }));\n\n    let params = this.props.params;\n    if (typeof this.props.getTransactionParams === 'function'){\n      params = this.props.getTransactionParams();\n    } else if (typeof this.props.getTransactionParamsAsync === 'function'){\n      params = await this.props.getTransactionParamsAsync();\n    } else if (typeof this.props.transactionParams === 'object'){\n      params = this.props.transactionParams;\n    }\n\n    if (!params){\n      this.setState((prevState) => ({\n        txStatus:null,\n        processing: {\n          ...prevState.processing,\n          loading:false\n        }\n      }));\n      return false;\n    }\n\n    // console.log('ExecuteTransaction',this.props.contractName,this.props.methodName,this.props.getTransactionParams,params);\n\n    if (this.props.sendRawTransaction){\n      this.functionsUtil.contractMethodSendWrapper(this.props.contractName,this.props.methodName,params,callback,callbackReceipt,null,true,params);\n    } else {\n      this.functionsUtil.contractMethodSendWrapper(this.props.contractName,this.props.methodName,params,callback,callbackReceipt);\n    }\n  }\n\n  render() {\n    const ExecuteComponent = this.props.Component;\n    return (\n      <Flex\n        {...this.props.parentProps}\n      >\n        {\n          this.state.txStatus === 'success' && this.props.children ?\n            this.props.children\n          : this.state.processing && this.state.processing.loading ? (\n            <TxProgressBar\n              web3={this.props.web3}\n              network={this.props.network}\n              {...this.props.progressBarProps}\n              hash={this.state.processing.txHash}\n              cancelTransaction={this.cancelTransaction.bind(this)}\n              endMessage={`Finalizing ${this.props.action} request...`}\n              waitText={`${this.functionsUtil.capitalize(this.props.action)} estimated in`}\n            />\n          ) : (\n            <ExecuteComponent\n              onClick={this.execute.bind(this)}\n              {...this.props.componentProps}\n            >\n              {this.props.componentProps.value}\n            </ExecuteComponent>\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default ExecuteTransaction;","import FunctionsUtil from './FunctionsUtil';\n\nclass IdleGovToken{\n  // Attributes\n  props = {};\n  tokenName = null;\n  tokenConfig = null;\n  functionsUtil = null;\n\n  // Constructor\n  constructor(props){\n    this.setProps(props);\n  }\n\n  // Methods\n  setProps = props => {\n    this.props = props;\n\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n\n    this.tokenName = this.functionsUtil.getGlobalConfig(['governance','props','tokenName']);\n    this.tokenConfig = this.functionsUtil.getGlobalConfig(['govTokens',this.tokenName]);\n  }\n\n  getBalance = async () => {\n    let balance = await this.functionsUtil.getTokenBalance(this.tokenName,this.props.account);\n    if (!balance || this.functionsUtil.BNify(balance).isNaN()){\n      balance = this.functionsUtil.BNify(0);\n    }\n    return balance;\n  }\n\n  claimRewards = async (callback,callbackReceipt) => {\n    return this.functionsUtil.contractMethodSendWrapper('EarlyRewards', 'claim', [], callback, callbackReceipt);\n  }\n\n  getPriorVotes = async (account=null) => {\n    account = account ? account : this.props.account;\n    let priorVotes = await this.functionsUtil.genericContractCall(this.tokenName,'getPriorVotes',[account]);\n    if (priorVotes){\n      return this.functionsUtil.BNify(priorVotes);\n    }\n    return null;\n  }\n\n  refreshIdleSpeed = async () => {\n    return this.functionsUtil.genericContractCall('IdleController','refreshIdleSpeeds');\n  }\n\n  getUnclaimedTokens = async () => {\n    /*\n    let rewards =  await this.functionsUtil.genericContractCall('EarlyRewards','rewards',[this.props.account]);\n    if (rewards){\n      return this.functionsUtil.fixTokenDecimals(rewards,this.tokenConfig.decimals);\n    }\n    */\n    return this.functionsUtil.BNify(0);\n  }\n\n  getAPR = async (token,tokenConfig,conversionRate=null) => {\n    const IDLETokenConfig = this.functionsUtil.getGlobalConfig(['govTokens',this.tokenName]);\n    if (!IDLETokenConfig.enabled){\n      return false;\n    }\n\n    const cachedDataKey = `getIdleAPR_${tokenConfig.idle.token}_${conversionRate}`;\n    /*\n    const cachedData = this.functionsUtil.getCachedData(cachedDataKey);\n    if (cachedData !== null && !this.functionsUtil.BNify(cachedData).isNaN()){\n      return cachedData;\n    }\n    */\n\n    let APR = this.functionsUtil.BNify(0);\n\n    const [\n      idleDistribution,\n      tokenAllocation\n    ] = await Promise.all([\n      this.getDistribution(tokenConfig),\n      this.functionsUtil.getTokenAllocation(tokenConfig,false,false)\n    ]);\n\n    if (idleDistribution && tokenAllocation){\n\n      const DAITokenConfig = this.functionsUtil.getGlobalConfig(['stats','tokens','DAI']);\n        \n      // Get IDLE oconversion rate\n      if (!conversionRate){\n        try {\n          conversionRate = await this.functionsUtil.getUniswapConversionRate(DAITokenConfig,IDLETokenConfig);\n        } catch (error) {\n\n        }\n        if (!conversionRate || conversionRate.isNaN()){\n          conversionRate = this.functionsUtil.BNify(0);\n        }\n      }\n\n      if (!conversionRate || this.functionsUtil.BNify(conversionRate).lte(0)){\n        return this.functionsUtil.BNify(0);\n      }\n\n      const tokenPool = await this.functionsUtil.convertTokenBalance(tokenAllocation.totalAllocationWithUnlent,token,tokenConfig);\n\n      const idleDistributedPerYearUSD = this.functionsUtil.BNify(conversionRate).times(idleDistribution);\n      APR = idleDistributedPerYearUSD.div(tokenPool).times(100);\n\n      // console.log(tokenConfig.idle.token,idleDistributedPerYearUSD.toFixed(5),conversionRate.toFixed(5),tokenPool.toFixed(5),APR.toFixed(5));\n\n      return this.functionsUtil.setCachedData(cachedDataKey,APR);\n    }\n\n    return APR;\n  }\n\n  // Get IDLE distribution speed\n  getSpeed = async (idleTokenAddress) => {\n\n    const cachedDataKey = `getIdleSpeed_${idleTokenAddress}`;\n    const cachedData = this.functionsUtil.getCachedDataWithLocalStorage(cachedDataKey);\n\n    if (cachedData !== null && !this.functionsUtil.BNify(cachedData).isNaN()){\n      return this.functionsUtil.BNify(cachedData);\n    }\n\n    let idleSpeeds = await this.functionsUtil.genericContractCall('IdleController','idleSpeeds',[idleTokenAddress]);\n\n    if (idleSpeeds && !this.functionsUtil.BNify(idleSpeeds).isNaN()){\n      idleSpeeds = this.functionsUtil.BNify(idleSpeeds);\n      return this.functionsUtil.setCachedDataWithLocalStorage(cachedDataKey,idleSpeeds,1800);\n    }\n    return null;\n  }\n\n  getDistribution = async (tokenConfig) => {\n\n    const cachedDataKey = `getIdleDistribution_${tokenConfig.idle.token}`;\n    const cachedData = this.functionsUtil.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData !== null && !this.functionsUtil.BNify(cachedData).isNaN()){\n      return this.functionsUtil.BNify(cachedData);\n    }\n\n    // Get IDLE distribution speed and Total Supply\n    const idleSpeeds = await this.getSpeed(tokenConfig.idle.address);\n\n    if (idleSpeeds){\n\n      // Get IDLE distribution for Idle in a Year\n      const blocksPerYear = this.functionsUtil.getGlobalConfig(['network','blocksPerYear']);\n\n      // Take 50% of distrubution for lenders side\n      const distribution = this.functionsUtil.BNify(idleSpeeds).times(this.functionsUtil.BNify(blocksPerYear)).div(1e18);\n\n      if (!this.functionsUtil.BNify(distribution).isNaN()){\n        return this.functionsUtil.setCachedDataWithLocalStorage(cachedDataKey,distribution);\n      }\n    }\n\n    return null;\n  }\n\n  getUserDistribution = async (account=null,availableTokens=null,fixByFrequency=false) => {\n    if (!account){\n      account = this.props.account;\n    }\n    if (!availableTokens && this.props.selectedStrategy){\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n\n    if (!account || !availableTokens){\n      return false;\n    }\n\n    let totalSpeed = this.functionsUtil.BNify(0);\n    await this.functionsUtil.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const tokenConfig = availableTokens[token];\n\n      if (this.tokenConfig && this.tokenConfig.disabledTokens.includes(tokenConfig.idle.token)){\n        return;\n      }\n\n      const [\n        idleSpeed,\n        userPoolShare\n      ] = await Promise.all([\n        this.getSpeed(tokenConfig.idle.address),\n        this.functionsUtil.getUserPoolShare(account,tokenConfig)\n      ]);\n\n      if (idleSpeed && userPoolShare){\n        const tokenSpeed = idleSpeed.times(userPoolShare);\n        totalSpeed = totalSpeed.plus(tokenSpeed);\n      }\n    });\n\n    if (fixByFrequency){\n      totalSpeed = this.functionsUtil.fixTokenDecimals(totalSpeed,this.tokenConfig.decimals);\n      totalSpeed = this.functionsUtil.fixDistributionSpeed(totalSpeed,this.tokenConfig.distributionFrequency)\n    }\n\n    return totalSpeed;\n  }\n\n  getAvgApr = async (availableTokens=null) => {\n    if (!availableTokens){\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n    let output = this.functionsUtil.BNify(0);\n    let totalAllocation = this.functionsUtil.BNify(0);\n    await this.functionsUtil.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const tokenConfig = availableTokens[token];\n      const [idleApr,tokenAllocation] = await Promise.all([\n        this.getAPR(token,tokenConfig),\n        this.functionsUtil.getTokenAllocation(tokenConfig,false,false)\n      ]);\n      \n      if (idleApr && tokenAllocation){\n        output = output.plus(idleApr.times(tokenAllocation.totalAllocation));\n        totalAllocation = totalAllocation.plus(tokenAllocation.totalAllocation);\n      }\n    });\n\n    output = output.div(totalAllocation);\n\n    return output;\n  }\n\n}\n\nexport default IdleGovToken;","import React from \"react\";\nimport axios from 'axios';\nimport moment from 'moment';\nimport { Text } from \"rimble-ui\";\nimport BigNumber from 'bignumber.js';\nimport IdleGovToken from './IdleGovToken';\nimport { toBuffer } from \"ethereumjs-util\";\nimport globalConfigs from '../configs/globalConfigs';\nimport ENS, { getEnsAddress } from '@ensdomains/ensjs';\n\nconst ethereumjsABI = require('ethereumjs-abi');\nconst env = process.env;\n\nwindow.profiler = {};\n\nclass FunctionsUtil {\n\n  // Attributes\n  props = {};\n  idleGovToken = null;\n\n  // Constructor\n  constructor(props){\n    this.setProps(props);\n  }\n\n  // Methods\n  setProps = props => {\n    this.props = props;\n  }\n  trimEth = eth => {\n    return this.BNify(eth).toFixed(6);\n  }\n  toBN = n => new this.props.web3.utils.BN(n)\n  toEth = wei => {\n    if (!this.props.web3){\n      return null;\n    }\n    return this.props.web3.utils.fromWei(\n      (wei || 0).toString(),\n      \"ether\"\n    );\n  }\n  toWei = eth => {\n    if (!this.props.web3){\n      return null;\n    }\n    return this.props.web3.utils.toWei(\n      (eth || 0).toString(),\n      \"ether\"\n    );\n  }\n  htmlDecode = input => {\n    var e = document.createElement('textarea');\n    e.innerHTML = input;\n    return e.childNodes.length === 0 ? '' : e.childNodes[0].nodeValue;\n  }\n  BNify_obj = s => new BigNumber(s)\n  BNify = s => new BigNumber( typeof s === 'object' ? s : String(s) )\n  customLog = (...props) => { if (globalConfigs.logs.messagesEnabled) this.customLog(moment().format('HH:mm:ss'),...props); }\n  customLogError = (...props) => { if (globalConfigs.logs.errorsEnabled) console.error(moment().format('HH:mm:ss'),...props); }\n  getContractByName = (contractName) => {\n    const contract = this.props.contracts.find(c => c.name === contractName);\n    if (!contract) {\n      return false;\n    }\n    return contract.contract;\n  }\n  normalizeSimpleIDNotification = (n) => {\n    return n.replace(/<\\/p><p>/g,\"\\n\")\n            .replace(/<p>/g,\"\")\n            .replace(/<br>/g,\"\")\n            .replace(/&nbsp;/g,\" \")\n            .replace(/<\\/p>/g,\"\");\n  }\n  capitalize = (str) => {\n    return str ? str.substr(0,1).toUpperCase()+str.substr(1) : '';\n  }\n  strToMoment = (date,format=null) => {\n    return moment(date,format);\n  }\n  replaceArrayProps = (arr1,arr2) => {\n    if (arr2 && Object.keys(arr2).length){\n      Object.keys(arr2).forEach(p => {\n        arr1[p] = arr2[p];\n      });\n    }\n\n    return arr1;\n  }\n  replaceArrayPropsRecursive = (arr1,arr2,props=null) => {\n    if (arr2 && Object.keys(arr2).length){\n      Object.keys(arr2).forEach(p => {\n        if (typeof arr2[p]==='function'){\n          arr1[p] = arr2[p](props);\n        } else if (typeof arr2[p]==='object'){\n          arr1[p] = {...arr1[p],...this.replaceArrayPropsRecursive(arr1,arr2[p],props)};\n        } else {\n          arr1[p] = arr2[p];\n        }\n      });\n    }\n    return arr1;\n  }\n  stripHtml = (html) => {\n     var tmp = document.createElement(\"DIV\");\n     tmp.innerHTML = html;\n     return tmp.textContent || tmp.innerText || \"\";\n  }\n  // VanillaJS function for smooth scroll\n  scrollTo = (to, duration) => {\n    const start = window.scrollY;\n    const change = to - start;\n    const increment = 20;\n    let currentTime = 0;\n\n    Math.easeInOutQuad = function (t, b, c, d) {\n      t /= d/2;\n      if (t < 1) return c/2*t*t + b;\n      t--;\n      return -c/2 * (t*(t-2) - 1) + b;\n    };\n\n    const animateScroll = () => {\n        currentTime += increment;\n        var val = Math.easeInOutQuad(currentTime, start, change, duration);\n        window.scrollTo(0,val);\n        if(currentTime < duration) {\n          window.setTimeout(animateScroll, increment);\n        }\n    };\n\n    animateScroll();\n  }\n  getQueryStringParameterByName = (name, url = window.location.href) => {\n    // eslint-disable-next-line\n    name = name.replace(/[\\[\\]]/g, '\\\\$&');\n    var regex = new RegExp('[?&]' + name + '(=([^&#]*)|&|#|$)'),\n        results = regex.exec(url);\n    if (!results) return null;\n    if (!results[2]) return '';\n    return decodeURIComponent(results[2].replace(/\\+/g, ' '));\n  }\n  getTxAction = (tx,tokenConfig) => {\n\n    if (!tokenConfig.idle){\n      return null;\n    }\n\n    const idleTokenAddress = tokenConfig.idle.address;\n    const depositProxyContractInfo = this.getGlobalConfig(['contract','methods','deposit','proxyContract']);\n    const migrationContractAddr = tokenConfig.migration && tokenConfig.migration.migrationContract ? tokenConfig.migration.migrationContract.address : null;\n    const migrationContractOldAddrs = tokenConfig.migration && tokenConfig.migration.migrationContract && tokenConfig.migration.migrationContract.oldAddresses ? tokenConfig.migration.migrationContract.oldAddresses : [];\n    const batchMigration = this.getGlobalConfig(['tools','batchMigration','props','availableTokens',tokenConfig.idle.token]);\n    const batchMigrationContractAddr = batchMigration && batchMigration.migrationContract ? batchMigration.migrationContract.address : null;\n\n    const isBatchMigrationTx = batchMigrationContractAddr && tx.from.toLowerCase() === batchMigrationContractAddr.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase() && tx.to.toLowerCase() === this.props.account.toLowerCase();    \n    const isMigrationTx = isBatchMigrationTx || (migrationContractAddr && (tx.from.toLowerCase() === migrationContractAddr.toLowerCase() || migrationContractOldAddrs.map((v) => { return v.toLowerCase(); }).indexOf(tx.from.toLowerCase()) !== -1 ) && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase());\n    const isSendTransferTx = !isMigrationTx && tx.from.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase();\n    const isReceiveTransferTx = !isMigrationTx && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase();\n    const isDepositTx = !isMigrationTx && !isSendTransferTx && !isReceiveTransferTx && (tx.to.toLowerCase() === idleTokenAddress.toLowerCase() || (depositProxyContractInfo && tx.to.toLowerCase() === depositProxyContractInfo.address.toLowerCase()));\n    const isRedeemTx = !isMigrationTx && !isSendTransferTx && !isReceiveTransferTx && tx.to.toLowerCase() === this.props.account.toLowerCase();\n    const isSwapTx = !isMigrationTx && !isSendTransferTx && !isReceiveTransferTx && !isDepositTx && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase();\n\n    let action = null;\n\n    if (isDepositTx){\n      action = 'Deposit';\n    } else if (isRedeemTx){\n      action = 'Redeem';\n    } else if (isMigrationTx){\n      action = 'Migrate';\n    } else if (isSendTransferTx){\n      action = 'Send';\n    } else if (isReceiveTransferTx){\n      action = 'Receive';\n    } else if (isSwapTx){\n      action = 'Swap';\n    } else if (isSwapTx){\n      action = 'SwapOut';\n    }\n\n    return action;\n  }\n  shortenHash = hash => {\n    let shortHash = hash;\n    const txStart = shortHash.substr(0, 7);\n    const txEnd = shortHash.substr(shortHash.length - 4);\n    shortHash = txStart + \"...\" + txEnd;\n    return shortHash;\n  }\n  getENSName = async (address) => {\n\n    const networkId = this.props.network.current.id || this.getGlobalConfig(['network','requiredNetwork']);\n    const ensConfig = this.getGlobalConfig(['network','providers','ens']);\n\n    if (!ensConfig.enabled || !ensConfig.supportedNetworks.includes(networkId)){\n      return null;\n    }\n\n    if (!this.checkAddress(address) || !this.props.web3){\n      return null;\n    }\n\n    const cachedDataKey = `getENSName_${address}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData){\n      return cachedData;\n    }\n\n    const TTL = 3600;\n    const provider = this.props.web3.currentProvider;\n    if (networkId === 1){\n      const ens = new ENS({ provider, ensAddress: getEnsAddress(networkId.toString()) });\n      const ensName = await ens.getName(address);\n      if (ensName && ensName.name){\n        const addressCheck = await ens.name(ensName.name).getAddress();\n        if (addressCheck && address.toLowerCase() === addressCheck.toLowerCase()){\n          return this.setCachedDataWithLocalStorage(cachedDataKey,ensName.name,TTL);\n        }\n      }\n    }\n\n    return null;\n  }\n  getAccountPortfolioTranches = async (availableTranches=null,account=null) => {\n    const portfolio = {\n      transactions:[],\n      tranchesBalance:[],\n      avgAPY:this.BNify(0),\n      totalBalance:this.BNify(0),\n      totalEarnings:this.BNify(0),\n      totalAmountLent:this.BNify(0),\n      totalEarningsPerc:this.BNify(0),\n    };\n\n    availableTranches = availableTranches ? availableTranches : this.props.availableTranches;\n    account = account ? account : this.props.account;\n\n    if (!account || !availableTranches){\n      return portfolio;\n    }\n\n    const tranches = this.getGlobalConfig(['tranches']);\n\n    await this.asyncForEach(Object.keys(availableTranches),async (protocol) => {\n      const protocolConfig = availableTranches[protocol];\n      await this.asyncForEach(Object.keys(protocolConfig),async (token) => {\n        const tokenConfig = protocolConfig[token];\n        await this.asyncForEach(Object.keys(tranches),async (tranche) => {\n          const trancheConfig = tokenConfig[tranche];\n          const trancheTokenBalance = await this.loadTrancheFieldRaw('trancheDeposited',{},protocol,token,tranche,tokenConfig,trancheConfig,account);\n          if (trancheTokenBalance){\n            const [\n              tranchePool,\n              tranchePrice,\n            ] = await Promise.all([\n              this.loadTrancheFieldRaw('tranchePool',{},protocol,token,tranche,tokenConfig,trancheConfig,account),\n              this.loadTrancheFieldRaw('tranchePrice',{},protocol,token,tranche,tokenConfig,trancheConfig,account)\n            ]);\n            const tokenBalance = trancheTokenBalance.times(tranchePrice);\n\n            if (!this.BNify(tranchePrice).isNaN() && !this.BNify(tokenBalance).isNaN()){\n              const [\n                trancheUserInfo,\n                trancheApy,\n              ] = await Promise.all([\n                this.getTrancheUserInfo(tokenConfig,trancheConfig,account),\n                this.loadTrancheFieldRaw('trancheApy',{},protocol,token,tranche,tokenConfig,trancheConfig,account),\n              ]);\n\n              const poolShare = tokenBalance.div(tranchePool);\n              const amountDeposited = trancheUserInfo.amountDeposited;\n              const trancheEarnings = tokenBalance.minus(amountDeposited);\n\n              // console.log('trancheBalance',protocol,token,tranche,'trancheTokenBalance',trancheTokenBalance.toFixed(),'tranchePrice',tranchePrice.toFixed(),'tokenBalance',tokenBalance.toFixed(),'trancheApy',trancheApy.toFixed(),'amountDeposited',amountDeposited.toFixed());\n              portfolio.transactions = [...portfolio.transactions,...trancheUserInfo.transactions];\n\n              portfolio.tranchesBalance.push({\n                token,\n                tranche,\n                protocol,\n                poolShare,\n                trancheApy,\n                tranchePrice,\n                tokenBalance,\n                trancheEarnings,\n                amountDeposited, \n                trancheTokenBalance\n              });\n\n              // console.log(protocol,token,tranche,amountDeposited.toFixed(),tokenBalance.toFixed(),trancheEarnings.toFixed());\n\n              // Increment total balance\n              portfolio.totalBalance = portfolio.totalBalance.plus(tokenBalance);\n            }\n          }\n        });\n      });\n    });\n\n    let avgAPY = this.BNify(0);\n    let totalEarnings = this.BNify(0);\n    let totalAmountLent = this.BNify(0);\n    let totalEarningsPerc = this.BNify(0);\n\n    // Calculate aggregated data\n    portfolio.tranchesBalance.forEach( trancheInfo => {\n      const trancheApy = this.BNify(trancheInfo.trancheApy);\n      const trancheWeight = trancheInfo.tokenBalance.div(portfolio.totalBalance);\n\n      // Add tranche weight\n      trancheInfo.trancheWeight = trancheWeight;\n\n      if (trancheInfo.trancheEarnings){\n        totalEarnings = totalEarnings.plus(trancheInfo.trancheEarnings);\n      }\n\n      if (trancheApy){\n        avgAPY = avgAPY.plus(trancheApy.times(trancheWeight));\n      }\n\n      if (trancheInfo.amountDeposited){\n        totalAmountLent = totalAmountLent.plus(trancheInfo.amountDeposited);\n      }\n    });\n\n    if (totalAmountLent.gt(0)){\n      totalEarningsPerc = totalEarnings.div(totalAmountLent).times(100);\n    }\n\n    portfolio.avgAPY = avgAPY;\n    portfolio.totalEarnings = totalEarnings;\n    portfolio.totalAmountLent = totalAmountLent;\n    portfolio.totalEarningsPerc = totalEarningsPerc;\n\n    return portfolio;\n  }\n  getAccountPortfolio = async (availableTokens=null,account=null) => {\n    const portfolio = {\n      tokensBalance:{},\n      avgAPY:this.BNify(0),\n      totalBalance:this.BNify(0),\n      totalEarnings:this.BNify(0),\n      totalAmountLent:this.BNify(0),\n      totalEarningsPerc:this.BNify(0),\n      totalBalanceConverted:this.BNify(0)\n    };\n\n    availableTokens = availableTokens ? availableTokens : this.props.availableTokens;\n    account = account ? account : this.props.account;\n\n    if (!account || !availableTokens){\n      return portfolio;\n    }\n\n    const isRisk = this.props.selectedStrategy === 'risk';\n\n    await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const tokenConfig = availableTokens[token];\n      const idleTokenBalance = await this.getTokenBalance(tokenConfig.idle.token,account);\n\n      if (idleTokenBalance){\n        const tokenPrice = await this.getIdleTokenPrice(tokenConfig);\n        const tokenBalance = idleTokenBalance.times(tokenPrice);\n        const tokenBalanceConverted = await this.convertTokenBalance(tokenBalance,token,tokenConfig,isRisk);\n\n        if (!tokenPrice.isNaN() && !tokenBalance.isNaN()){\n          portfolio.tokensBalance[token] = {\n            tokenPrice,\n            tokenBalance,\n            idleTokenBalance,\n            tokenBalanceConverted\n          };\n\n          // Increment total balance\n          portfolio.totalBalance = portfolio.totalBalance.plus(tokenBalance);\n          portfolio.totalBalanceConverted = portfolio.totalBalanceConverted.plus(tokenBalanceConverted);\n        }\n      }\n    });\n\n    const orderedTokensBalance = {};\n    Object.keys(availableTokens).forEach( token => {\n      if (portfolio.tokensBalance[token]){\n        orderedTokensBalance[token] = portfolio.tokensBalance[token];\n      }\n    });\n\n    portfolio.tokensBalance = orderedTokensBalance;\n\n    const depositedTokens = Object.keys(portfolio.tokensBalance).filter(token => ( this.BNify(portfolio.tokensBalance[token].idleTokenBalance).gt(0) ));\n\n    let avgAPY = this.BNify(0);\n    let totalEarnings = this.BNify(0);\n    let totalAmountLent = this.BNify(0);\n    let totalEarningsPerc = this.BNify(0);\n    // const amountLents = await this.getAmountLent(depositedTokens,this.props.account);\n\n    await this.asyncForEach(depositedTokens,async (token) => {\n      const tokenConfig = availableTokens[token];\n      const amountDeposited = await this.getAmountDeposited(tokenConfig,account);\n\n      // console.log(token,'amountDeposited',amountDeposited.toString(),'amountLent',amountLents[token].toString());\n\n      const tokenBalanceConverted = portfolio.tokensBalance[token].tokenBalanceConverted;\n      const tokenAprs = await this.getTokenAprs(tokenConfig);\n\n      const tokenAPY = this.BNify(tokenAprs.avgApy);\n      const tokenWeight = tokenBalanceConverted.div(portfolio.totalBalanceConverted);\n      const amountLentToken = await this.convertTokenBalance(amountDeposited,token,tokenConfig,isRisk);\n      const tokenEarnings = tokenBalanceConverted.minus(amountLentToken);\n\n      if (tokenEarnings){\n        totalEarnings = totalEarnings.plus(tokenEarnings);\n      }\n\n      if (tokenAPY){\n        avgAPY = avgAPY.plus(tokenAPY.times(tokenWeight));\n      }\n\n      if (amountLentToken){\n        totalAmountLent = totalAmountLent.plus(amountLentToken);\n      }\n\n      // console.log(token,amountLentToken.toFixed(),tokenEarnings.toFixed(),tokenBalanceConverted.toFixed());\n    });\n\n    if (totalAmountLent.gt(0)){\n      totalEarningsPerc = totalEarnings.div(totalAmountLent).times(100);\n    }\n\n    portfolio.avgAPY = avgAPY;\n    portfolio.totalEarnings = totalEarnings;\n    portfolio.totalAmountLent = totalAmountLent;\n    portfolio.totalEarningsPerc = totalEarningsPerc;\n\n    // debugger;\n\n    return portfolio;\n  }\n  getCurveAvgSlippage = async (enabledTokens=[],account=null,fixDecimals=true) => {\n    account = account ? account : this.props.account;\n\n    if (!account){\n      return [];\n    }\n\n    const availableTokens = this.getCurveAvailableTokens();\n\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(availableTokens);\n    }\n\n    let processedTxs = {};\n    const processedHashes = {};\n    let curveTokensBalance = this.BNify(0);\n    const curveTxs = await this.getCurveTxs(account,0,'latest',enabledTokens);\n\n    if (curveTxs && curveTxs.length){\n\n      curveTxs.forEach((tx,index) => {\n\n        // Skip transactions with no hash\n        if (!tx.hash || !tx.curveTokens || !tx.curveTokenPrice){\n          return false;\n        }\n\n        const tokenAmount = this.BNify(tx.tokenAmount);\n        let curveTokens = this.BNify(tx.curveTokens);\n        const curveTokenPrice = this.BNify(tx.curveTokenPrice);\n\n        switch (tx.action){\n          case 'CurveIn':\n          case 'CurveZapIn':\n          case 'CurveDepositIn':\n          case 'CurveTransferIn':\n            if (tx.action === 'CurveTransferIn'){\n              if (index>0 && curveTokensBalance.gt(0)){\n                return;\n              }\n            }\n\n            if (!processedTxs[tx.hash]){\n              processedTxs[tx.hash] = {\n                price:null,\n                received:null,\n                slippage:null,\n                deposited:this.BNify(0),\n              };\n            }\n\n            processedTxs[tx.hash].deposited = processedTxs[tx.hash].deposited.plus(tokenAmount);\n            if (processedTxs[tx.hash].received === null){\n              processedTxs[tx.hash].price = curveTokenPrice;\n              processedTxs[tx.hash].received = curveTokens.times(curveTokenPrice);\n            }\n\n            // this.customLog('getCurveAvgSlippage',tx.action,tx.hash,tx.blockNumber,curveTokens.toFixed(6),curveTokenPrice.toFixed(6),processedTxs[tx.hash].deposited.toFixed(6),processedTxs[tx.hash].received.toFixed(6));\n          break;\n          case 'CurveOut':\n          case 'CurveZapOut':\n          case 'CurveDepositOut':\n            curveTokens = curveTokens.times(this.BNify(-1));\n          break;\n          default:\n          break;\n        }\n\n        // Update curveTokens balance\n        if (!processedHashes[tx.hash]){\n          curveTokensBalance = curveTokensBalance.plus(curveTokens);\n          if (curveTokensBalance.lte(0)){\n            curveTokensBalance = this.BNify(0);\n\n            // Reset processed transactions\n            // processedTxs = {};\n          }\n          processedHashes[tx.hash] = true;\n        }\n      });\n    }\n\n    // this.customLog('processedTxs',processedTxs);\n\n    let avgSlippage = this.BNify(0);\n    let totalDeposited = this.BNify(0);\n    Object.values(processedTxs).forEach( tx => {\n      const slippage = tx.received.div(tx.deposited).minus(1);\n      avgSlippage = avgSlippage.plus(slippage.times(tx.deposited));\n      totalDeposited = totalDeposited.plus(tx.deposited);\n    });\n\n    avgSlippage = avgSlippage.div(totalDeposited).times(-1);\n\n    // debugger;\n    // this.customLog('avgSlippage',avgSlippage.toString());\n\n    return avgSlippage;\n  }\n  getCurveAvgBuyPrice = async (enabledTokens=[],account=null) => {\n    account = account ? account : this.props.account;\n\n    if (!account){\n      return [];\n    }\n\n    const availableTokens = this.getCurveAvailableTokens();\n\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(availableTokens);\n    }\n\n    const processedTxs = {};\n    let avgBuyPrice = this.BNify(0);\n    let curveTokensBalance = this.BNify(0);\n    const curveTxs = await this.getCurveTxs(account,0,'latest',enabledTokens);\n\n    // this.customLog('curveTxs',curveTxs);\n\n    if (curveTxs && curveTxs.length){\n\n      curveTxs.forEach((tx,index) => {\n\n        if (!processedTxs[tx.hash]){\n          processedTxs[tx.hash] = [];\n        }\n\n        if (processedTxs[tx.hash].includes(tx.action)){\n          return;\n        }\n\n        // Skip transactions with no hash\n        if (!tx.hash || !tx.curveTokens || !tx.curveTokenPrice){\n          return false;\n        }\n\n        const prevAvgBuyPrice = avgBuyPrice;\n        let curveTokens = this.BNify(tx.curveTokens);\n        const curveTokenPrice = this.BNify(tx.curveTokenPrice);\n\n        // Deposited\n        switch (tx.action){\n          case 'CurveIn':\n          case 'CurveZapIn':\n          case 'CurveDepositIn':\n          case 'CurveTransferIn':\n            if (tx.action === 'CurveTransferIn'){\n              if (index>0 && curveTokensBalance.gt(0)){\n                return;\n              }\n            }\n            avgBuyPrice = curveTokens.times(curveTokenPrice).plus(prevAvgBuyPrice.times(curveTokensBalance)).div(curveTokensBalance.plus(curveTokens));\n          break;\n          case 'CurveOut':\n          case 'CurveZapOut':\n          case 'CurveDepositOut':\n          // case 'CurveTransferOut':\n            curveTokens = curveTokens.times(this.BNify(-1));\n          break;\n          default:\n          break;\n        }\n        \n        // Update curveTokens balance\n        curveTokensBalance = curveTokensBalance.plus(curveTokens);\n        if (curveTokensBalance.lte(0)){\n          avgBuyPrice = this.BNify(0);\n          curveTokensBalance = this.BNify(0);\n        }\n\n        processedTxs[tx.hash].push(tx.action);\n\n        // this.customLog('getCurveAvgBuyPrice',tx.action,tx.hash,tx.blockNumber,curveTokens.toString(),curveTokenPrice.toString(),curveTokensBalance.toString(),avgBuyPrice.toString());\n      });\n    }\n\n    // this.customLog('avgCurveBuyPrice',avgBuyPrice.toString());\n\n    return avgBuyPrice;\n  }\n  getAvgBuyPrice = async (enabledTokens=[],account) => {\n    account = account ? account : this.props.account;\n\n    if (!account || !enabledTokens || !enabledTokens.length || !this.props.availableTokens){\n      return [];\n    }\n\n    const output = {};\n    const etherscanTxs = await this.getEtherscanTxs(account,0,'latest',enabledTokens);\n\n    enabledTokens.forEach( selectedToken => {\n\n      output[selectedToken] = [];\n      let avgBuyPrice = this.BNify(0);\n\n      let idleTokensBalance= this.BNify(0);\n      const filteredTxs = Object.values(etherscanTxs).filter(tx => (tx.token === selectedToken));\n\n      if (filteredTxs && filteredTxs.length){\n\n        filteredTxs.forEach((tx,index) => {\n\n          // Skip transactions with no hash or pending\n          if (!tx.hash || (tx.status && tx.status === 'Pending') || !tx.idleTokens || !tx.tokenPrice){\n            return false;\n          }\n\n          const prevAvgBuyPrice = avgBuyPrice;\n          let idleTokens = this.BNify(tx.idleTokens);\n          const tokenPrice = this.BNify(tx.tokenPrice);\n\n          // Deposited\n          switch (tx.action){\n            case 'Deposit':\n            case 'Receive':\n            case 'Swap':\n            case 'Migrate':\n            case 'CurveOut':\n              avgBuyPrice = idleTokens.times(tokenPrice).plus(prevAvgBuyPrice.times(idleTokensBalance)).div(idleTokensBalance.plus(idleTokens));\n            break;\n            case 'Send':\n            case 'Redeem':\n            case 'SwapOut':\n            case 'CurveIn':\n            case 'Withdraw':\n              idleTokens = idleTokens.times(this.BNify(-1));\n            break;\n            default:\n            break;\n          }\n\n          // Update idleTokens balance\n          idleTokensBalance = idleTokensBalance.plus(idleTokens);\n          if (idleTokensBalance.lte(0)){\n            avgBuyPrice = this.BNify(0);\n            idleTokensBalance = this.BNify(0);\n          }\n\n        });\n      }\n\n      // Add token Data\n      output[selectedToken] = avgBuyPrice;\n    });\n\n    return output;\n  }\n  getFirstDepositTx = async (enabledTokens=[],account) => {\n    account = account ? account : this.props.account;\n\n    if (!account || !enabledTokens || !enabledTokens.length || !this.props.availableTokens){\n      return [];\n    }\n\n    const etherscanTxs = await this.getEtherscanTxs(account,0,'latest',enabledTokens);\n\n    const deposits = {};\n\n    enabledTokens.forEach((selectedToken) => {\n      let amountLent = this.BNify(0);\n      let firstDepositTx = null;\n      deposits[selectedToken] = firstDepositTx;\n\n      const filteredTxs = Object.values(etherscanTxs).filter(tx => (tx.token === selectedToken));\n      if (filteredTxs && filteredTxs.length){\n\n        filteredTxs.forEach((tx,index) => {\n          // Skip transactions with no hash or pending\n          if (!tx.hash || (tx.status && tx.status === 'Pending') || !tx.tokenAmount){\n            return false;\n          }\n\n          switch (tx.action){\n            case 'Swap':\n            case 'Deposit':\n            case 'Receive':\n            case 'Migrate':\n              amountLent = amountLent.plus(tx.tokenAmount);\n              if (!firstDepositTx){\n                firstDepositTx = tx;\n              }\n            break;\n            case 'Send':\n            case 'Redeem':\n            case 'SwapOut':\n            case 'Withdraw':\n              amountLent = amountLent.minus(tx.tokenAmount);\n            break;\n            default:\n            break;\n          }\n\n          // Reset amountLent if below zero\n          if (amountLent.lt(0)){\n            amountLent = this.BNify(0);\n            firstDepositTx = null;\n          }\n        });\n      }\n\n      // Add token Data\n      deposits[selectedToken] = firstDepositTx;\n    });\n\n    return deposits;\n  }\n  getDashboardSectionUrl = (section) => {\n    return `${window.location.origin}/#${this.getGlobalConfig(['dashboard','baseRoute'])}/${section}`;\n  }\n  asyncTimeout = (ms) => {\n    return new Promise(resolve => setTimeout(resolve, ms));\n  }\n  getDepositTimestamp = async (enabledTokens=[],account) => {\n    const firstDepositTxs = await this.getFirstDepositTx(enabledTokens,account);\n    if (firstDepositTxs){\n      return Object.keys(firstDepositTxs).reduce( (acc,token) => {\n        if (firstDepositTxs[token]){\n          acc[token] = firstDepositTxs[token].timeStamp;\n        }\n        return acc;\n      },{});\n    }\n    return null;\n  }\n  getTrancheRewardTokensInfo = async (tokenConfig,trancheConfig) => {\n    const stakingRewards = await this.loadTrancheFieldRaw('stakingRewards',{},tokenConfig.protocol,tokenConfig.token,trancheConfig.tranche,tokenConfig,trancheConfig);\n    // console.log('getTrancheTokensDistribution',stakingRewards);\n    const tokensDistribution = {};\n    await this.asyncForEach(Object.keys(stakingRewards),async (token) => {\n      const eventFilters = {\n        from:tokenConfig.CDO.address,\n        to:trancheConfig.CDORewards.address\n      }\n      const transfers = await this.getContractEvents(token,'Transfer',{fromBlock: tokenConfig.blockNumber,toBlock:'latest',filter:eventFilters});\n\n      if (transfers && transfers.length>0){\n        const firstHarvest = transfers.length ? transfers[0] : null;\n        const latestHarvest = transfers[transfers.length-1];\n        const firstBlock = firstHarvest ? firstHarvest.blockNumber : tokenConfig.blockNumber;\n\n        const govTokenConfig = this.getGlobalConfig(['govTokens',token]);\n        const DAITokenConfig = this.getGlobalConfig(['stats','tokens','DAI']);\n        const [\n          prevBlockInfo,\n          lastBlockInfo,\n          conversionRate,\n          lastBlockPoolSize\n        ] = await Promise.all([\n          this.getBlockInfo(firstBlock),\n          this.getBlockInfo(latestHarvest.blockNumber),\n          this.getUniswapConversionRate(DAITokenConfig,govTokenConfig),\n          this.genericContractCallCached(tokenConfig.CDO.name,'getContractValue',[],{},latestHarvest.blockNumber)\n        ]);\n        if (prevBlockInfo && lastBlockInfo){\n          const poolSize = this.fixTokenDecimals(lastBlockPoolSize,tokenConfig.CDO.decimals);\n          const elapsedBlocks = latestHarvest.blockNumber-firstBlock;\n          const elapsedSeconds = lastBlockInfo.timestamp-prevBlockInfo.timestamp;\n\n          const lastAmount = this.fixTokenDecimals(latestHarvest.returnValues.value,govTokenConfig.decimals);\n          const totalAmount = transfers.reduce( (total,t) => {\n            total = total.plus(this.fixTokenDecimals(t.returnValues.value,govTokenConfig.decimals));\n            return total;\n          },this.BNify(0));\n\n          const tokensPerBlock = totalAmount.div(elapsedBlocks);\n          const tokensPerSecond = totalAmount.div(elapsedSeconds);\n          const tokensPerDay = tokensPerSecond.times(86400);\n          const tokensPerYear = tokensPerSecond.times(this.getGlobalConfig(['network','secondsPerYear']));\n          const convertedTokensPerYear = tokensPerYear.times(conversionRate);\n          const tokenApr = convertedTokensPerYear.div(poolSize);\n          const tokenApy = this.apr2apy(tokenApr);\n\n          tokensDistribution[token] = {\n            lastAmount,\n            totalAmount,\n            apr:tokenApr,\n            apy:tokenApy,\n            tokensPerDay,\n            tokensPerYear,\n            tokensPerBlock,\n            tokensPerSecond,\n            convertedTokensPerYear\n          };\n        }\n      }\n    });\n\n    // console.log('tokensDistribution',tokensDistribution);\n\n    return tokensDistribution;\n  }\n  getTrancheUserInfo = async (tokenConfig,trancheConfig,account) => {\n    account = account || this.props.account;\n    const cachedDataKey = `amountDepositedTranche_${tokenConfig.token}_${trancheConfig.token}_${account}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    const defaultEventsConfig = {to:'to',from:'from',value:'value'};\n    const underlyingEventsConfig = this.getGlobalConfig(['events',tokenConfig.token,'fields']) || defaultEventsConfig;\n\n    const underlyingEventsFilters = {};\n    underlyingEventsFilters[underlyingEventsConfig.to] = [this.props.account,tokenConfig.CDO.address];\n    underlyingEventsFilters[underlyingEventsConfig.from] = [this.props.account,tokenConfig.CDO.address];\n\n    const [\n      underlying_transfers,\n      trancheToken_transfers\n    ] = await Promise.all([\n      this.getContractEvents(tokenConfig.token,'Transfer',{fromBlock: trancheConfig.blockNumber, toBlock:'latest',filter:underlyingEventsFilters}),\n      this.getContractEvents(trancheConfig.name,'Transfer',{fromBlock: trancheConfig.blockNumber, toBlock:'latest',filter:{from:['0x0000000000000000000000000000000000000000',this.props.account],to:['0x0000000000000000000000000000000000000000',this.props.account]}})\n    ]);\n\n    // console.log('getAmountDepositedTranche',trancheConfig.name,'underlying_transfers',underlying_transfers,'trancheToken_transfers',trancheToken_transfers);\n\n    const transactions = [];\n    let firstDepositTx = null;\n    let avgBuyPrice = this.BNify(0);\n    let amountDeposited = this.BNify(0);\n    let totalAmountDeposited = this.BNify(0);\n\n    await this.asyncForEach(trancheToken_transfers, async (trancheTokenTransferEvent) => {\n      const tokenTransferEvent = underlying_transfers.find( t => t.transactionHash.toLowerCase() === trancheTokenTransferEvent.transactionHash.toLowerCase() );\n\n      // Skip if no tranche token transfer event found\n      if (!tokenTransferEvent){\n        return;\n      }\n\n      const tokenAmount = this.fixTokenDecimals(tokenTransferEvent.returnValues[underlyingEventsConfig.value],tokenConfig.decimals);\n      const trancheTokenAmount = this.fixTokenDecimals(trancheTokenTransferEvent.returnValues.value,trancheConfig.decimals);\n\n      // console.log('tranchePrice',trancheConfig.token,tokenAmount.toFixed(),trancheTokenAmount.toFixed(),tranchePrice.toFixed());\n      const tranchePrice = tokenAmount.div(trancheTokenAmount);\n      const blockInfo = await this.getBlockInfo(tokenTransferEvent.blockNumber);\n      const hashKey = `${trancheConfig.token}_${tokenTransferEvent.transactionHash}`;\n      const protocolConfig = this.getGlobalConfig(['stats','protocols',tokenConfig.protocol]);\n      const protocolIcon = `images/protocols/${protocolConfig.icon || `${tokenConfig.protocol}.svg`}`;\n\n      const tx = {\n        hashKey,\n        action:null,\n        tokenAmount,\n        tranchePrice,\n        protocolIcon,\n        value:tokenAmount,\n        status:'Completed',\n        token:tokenConfig.token,\n        tranche:trancheConfig.tranche,\n        protocol:protocolConfig.label,\n        tokenSymbol:tokenConfig.token,\n        trancheTokens:trancheTokenAmount,\n        hash:tokenTransferEvent.transactionHash,\n        blockNumber:tokenTransferEvent.blockNumber,\n        timeStamp:blockInfo ? blockInfo.timestamp : null,\n      };\n\n      // Deposit\n      if (trancheTokenTransferEvent.returnValues.from.toLowerCase() === '0x0000000000000000000000000000000000000000'){\n        // Set first deposit tx\n        if (!firstDepositTx){\n          firstDepositTx = tx;\n        }\n        avgBuyPrice = avgBuyPrice.plus(tranchePrice.times(tokenAmount));\n        amountDeposited = amountDeposited.plus(tokenAmount);\n        totalAmountDeposited = totalAmountDeposited.plus(tokenAmount);\n\n        tx.action = 'Deposit';\n        // console.log('Deposit',trancheConfig.token,tokenAmount.toFixed(),amountDeposited.toFixed(),tranchePrice.toFixed(),avgBuyPrice.toFixed());\n      // Withdraw\n      } else if (trancheTokenTransferEvent.returnValues.to.toLowerCase() === '0x0000000000000000000000000000000000000000'){\n        tx.action = 'Withdraw';\n        amountDeposited = amountDeposited.minus(tokenAmount);\n        if (amountDeposited.lt(0)){\n          firstDepositTx = null;\n          avgBuyPrice = this.BNify(0);\n          amountDeposited = this.BNify(0);\n          totalAmountDeposited = this.BNify(0);\n        }\n        // console.log('Redeem',trancheConfig.token,tokenAmount.toFixed(),amountDeposited.toFixed(),avgBuyPrice.toFixed());\n      }\n\n      transactions.push(tx);\n    });\n\n    avgBuyPrice = avgBuyPrice.div(totalAmountDeposited);\n\n    // console.log(trancheConfig.token,'amountDeposited',amountDeposited.toFixed(),'avgBuyPrice',avgBuyPrice.toFixed(),'transactions',transactions);\n\n    return {\n      avgBuyPrice,\n      transactions,\n      firstDepositTx,\n      amountDeposited\n    }\n  }\n  getTrancheUserTransactions = async (tokenConfig,trancheConfig,account) => {\n    const trancheUserInfo = await this.getTrancheUserInfo(tokenConfig,trancheConfig,account);\n    if (trancheUserInfo){\n      return trancheUserInfo.transactions;\n    }\n    return null;\n  }\n  getTrancheFirstDepositTx = async (tokenConfig,trancheConfig,account) => {\n      const trancheUserInfo = await this.getTrancheUserInfo(tokenConfig,trancheConfig,account);\n      if (trancheUserInfo){\n        return trancheUserInfo.firstDepositTx;\n      }\n      return null;\n  }\n  getAmountDepositedTranche = async (tokenConfig,trancheConfig,account) => {\n    const trancheUserInfo = await this.getTrancheUserInfo(tokenConfig,trancheConfig,account);\n    if (trancheUserInfo){\n      return trancheUserInfo.amountDeposited;\n    }\n    return null;\n  }\n  getAmountDeposited = async (tokenConfig,account) => {\n    const cachedDataKey = `amountDeposited_${tokenConfig.idle.token}_${account}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    let [tokenBalance,userAvgPrice] = await Promise.all([\n      this.getTokenBalance(tokenConfig.idle.token,account),\n      this.genericContractCallCached(tokenConfig.idle.token, 'userAvgPrices', [account])\n    ]);\n\n    if (tokenBalance && userAvgPrice){\n      userAvgPrice = this.fixTokenDecimals(userAvgPrice,tokenConfig.decimals);\n      const amountDeposited = tokenBalance.times(userAvgPrice);\n      return this.setCachedDataWithLocalStorage(cachedDataKey,amountDeposited);\n    }\n\n    return null;\n  }\n  getAmountLent = async (enabledTokens=[],account) => {\n\n    account = account || this.props.account;\n\n    if (!account || !enabledTokens || !enabledTokens.length || !this.props.availableTokens){\n      return [];\n    }\n\n    const etherscanTxs = await this.getEtherscanTxs(account,0,'latest',enabledTokens,false);\n\n    const amountLents = {};\n\n    enabledTokens.forEach((selectedToken) => {\n      let amountLent = this.BNify(0);\n      amountLents[selectedToken] = amountLent;\n\n      const filteredTxs = Object.values(etherscanTxs).filter(tx => (tx.token === selectedToken));\n      if (filteredTxs && filteredTxs.length){\n\n        filteredTxs.forEach((tx,index) => {\n          // Skip transactions with no hash or pending\n          if (!tx.hash || (tx.status && tx.status === 'Pending') || !tx.tokenAmount){\n            return false;\n          }\n\n          switch (tx.action){\n            case 'Swap':\n            case 'Deposit':\n            case 'Receive':\n            case 'Migrate':\n            case 'CurveOut':\n              amountLent = amountLent.plus(tx.tokenAmount);\n            break;\n            case 'Send':\n            case 'Redeem':\n            case 'SwapOut':\n            case 'CurveIn':\n            case 'Withdraw':\n              amountLent = amountLent.minus(tx.tokenAmount);\n            break;\n            default:\n            break;\n          }\n\n          // Reset amountLent if below zero\n          if (amountLent.lt(0)){\n            amountLent = this.BNify(0);\n          }\n        });\n      }\n\n      // Add token Data\n      amountLents[selectedToken] = amountLent;\n    });\n\n    // debugger;\n\n    return amountLents;\n  }\n  getEtherscanBaseTxs = async (account=false,firstBlockNumber=0,endBlockNumber='latest',enabledTokens=[],debug=false) => {\n    account = account ? account : this.props.account;\n\n    if (!account || !enabledTokens || !enabledTokens.length){\n      return [];\n    }\n\n    account = account.toLowerCase();\n\n    const selectedStrategy = this.props.selectedStrategy;\n\n    // Check if firstBlockNumber is less that firstIdleBlockNumber\n    const firstIdleBlockNumber = this.getGlobalConfig(['network','firstBlockNumber']);\n    firstBlockNumber = Math.max(firstIdleBlockNumber,firstBlockNumber);\n\n    const requiredNetwork = this.props.network.current.id || this.getGlobalConfig(['network','requiredNetwork']);\n    const etherscanInfo = this.getGlobalConfig(['network','providers','etherscan']);\n\n    let results = [];\n    let etherscanBaseTxs = null;\n    let etherscanBaseEndpoint = null;\n\n    // Check if etherscan is enabled for the required network\n    if (etherscanInfo.enabled && etherscanInfo.endpoints[requiredNetwork]){\n      const etherscanApiUrl = etherscanInfo.endpoints[requiredNetwork];\n\n      // Get base endpoint cached transactions\n      etherscanBaseEndpoint = `${etherscanApiUrl}?strategy=${selectedStrategy}&apikey=${env.REACT_APP_ETHERSCAN_KEY}&module=account&action=tokentx&address=${account}&startblock=${firstIdleBlockNumber}&endblock=${endBlockNumber}&sort=asc`;\n      etherscanBaseTxs = this.getCachedRequest(etherscanBaseEndpoint);\n\n      if (debug){\n        console.log('DEBUG - CACHED - etherscanBaseTxs',etherscanBaseTxs);\n      }\n\n      // Check if the latest blockNumber is actually the latest one\n      if (etherscanBaseTxs && etherscanBaseTxs.data.result && Object.values(etherscanBaseTxs.data.result).length){\n\n        const lastCachedTx = Object.values(etherscanBaseTxs.data.result).pop();\n        const lastCachedBlockNumber = lastCachedTx && lastCachedTx.blockNumber ? parseInt(lastCachedTx.blockNumber)+1 : firstBlockNumber;\n\n        const etherscanEndpointLastBlock = `${etherscanApiUrl}?strategy=${selectedStrategy}&apikey=${env.REACT_APP_ETHERSCAN_KEY}&module=account&action=tokentx&address=${account}&startblock=${lastCachedBlockNumber}&endblock=${endBlockNumber}&sort=asc`;\n        let latestTxs = await this.makeCachedRequest(etherscanEndpointLastBlock,15);\n\n        if (latestTxs && latestTxs.data.result && latestTxs.data.result.length){\n          \n          latestTxs = await this.filterEtherscanTxs(latestTxs.data.result,enabledTokens,true,false);\n\n          if (latestTxs && Object.values(latestTxs).length){\n\n            const latestBlockNumbers = Object.values(latestTxs).map( lastTx => (parseInt(lastTx.blockNumber)) );\n            const lastRealBlockNumber = Math.max(...latestBlockNumbers);\n\n            // If real tx blockNumber differs from last blockNumber\n            if (lastRealBlockNumber>=lastCachedBlockNumber){\n              // Merge latest Txs with etherscanBaseTxs\n              Object.values(latestTxs).forEach((tx) => {\n                const txFound = Object.keys(etherscanBaseTxs.data.result).includes(tx.hashKey);\n                if (!txFound){\n                  etherscanBaseTxs.data.result[tx.hashKey] = tx;\n                }\n              });\n\n              // Save etherscan txs\n              this.saveEtherscanTxs(etherscanBaseEndpoint,etherscanBaseTxs.data.result);\n            }\n          }\n        }\n      } else {\n        etherscanBaseTxs = null;\n      }\n\n      let txs = etherscanBaseTxs;\n\n      if (debug){\n        console.log('DEBUG - txs',txs);\n      }\n\n      if (!txs){\n        // Make request\n        txs = await this.makeRequest(etherscanBaseEndpoint);\n\n        // console.log('makeRequest 1',account,etherscanBaseEndpoint,txs,txs.data.message,txs.data.status,parseInt(txs.data.status));\n\n        if (!txs || !txs.data || parseInt(txs.data.status)===0){\n          let requestCount = 0;\n          let requestStatus = false;\n          do {\n            await this.asyncTimeout(500);\n            txs = await this.makeRequest(etherscanBaseEndpoint);\n            requestCount++;\n            requestStatus = txs && txs.data ? parseInt(txs.data.status) : false;\n            // console.log('makeRequest '+(requestCount+1),account,etherscanBaseEndpoint,txs,txs.data.message,txs.data.status,parseInt(txs.data.status));\n          } while (requestCount<5 && !requestStatus);\n        }\n\n        // Cache request\n        if (txs && txs.data && parseInt(txs.data.status)>0){\n          const timestamp = parseInt(Date.now()/1000);\n          const cachedRequests = this.getCachedDataWithLocalStorage('cachedRequests',{});\n          cachedRequests[etherscanBaseEndpoint] = {\n            data:txs,\n            timestamp\n          };\n          this.setCachedDataWithLocalStorage('cachedRequests',cachedRequests);\n        }\n      }\n\n      if (txs && txs.data && txs.data.result){\n        results = txs.data.result;\n      } else {\n        return [];\n      }\n    }\n\n    return {\n      results,\n      etherscanBaseTxs,\n      etherscanBaseEndpoint\n    };\n  }\n  getCurveTxs = async (account=false,firstBlockNumber=0,endBlockNumber='latest',enabledTokens=[]) => {\n    const results = await this.getEtherscanTxs(account,firstBlockNumber,endBlockNumber,enabledTokens);\n    // results = results ? Object.values(results) : [];\n    return this.filterCurveTxs(results,enabledTokens);\n  }\n  saveEtherscanTxs = (endpoint,txs) => {\n    const txsToStore = {};\n    Object.keys(txs).forEach(txHash => {\n      const tx = txs[txHash];\n      if (tx.blockNumber && (!tx.status || tx.status.toLowerCase() !== 'pending')){\n        txsToStore[txHash] = tx;\n      }\n    });\n\n    // Save new cached data\n    const cachedRequest = {\n      data:{\n        result:txsToStore\n      }\n    };\n    this.saveCachedRequest(endpoint,false,cachedRequest);\n  }\n  getEtherscanTxs = async (account=false,firstBlockNumber=0,endBlockNumber='latest',enabledTokens=[],debug=false) => {\n    const {\n      results,\n      etherscanBaseTxs,\n      etherscanBaseEndpoint\n    } = await this.getEtherscanBaseTxs(account,firstBlockNumber,endBlockNumber,enabledTokens,debug);\n\n    // Initialize prevTxs\n    let etherscanTxs = {};\n    if (etherscanBaseTxs){\n      // Filter txs for token\n      etherscanTxs = await this.processStoredTxs(results,enabledTokens);\n    } else {\n      const allAvailableTokens = Object.keys(this.props.availableTokens);\n      // Save base endpoint with all available tokens\n      etherscanTxs = await this.filterEtherscanTxs(results,allAvailableTokens);\n\n      // Store filtered txs\n      if (etherscanTxs && Object.keys(etherscanTxs).length){\n        this.saveEtherscanTxs(etherscanBaseEndpoint,etherscanTxs);\n      }\n    }\n\n    if (debug){\n      console.log('DEBUG - getEtherscanTxs -',etherscanTxs);\n    }\n\n    return Object\n            .values(etherscanTxs)\n            .filter(tx => (tx.token && enabledTokens.includes(tx.token.toUpperCase())))\n            .sort((a,b) => (a.timeStamp < b.timeStamp ? -1 : 1));\n  }\n  filterCurveTxs = async (results,enabledTokens=[]) => {\n\n    if (!results || !results.length || typeof results.forEach !== 'function'){\n      return [];\n    }\n\n    const availableTokens = this.props.availableTokens ? this.props.availableTokens : this.getCurveAvailableTokens();\n\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(availableTokens);\n    }\n\n    const curveTxs = results.filter( tx => (enabledTokens.includes(tx.token) && ['CurveIn','CurveOut','CurveZapIn','CurveZapOut','CurveTransferIn','CurveTransferOut','CurveDepositIn','CurveDepositOut'].includes(tx.action)) );\n\n    if (curveTxs.length){\n      curveTxs.sort((a,b) => (a.timeStamp < b.timeStamp ? -1 : 1));\n    }\n\n    return curveTxs;\n  }\n  filterEtherscanTxs = async (results,enabledTokens=[],processTxs=true,processStoredTxs=true) => {\n    if (!this.props.account || !results || !results.length || typeof results.forEach !== 'function'){\n      return [];\n    }\n\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    let etherscanTxs = {};\n    let curveTransfersTxs = [];\n    let curveTransfersTxsToDelete = [];\n\n    // const idleTokensAddresses = Object.values(this.props.availableTokens).map( tokenConfig => (tokenConfig.idle.address) );\n    const curveZapContract = this.getGlobalConfig(['curve','zapContract']);\n    const curvePoolContract = this.getGlobalConfig(['curve','poolContract']);\n    const curveSwapContract = this.getGlobalConfig(['curve','migrationContract']);\n    const curveDepositContract = this.getGlobalConfig(['curve','depositContract']);\n\n    // this.customLog('filterEtherscanTxs',enabledTokens,results);\n\n    enabledTokens.forEach(token => {\n      const tokenConfig = this.props.availableTokens[token];\n      const depositProxyContractInfo = this.getGlobalConfig(['contract','methods','deposit','proxyContract']);\n      const migrationContractAddr = tokenConfig.migration && tokenConfig.migration.migrationContract ? tokenConfig.migration.migrationContract.address : null;\n      const migrationContractOldAddrs = tokenConfig.migration && tokenConfig.migration.migrationContract && tokenConfig.migration.migrationContract.oldAddresses ? tokenConfig.migration.migrationContract.oldAddresses : [];\n      const tokenMigrationToolParams = this.getGlobalConfig(['tools','tokenMigration','props','migrationContract']);\n\n      const batchMigration = this.getGlobalConfig(['tools','batchMigration','props','availableTokens',tokenConfig.idle.token]);\n      const batchMigrationContractAddr = batchMigration && batchMigration.migrationContract ? batchMigration.migrationContract.address : null;\n\n      // const curveEnabled = this.getGlobalConfig(['curve','enabled']);\n      const curveTokenConfig = this.getGlobalConfig(['curve','availableTokens',tokenConfig.idle.token]);\n\n      results.forEach( tx => {\n        let tokenDecimals = tokenConfig.decimals;\n        const idleToken = tokenConfig.idle.token;\n        const internalTxs = results.filter(r => r.hash === tx.hash);\n        const isRightToken = internalTxs.length>1 && internalTxs.filter(iTx => iTx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase()).length>0;\n        const isSendTransferTx = internalTxs.length === 1 && tx.from.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n        const isReceiveTransferTx = internalTxs.length === 1 && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n        const isBatchMigrationTx = batchMigrationContractAddr && tx.from.toLowerCase() === batchMigrationContractAddr.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase() && tx.to.toLowerCase() === this.props.account.toLowerCase();\n\n        const isDepositInternalTx = isRightToken && internalTxs.find( iTx => iTx.from.toLowerCase() === this.props.account.toLowerCase() && (iTx.to.toLowerCase() === tokenConfig.idle.address.toLowerCase() || (depositProxyContractInfo && iTx.to.toLowerCase() === depositProxyContractInfo.address.toLowerCase() && internalTxs.filter(iTx2 => iTx2.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase()).length>0 )) );\n        const isRedeemInternalTx = isRightToken && internalTxs.find( iTx => iTx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase() && internalTxs.filter(iTx2 => iTx2.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase()).length && iTx.to.toLowerCase() === this.props.account.toLowerCase() );\n\n        const isMigrationTx = isBatchMigrationTx || (migrationContractAddr && (tx.from.toLowerCase() === migrationContractAddr.toLowerCase() || migrationContractOldAddrs.map((v) => { return v.toLowerCase(); }).includes(tx.from.toLowerCase()) ) && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase());\n        const isConversionTx = tokenMigrationToolParams && (tx.from.toLowerCase() === tokenMigrationToolParams.address.toLowerCase() || tokenMigrationToolParams.oldAddresses.map((v) => { return v.toLowerCase(); }).includes(tx.from.toLowerCase())) && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n        const isDepositTx = isRightToken && !isMigrationTx && tx.from.toLowerCase() === this.props.account.toLowerCase() && (tx.to.toLowerCase() === tokenConfig.idle.address.toLowerCase() || (depositProxyContractInfo && tx.to.toLowerCase() === depositProxyContractInfo.address.toLowerCase() && internalTxs.filter(iTx => iTx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase()).length>0 ));\n        const isRedeemTx = isRightToken && !isMigrationTx && !isDepositInternalTx && tx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase() && internalTxs.filter(iTx => iTx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase()).length && tx.to.toLowerCase() === this.props.account.toLowerCase();\n        const isWithdrawTx = internalTxs.length>1 && internalTxs.filter(iTx => tokenConfig.protocols.map(p => p.address.toLowerCase()).includes(iTx.contractAddress.toLowerCase()) ).length>0 && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n\n        // const curveDepositTx = internalTxs.find( iTx => (iTx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase() && iTx.from.toLowerCase() === this.props.account.toLowerCase()) );\n        const idleTokenAddress = curveTokenConfig && curveTokenConfig.address ? curveTokenConfig.address : tokenConfig.idle.address;\n\n        // Check Curve\n        const curveTx = internalTxs.find( tx => (tx.contractAddress.toLowerCase() === curvePoolContract.address.toLowerCase() && (tx.to.toLowerCase() === this.props.account.toLowerCase() || tx.from.toLowerCase() === this.props.account.toLowerCase()) ) );\n        const isCurveTx = curveTx !== undefined;\n\n        const isCurveDepositTx = isCurveTx && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase() && tx.to.toLowerCase() === curveSwapContract.address.toLowerCase() && tx.from.toLowerCase() === this.props.account.toLowerCase() && this.BNify(tx.value).gt(0);\n        const isCurveRedeemTx = isCurveTx && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase() && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.from.toLowerCase() === curveSwapContract.address.toLowerCase() && this.BNify(tx.value).gt(0);\n\n        const isCurveDepositIn = isCurveTx && tx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase() && tx.from.toLowerCase() === this.props.account.toLowerCase() && tx.to.toLowerCase() === curveDepositContract.address.toLowerCase() && this.BNify(tx.value).gt(0);\n        const isCurveDepositOut = isCurveTx && tx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase() && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.from.toLowerCase() === curveDepositContract.address.toLowerCase() && this.BNify(tx.value).gt(0);\n\n        const isCurveZapIn = isCurveTx && tx.contractAddress.toLowerCase() === curvePoolContract.address.toLowerCase() && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.from.toLowerCase() === curveZapContract.address.toLowerCase() && this.BNify(tx.value).gt(0);\n        const isCurveZapOut = isCurveTx && tx.contractAddress.toLowerCase() === curvePoolContract.address.toLowerCase() && tx.from.toLowerCase() === this.props.account.toLowerCase() && tx.to.toLowerCase() === curveZapContract.address.toLowerCase() && this.BNify(tx.value).gt(0);\n\n        const isCurveTransferOut = tx.contractAddress.toLowerCase() === curvePoolContract.address.toLowerCase() && !isCurveZapOut && !isCurveRedeemTx && /*internalTxs[internalTxs.length-1] === tx &&*/ tx.from.toLowerCase() === this.props.account.toLowerCase();\n        const isCurveTransferIn = tx.contractAddress.toLowerCase() === curvePoolContract.address.toLowerCase() && !isCurveZapIn && !isCurveDepositTx && /*internalTxs[internalTxs.length-1] === tx &&*/ tx.to.toLowerCase() === this.props.account.toLowerCase();\n\n        const isSwapOutTx = !isCurveTx && !isSendTransferTx && !isWithdrawTx && !isRedeemInternalTx && !etherscanTxs[tx.hash] && tx.from.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n        const isSwapTx = !isCurveTx && !isReceiveTransferTx && !isConversionTx && !isDepositInternalTx && !etherscanTxs[tx.hash] && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n\n        // if (tx.hash.toLowerCase() === '0x599a2e7b0094b0a943ffb1d520cb47598dcf3764145c33824e3b032d91ccc489'.toLowerCase()){\n        //   debugger;\n        // }\n\n        if (isSendTransferTx || isReceiveTransferTx || isMigrationTx || isDepositTx || isRedeemTx || isSwapTx || isSwapOutTx || isWithdrawTx || isConversionTx || isCurveDepositTx || isCurveRedeemTx || isCurveZapIn || isCurveZapOut || isCurveTransferOut || isCurveTransferIn || isCurveDepositIn || isCurveDepositOut){\n\n          let action = null;\n          let hashKey = tx.hash;\n\n          if (isDepositTx){\n            action = 'Deposit';\n          } else if (isRedeemTx){\n            action = 'Redeem';\n          } else if (isMigrationTx || isConversionTx){\n            action = 'Migrate';\n          } else if (isSendTransferTx){\n            action = 'Send';\n          } else if (isReceiveTransferTx){\n            action = 'Receive';\n          } else if (isSwapTx){\n            action = 'Swap';\n          } else if (isSwapOutTx){\n            action = 'SwapOut';\n          } else if (isWithdrawTx){\n            action = 'Withdraw';\n          } else if (isCurveDepositTx){\n            action = 'CurveIn';\n          } else if (isCurveRedeemTx){\n            action = 'CurveOut';\n          } else if (isCurveZapIn){\n            action = 'CurveZapIn';\n          } else if (isCurveZapOut){\n            action = 'CurveZapOut';\n          } else if (isCurveDepositIn){\n            action = 'CurveDepositIn';\n          } else if (isCurveDepositOut){\n            action = 'CurveDepositOut';\n          } else if (isCurveTransferIn){\n            action = 'CurveTransferIn';\n          } else if (isCurveTransferOut){\n            action = 'CurveTransferOut';\n          }\n\n          let curveTokens = null;\n          if (isCurveTx){\n            hashKey += '_'+tx.tokenSymbol;\n            curveTokens = this.fixTokenDecimals(curveTx.value,curvePoolContract.decimals);\n\n            // Add action for curve tokens transfers\n            if ((isCurveTransferIn || isCurveTransferOut)){\n              hashKey+='_'+action;\n            }\n          }\n\n          // this.customLog('SAVE!',action);\n\n          if (tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase()){\n            tokenDecimals = 18;\n          } else if (isCurveTx){\n            tokenDecimals = parseInt(tx.tokenDecimal);\n          }\n\n          // Sum the value if already processed\n          if (etherscanTxs[hashKey]){\n            // Prevent second internal tx to sum SwapOut original value\n            switch (etherscanTxs[hashKey].action){\n              case 'SwapOut':\n                if (etherscanTxs[hashKey].action !== action && isRedeemTx){\n                  etherscanTxs[hashKey].tokenValue = this.fixTokenDecimals(tx.value,tokenDecimals);\n                }\n              break;\n              default:\n                if (!curveTx){\n                  const newValue = etherscanTxs[hashKey].value.plus(this.fixTokenDecimals(tx.value,tokenDecimals));\n                  etherscanTxs[hashKey].value = newValue;\n                }\n              break;\n            }\n          } else {\n            // Insert tx in curve transfers buffer\n            if (isCurveTransferIn || isCurveTransferOut){\n              if (!curveTransfersTxsToDelete.includes(tx.hash.toLowerCase())){\n                curveTokens = this.fixTokenDecimals(tx.value,curvePoolContract.decimals);\n                curveTransfersTxs.push({...tx, hashKey, token, idleToken, curveTokens, action, value: this.fixTokenDecimals(tx.value,tokenDecimals)});\n              }\n            } else {\n              etherscanTxs[hashKey] = ({...tx, hashKey, token, idleToken, curveTokens, action, value: this.fixTokenDecimals(tx.value,tokenDecimals)});\n\n              // Delete curveTransfers\n              if (!curveTransfersTxsToDelete.includes(tx.hash.toLowerCase())){\n                curveTransfersTxsToDelete.push(tx.hash.toLowerCase());\n              }\n\n              // Take right tokenSymbol\n              switch (action){\n                case 'Withdraw':\n                  const iTxs = internalTxs.filter(iTx => (iTx !== tx));\n                  if (iTxs.length>0){\n                    const iTx = iTxs[0];\n                    etherscanTxs[hashKey].withdrawnValue = this.fixTokenDecimals(iTx.value,iTx.tokenDecimal);\n                    etherscanTxs[hashKey].tokenSymbol = iTx.tokenSymbol;\n                  }\n                break;\n                case 'CurveIn':\n                case 'CurveOut':\n                case 'CurveZapIn':\n                case 'CurveZapOut':\n                case 'CurveDepositIn':\n                case 'CurveDepositOut':\n                  etherscanTxs[hashKey].tokenSymbol = token;\n                break;\n                default:\n                break;\n              }\n            }   \n          }\n        }\n      });\n    });\n    \n    curveTransfersTxs.forEach( tx => {\n      if (!curveTransfersTxsToDelete.includes(tx.hash.toLowerCase())){\n        etherscanTxs[tx.hashKey] = tx;\n      }\n    });\n  \n    if (processTxs){\n      etherscanTxs = await this.processEtherscanTransactions(etherscanTxs,enabledTokens,processStoredTxs);\n    }\n\n    // console.log('etherscanTxs',etherscanTxs);\n\n    return etherscanTxs;\n  }\n  addStoredTransaction = (txKey,transaction) => {\n\n    const account = this.props && this.props.account ? this.props.account : null;\n    const selectedToken = this.props && this.props.selectedToken ? this.props.selectedToken : null;\n\n    if (!account || !selectedToken || !this.props.availableTokens || !this.props.availableTokens[selectedToken]){\n      return false;\n    }\n\n    const tokenConfig = this.props.availableTokens[selectedToken];\n    const tokenKey = tokenConfig.idle.token;\n\n    let storedTxs = this.getStoredTransactions();\n    if (!storedTxs[account]){\n      storedTxs[account] = {};\n    }\n\n    if (!storedTxs[account][tokenKey]){\n      storedTxs[account][tokenKey] = {};\n    }\n\n    storedTxs[account][tokenKey][txKey] = transaction;\n    this.updateStoredTransactions(storedTxs);\n  }\n  updateStoredTransactions = transactions => {\n    this.setLocalStorage('transactions',JSON.stringify(transactions));\n  }\n  /*\n  Merge storedTxs with this.props.transactions\n  */\n  getStoredTransactions = (account=null,tokenKey=null,selectedToken=null) => {\n    const storedTxs = this.getStoredItem('transactions',true,{});\n    const transactions = this.props.transactions ? { ...this.props.transactions } : {};\n    let output = storedTxs;\n\n    if (account){\n      if (storedTxs[account]){\n        output = storedTxs[account];\n        if (tokenKey){\n          output = output[tokenKey] ? output[tokenKey] : {};\n\n          if (selectedToken){\n            Object.keys(transactions).forEach(txKey => {\n              const tx = transactions[txKey];\n              if (!output[txKey] && tx.token && tx.token.toUpperCase() === selectedToken.toUpperCase()){\n                output[txKey] = transactions[txKey];\n              }\n            });\n          }\n        }\n      } else {\n        output = {};\n      }\n    }\n\n    return output;\n  }\n  processEtherscanTransactions = async (etherscanTxs,enabledTokens=[],processStoredTxs=true) => {\n\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    let txReceipts = {};\n    let storedTxs = this.getStoredTransactions();\n\n    // Init storedTxs for pair account-token if empty\n    if (typeof storedTxs[this.props.account] !== 'object'){\n      storedTxs[this.props.account] = {};\n    }\n\n    // Take base tokens addresses and configs\n    const baseTokensConfigs = {};\n    const baseTokensAddresses = [];\n    const curveAvailableTokens = this.getGlobalConfig(['curve','availableTokens']);\n    Object.keys(curveAvailableTokens).forEach( token => {\n      const curveTokenConfig = curveAvailableTokens[token];\n      const baseTokenConfig = this.getGlobalConfig(['stats','tokens',curveTokenConfig.baseToken]);\n      const baseTokenAddress = baseTokenConfig.address.toLowerCase();\n      baseTokensConfigs[baseTokenAddress] = baseTokenConfig;\n      baseTokensConfigs[baseTokenAddress].token = curveTokenConfig.baseToken;\n      baseTokensAddresses.push(baseTokenAddress);\n    });\n\n    const curveZapContract = this.getGlobalConfig(['curve','zapContract']);\n    // const curvePoolContract = this.getGlobalConfig(['curve','poolContract']);\n    // const curveSwapContract = this.getGlobalConfig(['curve','migrationContract']);\n    // const curveDepositContract = this.getGlobalConfig(['curve','depositContract']);\n\n    await this.asyncForEach(enabledTokens,async (selectedToken) => {\n\n      const tokenConfig = this.props.availableTokens[selectedToken];\n      const tokenKey = tokenConfig.idle.token;\n      const idleToken = tokenConfig.idle.token;\n\n      // Init storedTxs for pair account-token if empty\n      if (typeof storedTxs[this.props.account][tokenKey] !== 'object'){\n        storedTxs[this.props.account][tokenKey] = {};\n      }\n\n      const minedTxs = {...storedTxs[this.props.account][tokenKey]};\n\n      const filteredTxs = Object.values(etherscanTxs).filter(tx => (tx.token === selectedToken));\n      if (filteredTxs && filteredTxs.length){\n\n        await this.asyncForEach(filteredTxs,async (tx,index) => {\n          const txKey = `tx${tx.timeStamp}000`;\n          const storedTx = storedTxs[this.props.account][tokenKey][txKey] ? storedTxs[this.props.account][tokenKey][txKey] : tx;\n\n          let tokenPrice = null;\n          \n          if (storedTx.tokenPrice && !this.BNify(storedTx.tokenPrice).isNaN()){\n            tokenPrice = this.BNify(storedTx.tokenPrice);\n          } else {\n            tokenPrice = await this.getIdleTokenPrice(tokenConfig,tx.blockNumber,tx.timeStamp);\n            storedTx.tokenPrice = tokenPrice;\n          }\n\n          let idleTokens = this.BNify(tx.value);\n          let tokensTransfered = tokenPrice.times(idleTokens);\n\n          // Add transactionHash to storedTx\n          if (!storedTx.transactionHash){\n            storedTx.transactionHash = tx.hash;\n          }\n\n          // Deposited\n          switch (tx.action){\n            case 'Send':\n            case 'Receive':\n            case 'Swap':\n            case 'SwapOut':\n            case 'Migrate':\n              if (!storedTx.tokenAmount){\n                storedTx.idleTokens = idleTokens;\n                storedTx.value = tokensTransfered;\n                storedTx.tokenAmount = tokensTransfered;\n                storedTx.tokenSymbol = selectedToken;\n              }\n            break;\n            case 'Deposit':\n            case 'Redeem':\n              if (!storedTx.tokenAmount){\n                storedTx.value = idleTokens;\n                storedTx.tokenAmount = idleTokens;\n                storedTx.idleTokens = idleTokens.div(tokenPrice);\n              }\n            break;\n            case 'Withdraw':\n              if (!storedTx.tokenAmount){\n                storedTx.idleTokens = idleTokens;\n                storedTx.tokenAmount = tokensTransfered;\n                storedTx.value = storedTx.withdrawnValue;\n              }\n            break;\n            case 'CurveIn':\n            case 'CurveOut':\n              if (!storedTx.tokenAmount){\n                const curveTokenPrice = await this.getCurveTokenPrice(tx.blockNumber);\n                storedTx.idleTokens = idleTokens;\n                storedTx.tokenAmount = tokensTransfered;\n                storedTx.curveTokenPrice = curveTokenPrice;\n              }\n            break;\n            case 'CurveTransferIn':\n            case 'CurveTransferOut':\n              if (!storedTx.curveTokenPrice){\n                const curveTokenPrice = await this.getCurveTokenPrice(tx.blockNumber);\n                storedTx.curveTokenPrice = curveTokenPrice;\n                storedTx.tokenAmount = this.BNify(storedTx.curveTokens).times(storedTx.curveTokenPrice);\n              }\n\n              storedTx.idleTokens = this.BNify(0);\n            break;\n            case 'CurveZapIn':\n            case 'CurveZapOut':\n              if (!storedTx.curveTokenPrice){\n                const curveTokenPrice = await this.getCurveTokenPrice(tx.blockNumber);\n                storedTx.curveTokenPrice = curveTokenPrice;\n              }\n\n              if (!storedTx.tokenAmount){\n\n                storedTx.tokenAmount = this.BNify(0);\n                storedTx.idleTokens = this.BNify(0);\n\n                const curveTxReceipt = txReceipts[tx.hashKey] ? txReceipts[tx.hashKey] : await (new Promise( async (resolve, reject) => {\n                  this.props.web3.eth.getTransactionReceipt(tx.hash,(err,tx)=>{\n                    if (err){\n                      reject(err);\n                    }\n                    resolve(tx);\n                  });\n                }));\n\n                if (curveTxReceipt){\n\n                  // Save receipt\n                  if (!txReceipts[tx.hashKey]){\n                    txReceipts[tx.hashKey] = curveTxReceipt;\n                  }\n\n                  const filteredLogs = curveTxReceipt.logs.filter( log => (baseTokensAddresses.includes(log.address.toLowerCase()) && log.topics[log.topics.length-1].toLowerCase() === `0x00000000000000000000000${curveZapContract.address.replace('x','').toLowerCase()}` ) );\n\n                  this.customLog('filteredLogs',filteredLogs);\n\n                  if (filteredLogs && filteredLogs.length){\n                    filteredLogs.forEach( log => {\n                      let tokenAmount = parseInt(log.data,16);\n                      const baseTokensConfig = baseTokensConfigs[log.address.toLowerCase()];\n                      const tokenDecimals = baseTokensConfig.decimals;\n                      tokenAmount = this.fixTokenDecimals(tokenAmount,tokenDecimals);\n                      storedTx.tokenAmount = storedTx.tokenAmount.plus(tokenAmount);\n                      this.customLog('Add tokenAmount ('+tx.hash+')',baseTokensConfig.token,tokenAmount.toFixed(5),storedTx.tokenAmount.toFixed(5));\n                    });\n                  }\n                }\n              }\n            break;\n            case 'CurveDepositIn':\n            case 'CurveDepositOut':\n              if (!storedTx.curveTokenPrice){\n                const curveTokenPrice = await this.getCurveTokenPrice(tx.blockNumber);\n                storedTx.curveTokenPrice = curveTokenPrice;\n              }\n\n              storedTx.tokenAmount = this.BNify(storedTx.value);\n\n              if (!storedTx.idleTokens){\n\n                const curveTxReceipt = txReceipts[tx.hashKey] ? txReceipts[tx.hashKey] : await (new Promise( async (resolve, reject) => {\n                  this.props.web3.eth.getTransactionReceipt(tx.hash,(err,tx)=>{\n                    if (err){\n                      reject(err);\n                    }\n                    resolve(tx);\n                  });\n                }));\n\n                if (curveTxReceipt){\n                  const curveTokenConfig = this.getGlobalConfig(['curve','availableTokens',idleToken]);\n                  const idleTokenDecimals = curveTokenConfig && curveTokenConfig.decimals ? curveTokenConfig.decimals : 18;\n                  const idleTokenAddress = curveTokenConfig && curveTokenConfig.address ? curveTokenConfig.address : tokenConfig.idle.address;\n\n                  // Save receipt\n                  if (!txReceipts[tx.hashKey]){\n                    txReceipts[tx.hashKey] = curveTxReceipt;\n                  }\n\n                  const filteredLogs = curveTxReceipt.logs.filter( log => (log.address.toLowerCase()===idleTokenAddress ) );\n                  if (filteredLogs && filteredLogs.length){\n                    idleTokens = parseInt(filteredLogs[0].data,16);\n                    idleTokens = this.fixTokenDecimals(idleTokens,idleTokenDecimals);\n                    storedTx.idleTokens = idleTokens;\n                  }\n                }\n              }\n            break;\n            default:\n            break;\n          }\n            \n          // Save token for future filtering\n          storedTx.token = selectedToken;\n\n          // Save processed tx\n          etherscanTxs[tx.hashKey] = storedTx;\n\n          // Store processed Tx\n          storedTxs[this.props.account][tokenKey][txKey] = storedTx;\n\n          // Remove from minted Txs\n          delete minedTxs[txKey];\n        });\n      }\n\n      // Process Stored txs\n      if (processStoredTxs){\n        etherscanTxs = await this.processStoredTxs(etherscanTxs,[selectedToken],this.props.transactions);\n      }\n    });\n\n    // Update Stored txs\n    if (storedTxs){\n      this.updateStoredTransactions(storedTxs);\n    }\n\n    return etherscanTxs;\n  }\n  processStoredTxs = async (etherscanTxs,enabledTokens=[],txsToProcess=null) => {\n\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    let storedTxs = this.getStoredItem('transactions',true,{})\n\n    // Init storedTxs\n    if (!storedTxs[this.props.account]){\n      storedTxs[this.props.account] = {};\n    }\n\n    etherscanTxs = Object.assign({},etherscanTxs);\n\n    const networkId = this.props.network.current.id || this.getGlobalConfig(['network','requiredNetwork']);\n\n    // this.customLog('Processing stored txs',enabledTokens);\n\n    await this.asyncForEach(enabledTokens,async (selectedToken) => {\n\n      const tokenConfig = this.props.availableTokens[selectedToken];\n      const tokenKey = tokenConfig.idle.token;\n\n      // Init storedTxs\n      if (!storedTxs[this.props.account][tokenKey]){\n        storedTxs[this.props.account][tokenKey] = {};\n      }\n\n      txsToProcess = txsToProcess && Object.values(txsToProcess).length ? txsToProcess : this.getStoredTransactions(this.props.account,tokenKey,selectedToken);\n      \n      // this.customLog('txsToProcess',selectedToken,txsToProcess);\n\n      // if (!Object.values(txsToProcess).length && selectedToken==='DAI' && Object.values(this.props.transactions).length>0){\n      //   debugger;\n      // }\n\n      // Debug transactions\n      /*\n      txsToProcess['xxxxx'] = {\n        status:'success',\n        created:Date.now(),\n        method:'executeMetaTransaction',\n        token:selectedToken.toUpperCase(),\n        transactionHash:'0x000000000000000000000000000'\n      };\n      */\n\n      await this.asyncForEach(Object.keys(txsToProcess),async (txKey,i) => {\n        const tx = txsToProcess[txKey];\n\n        // Skip wrong token\n        if (!tx || !tx.token || tx.token.toUpperCase() !== selectedToken.toUpperCase() || (tx.networkId && parseInt(tx.networkId) !== parseInt(networkId))){\n          return false;\n        }\n\n        const isStoredTx = storedTxs && storedTxs[this.props.account] && storedTxs[this.props.account][tokenKey] && storedTxs[this.props.account][tokenKey][txKey];\n\n        const allowedMethods = {\n          mintIdleToken:'Deposit',\n          redeemIdleToken:'Redeem',\n          migrateFromToIdle:'Migrate',\n          mintIdleTokensProxy:'Deposit',\n          migrateFromAaveToIdle:'Migrate',\n          migrateFromIearnToIdle:'Migrate',\n          executeMetaTransaction:'Migrate',\n          migrateFromFulcrumToIdle:'Migrate',\n          migrateFromCompoundToIdle:'Migrate',\n        };\n        const pendingStatus = ['pending','started'];\n        const txSucceeded = tx.status === 'success';\n        const txPending = pendingStatus.includes(tx.status);\n        const isMetaTx = tx.method === 'executeMetaTransaction';\n        const txHash = tx.transactionHash ? tx.transactionHash : null;\n        const methodIsAllowed = Object.keys(allowedMethods).includes(tx.method);\n\n        // Skip transaction if already present in etherscanTxs with same status\n        if (txHash && etherscanTxs[txHash] && etherscanTxs[txHash].tokenPrice){\n          return false;\n        }\n\n        if (txPending && txHash && !etherscanTxs[txHash] && methodIsAllowed && tx.params.length){\n          // this.customLog('processStoredTxs',tx.method,tx.status,tx.params);\n          const isMigrationTx = allowedMethods[tx.method] === 'Migrate';\n          const decimals = isMigrationTx ? 18 : tokenConfig.decimals;\n          etherscanTxs[`t${tx.created}`] = {\n            status:'Pending',\n            token:selectedToken,\n            action:allowedMethods[tx.method],\n            timeStamp:parseInt(tx.created/1000),\n            hash:txHash ? tx.transactionHash : null,\n            tokenSymbol:isMigrationTx ? tokenConfig.idle.token : selectedToken,\n            value: tx.value ? tx.value : this.fixTokenDecimals(tx.params[0],decimals).toString()\n          };\n\n          return false;\n        }\n\n        // Skip invalid txs\n        if (!txSucceeded || !txHash || !methodIsAllowed){\n          return false;\n        }\n\n        let realTx = tx.realTx ? tx.realTx : null;\n\n        if (!realTx){\n          // this.customLog('loadTxs - getTransaction',tx.transactionHash);\n          realTx = await (new Promise( async (resolve, reject) => {\n            this.props.web3.eth.getTransaction(tx.transactionHash,(err,txReceipt)=>{\n              if (err){\n                reject(err);\n              }\n              resolve(txReceipt);\n            });\n          }));\n        }\n\n        // this.customLog('realTx (localStorage)',realTx);\n\n        // Skip txs from other wallets if not meta-txs\n        if (!realTx || (!isMetaTx && realTx.from.toLowerCase() !== this.props.account.toLowerCase())){\n          return false;\n        }\n\n        const tokenPrice = await this.getIdleTokenPrice(tokenConfig,realTx.blockNumber,realTx.timeStamp);\n\n        realTx.status = 'Completed';\n        realTx.action = allowedMethods[tx.method];\n        realTx.contractAddress = tokenConfig.address;\n        realTx.timeStamp = parseInt(tx.created/1000);\n\n        let txValue = null;\n        switch (tx.method){\n          case 'mintIdleToken':\n          case 'mintIdleTokensProxy':\n            if (!tx.params){\n              if (isStoredTx){\n                storedTxs[this.props.account][tokenKey][txKey] = tx;\n              }\n              return false;\n            }\n\n            if (realTx.to.toLowerCase() !== tokenConfig.idle.address.toLowerCase()){\n              // Remove wrong contract tx\n              if (isStoredTx){\n                delete storedTxs[this.props.account][tokenKey][txKey];\n              }\n              // this.customLog('Skipped deposit tx '+tx.transactionHash+' - wrong contract');\n              return false;\n            }\n\n            txValue = tx.params ? this.fixTokenDecimals(tx.params[0],tokenConfig.decimals).toString() : 0;\n            if (!txValue){\n              // this.customLog('Skipped deposit tx '+tx.transactionHash+' - value is zero ('+txValue+')');\n              return false;\n            }\n\n            realTx.value = txValue;\n            realTx.tokenAmount = txValue;\n          break;\n          case 'redeemIdleToken':\n            if (!tx.params){\n              if (isStoredTx){\n                storedTxs[this.props.account][tokenKey][txKey] = tx;\n              }\n              return false;\n            }\n\n            if (!realTx.tokenPrice){\n              const redeemedValueFixed = this.fixTokenDecimals(tx.params[0],18).times(tokenPrice);\n              realTx.tokenPrice = tokenPrice;\n              realTx.value = redeemedValueFixed;\n              realTx.tokenAmount = redeemedValueFixed;\n            }\n          break;\n          case 'executeMetaTransaction':\n            let executeMetaTransactionReceipt = tx.txReceipt ? tx.txReceipt : null;\n\n            if (!executeMetaTransactionReceipt){\n              executeMetaTransactionReceipt = await (new Promise( async (resolve, reject) => {\n                this.props.web3.eth.getTransactionReceipt(tx.transactionHash,(err,tx)=>{\n                  if (err){\n                    reject(err);\n                  }\n                  resolve(tx);\n                });\n              }));\n            }\n\n            if (!executeMetaTransactionReceipt){\n              return false;\n            }\n\n            // Save txReceipt into the tx\n            if (!tx.txReceipt){\n              tx.txReceipt = executeMetaTransactionReceipt;\n              if (isStoredTx){\n                storedTxs[this.props.account][tokenKey][txKey] = tx;\n              }\n            }\n\n            let action = null;\n            let executeMetaTransactionContractAddr = null;\n            let executeMetaTransactionInternalTransfers = [];\n            const IdleProxyMinterInfo = this.getGlobalConfig(['contract','deposit','proxyContract']);\n\n            // Handle migration tx\n            if (tokenConfig.migration && tokenConfig.migration.oldContract){\n              if (executeMetaTransactionReceipt.logs){\n                executeMetaTransactionContractAddr = tokenConfig.migration.oldContract.address.replace('x','').toLowerCase();\n                executeMetaTransactionInternalTransfers = executeMetaTransactionReceipt.logs.filter((tx) => { return tx.address.toLowerCase()===tokenConfig.address.toLowerCase() && tx.topics[tx.topics.length-1].toLowerCase() === `0x00000000000000000000000${executeMetaTransactionContractAddr}`; });\n              } else if (executeMetaTransactionReceipt.events){\n                executeMetaTransactionInternalTransfers = Object.values(executeMetaTransactionReceipt.events).filter((tx) => { return tx.address.toLowerCase()===tokenConfig.address.toLowerCase(); });\n              }\n\n              if (executeMetaTransactionInternalTransfers.length){\n                action = 'Migrate';\n              }\n            }\n\n            // Handle deposit tx\n            if (!executeMetaTransactionInternalTransfers.length){\n              if (executeMetaTransactionReceipt.logs){\n                executeMetaTransactionContractAddr = tokenConfig.idle.address.replace('x','').toLowerCase();\n                executeMetaTransactionInternalTransfers = executeMetaTransactionReceipt.logs.filter((tx) => { return tx.address.toLowerCase()===tokenConfig.address.toLowerCase() && tx.topics[tx.topics.length-1].toLowerCase() === `0x00000000000000000000000${executeMetaTransactionContractAddr}`; });\n\n                // Handle deposit made with proxy contract\n                if (!executeMetaTransactionInternalTransfers.length && IdleProxyMinterInfo){\n                  executeMetaTransactionContractAddr = IdleProxyMinterInfo.address.replace('x','').toLowerCase();\n                  executeMetaTransactionInternalTransfers = executeMetaTransactionReceipt.logs.filter((tx) => { return tx.address.toLowerCase()===tokenConfig.address.toLowerCase() && tx.topics[tx.topics.length-1].toLowerCase() === `0x00000000000000000000000${executeMetaTransactionContractAddr}`; });\n                }\n              } else if (executeMetaTransactionReceipt.events){\n                executeMetaTransactionInternalTransfers = Object.values(executeMetaTransactionReceipt.events).filter((tx) => { return tx.address.toLowerCase()===tokenConfig.address.toLowerCase(); });\n              }\n\n              if (executeMetaTransactionInternalTransfers.length){\n                action = 'Deposit';\n              }\n            }\n\n            if (!executeMetaTransactionInternalTransfers.length){\n              return false;\n            }\n\n            const internalTransfer = executeMetaTransactionInternalTransfers[0];\n\n            const metaTxValue = internalTransfer.data ? parseInt(internalTransfer.data,16) : (internalTransfer.raw && internalTransfer.raw.data) ? parseInt(internalTransfer.raw.data,16) : null;\n\n            if (!metaTxValue){\n              return false;\n            }\n\n            const metaTxValueFixed = this.fixTokenDecimals(metaTxValue,tokenConfig.decimals);\n            realTx.action = action;\n            realTx.value = metaTxValueFixed;\n            realTx.tokenAmount = metaTxValueFixed;\n            // this.customLog(metaTxValueFixed.toString());\n          break;\n          case 'migrateFromCompoundToIdle':\n          case 'migrateFromFulcrumToIdle':\n          case 'migrateFromAaveToIdle':\n          case 'migrateFromIearnToIdle':\n          case 'migrateFromToIdle':\n            if (!tokenConfig.migration || !tokenConfig.migration.oldContract){\n              return false;\n            }\n\n            let migrationTxReceipt = tx.txReceipt ? tx.txReceipt : null;\n\n            if (!migrationTxReceipt){\n              migrationTxReceipt = await (new Promise( async (resolve, reject) => {\n                this.props.web3.eth.getTransactionReceipt(tx.transactionHash,(err,tx)=>{\n                  if (err){\n                    reject(err);\n                  }\n                  resolve(tx);\n                });\n              }));\n            }\n\n            if (!migrationTxReceipt){\n              return false;\n            }\n\n            // Save txReceipt into the tx\n            if (!tx.txReceipt){\n              tx.txReceipt = migrationTxReceipt;\n              if (isStoredTx){\n                storedTxs[this.props.account][tokenKey][txKey] = tx;\n              }\n            }\n\n            const migrationContractAddr = tokenConfig.migration.migrationContract.address.toLowerCase().replace('x','');\n            const contractAddress = tokenConfig.idle.address.toLowerCase().replace('x','');\n            const migrationTxInternalTransfers = migrationTxReceipt.logs.filter((tx) => { return tx.topics.length>=3 && tx.topics[tx.topics.length-2].toLowerCase() === `0x00000000000000000000000${migrationContractAddr}` && tx.topics[tx.topics.length-1].toLowerCase() === `0x00000000000000000000000${contractAddress}`; });\n\n            if (!migrationTxInternalTransfers.length){\n              return false;\n            }\n\n            const migrationInternalTransfer = migrationTxInternalTransfers.pop();\n\n            const decodedLogs = this.props.web3.eth.abi.decodeLog([\n              {\n                internalType: \"uint256\",\n                name: \"_token\",\n                type: \"uint256\"\n              },\n            ],migrationInternalTransfer.data,migrationInternalTransfer.topics);\n\n            if (!decodedLogs || !decodedLogs._token){\n              return false;\n            }\n\n            const migrationValue = decodedLogs._token;\n            const migrationValueFixed = this.fixTokenDecimals(migrationValue,tokenConfig.decimals);\n            realTx.value = migrationValueFixed.toString();\n          break;\n          default:\n          break;\n        }\n\n        realTx.tokenPrice = tokenPrice;\n        realTx.token = selectedToken;\n        realTx.tokenSymbol = selectedToken;\n        realTx.idleTokens = tokenPrice.times(this.BNify(realTx.value));\n\n        // Save processed tx\n        etherscanTxs[txHash] = realTx;\n        // etherscanTxs.push(realTx);\n\n        // Store processed Tx\n        if (!tx.realTx){\n          tx.realTx = realTx;\n          storedTxs[this.props.account][tokenKey][txKey] = tx;\n        }\n      });\n    });\n\n    // Update Stored Txs\n    if (storedTxs){\n      this.updateStoredTransactions(storedTxs);\n    }\n\n    return etherscanTxs;\n  }\n  saveCachedRequest = (endpoint,alias=false,data) => {\n    const key = alias ? alias : endpoint;\n    let cachedRequests = this.getCachedDataWithLocalStorage('cachedRequests',{});\n    const timestamp = parseInt(Date.now()/1000);\n    cachedRequests[key] = {\n      data,\n      timestamp\n    };\n    return this.setCachedDataWithLocalStorage('cachedRequests',cachedRequests);\n  }\n  getCustomAddress = () => {\n    return this.getStoredItem('customAddress',false);\n  }\n  setCustomAddress = (customAddress) => {\n    return this.setLocalStorage('customAddress',customAddress);\n  }\n  getCachedRequest = (endpoint,alias=false) => {\n    const key = alias ? alias : endpoint;\n    let cachedRequests = this.getCachedDataWithLocalStorage('cachedRequests',{});\n    // Check if it's not expired\n    if (cachedRequests && cachedRequests[key]){\n      return cachedRequests[key].data;\n    }\n    return null;\n  }\n  makeRequest = async(endpoint,error_callback=false,config=null) => {\n    const data = await axios\n                  .get(endpoint,config)\n                  .catch(err => {\n                    if (typeof error_callback === 'function'){\n                      error_callback(err);\n                    }\n                  });\n    return data;\n  }\n  makeEtherscanApiRequest = async (endpoint,keys=[],TTL=120,apiKeyIndex=0) => {\n    const timestamp = parseInt(Date.now()/1000);\n    \n    // Check if already exists\n    let cachedRequests = this.getCachedDataWithLocalStorage('cachedRequests',{});\n    // Check if it's not expired\n    if (cachedRequests && cachedRequests[endpoint] && cachedRequests[endpoint].timestamp && timestamp-cachedRequests[endpoint].timestamp<TTL){\n      return cachedRequests[endpoint].data;\n    }\n\n    const apiKey = keys[apiKeyIndex];\n    const data = await this.makeRequest(endpoint+'&apikey='+apiKey);\n\n    // console.log('makeEtherscanApiRequest',endpoint+'&apikey='+apiKey,apiKeyIndex+'/'+keys.length,data,(data.data ? data.data.message : null),apiKeyIndex<keys.length-1);\n\n    if (data && data.data && data.data.message === 'OK'){\n      cachedRequests[endpoint] = {\n        data,\n        timestamp\n      };\n      this.setCachedDataWithLocalStorage('cachedRequests',cachedRequests);\n      return data;\n    } else if (apiKeyIndex<keys.length-1) {\n      return await this.makeEtherscanApiRequest(endpoint,keys,TTL,apiKeyIndex+1);\n    }\n    return null;\n  }\n  makeCachedRequest = async (endpoint,TTL=60,return_data=false,alias=false,config=null) => {\n    const key = alias ? alias : endpoint;\n    const timestamp = parseInt(Date.now()/1000);\n    \n    // Check if already exists\n    const cachedRequests = this.getCachedDataWithLocalStorage('cachedRequests',{});\n    // Check if it's not expired\n    if (cachedRequests && cachedRequests[key] && cachedRequests[key].timestamp && timestamp-cachedRequests[key].timestamp<TTL){\n      return (cachedRequests[key].data && return_data ? cachedRequests[key].data.data : cachedRequests[key].data);\n    }\n\n    const data = await this.makeRequest(endpoint,false,config);\n\n    cachedRequests[key] = {\n      data,\n      timestamp\n    };\n    this.setCachedDataWithLocalStorage('cachedRequests',cachedRequests);\n    return (data && return_data ? data.data : data);\n  }\n  getTransactionError = error => {\n    let output = 'error';\n    if (parseInt(error.code)){\n      const errorCode = parseInt(error.code);\n      switch (errorCode){\n        case 4001:\n          output = 'denied';\n        break;\n        default:\n          output = `error_${errorCode}`;\n        break;\n      }\n    } else if (error.message){\n      output = error.message.split(\"\\n\")[0]; // Take just the first line of the error\n    }\n\n    return output;\n  }\n  getGlobalConfigs = () => {\n    return globalConfigs;\n  }\n  getArrayPath = (path,array) => {\n    if (!array){\n      return null;\n    }\n    path = Object.assign([],path);\n    if (path.length>0){\n      const prop = path.shift();\n      if (!path.length){\n        return array[prop] ? array[prop] : null;\n      } else if (array[prop]) {\n        return this.getArrayPath(path,array[prop]);\n      }\n    }\n    return null;\n  }\n  getGlobalConfig = (path,configs=false) => {\n    configs = configs ? configs : globalConfigs;\n    if (path.length>0){\n      const prop = path.shift();\n      if (!path.length){\n        return configs[prop] ? configs[prop] : null;\n      } else if (configs[prop]) {\n        return this.getGlobalConfig(path,configs[prop]);\n      }\n    }\n    return null;\n  }\n  checkUrlOrigin = () => {\n    return window.location.origin.toLowerCase().includes(globalConfigs.baseURL.toLowerCase());\n  }\n  checkUrlBeta = () => {\n    return window.location.origin.toLowerCase().includes(globalConfigs.betaURL.toLowerCase());\n  }\n  sendGoogleAnalyticsPageview = async (page=null) => {\n    page = page || window.location.hash.substr(1);\n    const googlePageviewInfo = this.getGlobalConfig(['analytics','google','pageView']);\n    const isOrigin = this.checkUrlOrigin();\n    if (googlePageviewInfo.enabled && isOrigin && window.ga){\n      window.ga('set', 'page', page);\n      window.ga('send', 'pageview');\n    }\n  }\n  sendGoogleAnalyticsEvent = async (eventData,callback=null) => {\n\n    const googleEventsInfo = globalConfigs.analytics.google.events;\n    const debugEnabled = googleEventsInfo.debugEnabled;\n    const originOk = window.location.origin.toLowerCase().includes(globalConfigs.baseURL.toLowerCase());\n\n    if (googleEventsInfo.enabled && window.ga && ( debugEnabled || originOk)){\n\n      // Check if testnet postfix required\n      if (googleEventsInfo.addPostfixForTestnet){\n        // Postfix network name if not mainnet\n        if (globalConfigs.network.requiredNetwork !== 1){\n          const currentNetwork = globalConfigs.network.availableNetworks[globalConfigs.network.requiredNetwork];\n          eventData.eventCategory += `_${currentNetwork}`;\n        // Postfix test for debug\n        } else if (debugEnabled && !originOk) {\n          eventData.eventCategory += '_test';\n        }\n      }\n\n      await (new Promise( async (resolve, reject) => {\n        eventData.hitCallback = () => {\n          resolve(true);\n        };\n        eventData.hitCallbackFail = () => {\n          reject();\n        };\n\n        window.ga('send', 'event', eventData);\n      }));\n\n      if (typeof callback === 'function'){\n        callback();\n      }\n    }\n\n    if (typeof callback === 'function'){\n      callback();\n    }\n\n    return false;\n  }\n  createContract = async (name, address, abi) => {\n    try {\n      const contract = new this.props.web3.eth.Contract(abi, address);\n      return {name, contract};\n    } catch (error) {\n      this.customLogError(\"Could not create contract.\",name,address,error);\n    }\n    return null;\n  }\n  getWalletProvider = (defaultProvider=null) => {\n    return this.getStoredItem('walletProvider',false,defaultProvider);\n  }\n  simpleIDPassUserInfo = (userInfo,simpleID) => {\n    if (!userInfo.address && this.props.account){\n      userInfo.address = this.props.account;\n    }\n    if (!userInfo.provider){\n      userInfo.provider = this.getWalletProvider();\n    }\n    if (typeof userInfo.email !== 'undefined' && !userInfo.email){\n      delete userInfo.email;\n    }\n    if (!userInfo.address){\n      return false;\n    }\n    simpleID = simpleID ? simpleID : (this.props.simpleID ? this.props.simpleID : (typeof this.props.initSimpleID === 'function' ? this.props.initSimpleID() : null));\n    if (simpleID){\n      return simpleID.passUserInfo(userInfo);\n    }\n    return false;\n  }\n  getEtherscanTransactionUrl = (txHash) => {\n    const requiredNetwork = this.props.network.current.id || this.getGlobalConfig(['network','requiredNetwork']);\n    const baseurl = this.getGlobalConfig(['network','providers','etherscan','baseUrl',requiredNetwork]);\n    return txHash ? `${baseurl}/tx/${txHash}` : null;\n  }\n  getEtherscanAddressUrl = (address) => {\n    const requiredNetwork = this.props.network.current.id || this.getGlobalConfig(['network','requiredNetwork']);\n    const baseurl = this.getGlobalConfig(['network','providers','etherscan','baseUrl',requiredNetwork]);\n    return address ? `${baseurl}/address/${address}` : null;\n  }\n  formatMoney = (amount, decimalCount = 2, decimal = \".\", thousands = \",\") => {\n    try {\n      decimalCount = Math.abs(decimalCount);\n      decimalCount = isNaN(decimalCount) ? 2 : decimalCount;\n\n      const negativeSign = amount < 0 ? \"-\" : \"\";\n\n      let i = parseInt(amount = Math.abs(Number(amount) || 0).toFixed(decimalCount)).toString();\n      let j = (i.length > 3) ? i.length % 3 : 0;\n\n      return negativeSign + (j ? i.substr(0, j) + thousands : '') + i.substr(j).replace(/(\\d{3})(?=\\d)/g, \"$1\" + thousands) + (decimalCount ? decimal + Math.abs(amount - i).toFixed(decimalCount).slice(2) : \"\");\n    } catch (e) {\n      return null;\n    }\n  }\n  getSnapshotProposals = async (activeOnly=false) => {\n\n    const cachedDataKey = `snapshotProposals_${activeOnly}`;\n    const cachedData = this.getCachedData(cachedDataKey);\n    if (cachedData){\n      return cachedData;\n    }\n\n    const whitelist = this.getGlobalConfig(['network','providers','snapshot','whitelist']).map( addr => addr.toLowerCase() );\n    const endpoint = this.getGlobalConfig(['network','providers','snapshot','endpoints','proposals']);\n    let proposals = await this.makeCachedRequest(endpoint,1440,true);\n\n    // console.log('getSnapshotProposals',proposals);\n\n    if (proposals && !proposals.error){\n      proposals = Object.values(proposals);\n\n      const currTime = parseInt(Date.now()/1000);\n      if (activeOnly){\n        proposals =  proposals.filter( p => (p.msg.payload.start<=currTime && p.msg.payload.end>currTime) );\n      }\n\n      // console.log(proposals);\n\n      const validProposals = [];\n      await this.asyncForEach(proposals, async (p) => {\n        // Add proposal if ended\n        if (p.msg.payload.end<=currTime || whitelist.includes(p.address.toLowerCase())){\n          validProposals.push(p);\n        } else {\n          const blockNumber = p.msg.payload.snapshot;\n\n          let checkedStrategies = false;\n          await this.asyncForEach( p.msg.payload.metadata.strategies, async (s) => {\n            if (checkedStrategies){\n              return;\n            }\n            if (s.name==='erc20-balance-of'){\n              const tokenName = s.params.symbol;\n              const tokenContract = this.getContractByName(tokenName);\n              if (tokenContract){\n                const tokenBalance = await this.getTokenBalance(tokenName,p.address,true,blockNumber);\n                // console.log(p.relayerIpfsHash,p.address,s.name,tokenBalance ? tokenBalance.toFixed() : null);\n                if (tokenBalance && this.BNify(tokenBalance).gt(100)){\n                  checkedStrategies = true;\n                }\n              }\n            } else {\n              // checkedStrategies = true;\n            }\n\n            // console.log(p.relayerIpfsHash,p.address,s.name,checkedStrategies);\n          });\n          \n          // Add proposal is passed token balances check\n          if (checkedStrategies){\n            validProposals.push(p);\n          }\n        }\n      });\n\n      return this.setCachedData(cachedDataKey,validProposals);\n    }\n\n  }\n  getTokenApiData = async (address,isRisk=null,startTimestamp=null,endTimestamp=null,forceStartTimestamp=false,frequency=null,order=null,limit=null) => {\n    if (globalConfigs.network.requiredNetwork!==1 || !globalConfigs.stats.enabled){\n      return [];\n    }\n\n    // Check for cached data\n    const cachedDataKey = `tokenApiData_${address}_${isRisk}_${frequency}_${order}_${limit}`;\n    let cachedData = this.getCachedData(cachedDataKey);\n\n    if (cachedData){\n      // Check for fittable start and end time\n      const filteredCachedData = cachedData.filter( c => ( (c.startTimestamp===null || (startTimestamp && c.startTimestamp<=startTimestamp)) && (c.endTimestamp===null || (endTimestamp && c.endTimestamp>=endTimestamp)) ) )\n\n      if (filteredCachedData && filteredCachedData.length>0){\n        const filteredData = filteredCachedData.pop().data;\n        if (filteredData){\n          return filteredData.filter( d => ((!startTimestamp || d.timestamp>=startTimestamp) && (!endTimestamp || d.timestamp<=endTimestamp)) );\n        }\n        return null;\n      }\n    // Initialize cachedData\n    } else {\n      cachedData = [];\n    }\n\n    const apiInfo = globalConfigs.stats.rates;\n    let endpoint = `${apiInfo.endpoint}${address}`;\n\n    if (startTimestamp || endTimestamp || isRisk !== null || frequency !== null){\n      const params = [];\n\n      if (startTimestamp && parseInt(startTimestamp)){\n        if (forceStartTimestamp){\n          params.push(`start=${startTimestamp}`);\n        } else {\n          const start = startTimestamp-(60*60*24*2); // Minus 1 day for Volume graph\n          params.push(`start=${start}`);\n        }\n      }\n\n      if (endTimestamp && parseInt(endTimestamp)){\n        params.push(`end=${endTimestamp}`);\n      }\n\n      if (isRisk !== null){\n        params.push(`isRisk=${isRisk}`);\n      }\n\n      if (frequency !== null && parseInt(frequency)){\n        params.push(`frequency=${frequency}`);\n      }\n\n      if (order !== null){\n        params.push(`order=${order}`);\n      }\n\n      if (limit !== null && parseInt(limit)){\n        params.push(`limit=${limit}`);\n      }\n\n      if (params.length){\n        endpoint += '?'+params.join('&');\n      }\n    }\n\n    const config = this.getGlobalConfig(['stats','config']);\n    let output = await this.makeRequest(endpoint,false,config);\n    if (!output){\n      return [];\n    }\n\n    const data = output.data;\n\n    let filteredData = null;\n    if (isRisk !== null){\n      filteredData = data.filter( d => ( d.isRisk === isRisk ) );\n    }\n\n    cachedData.push({\n      isRisk,\n      endTimestamp,\n      startTimestamp,\n      data:filteredData,\n    });\n\n    this.setCachedData(cachedDataKey,cachedData);\n\n    return data;\n  }\n  getTokenExchangeRate = async (contractName,exchangeRateParams) => {\n    const cachedDataKey = `exchangeRate_${contractName}_${exchangeRateParams.name}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    const exchangeRate = await this.genericContractCall(contractName,exchangeRateParams.name,exchangeRateParams.params);\n    return this.setCachedDataWithLocalStorage(cachedDataKey,exchangeRate,null);\n  }\n  getTokenDecimals = async (contractName) => {\n    contractName = contractName || this.props.selectedToken;\n\n    if (!contractName){\n      return false;\n    }\n\n    const cachedDataKey = `contractDecimals_${contractName}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    const tokenConfig = this.getGlobalConfig(['stats','tokens',contractName]);\n    const decimals = tokenConfig && tokenConfig.decimals ? tokenConfig.decimals : await this.genericContractCall(contractName,'decimals');\n\n    return this.setCachedDataWithLocalStorage(cachedDataKey,decimals,null);\n  }\n  getAvgApr = (aprs,allocations,totalAllocation) => {\n    if (aprs && allocations && totalAllocation){\n      let avgApr = Object.keys(aprs).reduce((aprWeighted,protocolAddr) => {\n        const allocation = this.BNify(allocations[protocolAddr]);\n        const apr = this.BNify(aprs[protocolAddr]);\n        return this.BNify(aprWeighted).plus(allocation.times(apr));\n      },0);\n\n      if (avgApr){\n        return this.BNify(avgApr).div(totalAllocation);\n      }\n    }\n    return null;\n  }\n  getFrequencySeconds = (frequency,quantity=1) => {\n    const frequency_seconds = {\n      hour:3600,\n      day:86400,\n      week:604800\n    };\n    return frequency_seconds[frequency]*quantity;\n  }\n  getIdleStakingRewardsTxs = async () => {\n    const idleTokenConfig = this.getGlobalConfig(['govTokens','IDLE']);\n    const feeDistributorConfig = this.getGlobalConfig(['tools','stake','props','availableTokens','IDLE','feeDistributor']);\n    const etherscanInfo = this.getGlobalConfig(['network','providers','etherscan']);\n    const etherscanApiUrl = etherscanInfo.endpoints[1];\n    const etherscanEndpoint = `${etherscanApiUrl}?module=account&action=tokentx&address=${feeDistributorConfig.address}&sort=desc`;\n    const etherscanTxlist = await this.makeEtherscanApiRequest(etherscanEndpoint,etherscanInfo.keys,3600);\n    // console.log('getIdleStakingRewardsTxs',etherscanEndpoint,etherscanTxlist);\n    if (etherscanTxlist && etherscanTxlist.data && etherscanTxlist.data.result && typeof etherscanTxlist.data.result.filter === 'function'){\n      return etherscanTxlist.data.result.filter( tx => (tx.contractAddress.toLowerCase() === idleTokenConfig.address.toLowerCase() && tx.to.toLowerCase() === feeDistributorConfig.address.toLowerCase() && this.BNify(tx.value).gt(0) ));\n    }\n    return [];\n  }\n  getProtocolInfoByAddress = (addr) => {\n    return this.props.tokenConfig.protocols.find(c => c.address.toLowerCase() === addr.toLowerCase());\n  }\n  integerValue = value => {\n    return this.BNify(value).integerValue(BigNumber.ROUND_FLOOR).toFixed();\n  }\n  normalizeTokenDecimals = tokenDecimals => {\n    return this.BNify(`1e${tokenDecimals}`);\n  }\n  normalizeTokenAmount = (tokenBalance,tokenDecimals,round=true) => {\n    const normalizedTokenDecimals = this.normalizeTokenDecimals(tokenDecimals);\n    return this.BNify(tokenBalance).times(normalizedTokenDecimals).integerValue(BigNumber.ROUND_FLOOR).toFixed();\n  }\n  fixTokenDecimals = (tokenBalance,tokenDecimals,exchangeRate=null) => {\n    if (!tokenDecimals){\n      return this.BNify(tokenBalance);\n    }\n    const normalizedTokenDecimals = this.normalizeTokenDecimals(tokenDecimals);\n    let balance = this.BNify(tokenBalance).div(normalizedTokenDecimals);\n    if (exchangeRate && !exchangeRate.isNaN()){\n      balance = balance.times(exchangeRate);\n    }\n    return balance;\n  }\n  checkContractPaused = async (contractName=null) => {\n    contractName = contractName ? contractName : this.props.tokenConfig.idle.token;\n    const contractPaused = await this.genericContractCallCached(contractName, 'paused').catch(err => {\n      this.customLogError('Generic Idle call err:', err);\n    });\n    // this.customLog('checkContractPaused',this.props.tokenConfig.idle.token,contractPaused);\n    return contractPaused;\n  }\n  getStoredItem = (key,parse_json=true,return_default=null) => {\n    let output = return_default;\n    if (window.localStorage){\n      const item = localStorage.getItem(key);\n      if (item){\n        output = item;\n        if (parse_json){\n          output = JSON.parse(item);\n        }\n      }\n    }\n    if (!output){\n      return return_default;\n    }\n    return output;\n  }\n  clearStoredData = (excludeKeys=[]) => {\n    if (window.localStorage){\n\n      if (!excludeKeys || !excludeKeys.length){\n        return window.localStorage.clear();\n      }\n\n      const storedKeysToRemove = [];\n      for (let i=0;i<window.localStorage.length;i++){\n        const storedKey = window.localStorage.key(i);\n        if (!excludeKeys.includes(storedKey)){\n          storedKeysToRemove.push(storedKey);\n        }\n      }\n      storedKeysToRemove.forEach((storedKey) => {\n        this.removeStoredItem(storedKey)\n      });\n    }\n  }\n  removeStoredItem = (key) => {\n    if (window.localStorage){\n      window.localStorage.removeItem(key);\n      return true;\n    }\n    return false;\n  }\n  setLocalStorage = (key,value,stringify=false) => {\n    if (window.localStorage){\n      try {\n        value = stringify ? JSON.stringify(value) : value;\n        window.localStorage.setItem(key,value);\n        return true;\n      } catch (error) {\n        // this.customLog('setLocalStorage',error);\n        window.localStorage.removeItem(key);\n      }\n    }\n    return false;\n  }\n  checkRebalance = async (tokenConfig) => {\n    if (!tokenConfig && this.props.tokenConfig){\n      tokenConfig = this.props.tokenConfig;\n    }\n    if (!tokenConfig){\n      return false;\n    }\n\n    const lastAllocationsPromises = [];\n    const allocations = await this.genericContractCall(tokenConfig.idle.token, 'getAllocations');\n\n    if (!allocations || !allocations.length){\n      return false;\n    }\n\n    for (let protocolIndex=0;protocolIndex<allocations.length;protocolIndex++){\n      const lastAllocationsPromise = new Promise( async (resolve, reject) => {\n        try {\n          const lastAllocations = await this.genericContractCall(tokenConfig.idle.token, 'lastAllocations',[protocolIndex]);\n          resolve(lastAllocations);\n        } catch (error) {\n          console.log(error);\n          resolve(null);\n        }\n      });\n      lastAllocationsPromises.push(lastAllocationsPromise);\n    }\n\n    const newAllocations = await Promise.all(lastAllocationsPromises);\n\n    if (!allocations || !newAllocations){\n      return true;\n    }\n\n    const diff = allocations.filter( (alloc,index) => alloc !== newAllocations[index] );\n\n    return diff.length>0;\n  }\n  checkMigration = async (tokenConfig,account) => {\n\n    if (!tokenConfig || !account){\n      return false;\n    }\n\n    let migrationEnabled = false;\n    let oldContractBalance = null;\n    let oldContractTokenDecimals = null;\n    // let migrationContractApproved = false;\n    let oldContractBalanceFormatted = null;\n\n    // Check migration contract enabled and balance\n    if (tokenConfig.migration && tokenConfig.migration.enabled){\n      const oldContractName = tokenConfig.migration.oldContract.name;\n      const oldContract = this.getContractByName(oldContractName);\n      const migrationContract = this.getContractByName(tokenConfig.migration.migrationContract.name);\n\n      // this.customLog(oldContractName,tokenConfig.migration.migrationContract.name);\n\n      if (oldContract && migrationContract){\n        // Get old contract token decimals\n        oldContractTokenDecimals = await this.getTokenDecimals(oldContractName);\n\n        // this.customLog('Migration - token decimals',oldContractTokenDecimals ? oldContractTokenDecimals.toString() : null);\n\n        // Check migration contract approval\n        // migrationContractApproved = await this.checkMigrationContractApproved();\n\n        // this.customLog('Migration - approved',migrationContractApproved ? migrationContractApproved.toString() : null);\n\n        // Check old contractBalance\n        oldContractBalance = await this.getContractBalance(oldContractName,account);\n\n        if (oldContractBalance){\n          oldContractBalanceFormatted = this.fixTokenDecimals(oldContractBalance,oldContractTokenDecimals);\n          // Enable migration if old contract balance if greater than 0\n          migrationEnabled = this.BNify(oldContractBalance).gt(0);\n        }\n\n        // this.customLog('Migration - oldContractBalance',oldContractName,account,oldContractBalance,oldContractBalanceFormatted);\n      }\n    }\n\n    // Set migration contract balance\n    return {\n      migrationEnabled,\n      oldContractBalance,\n      oldContractTokenDecimals,\n      oldContractBalanceFormatted,\n    };\n  }\n\n  getContractEvents = async (contractName, eventName, params = {}) => {\n    return await this.getContractPastEvents(contractName, eventName, params);\n  }\n\n  estimateMethodGasUsage = async (contractName, methodName, methodParams = [], account = null) => {\n    account = account || this.props.account;\n    if (!account){\n      return null;\n    }\n    const contract = this.getContractByName(contractName);\n    if (contract && contract.methods[methodName]){\n      const functionCall = contract.methods[methodName](...methodParams);\n\n      let gasPrice = null;\n      let gasLimit = null;\n      \n      try {\n        [\n          gasPrice,\n          gasLimit\n        ] = await Promise.all([\n          this.props.web3.eth.getGasPrice(),\n          functionCall.estimateGas({from: account})\n        ]);\n      } catch (error) {\n\n      }\n\n      if (gasPrice && gasLimit){\n        return this.fixTokenDecimals(this.fixTokenDecimals(gasPrice,9).times(gasLimit),9);\n      }\n    }\n\n    return this.BNify(0);\n  }\n\n  executeMetaTransaction = async (contract, userAddress, signedParameters, callback, callback_receipt) => {\n    try {\n\n      // const gasLimit = await contract.methods\n      //   .executeMetaTransaction(userAddress, ...signedParameters)\n      //   .estimateGas({ from: userAddress });\n\n      // this.customLog(gasLimit);\n\n      const gasPrice = await this.props.web3.eth.getGasPrice();\n\n      const tx = contract.methods\n        .executeMetaTransaction(userAddress, ...signedParameters)\n        .send({\n          from: userAddress,\n          gasPrice\n          // gasLimit\n        });\n\n      tx.on(\"transactionHash\", function(hash) {\n        this.customLog(`Transaction sent by relayer with hash ${hash}`);\n        callback_receipt()\n      }).once(\"confirmation\", function(confirmationNumber, receipt) {\n        this.customLog(\"Transaction confirmed on chain\",receipt);\n        callback_receipt(receipt);\n      });\n    } catch (error) {\n      this.customLog(error);\n      callback(null,error);\n    }\n  }\n\n  getSignatureParameters_v4 = signature => {\n    if (!this.props.web3.utils.isHexStrict(signature)) {\n      throw new Error(\n        'Given value \"'.concat(signature, '\" is not a valid hex string.')\n      );\n    }\n    var r = signature.slice(0, 66);\n    var s = \"0x\".concat(signature.slice(66, 130));\n    var v = \"0x\".concat(signature.slice(130, 132));\n    v = this.props.web3.utils.hexToNumber(v);\n    if (![27, 28].includes(v)) v += 27;\n    return {\n      r: r,\n      s: s,\n      v: v\n    };\n  };\n\n  constructMetaTransactionMessage = (nonce, chainId, functionSignature, contractAddress) => {\n    return ethereumjsABI.soliditySHA3(\n      [\"uint256\",\"address\",\"uint256\",\"bytes\"],\n      [nonce, contractAddress, chainId, toBuffer(functionSignature)]\n    );\n  }\n\n  checkBiconomyLimits = async (userAddress) => {\n    const biconomyInfo = this.getGlobalConfig(['network','providers','biconomy']);\n    const res = await this.makeRequest(`${biconomyInfo.endpoints.limits}?userAddress=${userAddress}&apiId=${biconomyInfo.params.apiId}`,null,{\n      headers:{\n        'x-api-key':biconomyInfo.params.apiKey\n      }\n    });\n\n    if (res && res.data){\n      return res.data;\n    }\n\n    return null;\n  }\n\n  sendTxWithPermit = async (contractName,methodName,methodParams,nonce,callback,callback_receipt) => {\n    const contract = this.getContractByName(contractName);\n\n    if (!contract){\n      callback(null,'Contract not found');\n      return false;\n    }\n\n    if (!contract.methods[methodName]){\n      callback(null,'Method not found');\n      return false;\n    }\n\n    const functionSignature = contract.methods[methodName](...methodParams).encodeABI();\n\n    try{\n      const userAddress = this.props.account;\n      const chainId = this.props.network.current.id || this.getGlobalConfig(['network','requiredNetwork']);\n      const messageToSign = this.constructMetaTransactionMessage(nonce, chainId, functionSignature, contract._address);\n\n      const signature = await this.props.web3.eth.personal.sign(\n        \"0x\" + messageToSign.toString(\"hex\"),\n        userAddress\n      );\n\n      const { r, s, v } = this.getSignatureParameters_v4(signature);\n\n      this.contractMethodSendWrapper(contractName, methodName, methodParams.concat([nonce, r, s, v]), callback, callback_receipt);\n\n      return true;\n    } catch (error) {\n      callback(null,error);\n      return false;\n    }\n  }\n\n  buildBiconomyErc20ForwarderTx = async (contractName,tokenAddress,permitType,callData,gasLimit) => {\n    const contract = this.getContractByName(contractName);\n\n    if (!contract){\n      return false;\n    }\n\n    // console.log('Build Tx ',contract._address,tokenAddress,Number(gasLimit),callData);\n\n    const buildParams = {\n      permitType,\n      data:callData,\n      token:tokenAddress,\n      to:contract._address,\n      txGas:parseInt(gasLimit)\n    };\n\n    // console.log('buildBiconomyErc20ForwarderTx',buildParams);\n\n    //Create the call data that the recipient contract will receive\n    const tx = await this.props.erc20ForwarderClient.buildTx(buildParams);\n\n    return tx;\n  }\n\n  getTransactionReceipt = async (hash) => {\n    return await (new Promise( async (resolve, reject) => {\n      this.props.web3.eth.getTransactionReceipt(hash,(err,tx)=>{\n        if (err){\n          reject(err);\n        }\n        resolve(tx);\n      });\n    }));\n  }\n\n  sendBiconomyTxWithErc20Forwarder = async (req,metaInfo,callback,callback_receipt) => {\n\n    let transactionHash = null;\n\n    try {\n      const txResponse = await this.props.erc20ForwarderClient.permitAndSendTxEIP712({req,metaInfo});\n      transactionHash = txResponse.txHash;\n      // console.log('permitAndSendTxEIP712',transactionHash);\n    } catch (error) {\n      // console.log('permitAndSendTxEIP712 ERROR',error);\n      callback(null,true);\n      return false;\n    }\n\n    if (!transactionHash){\n      // console.log('!transactionHash ERROR');\n      callback(null,true);\n      return false;\n    }\n    \n    const tx = {\n      method:'mintIdleToken',\n      transactionHash\n    };\n    // console.log('sendBiconomyTxWithErc20Forwarder - TX',tx);\n    callback_receipt(tx);\n\n    // fetch mined transaction receipt \n    const fetchReceiptIntervalId = window.setInterval(()=> {\n      this.props.web3.eth.getTransactionReceipt(transactionHash, (err, receipt)=> {\n        // console.log('sendBiconomyTxWithErc20Forwarder - RECEIPT',transactionHash,err,receipt);\n        if(!err && receipt){\n          window.clearInterval(fetchReceiptIntervalId);\n          tx.txReceipt = receipt;\n          tx.status = !err && receipt.status ? 'success' : 'error';\n\n          callback(tx,err);\n\n          if (typeof window.updateTransaction === 'function'){\n            window.updateTransaction(tx,transactionHash,tx.status,null);\n          }\n        }\n      });\n    }, 3000);\n\n    return true;\n  }\n\n  sendBiconomyTxWithPersonalSign = async (contractName,functionSignature,callback,callback_receipt) => {\n    const contract = this.getContractByName(contractName);\n\n    if (!contract){\n      callback(null,'Contract not found');\n      return false;\n    }\n\n    try{\n      const userAddress = this.props.account;\n      const nonce = await contract.methods.getNonce(userAddress).call();\n      const chainId = this.props.network.current.id || this.getGlobalConfig(['network','requiredNetwork']);\n      const messageToSign = this.constructMetaTransactionMessage(nonce, chainId, functionSignature, contract._address);\n\n      const signature = await this.props.web3.eth.personal.sign(\n        \"0x\" + messageToSign.toString(\"hex\"),\n        userAddress\n      );\n\n      const { r, s, v } = this.getSignatureParameters_v4(signature);\n\n      this.contractMethodSendWrapper(contractName, 'executeMetaTransaction', [userAddress, functionSignature, r, s, v], callback, callback_receipt);\n\n      return true;\n    } catch (error) {\n      console.error(error);\n      callback(null,error);\n      return false;\n    }\n  }\n\n  signPermitEIP2612 = async (contractAddress, erc20Name, owner, spender, value, nonce, deadline, chainId) => {\n    if (chainId === undefined) {\n      const result = await this.props.web3.eth.getChainId();\n      chainId = parseInt(result);\n    }\n\n    const domain = [\n      { name: \"name\", type: \"string\" },\n      { name: \"version\", type: \"string\" },\n      { name: \"chainId\", type: \"uint256\" },\n      { name: \"verifyingContract\", type: \"address\" }\n    ];\n\n    const permit = [\n      { name: \"owner\", type: \"address\" },\n      { name: \"spender\", type: \"address\" },\n      { name: \"value\", type: \"uint256\" },\n      { name: \"nonce\", type: \"uint256\" },\n      { name: \"deadline\", type: \"uint256\" },\n    ];\n\n    const domainData = {\n      version: \"2\",\n      name: erc20Name,\n      chainId: chainId,\n      verifyingContract: contractAddress\n    };\n\n    const message = {\n      owner,\n      spender,\n      value,\n      nonce,\n      deadline,\n    };\n\n    const data = JSON.stringify({\n      types: {\n        EIP712Domain: domain,\n        Permit: permit,\n      },\n      primaryType: \"Permit\",\n      domain: domainData,\n      message: message\n    });\n\n    return new Promise((resolve, reject) => {\n      this.props.web3.currentProvider.send({\n        jsonrpc: '2.0',\n        id: Date.now().toString().substring(9),\n        method: \"eth_signTypedData_v4\",\n        params: [owner, data],\n        from: owner\n      }, (error, res) => {\n        if (error) {\n          return reject(error);\n        }\n\n        resolve(res.result);\n      });\n    });\n  }\n\n  signPermit = async (baseContractName, holder, spenderContractName, addToNonce=0, value=null) => {\n    const baseContract = this.getContractByName(baseContractName);\n    const spenderContract = this.getContractByName(spenderContractName);\n\n    if (!baseContract || !spenderContract){\n      return false;\n    }\n\n    const result = await this.props.web3.eth.net.getId();\n    let chainId = parseInt(result);\n\n    const EIP712Domain = [\n      { name: \"name\", type: \"string\" },\n      { name: \"version\", type: \"string\" },\n      { name: \"chainId\", type: \"uint256\" },\n      { name: \"verifyingContract\", type: \"address\" }\n    ];\n\n    const permitConfig = this.getGlobalConfig(['permit',baseContractName]);\n\n    // console.log('permitConfig',permitConfig);\n\n    const expiry = Math.round(new Date().getTime() / 1000 + 3600);\n    let nonce = permitConfig.nonceMethod ? await baseContract.methods[permitConfig.nonceMethod](holder).call() : null;\n    if (addToNonce>0){\n      nonce = parseInt(nonce)+parseInt(addToNonce);\n    }\n    nonce = nonce.toString();\n\n    const Permit = permitConfig.type;\n    const EIPVersion = permitConfig.EIPVersion;\n\n    const spender = spenderContract._address;\n    const verifyingContract = baseContract._address;\n\n    const permitName = permitConfig.name || baseContractName;\n\n    const domain = {\n      chainId,\n      name: permitName,\n      verifyingContract,\n      version: permitConfig.version.toString() || '1',\n    };\n\n    let message = {};\n\n    switch (EIPVersion){\n      case 2612:\n        const owner = holder;\n        const deadline = expiry;\n        // Unlimited allowance\n        value = value || this.integerValue(this.BNify(2).pow(256).minus(1));\n        message = {\n          value,\n          nonce,\n          owner,\n          spender,\n          deadline\n        };\n      break;\n      default:\n        message = {\n          holder,\n          nonce,\n          expiry,\n          spender,\n          allowed: true,\n        };\n      break;\n    }\n\n    const data = JSON.stringify({\n      domain,\n      message,\n      types: {\n        Permit,\n        EIP712Domain\n      },\n      primaryType: 'Permit',\n    });\n\n    // console.log('Permit',JSON.parse(data));\n\n    return new Promise((resolve, reject) => {\n      this.props.web3.currentProvider.send({\n        from: holder,\n        jsonrpc: '2.0',\n        params: [holder, data],\n        method: 'eth_signTypedData_v4',\n        id: Date.now().toString().substring(9),\n      }, (error, response) => {\n        if (error || (response && response.error)) {\n          return resolve(null);\n        } else if (response && response.result) {\n          const signedParameters = this.getSignatureParameters_v4(response.result);\n          signedParameters.nonce = nonce;\n          signedParameters.expiry = expiry;\n          return resolve(signedParameters);\n        }\n      });\n    });\n  }\n\n  sendTxWithPermit = async (baseContractName, holder, spenderContractName, methodName, methodParams, callback, callback_receipt, callback_permit=null) => {\n\n    const baseContract = this.getContractByName(baseContractName);\n    const spenderContract = this.getContractByName(spenderContractName);\n\n    if (!baseContract || !spenderContract){\n      callback(null,'Contract not found');\n      return false;\n    }\n\n    const signedParameters = await this.signPermit(baseContractName, holder, spenderContractName);\n\n    if (signedParameters){\n      const { expiry, nonce, r, s, v } = signedParameters;\n      const permitParams = [expiry, v, r, s];\n\n      const methodAbi = spenderContract._jsonInterface.find( f => f.name === methodName );\n      const useNonce = methodAbi ? methodAbi.inputs.find( i => i.name === 'nonce' ) : true;\n      if (!isNaN(parseInt(nonce)) && useNonce){\n        permitParams.unshift(nonce);\n      }\n      const params = methodParams.concat(permitParams);\n      this.contractMethodSendWrapper(spenderContractName, methodName, params, callback, callback_receipt);\n    } else {\n      callback(null,'Permit cancelled');\n    }\n  }\n\n  sendSignedTx = async (contractName,contractAddress,functionSignature,callback,callback_receipt) => {\n\n    const EIP712Domain = [\n      { name: \"name\", type: \"string\" },\n      { name: \"version\", type: \"string\" },\n      { name: \"chainId\", type: \"uint256\" },\n      { name: \"verifyingContract\", type: \"address\" }\n    ];\n\n    const MetaTransaction = [\n      { name: \"nonce\", type: \"uint256\" },\n      { name: \"from\", type: \"address\" },\n      { name: \"functionSignature\", type: \"bytes\" }\n    ];\n\n    const chainId = await this.props.web3.eth.getChainId();\n\n    const domainData = {\n      chainId,\n      version: '1',\n      name: contractName,\n      verifyingContract: contractAddress\n    };\n\n    const contract = this.getContractByName(contractName);\n\n    if (!contract){\n      callback(null,'Contract not found');\n      return false\n    }\n\n    let userAddress = this.props.account;\n    let nonce = await contract.methods.getNonce(userAddress).call();\n    let message = {};\n    message.nonce = nonce;\n    message.from = userAddress;\n    message.functionSignature = functionSignature;\n\n    const dataToSign = JSON.stringify({\n      types: {\n        EIP712Domain,\n        MetaTransaction\n      },\n      domain: domainData,\n      primaryType: \"MetaTransaction\",\n      message\n    });\n\n    // this.customLog('dataToSign',dataToSign);\n\n    this.props.web3.currentProvider.send(\n      {\n        jsonrpc: \"2.0\",\n        id: 999999999999,\n        from: userAddress,\n        method: \"eth_signTypedData_v4\",\n        params: [userAddress, dataToSign]\n      },\n      (error, response) => {\n        if (error || (response && response.error)) {\n          return callback(null,error);\n        } else if (response && response.result) {\n          const signedParameters = this.getSignatureParameters_v4(response.result);\n          const { r, s, v } = signedParameters;\n            \n          this.contractMethodSendWrapper(contractName, 'executeMetaTransaction', [userAddress, functionSignature, r, s, v], callback, callback_receipt);\n        }\n      }\n    );\n  }\n\n  checkTokenApproved = async (contractName,contractAddr,walletAddr) => {\n    const [\n      balance,\n      allowance\n    ] = await Promise.all([\n      this.getTokenBalance(contractName,walletAddr,false),\n      this.getAllowance(contractName,contractAddr,walletAddr)\n    ]);\n    this.customLog('checkTokenApproved',contractName,this.BNify(allowance).toFixed(),this.BNify(balance).toFixed(),(allowance && this.BNify(allowance).gte(this.BNify(balance))));\n    return allowance && this.BNify(allowance).gte(this.BNify(balance));\n  }\n  getAllowance = async (contractName,contractAddr,walletAddr) => {\n    if (!contractName || !contractAddr || !walletAddr){\n      return false;\n    }\n    this.customLog('getAllowance',contractName,contractAddr,walletAddr);\n    return await this.genericContractCall(\n      contractName, 'allowance', [walletAddr, contractAddr]\n    );\n  }\n  contractMethodSendWrapperWithValue = (contractName,methodName,params,value,callback,callback_receipt,txData) => {\n    this.props.contractMethodSendWrapper(contractName, methodName, params, value, (tx)=>{\n      if (typeof callback === 'function'){\n        callback(tx);\n      }\n    }, (tx) => {\n      if (typeof callback_receipt === 'function'){\n        callback_receipt(tx);\n      }\n    }, null, txData);\n  }\n  contractMethodSendWrapper = (contractName,methodName,params,callback,callback_receipt,txData) => {\n    this.props.contractMethodSendWrapper(contractName, methodName, params, null, (tx)=>{\n      if (typeof callback === 'function'){\n        callback(tx);\n      }\n    }, (tx) => {\n      if (typeof callback_receipt === 'function'){\n        callback_receipt(tx);\n      }\n    }, null, txData);\n  }\n  disableERC20 = (contractName,address,callback,callback_receipt) => {\n    this.props.contractMethodSendWrapper(contractName, 'approve', [\n      address,\n      this.props.web3.utils.toTwosComplement('0') // max uint solidity\n    ],null,(tx)=>{\n      if (typeof callback === 'function'){\n        callback(tx);\n      }\n    }, (tx) => {\n      if (typeof callback_receipt === 'function'){\n        callback_receipt(tx);\n      }\n    });\n  }\n  enableERC20 = (contractName,address,callback,callback_receipt) => {\n    this.props.contractMethodSendWrapper(contractName, 'approve', [\n      address,\n      this.props.web3.utils.toTwosComplement('-1') // max uint solidity\n    ],null,(tx)=>{\n      if (typeof callback === 'function'){\n        callback(tx);\n      }\n    }, (tx) => {\n      if (typeof callback_receipt === 'function'){\n        callback_receipt(tx);\n      }\n    });\n  }\n  getTrancheStakedBalance = async (contractName,walletAddr,decimals=null) => {\n    // Check for cached data\n    const cachedDataKey = `trancheStakedBalance_${contractName}_${walletAddr}_${decimals}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    let stakedBalance = await this.genericContractCall(contractName,'usersStakes',[walletAddr]);\n    if (stakedBalance){\n      if (decimals){\n        stakedBalance = this.fixTokenDecimals(stakedBalance,decimals);\n      }\n      stakedBalance = this.BNify(stakedBalance);\n\n      if (!stakedBalance.isNaN()){\n        return this.setCachedDataWithLocalStorage(cachedDataKey,stakedBalance,30);\n      }\n    }\n    return this.BNify(0);\n  }\n  getTrancheStakingRewards = async (account,trancheConfig) => {\n    const stakingRewards = {};\n    await this.asyncForEach(trancheConfig.CDORewards.stakingRewards, async (tokenConfig) => {\n      const tokenGlobalConfig = this.getGlobalConfig(['stats','tokens',tokenConfig.token]);\n      tokenConfig = {...tokenConfig,...tokenGlobalConfig};\n      const tokenAmount = await this.genericContractCallCached(trancheConfig.CDORewards.name,'expectedUserReward',[account,tokenConfig.address]);\n      stakingRewards[tokenConfig.token] = this.fixTokenDecimals(tokenAmount,tokenConfig.decimals);\n    });\n\n    // console.log('getTrancheStakingRewards',stakingRewards);\n\n    return stakingRewards;\n  }\n  loadTrancheFieldRaw = async (field,fieldProps,protocol,token,tranche,tokenConfig,trancheConfig,account,addGovTokens=true) => {\n    return await this.loadTrancheField(field,fieldProps,protocol,token,tranche,tokenConfig,trancheConfig,account,addGovTokens,false);\n  }\n  loadTrancheField = async (field,fieldProps,protocol,token,tranche,tokenConfig,trancheConfig,account=null,addGovTokens=true,formatValue=true,addTokenName=true) => {\n    let output = null;\n    const maxPrecision = (fieldProps && fieldProps.maxPrecision) || 5;\n    const decimals = (fieldProps && fieldProps.decimals) || (this.props.isMobile ? 2 : 3);\n    const minPrecision = (fieldProps && fieldProps.minPrecision) || (this.props.isMobile ? 3 : 4);\n    const tokenName = this.getGlobalConfig(['stats','tokens',token,'label']) || this.capitalize(token);\n\n    const strategyConfig = tokenConfig.Strategy;\n    const idleStrategyAddress = await this.genericContractCallCached(tokenConfig.CDO.name,'strategy'); \n    if (idleStrategyAddress){\n      await this.props.initContract(strategyConfig.name,idleStrategyAddress,strategyConfig.abi);\n    }\n\n    const idleGovTokenConfig = this.getGlobalConfig(['govTokens','IDLE']);\n    switch (field){\n      case 'protocolName':\n        output = (this.getGlobalConfig(['stats','protocols',protocol,'label']) || this.capitalize(protocol)).toUpperCase();\n      break;\n      case 'tokenName':\n        output = tokenName;\n      break;\n      case 'trancheType':\n        output = (this.getGlobalConfig(['tranches',tranche,'baseName']) || '').toUpperCase();\n        // console.log('trancheType',tranche,trancheConfig,output);\n      break;\n      case 'pool':\n        let poolSize = await this.genericContractCallCached(tokenConfig.CDO.name,'getContractValue');\n        if (!this.BNify(poolSize).isNaN()){\n          output = this.fixTokenDecimals(poolSize,tokenConfig.CDO.decimals);\n          if (formatValue){\n            output = this.abbreviateNumber(output,decimals,maxPrecision,minPrecision);\n          }\n        }\n      break;\n      case 'seniorPool':\n        output = await this.loadTrancheField('tranchePool',fieldProps,protocol,token,tranche,tokenConfig,tokenConfig.AA,account,addGovTokens);\n      break;\n      case 'juniorPool':\n        output = await this.loadTrancheField('tranchePool',fieldProps,protocol,token,tranche,tokenConfig,tokenConfig.BB,account,addGovTokens);\n      break;\n      case 'seniorApy':\n        output = await this.loadTrancheField('trancheApy',fieldProps,protocol,token,tranche,tokenConfig,tokenConfig.AA,account,addGovTokens);\n      break;\n      case 'juniorApy':\n        output = await this.loadTrancheField('trancheApy',fieldProps,protocol,token,tranche,tokenConfig,tokenConfig.BB,account,addGovTokens);\n      break;\n      case 'tranchePool':\n        let [\n          totalSupply,\n          virtualPrice\n        ] = await Promise.all([\n          this.getTokenTotalSupply(trancheConfig.name,'latest',180),\n          this.loadTrancheField('tranchePrice',fieldProps,protocol,token,tranche,tokenConfig,tokenConfig.BB,account,addGovTokens)\n        ]);\n\n\n        output = this.BNify(0);\n        if (!this.BNify(virtualPrice).isNaN() && !this.BNify(totalSupply).isNaN()){\n          output = this.fixTokenDecimals(totalSupply,tokenConfig.CDO.decimals).times(virtualPrice);\n        }\n        if (formatValue){\n          output = this.abbreviateNumber(output,decimals,maxPrecision,minPrecision)+(addTokenName ? ` ${tokenName}` : '');\n        }\n        // console.log('tranchePool',tokenConfig.CDO.name,totalSupply,virtualPrice,output);\n      break;\n      case 'trancheDeposited':\n        const deposited = await this.getAmountDepositedTranche(tokenConfig,trancheConfig,account);\n\n        output = output || this.BNify(0);\n\n        output = this.BNify(deposited);\n        if (output.gt(0)){\n          if (formatValue){\n            output = this.abbreviateNumber(output,decimals,maxPrecision,minPrecision)+(addTokenName ? ` ${tokenName}` : '');\n          }\n        } else {\n          output = formatValue ? '-' : null;\n        }\n      break;\n      case 'trancheFee':\n        output = await this.genericContractCallCached(tokenConfig.CDO.name,'fee');\n        if (output){\n          output = this.BNify(output).div(this.BNify(100000));\n        }\n      break;\n      case 'tranchePrice':\n        output = await this.genericContractCall(tokenConfig.CDO.name,'virtualPrice',[trancheConfig.address]);\n        if (output){\n          output = this.fixTokenDecimals(output,trancheConfig.decimals);\n        }\n      break;\n      case 'trancheStaked':\n        let [\n          staked1,\n          lastPrice1\n        ] = await Promise.all([\n          this.getTrancheStakedBalance(trancheConfig.CDORewards.name,account,trancheConfig.CDORewards.decimals),\n          this.loadTrancheField(`tranchePrice`,fieldProps,protocol,token,tranche,tokenConfig,trancheConfig,account,addGovTokens)\n        ]);\n\n\n        output = formatValue ? '-' : null;\n        if (staked1 && lastPrice1){\n          output = this.BNify(staked1).times(lastPrice1);\n          // console.log('trancheStaked',staked1.toString(),lastPrice1.toString(),output.toString());\n          if (formatValue){\n            output = this.abbreviateNumber(output,decimals,maxPrecision,minPrecision)+(addTokenName ? ` ${tokenName}` : '');\n          }\n        }\n      break;\n      case 'trancheRedeemable':\n        let [\n          deposited1,\n          lastPrice\n        ] = await Promise.all([\n          this.getTokenBalance(trancheConfig.name,account),\n          this.loadTrancheFieldRaw(`tranchePrice`,fieldProps,protocol,token,tranche,tokenConfig,trancheConfig,account,addGovTokens)\n        ]);\n\n        output = formatValue ? '-' : null;\n        if (deposited1 && lastPrice){\n          output = this.BNify(deposited1).times(lastPrice);\n          if (formatValue){\n            output = this.abbreviateNumber(output,decimals,maxPrecision,minPrecision)+(addTokenName ? ` ${tokenName}` : '');\n          }\n        }\n      break;\n      case 'trancheRedeemableWithStaked':\n        let [\n          redeemable1,\n          staked2\n        ] = await Promise.all([\n          this.loadTrancheFieldRaw(`trancheRedeemable`,fieldProps,protocol,token,tranche,tokenConfig,trancheConfig,account,addGovTokens),\n          this.loadTrancheFieldRaw(`trancheStaked`,fieldProps,protocol,token,tranche,tokenConfig,trancheConfig,account,addGovTokens)\n        ]);\n\n        output = formatValue ? '-' : null;\n        if (redeemable1 && staked2){\n          output = this.BNify(redeemable1).plus(staked2);\n          if (formatValue){\n            output = this.abbreviateNumber(output,decimals,maxPrecision,minPrecision)+(addTokenName ? ` ${tokenName}` : '');\n          }\n        }\n      break;\n      case 'earningsCounter':\n        let [\n          earningsStart,\n          trancheApy2,\n          deposited3\n        ] = await Promise.all([\n          this.loadTrancheFieldRaw(`earnings`,fieldProps,protocol,token,tranche,tokenConfig,trancheConfig,account,addGovTokens),\n          this.loadTrancheFieldRaw(`trancheApy`,fieldProps,protocol,token,tranche,tokenConfig,trancheConfig,account,addGovTokens),\n          this.loadTrancheFieldRaw(`trancheDeposited`,fieldProps,protocol,token,tranche,tokenConfig,trancheConfig,account,addGovTokens),\n        ]);\n\n\n        if (deposited3 && earningsStart && trancheApy2){\n          const earningsEnd = deposited3.gt(0) ? deposited3.times(trancheApy2.div(100)).plus(earningsStart) : 0;\n\n          output = {\n            earningsEnd,\n            earningsStart\n          };\n        }\n      break;\n      case 'feesCounter':\n        let [\n          trancheFee,\n          earningsCounter\n        ] = await Promise.all([\n          this.loadTrancheFieldRaw(`trancheFee`,fieldProps,protocol,token,tranche,tokenConfig,trancheConfig,account,addGovTokens),\n          this.loadTrancheFieldRaw(`earningsCounter`,fieldProps,protocol,token,tranche,tokenConfig,trancheConfig,account,addGovTokens),\n        ]);\n\n        if (trancheFee && earningsCounter){\n          const feesStart = earningsCounter.earningsStart.times(trancheFee);\n          const feesEnd =  earningsCounter.earningsEnd.times(trancheFee);\n\n          // console.log('feesCounter',feesStart.toString(),feesEnd.toString());\n\n          output = {\n            feesEnd,\n            feesStart\n          };\n        }\n      break;\n      case 'earnings':\n        const [\n          deposited4,\n          redeemable3\n        ] = await Promise.all([\n          this.loadTrancheFieldRaw(`trancheDeposited`,fieldProps,protocol,token,tranche,tokenConfig,trancheConfig,account,addGovTokens),\n          this.loadTrancheFieldRaw(`trancheRedeemableWithStaked`,fieldProps,protocol,token,tranche,tokenConfig,trancheConfig,account,addGovTokens)\n        ]);\n\n        if (deposited4 && redeemable3){\n          output = this.BNify(redeemable3).minus(deposited4);\n          if (formatValue){\n            output = this.abbreviateNumber(output,decimals,maxPrecision,minPrecision)+(addTokenName ? ` ${tokenName}` : '');\n          }\n        }\n      break;\n      case 'earningsPerc':\n        const [\n          deposited2,\n          redeemable2\n        ] = await Promise.all([\n          this.loadTrancheFieldRaw(`trancheDeposited`,fieldProps,protocol,token,tranche,tokenConfig,trancheConfig,account,addGovTokens),\n          this.loadTrancheFieldRaw(`trancheRedeemableWithStaked`,fieldProps,protocol,token,tranche,tokenConfig,trancheConfig,account,addGovTokens)\n        ]);\n        output = redeemable2.div(deposited2).minus(1).times(100);\n        if (formatValue){\n          output = output.toFixed(decimals)+'%';\n        }\n      break;\n      case 'trancheApy':\n        let trancheApy = await this.genericContractCallCached(tokenConfig.CDO.name,'getApr',[trancheConfig.address]);\n        // console.log('trancheApy',tokenConfig,trancheConfig,output);\n        if (trancheApy){\n          output = this.fixTokenDecimals(trancheApy,tokenConfig.CDO.decimals);\n          output = this.apr2apy(output.div(100)).times(100);\n          if (formatValue){\n            output = output.toFixed(2)+'%';\n          }\n        }\n      break;\n      case 'realizedApy':\n        const [\n          firstDepositTx,\n          earningsPerc\n        ] = await Promise.all([\n          this.getTrancheFirstDepositTx(tokenConfig,trancheConfig,account),\n          this.loadTrancheFieldRaw(`earningsPerc`,fieldProps,protocol,token,tranche,tokenConfig,trancheConfig,account,addGovTokens)\n        ]);\n\n        // console.log('realizedApy',earningsPerc.toString(),firstDepositTx);\n\n        if (earningsPerc && firstDepositTx){\n          const secondsFromFirstTx = parseInt(Date.now()/1000)-parseInt(firstDepositTx.timeStamp);\n          output = this.BNify(earningsPerc).times(31536000).div(secondsFromFirstTx);\n\n          // console.log('realizedApy2',firstDepositTx,earningsPerc.toString(),output.toString());\n\n          if (formatValue){\n            output = output.toFixed(2)+'%';\n          }\n        }\n      break;\n      case 'trancheIDLELastHarvest':\n      case 'trancheIDLEDistribution':\n        const rewardsTokensInfo = await this.getTrancheRewardTokensInfo(tokenConfig,trancheConfig);\n        if (rewardsTokensInfo && rewardsTokensInfo.IDLE){\n          if (field === 'trancheIDLEDistribution'){\n            output = this.fixDistributionSpeed(rewardsTokensInfo.IDLE.tokensPerSecond,idleGovTokenConfig.distributionFrequency);\n            if (formatValue){\n              output = this.abbreviateNumber(output,decimals,maxPrecision,minPrecision)+` IDLE/${idleGovTokenConfig.distributionFrequency}`\n            }\n          } else {\n            output = rewardsTokensInfo.IDLE.lastAmount;\n            if (formatValue){\n              output = this.abbreviateNumber(output,decimals,maxPrecision,minPrecision)+` IDLE (last harvest)`\n            }\n          }\n        }\n      break;\n      case 'AAIDLEDistribution':\n        output = this.abbreviateNumber('1234',decimals,maxPrecision,minPrecision)+` IDLE/day`;\n      break;\n      case 'BBIDLEDistribution':\n        output = this.abbreviateNumber('4321',decimals,maxPrecision,minPrecision)+` IDLE/day`;\n      break;\n      case 'govTokens':\n      case 'autoFarming':\n      case 'stakingRewards':\n        output = {};\n        const [\n          rewardsTokens,\n          incentiveTokens\n        ] = await Promise.all([\n          this.genericContractCall(strategyConfig.name,'getRewardTokens'),\n          this.genericContractCall(tokenConfig.CDO.name,'getIncentiveTokens')\n        ]);\n\n        const govTokens = field === 'govTokens' ? rewardsTokens : (field === 'autoFarming' && rewardsTokens ? rewardsTokens.filter( rewardTokenAddr => incentiveTokens && !incentiveTokens.map( addr => addr.toLowerCase() ).includes(rewardTokenAddr.toLowerCase()) ) : incentiveTokens);\n\n        // console.log(field,tokenConfig,rewardsTokens,incentiveTokens,govTokens);\n\n        if (govTokens){\n          govTokens.forEach( govTokenAddress => {\n            const govTokenConfig = this.getGovTokenConfigByAddress(govTokenAddress);\n            if (govTokenConfig && !govTokenConfig.enabled){\n              return;\n            }\n            output[govTokenConfig.token] = govTokenConfig;\n          });\n        }\n      break;\n      default:\n      break;\n    }\n\n    // console.log('loadTrancheField',field,fieldProps,protocol,token,tranche,tokenConfig,trancheConfig,account,addGovTokens,formatValue);\n\n    return output;\n  }\n  loadAssetField = async (field,token,tokenConfig,account,addGovTokens=true,addCurveApy=false) => {\n\n    let output = null;\n    const govTokens = this.getGlobalConfig(['govTokens']);\n\n    // Remove gov tokens for risk adjusted strategy\n    const strategyInfo = this.getGlobalConfig(['strategies',this.props.selectedStrategy]);\n    if (addGovTokens && strategyInfo && typeof strategyInfo.addGovTokens !== 'undefined'){\n      addGovTokens = strategyInfo.addGovTokens;\n    }\n\n    // Take available tokens for gov tokens fields\n    let govTokenAvailableTokens = null;\n    if (this.props.selectedStrategy && this.props.selectedToken){\n      const newTokenConfig = this.props.availableStrategies[this.props.selectedStrategy][this.props.selectedToken];\n      if (newTokenConfig){\n        govTokenAvailableTokens = {};\n        govTokenAvailableTokens[newTokenConfig.token] = newTokenConfig;\n      }\n    } else if (!Object.keys(govTokens).includes(token)){\n      govTokenAvailableTokens = {};\n      govTokenAvailableTokens[token] = tokenConfig;\n    }\n\n    switch (field){\n      case 'amountLentCurve':\n        const [\n          curveAvgSlippage,\n          curveAvgBuyPrice,\n          curveTokenBalance,\n        ] = await Promise.all([\n          this.getCurveAvgSlippage(),\n          this.getCurveAvgBuyPrice([],account),\n          this.getCurveTokenBalance(account,true),\n        ]);\n\n        if (curveAvgBuyPrice && curveTokenBalance){\n          output = this.BNify(curveTokenBalance).times(curveAvgBuyPrice);\n          if (curveAvgSlippage){\n            output = output.minus(output.times(curveAvgSlippage));\n          }\n          // this.customLog('amountLentCurve',curveTokenBalance.toFixed(6),curveAvgBuyPrice.toFixed(6),curveAvgSlippage.toString(),output.toFixed(6));\n        }\n      break;\n      case 'earningsPercCurve':\n        let [amountLentCurve1,redeemableBalanceCurve] = await Promise.all([\n          this.loadAssetField('amountLentCurve',token,tokenConfig,account),\n          this.loadAssetField('redeemableBalanceCurve',token,tokenConfig,account)\n        ]);\n\n        if (amountLentCurve1 && redeemableBalanceCurve && amountLentCurve1.gt(0) && redeemableBalanceCurve.gt(0)){\n          output = redeemableBalanceCurve.div(amountLentCurve1).minus(1).times(100);\n          // this.customLog('earningsPercCurve',redeemableBalanceCurve.toFixed(6),amountLentCurve1.toFixed(6),output.toFixed(6));\n        }\n      break;\n      case 'curveApy':\n        output = await this.getCurveAPY();\n      break;\n      case 'curveAvgSlippage':\n        output = await this.getCurveAvgSlippage();\n      break;\n      case 'redeemableBalanceCurve':\n        output = await this.getCurveRedeemableIdleTokens(account);\n        // this.customLog('earningsPercCurve',output.toFixed(6));\n      break;\n      case 'redeemableBalanceCounterCurve':\n        let [\n          curveApy,\n          amountLentCurve,\n          redeemableBalanceCurveStart\n        ] = await Promise.all([\n          this.loadAssetField('curveApy',token,tokenConfig,account),\n          this.loadAssetField('amountLentCurve',token,tokenConfig,account),\n          this.loadAssetField('redeemableBalanceCurve',token,tokenConfig,account),\n        ]);\n\n        let redeemableBalanceCurveEnd = null;\n\n        if (redeemableBalanceCurveStart && curveApy && amountLentCurve){\n          const earningPerYear = amountLentCurve.times(curveApy.div(100));\n          redeemableBalanceCurveEnd = redeemableBalanceCurveStart.plus(earningPerYear);\n          // this.customLog('redeemableBalanceCounterCurve',amountLentCurve.toFixed(6),redeemableBalanceCurveStart.toFixed(6),redeemableBalanceCurveEnd.toFixed(6));\n        }\n\n        output = {\n          redeemableBalanceCurveEnd,\n          redeemableBalanceCurveStart\n        };\n      break;\n      case 'earningsPerc':\n        let [amountLent1,redeemableBalance1] = await Promise.all([\n          this.loadAssetField('amountLent',token,tokenConfig,account,false),\n          this.loadAssetField('redeemableBalance',token,tokenConfig,account,false)\n        ]);\n\n        if (amountLent1 && redeemableBalance1 && amountLent1.gt(0)){\n          output = redeemableBalance1.div(amountLent1).minus(1).times(100);\n        }\n      break;\n      case 'daysFirstDeposit':\n        const depositTimestamp = await this.loadAssetField('depositTimestamp',token,tokenConfig,account);\n        if (depositTimestamp){\n          const currTimestamp = parseInt(Date.now()/1000);\n          output = (currTimestamp-depositTimestamp)/86400;\n        }\n      break;\n      case 'pool':\n        if (Object.keys(govTokens).includes(token)){\n          output = await this.getGovTokenPool(token, govTokenAvailableTokens);\n        } else {\n          output = await this.getTokenPool(tokenConfig,addGovTokens);\n        }\n      break;\n      case 'userDistributionSpeed':\n        switch (token){\n          case 'COMP':\n            output = await this.getCompUserDistribution(account,govTokenAvailableTokens);\n          break;\n          case 'stkAAVE':\n            output = await this.getStkAaveUserDistribution(account,govTokenAvailableTokens);\n          break;\n          case 'IDLE':\n            const idleGovToken = this.getIdleGovToken();\n            output = await idleGovToken.getUserDistribution(account,govTokenAvailableTokens);\n          break;\n          default:\n          break;\n        }\n        if (output && !this.BNify(output).isNaN()){\n          output = this.BNify(output).div(1e18);\n          if (output){\n            output = this.fixDistributionSpeed(output,tokenConfig.distributionFrequency,tokenConfig.distributionMode);\n          }\n        }\n      break;\n      case 'idleDistribution':\n        const idleGovToken = this.getIdleGovToken();\n        const tokenName = this.getGlobalConfig(['governance','props','tokenName']);\n        const govTokenConfig = this.getGlobalConfig(['govTokens',tokenName]);\n        output = await idleGovToken.getSpeed(tokenConfig.idle.address);\n\n        if (output){\n\n          output = this.fixTokenDecimals(output,govTokenConfig.decimals);\n\n          const blocksPerYear = this.BNify(this.getGlobalConfig(['network','blocksPerYear']));\n          switch (govTokenConfig.distributionFrequency){\n            case 'day':\n              const blocksPerDay = blocksPerYear.div(365.242199);\n              output = output.times(blocksPerDay);\n            break;\n            case 'week':\n              const blocksPerWeek = blocksPerYear.div(52.1429);\n              output = output.times(blocksPerWeek);\n            break;\n            case 'month':\n              const blocksPerMonth = blocksPerYear.div(12);\n              output = output.times(blocksPerMonth);\n            break;\n            case 'year':\n              output = output.times(blocksPerYear);\n            break;\n            default:\n            break;\n          }\n        }\n      break;\n      case 'distributionSpeed':\n        const selectedTokenConfig = govTokenAvailableTokens[this.props.selectedToken];\n        switch (token){\n          case 'COMP':\n            output = await this.getCompDistribution(selectedTokenConfig);\n          break;\n          case 'stkAAVE':\n            output = await this.getStkAaveDistribution(selectedTokenConfig);\n          break;\n          case 'IDLE':\n            const idleGovToken = this.getIdleGovToken();\n            output = await idleGovToken.getSpeed(selectedTokenConfig.idle.address);\n          break;\n          default:\n          break;\n        }\n        if (output && !this.BNify(output).isNaN()){\n          output = this.BNify(output).div(1e18);\n        }\n      break;\n      case 'apr':\n        switch (token){\n          case 'COMP':\n            output = await this.getCompAvgApr(govTokenAvailableTokens);\n          break;\n          case 'IDLE':\n            const idleGovToken = this.getIdleGovToken();\n            output = await idleGovToken.getAvgApr(govTokenAvailableTokens);\n          break;\n          default:\n            const tokenAprs = await this.getTokenAprs(tokenConfig,false,addGovTokens);\n            if (tokenAprs && tokenAprs.avgApr !== null){\n              output = tokenAprs.avgApr;\n            }\n          break;\n        }\n      break;\n      case 'apy':\n        const tokenApys = await this.getTokenAprs(tokenConfig,false,addGovTokens);\n\n        // console.log('apr',token,tokenApys.avgApr ? tokenApys.avgApr.toFixed() : null,tokenApys.avgApy ? tokenApys.avgApy.toFixed() : null);\n\n        output = this.BNify(0);\n\n        if (tokenApys && !this.BNify(tokenApys.avgApy).isNaN()){\n          output = this.BNify(tokenApys.avgApy);\n\n          if (addCurveApy){\n            const curveAPY = await this.getCurveAPY();\n            if (curveAPY){\n              output = output.plus(curveAPY);\n            }\n          }\n        } else {\n\n        }\n\n        // console.log('apy - OUTPUT - ',output);\n      break;\n      case 'avgAPY':\n        const [\n          tokenPrice,\n          firstDepositTx,\n          days\n        ] = await Promise.all([\n          this.getIdleTokenPrice(tokenConfig),\n          this.getFirstDepositTx([token],account),\n          this.loadAssetField('daysFirstDeposit',token,tokenConfig,account)\n        ]);\n\n        if (tokenPrice && firstDepositTx && firstDepositTx[token]){\n          const tokenPriceFirstDeposit = await this.getIdleTokenPrice(tokenConfig,firstDepositTx[token].blockNumber);\n          output = this.BNify(tokenPrice).div(tokenPriceFirstDeposit).minus(1).times(365).div(days).times(100);\n        }\n      break;\n      case 'avgAPY_old':\n        const [\n          daysFirstDeposit,\n          earningsPerc\n        ] = await Promise.all([\n          this.loadAssetField('daysFirstDeposit',token,tokenConfig,account),\n          this.loadAssetField('earningsPerc',token,tokenConfig,account), // Take earnings perc instead of earnings\n        ]);\n\n        if (daysFirstDeposit && earningsPerc){\n          output = earningsPerc.times(365).div(daysFirstDeposit);\n        }\n      break;\n      case 'depositTimestamp':\n        const depositTimestamps = account ? await this.getDepositTimestamp([token],account) : false;\n        if (depositTimestamps && depositTimestamps[token]){\n          output = depositTimestamps[token];\n        }\n      break;\n      case 'amountLent':\n        output = account ? await this.getAmountDeposited(tokenConfig,account) : false;\n        // console.log('amountLent - OUTPUT - ',output);\n        // const amountLents = account ? await this.getAmountLent([token],account) : false;\n        // if (amountLents && amountLents[token]){\n        //   output = amountLents[token];\n        // }\n      break;\n      case 'tokenPrice':\n        if (Object.keys(govTokens).includes(token)){\n          const govTokenConfig = govTokens[token];\n          const DAITokenConfig = this.getGlobalConfig(['stats','tokens','DAI']);\n          try {\n            output = await this.getUniswapConversionRate(DAITokenConfig,govTokenConfig);\n          } catch (error) {\n\n          }\n          if (!output || this.BNify(output).isNaN()){\n            output = '-';\n          }\n        } else {\n          output = await this.getTokenPrice(tokenConfig.idle.token);\n        }\n      break;\n      case 'fee':\n        output = await this.getUserTokenFees(tokenConfig,account);\n      break;\n      case 'tokenBalance':\n        if (Object.keys(govTokens).includes(token)){\n          output = await this.getTokenBalance(token,account);\n          if (!output || output.isNaN()){\n            output = '-';\n          }\n        } else {\n          let tokenBalance = account ? await this.getTokenBalance(tokenConfig.token,account) : false;\n          if (!tokenBalance || tokenBalance.isNaN()){\n            tokenBalance = '-';\n          }\n          output = tokenBalance;\n        }\n      break;\n      case 'idleTokenBalance':\n        const idleTokenBalance = account ? await this.getTokenBalance(tokenConfig.idle.token,account) : false;\n        if (idleTokenBalance){\n          output = idleTokenBalance;\n        }\n      break;\n      case 'redeemableBalanceCounter':\n\n        // console.log('redeemableBalanceCounter - BEFORE',token,tokenConfig,account);\n\n        let [tokenAPY1,amountLent2,redeemableBalanceStart] = await Promise.all([\n          this.loadAssetField('apy',token,tokenConfig,account,false),\n          this.loadAssetField('amountLent',token,tokenConfig,account,false),\n          this.loadAssetField('redeemableBalance',token,tokenConfig,account,false),\n        ]);\n\n        // console.log('redeemableBalanceCounter - CALL - ',tokenAPY1,amountLent2,redeemableBalanceStart);\n\n        // debugger;\n\n        let redeemableBalanceEnd = redeemableBalanceStart;\n\n        if (redeemableBalanceStart && tokenAPY1 && amountLent2){\n          const earningPerYear = amountLent2.times(tokenAPY1.div(100));\n          redeemableBalanceEnd = redeemableBalanceStart.plus(earningPerYear);\n        }\n\n        output = {\n          redeemableBalanceEnd,\n          redeemableBalanceStart\n        };\n\n        // console.log('redeemableBalanceCounter - OUTPUT',token,parseFloat(redeemableBalanceStart),parseFloat(redeemableBalanceEnd),output);\n      break;\n      case 'redeemableBalance':\n        if (Object.keys(govTokens).includes(token)){\n          const govTokenConfig = govTokens[token];\n          output = await this.getGovTokenUserBalance(govTokenConfig,account,govTokenAvailableTokens);\n        } else {\n          let [\n            idleTokenPrice1,\n            idleTokenBalance2,\n            govTokensBalance\n          ] = await Promise.all([\n            this.getIdleTokenPrice(tokenConfig),\n            this.loadAssetField('idleTokenBalance',token,tokenConfig,account),\n            addGovTokens ? this.getGovTokensUserTotalBalance(account,govTokenAvailableTokens,token) : null,\n          ]);\n\n          // console.log('redeemableBalance - BEFORE - ',idleTokenBalance2,idleTokenPrice1);\n\n          if (idleTokenBalance2 && idleTokenPrice1){\n            const tokenBalance = idleTokenBalance2.times(idleTokenPrice1);\n            let redeemableBalance = tokenBalance;\n            if (govTokensBalance && !this.BNify(govTokensBalance).isNaN()){\n              redeemableBalance = redeemableBalance.plus(this.BNify(govTokensBalance));\n            }\n            output = redeemableBalance;\n            // console.log('redeemableBalance',token,idleTokenBalance2.toFixed(4),idleTokenPrice1.toFixed(4),tokenBalance.toFixed(4),govTokensBalance ? govTokensBalance.toFixed(4) : null,output.toFixed(4));\n          }\n          // console.log('redeemableBalance - OUTPUT - ',output);\n        }\n      break;\n      case 'earningsCurve':\n        let [amountLentCurve2,redeemableBalanceCurve1] = await Promise.all([\n          this.loadAssetField('amountLentCurve',token,tokenConfig,account),\n          this.loadAssetField('redeemableBalanceCurve',token,tokenConfig,account)\n        ]);\n\n        if (!amountLentCurve2){\n          amountLentCurve2 = this.BNify(0);\n        }\n\n        if (!redeemableBalanceCurve1){\n          redeemableBalanceCurve1 = this.BNify(0);\n        }\n\n        output = redeemableBalanceCurve1.minus(amountLentCurve2);\n      break;\n      case 'earnings':\n        let [amountLent,redeemableBalance2] = await Promise.all([\n          this.loadAssetField('amountLent',token,tokenConfig,account,false),\n          this.loadAssetField('redeemableBalance',token,tokenConfig,account,false)\n        ]);\n\n        if (!amountLent){\n          amountLent = this.BNify(0);\n        }\n        if (!redeemableBalance2){\n          redeemableBalance2 = this.BNify(0);\n        }\n\n        output = redeemableBalance2.minus(amountLent);\n\n        // console.log('earnings',token,amountLent.toFixed(5),redeemableBalance2.toFixed(5),output.toFixed(5));\n\n        if (output.lt(this.BNify(0))){\n          output = this.BNify(0);\n        }\n      break;\n      default:\n      break;\n    }\n\n    return output;\n  }\n  getIdleTokenSupply = async (idleToken,blockNumber='latest') => {\n    const cachedDataKey = `idleTokenSupply_${idleToken}_${blockNumber}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    let idleTokenSupply = await this.getTokenTotalSupply(idleToken,blockNumber);\n    if (idleTokenSupply){\n      return this.BNify(idleTokenSupply);\n    }\n\n    return null;\n  }\n  getIdleTokenPriceWithFee = async (tokenConfig,account,blockNumber='latest') => {\n    account = account || this.props.account;\n    if (!account){\n      return null;\n    }\n\n    let [\n      fee,\n      tokenPrice,\n      userAvgPrice\n    ] = await Promise.all([\n      this.genericContractCallCached(tokenConfig.idle.token, 'fee', [], {}, blockNumber),\n      this.genericContractCallCached(tokenConfig.idle.token, 'tokenPrice', [], {}, blockNumber),\n      this.genericContractCallCached(tokenConfig.idle.token, 'userAvgPrices', [account], {}, blockNumber)\n    ]);\n    \n    fee = this.BNify(fee);\n    tokenPrice = this.BNify(tokenPrice);\n    userAvgPrice = this.BNify(userAvgPrice);\n\n    if (!tokenPrice.isNaN() && !userAvgPrice.isNaN() && !fee.isNaN() && !this.BNify(userAvgPrice).eq(0) && this.BNify(tokenPrice).gt(this.BNify(userAvgPrice))){\n      const priceWFee = this.integerValue(this.BNify(tokenPrice).minus(parseInt(fee.div(1e5).times(tokenPrice.minus(userAvgPrice)))));\n      return priceWFee;\n    }\n\n    return tokenPrice;\n  }\n  getIdleTokenPrice = async (tokenConfig,blockNumber='latest',timestamp=false) => {\n\n    const cachedDataKey = `idleTokenPrice_${tokenConfig.idle.token}_${blockNumber}`;\n    // if (blockNumber !== 'latest'){\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n    // }\n\n    let decimals = tokenConfig.decimals;\n\n    let tokenPrice = await this.genericContractCallCached(tokenConfig.idle.token,'tokenPrice',[],{},blockNumber);\n\n    // If price is NaN try to take it from APIs\n    if (!tokenPrice && timestamp){\n      const isRisk = this.props.selectedStrategy === 'risk';\n      const startTimestamp = parseInt(timestamp)-(60*60);\n      const endTimestamp = parseInt(timestamp)+(60*60);\n      const tokenData = await this.getTokenApiData(tokenConfig.address,isRisk,startTimestamp,endTimestamp,true);\n\n      let beforePrice = {\n        data:null,\n        timeDiff:null\n      };\n\n      let afterPrice = {\n        data:null,\n        timeDiff:null\n      };\n\n      tokenData.forEach( d => {\n        const timeDiff = Math.abs(parseInt(d.timestamp)-parseInt(timestamp));\n        if (parseInt(d.timestamp)<parseInt(timestamp) && (!beforePrice.timeDiff || timeDiff<beforePrice.timeDiff)){\n          beforePrice.timeDiff = timeDiff;\n          beforePrice.data = d;\n        }\n\n        if (parseInt(d.timestamp)>parseInt(timestamp) && !afterPrice.timeDiff){\n          afterPrice.timeDiff = timeDiff;\n          afterPrice.data = d;\n        }\n      });\n\n      // Take before and after and calculate correct tokenPrice based from price acceleration\n      if (beforePrice.data && afterPrice.data){\n        const tokenPriceBefore = this.BNify(beforePrice.data.idlePrice);\n        const tokenPriceAfter = this.BNify(afterPrice.data.idlePrice);\n        const timeBefore = this.BNify(beforePrice.data.timestamp);\n        const timeAfter = this.BNify(afterPrice.data.timestamp);\n        const timeDiff = timeAfter.minus(timeBefore);\n        const priceDiff = tokenPriceAfter.minus(tokenPriceBefore);\n        const priceAcceleration = priceDiff.div(timeDiff);\n        const timeDiffFromBeforePrice = this.BNify(timestamp).minus(timeBefore);\n        tokenPrice = tokenPriceBefore.plus(priceAcceleration.times(timeDiffFromBeforePrice));\n      }\n    }\n\n    // Fix token price decimals\n    if (tokenPrice && !this.BNify(tokenPrice).isNaN()){\n      tokenPrice = this.fixTokenDecimals(tokenPrice,decimals);\n    }\n\n    // If price is NaN then return 1\n    if (!tokenPrice || this.BNify(tokenPrice).isNaN() || this.BNify(tokenPrice).lt(1)){\n      tokenPrice = this.BNify(1);\n    }\n\n    // if (blockNumber !== 'latest'){\n      this.setCachedDataWithLocalStorage(cachedDataKey,tokenPrice);\n    // }\n\n    // this.customLog('getIdleTokenPrice',tokenPrice.toString());\n\n    return tokenPrice;\n  }\n  clearCachedData = (clear_all=false) => {\n    if (this.props.clearCachedData && typeof this.props.clearCachedData === 'function'){\n      // this.customLog('clearCachedData',this.props.clearCachedData,typeof this.props.clearCachedData === 'function');\n      this.props.clearCachedData(null,clear_all);\n    } else {\n      // this.customLog('clearCachedData - Function not found!');\n    }\n    return false;\n  }\n  /*\n  Cache data locally for 3 minutes\n  */\n  setCachedData = (key,data,TTL=180) => {\n    if (this.props.setCachedData && typeof this.props.setCachedData === 'function'){\n      this.props.setCachedData(key,data,TTL);\n    }\n    return data;\n  }\n  setCachedDataWithLocalStorage = (key,data,TTL=180) => {\n    if (this.props.setCachedData && typeof this.props.setCachedData === 'function'){\n      this.props.setCachedData(key,data,TTL,true);\n    }\n    return data;\n  }\n  getCachedDataWithLocalStorage = (key,defaultValue=null) => {\n    return this.getCachedData(key,defaultValue,true);\n  }\n  getCachedData = (key,defaultValue=null,useLocalStorage=false) => {\n    let cachedData = null;\n    key = key.toLowerCase();\n    // Get cache from current session\n    if (this.props.cachedData && this.props.cachedData[key]){\n      cachedData = this.props.cachedData[key];\n    // Get cache from local storage\n    } else if (useLocalStorage) {\n      cachedData = this.getStoredItem('cachedData');\n      if (cachedData && cachedData[key]){\n        cachedData = cachedData[key];\n      } else {\n        cachedData = null;\n      }\n    }\n\n    const cachedDataValid = cachedData && cachedData.data && (cachedData.expirationDate === null || cachedData.expirationDate>=parseInt(Date.now()/1000));\n\n    // if (!cachedDataValid){\n    //   console.log('getCachedData - NOT VALID - ',key,(cachedData ? cachedData.expirationDate-parseInt(Date.now()/1000) : null));\n    // }\n\n    if (cachedDataValid){\n      return cachedData.data;\n    }\n    return defaultValue;\n  }\n  getUserPoolShare = async (walletAddr,tokenConfig) => {\n    const [\n      idleTokensBalance,\n      idleTokensTotalSupply\n    ] = await Promise.all([\n      this.getTokenBalance(tokenConfig.idle.token,walletAddr,false),\n      this.getTokenTotalSupply(tokenConfig.idle.token)\n    ]);\n\n    let userShare = this.BNify(0);\n    if (this.BNify(idleTokensBalance).gt(0) && this.BNify(idleTokensTotalSupply).gt(0)){\n      userShare = this.BNify(idleTokensBalance).div(this.BNify(idleTokensTotalSupply));\n    }\n\n    return userShare;\n  }\n  openWindow = (url) => {\n    return window.open(url,'_blank','noopener');\n  }\n  getActiveCoverages = async (account=null) => {\n    const activeCoverages = [];\n    account = account || this.props.account;\n\n    if (!account){\n      return activeCoverages;\n    }\n\n    const currTimestamp = parseInt(Date.now()/1000);\n\n    const coverProtocolConfig = this.getGlobalConfig(['tools','coverProtocol']);\n    if (coverProtocolConfig.enabled){\n      await this.asyncForEach(coverProtocolConfig.props.coverages, async (coverage) => {\n        const token = 'Claim';\n        const coverageTokens = coverage.tokens;\n        const tokenConfig = coverageTokens[token];\n        // Initialize coverage contract\n        await this.props.initContract(tokenConfig.name,tokenConfig.address,tokenConfig.abi);\n        // Take balance\n        const balance = await this.getTokenBalance(tokenConfig.name,account);\n        if (balance && balance.gt(0)){\n          const actionLabel = 'File Claim';\n          const collateral = coverage.collateral;\n          const protocolName = coverProtocolConfig.label;\n          const protocolImage = coverProtocolConfig.image;\n          const actionUrl = coverProtocolConfig.fileClaimUrl;\n          const status = coverage.expirationTimestamp<=currTimestamp ? 'Expired' : 'Active';\n          const actionDisabled = status === 'Expired';\n          const expirationDate = moment(coverage.expirationTimestamp*1000).utc().format('YYYY-MM-DD HH:mm:ss')+' UTC';\n          activeCoverages.push({\n            token,\n            status,\n            balance,\n            actionUrl,\n            collateral,\n            actionLabel,\n            protocolName,\n            protocolImage,\n            expirationDate,\n            actionDisabled\n          });\n        }\n      });\n    }\n    const nexusMutualConfig = this.getGlobalConfig(['tools','nexusMutual']);\n    if (nexusMutualConfig.enabled){\n      const nexusMutualCoverages = await this.getNexusMutualCoverages(account);\n      nexusMutualCoverages.forEach( coverage => {\n        const actionLabel = 'Claim';\n        const balance = coverage.sumAssured;\n        const token = coverage.coverAssetConfig.token;\n        const collateral = coverage.yieldTokenConfig.token;\n        const portfolioCoverage = coverage.portfolioCoverage;\n        const collateralIcon = `images/tokens/${collateral}.svg`;\n        const actionDisabled = !coverage.incident && !coverage.claimId;\n        const protocolName = this.getGlobalConfig(['insurance','nexusMutual','label']);\n        const protocolImage = this.getGlobalConfig(['insurance','nexusMutual','image']);\n        const protocolImageDark = this.getGlobalConfig(['insurance','nexusMutual','imageDark']);\n        const expirationDate = moment(coverage.coverDetails.validUntil*1000).utc().format('YYYY-MM-DD HH:mm:ss')+' UTC';\n        const status = coverage.claimId ? 'Claimed' : parseInt(coverage.coverDetails.validUntil)<=currTimestamp ? 'Expired' : 'Active';\n        const actionUrl = `${window.location.origin}/#${this.getGlobalConfig(['dashboard','baseRoute'])}/tools/${nexusMutualConfig.route}/${coverage.yieldTokenConfig.token}/claim`;\n        activeCoverages.push({\n          token,\n          status,\n          balance,\n          actionUrl,\n          collateral,\n          actionLabel,\n          protocolName,\n          protocolImage,\n          expirationDate,\n          actionDisabled,\n          collateralIcon,\n          portfolioCoverage,\n          protocolImageDark\n        });\n      });\n    }\n\n    return activeCoverages;\n  }\n  getNexusMutualCoverages = async (account) => {\n    const nexusMutualConfig = this.getGlobalConfig(['tools','nexusMutual']);\n\n    const fromBlock = nexusMutualConfig.directProps.startBlock;\n    const feeDistributorConfig = nexusMutualConfig.directProps.contractInfo;\n    const incidentsInfo = nexusMutualConfig.directProps.incidentsInfo;\n    \n    await Promise.all([\n      this.props.initContract(incidentsInfo.name,incidentsInfo.address,incidentsInfo.abi),\n      this.props.initContract(feeDistributorConfig.name,feeDistributorConfig.address,feeDistributorConfig.abi),\n    ]);\n\n    const [\n      coverBoughtEvents,\n      claimSubmittedEvents,\n    ] = await Promise.all([\n       this.getContractEvents(feeDistributorConfig.name,'CoverBought',{fromBlock, toBlock:'latest',filter:{buyer:account}}),\n       this.getContractEvents(feeDistributorConfig.name,'ClaimSubmitted',{fromBlock, toBlock:'latest',filter:{buyer:account}})\n    ]);\n\n    const nexusMutualCoverages = [];\n\n    await this.asyncForEach(coverBoughtEvents,async (cover) => {\n    // coverBoughtEvents.forEach( cover => {\n      const coverId = parseInt(cover.returnValues.coverId);\n      const claimSubmittedEvent = claimSubmittedEvents.find( claim => parseInt(claim.returnValues.coverId)===coverId );\n      const [\n        coverDetails,\n        incidentEvents\n      ] = await Promise.all([\n        this.genericContractCall(feeDistributorConfig.name,'getCover',[coverId]),\n        this.getContractEvents(incidentsInfo.name,'IncidentAdded',{fromBlock:cover.blockNumber, toBlock:'latest',filter:{productId:cover.contractAddress}})\n      ]);\n\n      if (!coverDetails){\n        return false;\n      }\n\n      // Check if the cover matches any incidents\n      const matchedIncidents = incidentEvents.filter(incident => {\n        return incident.returnValues.productId === coverDetails.contractAddress &&\n        this.BNify(incident.blockNumber).gt(cover.blockNumber)  &&\n        this.BNify(incident.returnValues.incidentDate).lt(coverDetails.validUntil) &&\n        parseInt(coverDetails.validUntil) + nexusMutualConfig.directProps.yieldTokenCoverGracePeriod >= Date.now() / 1000\n      });\n\n      // If multiple incidents match, return the one with the highest priceBefore\n      const matchedIncident = matchedIncidents.reduce((prev, curr) => {\n        if (!prev) {\n          return curr;\n        }\n\n        if (this.BNify(curr.returnValues.priceBefore).gt(prev.returnValues.priceBefore)) {\n          return curr;\n        }\n        return prev;\n      }, null);\n\n      const yieldTokenConfig = Object.values(nexusMutualConfig.props.availableTokens).find( tokenConfig => tokenConfig.address.toLowerCase() === coverDetails.contractAddress.toLowerCase() );\n      const sumAssured = this.fixTokenDecimals(coverDetails.sumAssured,yieldTokenConfig.decimals);\n      const coverAssetConfig = Object.values(yieldTokenConfig.underlying).find( underlyingConfig => underlyingConfig.address.toLowerCase() === coverDetails.coverAsset.toLowerCase() );\n      const expiryDate = this.strToMoment(coverDetails.validUntil*1000).format('YYYY-MM-DD');\n\n      const claimId = claimSubmittedEvent ? claimSubmittedEvent.returnValues.claimId : null;\n      const payoutOutcome = claimId ? await this.genericContractCall(feeDistributorConfig.name,'getPayoutOutcome',[claimId]) : null;\n      const label = `${yieldTokenConfig.name} - ${sumAssured.toFixed(4)} ${coverAssetConfig.token} - Exp. ${expiryDate}`;\n      const value = coverId;\n\n      let claimedAmount = null;\n      if (claimSubmittedEvent){\n        const claimTxReceipt = await this.getTransactionReceipt(claimSubmittedEvent.transactionHash);\n        const claimedAmountLog = claimTxReceipt ? claimTxReceipt.logs.find( log => log.address.toLowerCase() === coverAssetConfig.address.toLowerCase() ) : null;\n        claimedAmount = claimedAmountLog ? this.fixTokenDecimals(parseInt(claimedAmountLog.data,16),coverAssetConfig.decimals) : this.BNify(0);\n      }\n\n      const claimableAmount = this.fixTokenDecimals(coverDetails.sumAssured,coverAssetConfig.decimals);\n\n      const claimablePrice = matchedIncident ? this.BNify(matchedIncident.returnValues.priceBefore).times(0.9) : this.BNify(0);\n      const maxCoveredAmount = claimablePrice.gt(0) ? this.BNify(coverDetails.sumAssured).div(claimablePrice) : this.BNify(0);\n      const coveredTokenAmount = this.normalizeTokenAmount(maxCoveredAmount,coverAssetConfig.decimals);\n\n      let [\n        tokenPrice,\n        idleTokenBalance\n      ] = await Promise.all([\n        this.getTokenPrice(yieldTokenConfig.token),\n        this.getTokenBalance(yieldTokenConfig.token,account,false)\n      ]);\n\n      tokenPrice = this.fixTokenDecimals(tokenPrice,yieldTokenConfig.decimals);\n      idleTokenBalance = this.fixTokenDecimals(idleTokenBalance,yieldTokenConfig.decimals);\n      const tokenBalance = idleTokenBalance.times(tokenPrice);\n      const portfolioCoverage = tokenBalance.gt(0) ? sumAssured.div(tokenBalance).times(100).toFixed(2)+'%' : 'N/A';\n\n      // console.log('portfolioCoverage',sumAssured.toFixed(),idleTokenBalance.toFixed(),tokenPrice.toFixed(),portfolioCoverage.toFixed());\n\n      nexusMutualCoverages.push({\n        label,\n        value,\n        claimId,\n        sumAssured,\n        coverDetails,\n        claimedAmount,\n        payoutOutcome,\n        claimableAmount,\n        maxCoveredAmount,\n        yieldTokenConfig,\n        coverAssetConfig,\n        portfolioCoverage,\n        coveredTokenAmount,\n        incident: matchedIncident ? {...matchedIncident, id: incidentEvents.findIndex(x => x.date === matchedIncident.date)} : null\n      });\n    });\n\n    return nexusMutualCoverages;\n  }\n  getBatchedDepositExecutions = async (contractAddress) => {\n    const requiredNetwork = this.props.network.current.id || this.getGlobalConfig(['network','requiredNetwork']);\n    const etherscanInfo = this.getGlobalConfig(['network','providers','etherscan']);\n    if (etherscanInfo.enabled && etherscanInfo.endpoints[requiredNetwork]){\n      const etherscanApiUrl = etherscanInfo.endpoints[requiredNetwork];\n      const etherscanEndpoint = `${etherscanApiUrl}?&apikey=${env.REACT_APP_ETHERSCAN_KEY}&module=account&action=tokentx&address=${contractAddress}&sort=desc`;\n      const transactions = await this.makeCachedRequest(etherscanEndpoint,1800,true);\n      if (transactions && typeof transactions.result === 'object'){\n        return transactions.result.filter( tx => tx.from === '0x0000000000000000000000000000000000000000' && tx.to.toLowerCase() === contractAddress.toLowerCase() );\n      }\n    }\n    return null;\n  }\n  getBatchedDeposits = async (account=null,filter_by_status=null) => {\n    account = account || this.props.account;\n    if (!account){\n      return null;\n    }\n\n    const batchDepositConfig = this.getGlobalConfig(['tools','batchDeposit']);\n    if (!batchDepositConfig.enabled){\n      return null;\n    }\n\n    const cachedDataKey = `batchedDeposits_${account}_${filter_by_status}`;\n    const cachedData = this.getCachedData(cachedDataKey);\n    if (cachedData) {\n      return cachedData;\n    }\n\n    const batchedDeposits = {};\n    const availableTokens = batchDepositConfig.props.availableTokens;\n    await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const tokenConfig = availableTokens[token];\n      const migrationContract = tokenConfig.migrationContract;\n      await this.props.initContract(migrationContract.name,migrationContract.address,migrationContract.abi);\n      const currBatchIndex = await this.genericContractCall(migrationContract.name,'currBatch');\n      for (let batchIndex = 0; batchIndex <= parseInt(currBatchIndex) ; batchIndex++){\n        let [\n          batchExecutions,\n          batchTotal,\n          batchRedeem,\n          batchDeposit\n        ] = await Promise.all([\n          this.getBatchedDepositExecutions(migrationContract.address),\n          this.genericContractCall(migrationContract.name,'batchTotals',[batchIndex]),\n          this.genericContractCall(migrationContract.name,'batchRedeemedTotals',[batchIndex]),\n          this.genericContractCall(migrationContract.name,'batchDeposits',[this.props.account,batchIndex])\n        ]);\n\n        console.log(`Batch #${batchIndex} - ${batchTotal} - ${batchRedeem} - ${batchDeposit}`);\n\n        let batchTotals = null;\n        let batchRedeems = null;\n        let batchDeposits = null;\n        if (batchTotal && batchTotal !== null){\n          batchTotals = this.fixTokenDecimals(batchTotal,tokenConfig.decimals);\n        }\n        if (batchDeposit !== null){\n          batchRedeem = this.fixTokenDecimals(batchRedeem,18);\n          batchDeposit = this.fixTokenDecimals(batchDeposit,tokenConfig.decimals);\n          if (batchDeposit.gt(0)){\n            batchDeposits = batchDeposit;\n\n            // Calculate redeemable idleTokens\n            batchRedeems = batchDeposit.times(batchRedeem).div(batchTotals);\n            if (batchRedeems.gt(batchRedeem)){\n              batchRedeems = batchRedeem;\n            }\n\n            const status = batchIndex < currBatchIndex && batchRedeems.gt(0) ? 'executed' : 'pending';\n\n            if (filter_by_status !== null && filter_by_status.toLowerCase() !== status){\n              return;\n            }\n\n            const lastExecution = batchExecutions && batchExecutions.length ? batchExecutions[0] : null;\n\n            batchedDeposits[token] = {\n              status,\n              batchTotals,\n              batchRedeems,\n              batchDeposits,\n              lastExecution\n            };\n          }\n        }\n      }\n    });\n\n    return this.setCachedData(cachedDataKey,batchedDeposits);\n  }\n  getETHBalance = async (walletAddr,fixDecimals=true,blockNumber='latest') => {\n    if (!walletAddr){\n      return false;\n    }\n\n    // Check for cached data\n    const cachedDataKey = `ethBalance_${walletAddr}_${fixDecimals}_${blockNumber}`;\n    if (blockNumber !== 'latest'){\n      const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n      if (cachedData && !this.BNify(cachedData).isNaN()){\n        return this.BNify(cachedData);\n      }\n    }\n\n    let tokenBalance = await this.props.web3.eth.getBalance(walletAddr);\n\n    if (tokenBalance){\n      if (fixDecimals){\n        tokenBalance = this.fixTokenDecimals(tokenBalance,18);\n      }\n\n      tokenBalance = this.BNify(tokenBalance);\n\n      // Set cached data\n      if (!tokenBalance.isNaN()){\n        if (blockNumber !== 'latest'){\n          return this.setCachedDataWithLocalStorage(cachedDataKey,tokenBalance);\n        } else {\n          return tokenBalance;\n        }\n      }\n    }\n    return null;\n  }\n  getTokenBalance = async (contractName,walletAddr,fixDecimals=true,blockNumber='latest') => {\n    if (!walletAddr){\n      return false;\n    }\n\n    // Check for cached data\n    const cachedDataKey = `tokenBalance_${contractName}_${walletAddr}_${fixDecimals}_${blockNumber}`;\n    if (blockNumber !== 'latest'){\n      const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n      if (cachedData && !this.BNify(cachedData).isNaN()){\n        return this.BNify(cachedData);\n      }\n    }\n\n    let [\n      tokenDecimals,\n      tokenBalance\n    ] = await Promise.all([\n      this.getTokenDecimals(contractName),\n      this.getContractBalance(contractName,walletAddr,blockNumber)\n    ]);\n\n    if (tokenBalance){\n      if (fixDecimals){\n        tokenBalance = this.fixTokenDecimals(tokenBalance,tokenDecimals);\n      }\n\n      tokenBalance = this.BNify(tokenBalance);\n\n      // Set cached data\n      if (!tokenBalance.isNaN()){\n        if (blockNumber !== 'latest'){\n          return this.setCachedDataWithLocalStorage(cachedDataKey,tokenBalance,30);\n        } else {\n          return tokenBalance;\n        }\n      }\n    } else {\n      this.customLogError('Error on getting balance for ',contractName);\n    }\n    return null;\n  }\n  copyToClipboard = (copyText) => {\n    if (typeof copyText.select === 'function'){\n      copyText.select();\n      copyText.setSelectionRange(0, 99999); // Select\n      const res = document.execCommand(\"copy\");\n      copyText.setSelectionRange(0, 0); // Deselect\n      return res;\n    }\n    return false;\n  }\n  loadScript = (url,props,callback) => {\n    const script = document.createElement(\"script\");\n    script.src = url;\n\n    // Append props\n    if (props){\n      Object.keys(props).forEach((attr,i) => {\n        script[attr] = props[attr];\n      });\n    }\n\n    if (typeof callback === 'function'){\n      if (script.readyState) {  // only required for IE <9\n        script.onreadystatechange = function() {\n          if ( script.readyState === 'loaded' || script.readyState === 'complete' ) {\n            script.onreadystatechange = null;\n            callback();\n          }\n        };\n      } else {  //Others\n        script.onload = callback;\n      }\n    }\n\n    if (!script.id || !document.getElementById(script.id)){\n      document.body.appendChild(script);\n    }\n  }\n  isValidJSON = str => {\n    try {\n      JSON.parse(str);\n    } catch (e) {\n      return false;\n    }\n    return true;\n  }\n  checkAddress = (address) => {\n    return address ? address.match(/^0x[a-fA-F0-9]{40}$/) !== null : false;\n  }\n  getTokenTotalSupply = async (contractName,blockNumber='latest') => {\n    const cachedDataKey = `totalSupply_${contractName}_${blockNumber}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    const totalSupply = await this.genericContractCall(contractName, 'totalSupply', [], {}, blockNumber);\n    return this.setCachedDataWithLocalStorage(cachedDataKey,totalSupply);\n  }\n  getTokenPrice = async (contractName,blockNumber='latest') => {\n    const cachedDataKey = `tokenPrice_${contractName}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    const tokenPrice = await this.genericContractCall(contractName,'tokenPrice',[],{},blockNumber);\n    return this.setCachedDataWithLocalStorage(cachedDataKey,tokenPrice,60);\n  }\n  getContractBalance = async (contractName,address,blockNumber='latest') => {\n    address = address ? address : this.props.tokenConfig.idle.address;\n    const cachedDataKey = `balanceOf_${contractName}_${address}_${blockNumber}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    const balance = await this.genericContractCall(contractName, 'balanceOf', [address], {}, blockNumber);\n    return this.setCachedDataWithLocalStorage(cachedDataKey,balance,30);\n  }\n  getProtocolBalance = async (contractName,address) => {\n    return await this.getContractBalance(contractName,address);\n  }\n  getAprs = async (contractName) => {\n    const cachedDataKey = `getAprs_${contractName}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData){\n      // console.log('getAprs - CACHED - ',cachedData);\n      return typeof cachedData === 'object' ? cachedData : JSON.parse(cachedData);\n    }\n\n    contractName = contractName ? contractName : this.props.tokenConfig.idle.token;\n    const aprs = await this.genericContractCall(contractName, 'getAPRs');\n    if (aprs){\n      const result = {\n        aprs:aprs[1],\n        addresses:aprs[0]\n      };\n      return this.setCachedDataWithLocalStorage(cachedDataKey,result);\n    }\n    return null;\n  }\n  genericIdleCall = async (methodName, params = [], callParams = {}) => {\n    return await this.genericContractCall(this.props.tokenConfig.idle.token, methodName, params, callParams).catch(err => {\n      this.customLogError('Generic Idle call err:', err);\n    });\n  }\n  estimateGas = async (contractName, methodName, params = [], callParams = {}) => {\n    let contract = this.getContractByName(contractName);\n\n    if (!contract) {\n      this.customLogError('Wrong contract name', contractName);\n      return null;\n    }\n\n    return await contract.methods[methodName](...params).estimateGas(callParams);\n  }\n  getTxDecodedLogs = async (tx,logAddr,decodeLogs,storedTx) => {\n\n    let txReceipt = storedTx && storedTx.txReceipt ? storedTx.txReceipt : null;\n\n    if (!txReceipt){\n      txReceipt = await (new Promise( async (resolve, reject) => {\n        this.props.web3.eth.getTransactionReceipt(tx.hash,(err,tx)=>{\n          if (err){\n            reject(err);\n          }\n          resolve(tx);\n        });\n      }));\n\n    }\n\n    if (!txReceipt){\n      return null;\n    }\n\n    const internalTransfers = txReceipt.logs.filter((tx) => { return tx.topics[tx.topics.length-1].toLowerCase() === `0x00000000000000000000000${logAddr}`; });\n\n    if (!internalTransfers.length){\n      return null;\n    }\n\n    try {\n      return [\n        txReceipt,\n        this.props.web3.eth.abi.decodeLog(decodeLogs,internalTransfers[0].data,internalTransfers[0].topics)\n      ];\n    } catch (error) {\n      return null;\n    }\n  }\n  blocksToSeconds = (blocks) => {\n    const blocksPerSeconds = this.BNify(this.getGlobalConfig(['network','blocksPerYear'])).div(365.2422).div(86400);\n    return this.BNify(blocks).div(blocksPerSeconds);\n  }\n  getBlockNumber = async () => {\n    return await this.props.web3.eth.getBlockNumber();\n  }\n  getBlockInfo = async (blockNumber) => {\n    const cachedDataKey = `getBlockInfo_${blockNumber}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData){\n      return cachedData;\n    }\n    const blockInfo = await this.props.web3.eth.getBlock(blockNumber);\n    return blockInfo ? this.setCachedDataWithLocalStorage(cachedDataKey,blockInfo,null) : null;\n  }\n  getContractPastEvents = async (contractName,methodName,params = {}) => {\n    if (!contractName){\n      return null;\n    }\n\n    const contract = this.getContractByName(contractName);\n\n    if (!contract) {\n      this.customLogError('Wrong contract name', contractName);\n      return null;\n    }\n\n    return await contract.getPastEvents(methodName, params);\n  }\n  genericContractCallCached = async (contractName, methodName, params = [], callParams = {}, blockNumber = 'latest', TTL=180) => {\n    const cachedDataKey = `genericContractCall_${contractName}_${methodName}_${JSON.stringify(params)}_${JSON.stringify(callParams)}_${blockNumber}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData){\n      return cachedData;\n    }\n\n    // Store forever for past block\n    if (blockNumber !== 'latest'){\n      TTL = null;\n    }\n\n    const result = await this.genericContractCall(contractName, methodName, params, callParams, blockNumber);\n\n    return this.setCachedDataWithLocalStorage(cachedDataKey,result,TTL);\n  }\n  genericContractCall = async (contractName, methodName, params = [], callParams = {}, blockNumber = 'latest') => {\n\n    if (!contractName){\n      return null;\n    }\n\n    const contract = this.getContractByName(contractName);\n\n    if (!contract) {\n      this.customLog('Wrong contract name', contractName);\n      return null;\n    }\n\n    if (!contract.methods[methodName]) {\n      this.customLog('Wrong method name', methodName);\n      return null;\n    }\n\n    blockNumber = blockNumber !== 'latest' && blockNumber && !isNaN(blockNumber) ? parseInt(blockNumber) : blockNumber;\n\n    try{\n      // this.customLog(`genericContractCall - ${contractName} - ${methodName}`);\n      const value = await contract.methods[methodName](...params).call(callParams,blockNumber).catch(error => {\n        this.customLog(`${contractName} contract method ${methodName} error: `, error);\n      });\n      // if (!value){\n      //   console.log('genericContractCall - NULL - ',contractName,methodName,params);\n      // }\n      // console.log(`${moment().format('HH:mm:ss')} - genericContractCall (${blockNumber}) - ${contractName} - ${methodName} (${JSON.stringify(params)}) : ${value}`);\n      return value;\n    } catch (error) {\n      // console.log('genericContractCall ERROR - ',contractName,methodName,params);\n      this.customLog(\"genericContractCall error\", error);\n    }\n  }\n  asyncForEach = async (array, callback, async=true) => {\n    if (async){\n      await Promise.all(array.map( (c,index) => {\n        return callback(c, index, array);\n      }));\n    } else {\n      for (let index = 0; index < array.length; index++) {\n        await callback(array[index], index, array);\n      }\n    }\n  }\n  apr2apy = (apr) => {\n    return (this.BNify(1).plus(this.BNify(apr).div(365))).pow(365).minus(1);\n  }\n  getUnlentBalance = async (tokenConfig) => {\n    let unlentBalance = await this.getProtocolBalance(tokenConfig.token,tokenConfig.idle.address);\n    if (unlentBalance){\n      unlentBalance = this.fixTokenDecimals(unlentBalance,tokenConfig.decimals);\n    }\n    return unlentBalance;\n  }\n  getTokenPool = async (tokenConfig,addGovTokens=true) => {\n    // Check for cached data\n    const cachedDataKey = `tokenPool_${tokenConfig.idle.address}_${addGovTokens}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN() ) {\n      return this.BNify(cachedData);\n    }\n\n    const tokenAllocation = await this.getTokenAllocation(tokenConfig,false,addGovTokens);\n    if (tokenAllocation && tokenAllocation.totalAllocationWithUnlent){\n      const tokenPool = tokenAllocation.totalAllocationWithUnlent;\n      if (!this.BNify(tokenPool).isNaN()){\n        return this.setCachedDataWithLocalStorage(cachedDataKey,tokenPool);\n      }\n    }\n\n    return null;\n  }\n  getTokenAllocation = async (tokenConfig,protocolsAprs=false,addGovTokens=true) => {\n    \n    if (!tokenConfig.idle){\n      return false;\n    }\n\n    // Check for cached data\n    const cachedDataKey = `tokenAllocation_${tokenConfig.idle.address}_${addGovTokens}`;\n    const cachedData = this.getCachedData(cachedDataKey);\n    if (cachedData) {\n      return cachedData;\n    }\n\n    const tokenAllocation = {\n      avgApr: null,\n      unlentBalance:null,\n      totalAllocation:null,\n      protocolsAllocations:null,\n      protocolsAllocationsPerc:null,\n      totalAllocationConverted:null,\n      totalAllocationWithUnlent:null,\n      totalAllocationWithUnlentConverted:null,\n    };\n\n    const protocolsAllocations = {};\n    const protocolsAllocationsPerc = {};\n\n    let [\n      unlentBalance,\n      tokenPrice,\n      aprs,\n      tokenUsdConversionRate,\n      totalSupply,\n      tokenAllocations,\n      govTokensBalances,\n    ] = await Promise.all([\n      this.getUnlentBalance(tokenConfig),\n      this.getIdleTokenPrice(tokenConfig),\n      this.getAprs(tokenConfig.idle.token),\n      this.getTokenConversionRate(tokenConfig,false),\n      this.getIdleTokenSupply(tokenConfig.idle.token),\n      this.genericContractCallCached(tokenConfig.idle.token,'getAllocations'),\n      addGovTokens ? this.getGovTokensBalances(tokenConfig.idle.address) : null,\n    ]);\n\n    const allAvailableTokens = aprs ? aprs.addresses : null;\n\n    const totalAllocation = this.fixTokenDecimals(totalSupply,18).times(tokenPrice).minus(unlentBalance);\n\n    if (allAvailableTokens && tokenAllocations && allAvailableTokens.length === tokenAllocations.length){\n      allAvailableTokens.forEach( (protocolAddr,index) => {\n        const protocolInfo = tokenConfig.protocols.find( p => p.address.toLowerCase() === protocolAddr.toLowerCase() );\n        if (protocolInfo && protocolInfo.enabled){\n          const protocolAllocationPerc = this.BNify(tokenAllocations[index]).div(100000);\n          const protocolAllocation = totalAllocation.times(protocolAllocationPerc);\n          protocolsAllocations[protocolAddr.toLowerCase()] = protocolAllocation;\n          protocolsAllocationsPerc[protocolAddr.toLowerCase()] = protocolAllocationPerc;\n        }\n      });\n    }\n\n    tokenAllocation.unlentBalance = this.BNify(0);\n    tokenAllocation.totalAllocationWithUnlent = totalAllocation;\n\n    if (unlentBalance){\n      tokenAllocation.unlentBalance = unlentBalance;\n      tokenAllocation.totalAllocationWithUnlent = tokenAllocation.totalAllocationWithUnlent.plus(unlentBalance);\n    }\n\n    tokenAllocation.totalAllocation = totalAllocation;\n    tokenAllocation.protocolsAllocations = protocolsAllocations;\n    tokenAllocation.protocolsAllocationsPerc = protocolsAllocationsPerc;\n\n    // Sum gov tokens balances\n    if (govTokensBalances && govTokensBalances.total){\n      if (tokenUsdConversionRate){\n        govTokensBalances.total = govTokensBalances.total.div(tokenUsdConversionRate);\n      }\n\n      // add gov token balance to total allocation\n      tokenAllocation.totalAllocationWithUnlent = tokenAllocation.totalAllocationWithUnlent.plus(govTokensBalances.total);\n    }\n\n    tokenAllocation.totalAllocationConverted = tokenAllocation.totalAllocation;\n    tokenAllocation.totalAllocationWithUnlentConverted = tokenAllocation.totalAllocationWithUnlent;\n\n    if (tokenUsdConversionRate){\n      tokenAllocation.totalAllocationConverted = tokenAllocation.totalAllocationConverted.times(tokenUsdConversionRate);\n      tokenAllocation.totalAllocationWithUnlentConverted = tokenAllocation.totalAllocationWithUnlentConverted.times(tokenUsdConversionRate);\n    }\n\n    if (protocolsAprs){\n      tokenAllocation.avgApr = this.getAvgApr(protocolsAprs,protocolsAllocations,totalAllocation);\n    }\n\n    // console.log('getTokenAllocation',tokenConfig.idle.token,totalSupply ? totalSupply.toFixed(8) : null,tokenPrice ? tokenPrice.toFixed(8) : null,unlentBalance ? unlentBalance.toFixed(8) : null,tokenAllocation);\n\n    // console.log('Allocations for '+tokenConfig.idle.token+' loaded in '+((Date.now()-start)/1000).toFixed(2)+'s');\n\n    return this.setCachedData(cachedDataKey,tokenAllocation);\n  }\n  getSushiswapPoolTokenPrice = async (contractName,pairAddresses) => {\n    const [\n      token0_address,\n      token1_address,\n      poolReserves,\n      totalSupply\n    ] = await Promise.all([\n      this.genericContractCallCached(contractName,'token0'),\n      this.genericContractCallCached(contractName,'token1'),\n      this.genericContractCallCached(contractName,'getReserves'),\n      this.getTokenTotalSupply(contractName)\n    ]);\n\n    if (token0_address && token1_address && poolReserves && totalSupply){\n      const token0_config = {\n        address:token0_address\n      };\n      const token1_config = {\n        address:token1_address\n      };\n      const DAITokenConfig = this.getGlobalConfig(['stats','tokens','DAI']);\n\n      let [\n        token0_price,\n        token1_price\n      ] = await Promise.all([\n        this.getSushiswapConversionRate(DAITokenConfig,token0_config),\n        this.getSushiswapConversionRate(DAITokenConfig,token1_config)\n      ]);\n\n      if (token0_price && token1_price){\n        // token0_price = this.BNify(1).div(this.BNify(token0_price));\n        // token1_price = this.BNify(1).div(this.BNify(token1_price));\n\n        const token0_pool = token0_price.times(this.fixTokenDecimals(poolReserves[0],18));\n        const token1_pool = token1_price.times(this.fixTokenDecimals(poolReserves[1],18));\n\n        const totalPoolSize = token0_pool.plus(token1_pool);\n        const poolTokenPrice = totalPoolSize.div(this.fixTokenDecimals(totalSupply,18));\n\n        // console.log(parseFloat(token0_price),parseFloat(token1_price),parseFloat(poolTokenPrice));\n\n        return poolTokenPrice;\n      }\n    }\n\n    return null;\n  }\n  getSushiswapConversionRate = async (tokenConfigFrom,tokenConfigDest) => {\n\n    // Check for cached data\n    const cachedDataKey = `sushiswapConversionRate_${tokenConfigFrom.address}_${tokenConfigDest.address}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    try {\n      const WETHAddr = this.getGlobalConfig(['stats','tokens','WETH','address']);\n      const one = this.normalizeTokenDecimals(18);\n\n      const path = [];\n      path.push(tokenConfigFrom.address);\n\n      // Don't pass through weth if i'm converting weth\n      if (WETHAddr.toLowerCase() !== tokenConfigFrom.address.toLowerCase() && WETHAddr.toLowerCase() !== tokenConfigDest.address.toLowerCase()){\n        path.push(WETHAddr);\n      }\n      path.push(tokenConfigDest.address);\n\n      const res = await this.genericContractCall('SushiswapRouter','getAmountsIn',[one.toFixed(),path]);\n\n      if (res){\n        const price = this.BNify(res[0]).div(one);\n        return this.setCachedDataWithLocalStorage(cachedDataKey,price);\n      }\n      return null;\n    } catch (error) {\n      return null;\n    }\n  }\n  getUniswapConversionRate = async (tokenConfigFrom,tokenConfigDest) => {\n\n    if (tokenConfigDest.addressForPrice){\n      tokenConfigDest = Object.assign({},tokenConfigDest);\n      tokenConfigDest.address = tokenConfigDest.addressForPrice;\n    }\n\n    // Check for cached data\n    const cachedDataKey = `uniswapConversionRate_${tokenConfigFrom.address}_${tokenConfigDest.address}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    // console.log('getUniswapConversionRate - CACHED',cachedDataKey,cachedData);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    try {\n      const WETHAddr = this.getGlobalConfig(['stats','tokens','WETH','address']);\n      const one = this.normalizeTokenDecimals(18);\n\n      const path = [];\n      path.push(tokenConfigFrom.address);\n      // Don't pass through weth if i'm converting weth\n      if (WETHAddr.toLowerCase() !== tokenConfigFrom.address.toLowerCase() && WETHAddr.toLowerCase() !== tokenConfigDest.address.toLowerCase()){\n        path.push(WETHAddr);\n      }\n      path.push(tokenConfigDest.address);\n\n      const unires = await this.genericContractCall('UniswapRouter','getAmountsIn',[one.toFixed(),path]);\n\n      // console.log('getUniswapConversionRate',path,unires);\n      \n      if (unires){\n        const price = this.BNify(unires[0]).div(one);\n        return this.setCachedDataWithLocalStorage(cachedDataKey,price);\n      }\n      return null;\n    } catch (error) {\n      return null;\n    }\n  }\n  /*\n  getUniswapConversionRate_old = async (tokenConfigFrom,tokenConfigDest) => {\n    const cachedDataKey = `compUniswapConverstionRate_${tokenConfigFrom.address}_${tokenConfigDest.address}`;\n    const cachedData = this.getCachedData(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return cachedData;\n    }\n\n    const tokenFrom = new Token(ChainId.MAINNET, tokenConfigFrom.address, tokenConfigFrom.decimals);\n    const tokenTo = new Token(ChainId.MAINNET, tokenConfigDest.address, tokenConfigDest.decimals);\n\n    const pair = await Fetcher.fetchPairData(tokenFrom, tokenTo);\n    const route = new Route([pair], tokenTo);\n\n    let output = null;\n    if (route && route.midPrice){\n      output = this.BNify(route.midPrice.toSignificant(tokenConfigDest.decimals));\n      this.setCachedData(cachedDataKey,output);\n    }\n    return output;\n  }\n  */\n  getCurveDepositedTokens = async (account,enabledTokens=[]) => {\n    account = account ? account : this.props.account;\n\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    if (!account || !enabledTokens || !enabledTokens.length){\n      return [];\n    }\n\n    const curveTxs = await this.getCurveTxs(account,0,'latest',enabledTokens);\n\n    const idleTokensBalances = {};\n    let remainingCurveTokens = this.BNify(0);\n\n    // this.customLog('getCurveDepositedTokens',curveTxs);\n\n    curveTxs.forEach( tx => {\n\n      const idleToken = tx.idleToken;\n      const idleTokens = this.BNify(tx.idleTokens);\n\n      if (!idleTokensBalances[idleToken]){\n        idleTokensBalances[idleToken] = this.BNify(0);\n      }\n\n      switch (tx.action){\n        case 'CurveIn':\n        case 'CurveZapIn':\n          idleTokensBalances[idleToken] = idleTokensBalances[idleToken].plus(idleTokens);\n        break;\n        case 'CurveOut':\n        case 'CurveZapOut':\n          if (idleTokens.gt(idleTokensBalances[idleToken])){\n            remainingCurveTokens = remainingCurveTokens.plus(idleTokens.minus(idleTokensBalances[idleToken]));\n          }\n          idleTokensBalances[idleToken] = idleTokensBalances[idleToken].minus(idleTokens);\n          if (idleTokensBalances[idleToken].lt(0)){\n            idleTokensBalances[idleToken] = this.BNify(0);\n          }\n        break;\n        default:\n        break;\n      }\n\n      // this.customLog(this.strToMoment(tx.timeStamp*1000).format('DD-MM-YYYY HH:mm:ss'),tx.blockNumber,idleToken,tx.action,idleTokens.toFixed(6),idleTokensBalances[idleToken].toFixed(6),remainingCurveTokens.toFixed(6));\n\n      // Scalo il remaining tokens\n      if (remainingCurveTokens.gt(0)){\n        Object.keys(idleTokensBalances).forEach( token => {\n          const tokenBalance = idleTokensBalances[token];\n          if (tokenBalance && tokenBalance.gt(0)){\n            if (tokenBalance.gt(remainingCurveTokens)){\n              idleTokensBalances[token] = idleTokensBalances[token].minus(remainingCurveTokens);\n            } else {\n              remainingCurveTokens = remainingCurveTokens.minus(idleTokensBalances[token]);\n              idleTokensBalances[token] = 0;\n            }\n          }\n        });\n      }\n    });\n\n    // this.customLog('idleTokensBalances',idleTokensBalances);\n  }\n  getCurveUnevenTokenAmounts = async (amounts,max_burn_amount) => {\n    const curveSwapContract = await this.getCurveDepositContract();\n    if (curveSwapContract){\n      const unevenAmounts = await this.genericContractCall(curveSwapContract.name, 'remove_liquidity_imbalance', [amounts, max_burn_amount]);\n      // this.customLog('getCurveUnevenTokenAmounts',amounts,max_burn_amount,unevenAmounts);\n      return unevenAmounts;\n    }\n    return null;\n  }\n  getCurveAPY = async () => {\n\n    // Check for cached data\n    const cachedDataKey = `getCurveAPY`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    const curveRatesInfo = this.getGlobalConfig(['curve','rates']);\n    if (curveRatesInfo){\n      const results = await this.makeRequest(curveRatesInfo.endpoint);\n      if (results && results.data){\n        const path = Object.values(curveRatesInfo.path);\n        let curveApy = this.getArrayPath(path,results.data);\n        if (curveApy){\n          curveApy = this.BNify(curveApy).times(100);\n          if (!this.BNify(curveApy).isNaN()){\n            return this.setCachedDataWithLocalStorage(cachedDataKey,curveApy);\n          }\n        }\n      }\n    }\n    return null;\n  }\n  getCurveAvailableTokens = () => {\n    if (!this.props.availableStrategies){\n      return false;\n    }\n    const curveTokens = this.getGlobalConfig(['curve','availableTokens']);\n    const strategyTokens = this.props.availableStrategies['best'];\n    const availableTokens = Object.keys(strategyTokens).reduce( (availableTokens,token) => {\n      const tokenConfig = strategyTokens[token];\n      if (Object.keys(curveTokens).includes(tokenConfig.idle.token) && curveTokens[tokenConfig.idle.token].enabled){\n        availableTokens[token] = tokenConfig;\n      }\n      return availableTokens;\n    },{});\n\n    return availableTokens;\n  }\n  getCurveAPYContract = async () => {\n    const curveSwapContract = await this.getCurveDepositContract();\n    if (curveSwapContract){\n      const blockNumber = await this.getBlockNumber();\n      if (blockNumber){\n        const blocksForPrevTokenPrice = 10;\n        let [tokenPrice,prevTokenPrice] = await Promise.all([\n          this.genericContractCall(curveSwapContract.name,'get_virtual_price'),\n          this.genericContractCallCached(curveSwapContract.name,'get_virtual_price',[],{},blockNumber-blocksForPrevTokenPrice)\n        ]);\n\n        if (tokenPrice && prevTokenPrice){\n\n          const blocksMultiplier = this.BNify(this.getGlobalConfig(['network','blocksPerYear'])).div(blocksForPrevTokenPrice);\n          const curveAPR = this.BNify(tokenPrice).div(prevTokenPrice).minus(1).times(blocksMultiplier);\n          return this.apr2apy(curveAPR).times(100);\n        }\n      }\n    }\n    return null;\n  }\n  getCurveTokenSupply = async () => {\n    const curvePoolContract = await this.getCurvePoolContract();\n    if (curvePoolContract){\n      return await this.getTokenTotalSupply(curvePoolContract.name);\n    }\n    return null;\n  }\n  getCurveTokenBalance = async (account=null,fixDecimals=true) => {\n    const curvePoolContract = await this.getCurvePoolContract();\n    if (curvePoolContract){\n      account = account ? account : this.props.account;\n      return await this.getTokenBalance(curvePoolContract.name,account,fixDecimals);\n    }\n    return null;\n  }\n  getCurveTokenPrice = async (blockNumber='latest',fixDecimals=true) => {\n    const migrationContract = await this.getCurveDepositContract();\n    let curveTokenPrice = await this.genericContractCallCached(migrationContract.name,'get_virtual_price',[],{},blockNumber);\n    if (curveTokenPrice){\n      curveTokenPrice = this.BNify(curveTokenPrice);\n      if (fixDecimals){\n        const curvePoolContract = this.getGlobalConfig(['curve','poolContract']);\n        curveTokenPrice = this.fixTokenDecimals(curveTokenPrice,curvePoolContract.decimals);\n      }\n      return curveTokenPrice;\n    }\n    return null;\n  }\n  getCurveRedeemableIdleTokens = async (account) => {\n    let [curveTokenPrice,curveTokenBalance] = await Promise.all([\n      this.getCurveTokenPrice('latest'),\n      this.getCurveTokenBalance(account),\n    ]);\n    if (curveTokenBalance && curveTokenPrice){\n      return this.BNify(curveTokenBalance).times(curveTokenPrice);\n    }\n    return null;\n  }\n  getCurveDepositContract = async () => {\n    const depositContractInfo = this.getGlobalConfig(['curve','depositContract']);\n    if (depositContractInfo){\n      let curveDepositContract = this.getContractByName(depositContractInfo.name);\n      if (!curveDepositContract && depositContractInfo.abi){\n        curveDepositContract = await this.props.initContract(depositContractInfo.name,depositContractInfo.address,depositContractInfo.abi);\n      }\n    }\n    return depositContractInfo;\n  }\n  getCurveZapContract = async () => {\n    const zapContractInfo = this.getGlobalConfig(['curve','zapContract']);\n    if (zapContractInfo){\n      let curveZapContract = this.getContractByName(zapContractInfo.name);\n      if (!curveZapContract && zapContractInfo.abi){\n        curveZapContract = await this.props.initContract(zapContractInfo.name,zapContractInfo.address,zapContractInfo.abi);\n      }\n    }\n    return zapContractInfo;\n  }\n  getCurvePoolContract = async () => {\n    const poolContractInfo = this.getGlobalConfig(['curve','poolContract']);\n    if (poolContractInfo){\n      let curvePoolContract = this.getContractByName(poolContractInfo.name);\n      if (!curvePoolContract && poolContractInfo.abi){\n        curvePoolContract = await this.props.initContract(poolContractInfo.name,poolContractInfo.address,poolContractInfo.abi);\n      }\n    }\n    return poolContractInfo;\n  }\n  getCurveSwapContract = async () => {\n    const migrationContractInfo = this.getGlobalConfig(['curve','migrationContract']);\n    if (migrationContractInfo){\n      let migrationContract = this.getContractByName(migrationContractInfo.name);\n      if (!migrationContract && migrationContractInfo.abi){\n        migrationContract = await this.props.initContract(migrationContractInfo.name,migrationContractInfo.address,migrationContractInfo.abi);\n      }\n    }\n    return migrationContractInfo;\n  }\n  getCurveIdleTokensAmounts = async (account=null,curveTokenBalance=null,max_slippage=null) => {\n    if (!account && this.props.account){\n      account = this.props.account;\n    }\n\n    if (!account){\n      return null;\n    }\n\n    const tokensBalances = {};\n    const curveSwapContract = await this.getCurveSwapContract();\n    const curveAvailableTokens = this.getGlobalConfig(['curve','availableTokens']);\n\n    const curveTokenSupply = await this.getCurveTokenSupply();\n    if (!curveTokenBalance){\n      curveTokenBalance = await this.getCurveTokenBalance(account,false);\n    }\n\n    if (curveTokenBalance && curveTokenSupply){\n      const curveTokenShare = this.BNify(curveTokenBalance).div(this.BNify(curveTokenSupply));\n      const n_coins = Object.keys(curveAvailableTokens).length;\n\n      if (max_slippage){\n        max_slippage = this.BNify(max_slippage).div(n_coins);\n      }\n\n      // this.customLog('curveTokenShare',this.BNify(curveTokenBalance).toString(),this.BNify(curveTokenSupply).toString(),curveTokenShare.toString());\n\n      await this.asyncForEach(Object.keys(curveAvailableTokens), async (token) => {\n        const curveTokenConfig = curveAvailableTokens[token];\n        const coinIndex = curveTokenConfig.migrationParams.coinIndex;\n        const curveIdleTokens = await this.genericContractCall(curveSwapContract.name,'balances',[coinIndex]);\n        if (curveIdleTokens){\n          let idleTokenBalance = this.BNify(curveIdleTokens).times(curveTokenShare);\n          if (max_slippage){\n            // this.customLog('getCurveIdleTokensAmounts',idleTokenBalance.toFixed());\n            idleTokenBalance = idleTokenBalance.minus(idleTokenBalance.times(max_slippage));\n          }\n          tokensBalances[coinIndex] = this.integerValue(idleTokenBalance);\n        }\n      });\n    }\n\n    return Object.values(tokensBalances);\n  }\n\n  // Get amounts of underlying tokens in the curve pool\n  getCurveTokensAmounts = async (account=null,curveTokenBalance=null,fixDecimals=false,useCoinIndex=false) => {\n\n    if (!account && this.props.account){\n      account = this.props.account;\n    }\n\n    if (!account){\n      return null;\n    }\n\n    const tokensBalances = {};\n    const availableTokens = this.getCurveAvailableTokens();\n    const curveSwapContract = await this.getCurveSwapContract();\n    const curveAvailableTokens = this.getGlobalConfig(['curve','availableTokens']);\n\n    const curveTokenSupply = await this.getCurveTokenSupply();\n    if (!curveTokenBalance){\n      curveTokenBalance = await this.getCurveTokenBalance(account,false);\n    }\n\n    if (curveTokenBalance && curveTokenSupply){\n      const curveTokenShare = this.BNify(curveTokenBalance).div(this.BNify(curveTokenSupply));\n\n      await this.asyncForEach(Object.keys(curveAvailableTokens), async (token) => {\n        const curveTokenConfig = curveAvailableTokens[token];\n        const coinIndex = curveTokenConfig.migrationParams.coinIndex;\n        const tokenConfig = availableTokens[curveTokenConfig.baseToken];\n        const [\n          idleTokenPrice,\n          idleTokenBalance\n        ] = await Promise.all([\n          this.getIdleTokenPrice(tokenConfig),\n          this.genericContractCall(curveSwapContract.name,'balances',[coinIndex]),\n        ]);\n\n        const totalTokenSupply = this.BNify(idleTokenBalance).times(this.BNify(idleTokenPrice));\n        let tokenBalance = totalTokenSupply.times(curveTokenShare);\n        if (fixDecimals){\n          tokenBalance = this.fixTokenDecimals(tokenBalance,18);\n        }\n\n        tokensBalances[curveTokenConfig.baseToken] = useCoinIndex ? this.integerValue(tokenBalance) : tokenBalance;\n      });\n    }\n\n    return useCoinIndex ? Object.values(tokensBalances) : tokensBalances;\n  }\n\n  // Compile amounts array for Curve\n  getCurveAmounts = async (token,amount,deposit=false) => {\n    const amounts = {};\n    const availableTokens = this.getCurveAvailableTokens();\n    const curveAvailableTokens = this.getGlobalConfig(['curve','availableTokens']);\n\n    await this.asyncForEach(Object.keys(curveAvailableTokens), async (idleToken) => {\n      const curveTokenConfig = curveAvailableTokens[idleToken];\n      const migrationParams = curveTokenConfig.migrationParams;\n      const coinIndex = migrationParams.coinIndex;\n      if (idleToken === token && parseFloat(amount)>0){\n        const tokenConfig = availableTokens[curveTokenConfig.baseToken];\n        amount = this.fixTokenDecimals(amount,18);\n        if (!deposit){\n          const idleTokenPrice = await this.getIdleTokenPrice(tokenConfig);\n          amount = amount.div(idleTokenPrice);\n        }\n        amount = this.normalizeTokenAmount(amount,curveTokenConfig.decimals);\n        amounts[coinIndex] = amount;\n      } else {\n        amounts[coinIndex] = 0;\n      }\n    });\n\n    return Object.values(amounts);\n  }\n  getCurveTokenAmount = async (amounts,deposit=true) => {\n    const migrationContract = await this.getCurveSwapContract();\n    if (migrationContract){\n      return await this.genericContractCall(migrationContract.name,'calc_token_amount',[amounts,deposit]);\n    }\n    return null;\n  }\n  getCurveSlippage = async (token,amount,deposit=true,uneven_amounts=null) => {\n    let slippage = null;\n    const depositContract = await this.getCurveDepositContract();\n    if (depositContract){\n\n      const n_coins = this.getGlobalConfig(['curve','params','n_coins']);\n\n      amount = this.BNify(amount)\n      if (!amount || amount.isNaN() || amount.lte(0)){\n        return null;\n      }\n\n      let amounts = uneven_amounts;\n      if (!amounts || amounts.length !== n_coins){\n        amounts = await this.getCurveAmounts(token,amount);\n      }\n\n      let [\n        virtualPrice,\n        tokenAmount\n      ] = await Promise.all([\n        this.genericContractCall(depositContract.name,'get_virtual_price'),\n        this.genericContractCall(depositContract.name,'calc_token_amount',[amounts,deposit]),\n      ]);\n\n      if (virtualPrice && tokenAmount){\n        amount = this.fixTokenDecimals(amount,18);\n        virtualPrice = this.fixTokenDecimals(virtualPrice,18);\n        tokenAmount = this.fixTokenDecimals(tokenAmount,18);\n        const Sv = tokenAmount.times(virtualPrice);\n\n        // Handle redeem in uneven amounts (Slippage 0%)\n        if (uneven_amounts && !deposit){\n          amount = amount.times(virtualPrice);\n        }\n\n        if (deposit){\n          slippage = Sv.div(amount).minus(1).times(-1);\n        } else {\n          slippage = amount.div(Sv).minus(1).times(-1);\n        }\n\n        // console.log('getCurveSlippage',token,deposit,amounts,tokenAmount.toFixed(6),virtualPrice.toFixed(6),Sv.toFixed(6),amount.toFixed(6),slippage.toFixed(6));\n\n        return slippage;\n      }\n    }\n    return null;\n  }\n  getStkAaveDistribution = async (tokenConfig,aTokenIdleSupply=null,annualize=true) => {\n\n    const cachedDataKey = `getStkAaveDistribution_${tokenConfig.idle.token}_${aTokenIdleSupply}_${annualize}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    let aaveDistribution = this.BNify(0);\n    const stkAAVETokenConfig = this.getGlobalConfig(['govTokens','stkAAVE']);\n    const aTokenConfig = tokenConfig.protocols.find( p => p.name === stkAAVETokenConfig.protocol );\n\n    if (!aTokenConfig || stkAAVETokenConfig.disabledTokens.includes(tokenConfig.idle.token)){\n      return aaveDistribution;\n    }\n\n    const aaveIncentivesController_address = await this.genericContractCallCached(aTokenConfig.token,'getIncentivesController',[],{},'latest',null);\n\n    // console.log('getStkAaveDistribution',tokenConfig.idle.token,aTokenConfig.token,aaveIncentivesController_address);\n\n    if (!aaveIncentivesController_address){\n      return aaveDistribution;\n    }\n\n    const IAaveIncentivesController_name = `IAaveIncentivesController_${aTokenConfig.token}`;\n    await this.props.initContract(IAaveIncentivesController_name,aaveIncentivesController_address,stkAAVETokenConfig.abi);\n\n    let [\n      aTokenTotalSupply,\n      tokenAllocation,\n      assetData,\n    ] = await Promise.all([\n      this.getTokenTotalSupply(aTokenConfig.token),\n      this.getTokenAllocation(tokenConfig,false,false),\n      this.genericContractCallCached(IAaveIncentivesController_name,'getAssetData',[aTokenConfig.address]),\n    ]);\n\n    if (assetData && tokenAllocation){\n\n      const aaveAllocationPerc = tokenAllocation.protocolsAllocationsPerc[aTokenConfig.address.toLowerCase()];\n\n      if (aaveAllocationPerc && aaveAllocationPerc.gte(0.001)){\n        if (!aTokenIdleSupply){\n          aTokenIdleSupply = await this.getContractBalance(aTokenConfig.token,tokenConfig.idle.address);\n        }\n\n        const aaveSpeed = this.BNify(assetData[1]);\n        aTokenIdleSupply = this.BNify(aTokenIdleSupply);\n        aTokenTotalSupply = this.BNify(aTokenTotalSupply);\n        const secondsPerYear = this.getGlobalConfig(['network','secondsPerYear']);\n\n        const aavePoolShare = aTokenIdleSupply.div(aTokenTotalSupply);\n        aaveDistribution = aaveSpeed.times(aavePoolShare);\n\n        if (annualize){\n          aaveDistribution = aaveDistribution.div(1e18).times(secondsPerYear);\n        }\n\n        // console.log('getStkAaveDistribution',tokenConfig.idle.token,aTokenIdleSupply.toFixed(),aTokenTotalSupply.toFixed(),aavePoolShare.toFixed(),aaveSpeed.toFixed(),aaveDistribution.toFixed());\n\n        if (!this.BNify(aaveDistribution).isNaN()){\n          return this.setCachedDataWithLocalStorage(cachedDataKey,aaveDistribution);\n        }\n      }\n    }\n\n    return aaveDistribution;\n  }\n  getStkAaveUserDistribution = async (account=null,availableTokens=null) => {\n    if (!account){\n      account = this.props.account;\n    }\n    if (!availableTokens && this.props.selectedStrategy){\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n\n    if (!account || !availableTokens){\n      return false;\n    }\n\n    const stkAAVETokenConfig = this.getGlobalConfig(['govTokens','stkAAVE']);\n\n    let output = this.BNify(0);\n    await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const tokenConfig = availableTokens[token];\n      const aTokenInfo = tokenConfig.protocols.find( p => (p.name === stkAAVETokenConfig.protocol) );\n      if (aTokenInfo){\n        const [\n          userPoolShare,\n          aaveDistribution,\n        ] = await Promise.all([\n          this.getUserPoolShare(account,tokenConfig,false),\n          this.getStkAaveDistribution(tokenConfig,null,false),\n        ]);\n\n        if (aaveDistribution && userPoolShare){\n          output = output.plus(aaveDistribution.times(userPoolShare));\n        }\n      }\n    });\n\n    return output;\n  }\n  getStkAaveApr = async (token,tokenConfig,aaveConversionRate=null) => {\n    const stkAAVETokenConfig = this.getGlobalConfig(['govTokens','stkAAVE']);\n    if (!stkAAVETokenConfig.enabled){\n      return false;\n    }\n\n    const cachedDataKey = `getStkAaveApr_${tokenConfig.idle.token}_${aaveConversionRate}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    let stkAaveAPR = this.BNify(0);\n    const aaveDistribution = await this.getStkAaveDistribution(tokenConfig);\n\n    if (aaveDistribution && this.BNify(aaveDistribution).gt(0)){\n\n      // Get COMP conversion rate\n      if (!aaveConversionRate){\n        const DAITokenConfig = this.getGlobalConfig(['stats','tokens','DAI']);\n        try {\n          const destTokenConfig = {\n            address:stkAAVETokenConfig.addressForPrice || stkAAVETokenConfig.address\n          };\n          aaveConversionRate = await this.getUniswapConversionRate(DAITokenConfig,destTokenConfig);\n        } catch (error) {\n\n        }\n        if (!aaveConversionRate || aaveConversionRate.isNaN()){\n          aaveConversionRate = this.BNify(1);\n        }\n      }\n\n      const stkAaveValue = this.BNify(aaveConversionRate).times(aaveDistribution);\n\n      const tokenAllocation = await this.getTokenAllocation(tokenConfig,false,false);\n\n      if (tokenAllocation){\n        stkAaveAPR = stkAaveValue.div(tokenAllocation.totalAllocationConverted).times(100);\n\n        console.log('getStkAaveApr',tokenConfig.idle.token,aaveDistribution.toFixed(),this.BNify(aaveConversionRate).toFixed(),stkAaveValue.toFixed(),tokenAllocation.totalAllocationConverted.toFixed(),stkAaveAPR.toFixed());\n\n        if (!this.BNify(stkAaveAPR).isNaN()){\n          this.setCachedDataWithLocalStorage(cachedDataKey,stkAaveAPR);\n        }\n      }\n    }\n\n    return stkAaveAPR;\n  }\n  getCompAPR = async (token,tokenConfig,cTokenIdleSupply=null,compConversionRate=null) => {\n    const COMPTokenConfig = this.getGlobalConfig(['govTokens','COMP']);\n    if (!COMPTokenConfig.enabled){\n      return false;\n    }\n\n    const cachedDataKey = `getCompAPR_${tokenConfig.idle.token}_${cTokenIdleSupply}_${compConversionRate}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    let compAPR = this.BNify(0);\n    const compDistribution = await this.getCompDistribution(tokenConfig,cTokenIdleSupply);\n\n    if (compDistribution){\n\n      const DAITokenConfig = this.getGlobalConfig(['stats','tokens','DAI']);\n        \n      // Get COMP conversion rate\n      if (!compConversionRate){\n        try {\n          compConversionRate = await this.getUniswapConversionRate(DAITokenConfig,COMPTokenConfig);\n        } catch (error) {\n\n        }\n        if (!compConversionRate || compConversionRate.isNaN()){\n          compConversionRate = this.BNify(1);\n        }\n      }\n\n      const compValue = this.BNify(compConversionRate).times(compDistribution);\n\n      const tokenAllocation = await this.getTokenAllocation(tokenConfig,false,false);\n\n      console.log('getCompAPR',tokenConfig.idle.token,compConversionRate.toFixed(5),compDistribution.toFixed(5),compValue.toFixed(5),tokenAllocation.totalAllocationConverted.toFixed(5));\n\n      if (tokenAllocation){\n        compAPR = compValue.div(tokenAllocation.totalAllocationConverted).times(100);\n        if (!this.BNify(compAPR).isNaN()){\n          this.setCachedDataWithLocalStorage(cachedDataKey,compAPR);\n        }\n      }\n    }\n\n    return compAPR;\n  }\n  getCompSpeed = async (cTokenAddress) => {\n    let compSpeed = await this.genericContractCallCached('Comptroller','compSpeeds',[cTokenAddress]);\n    if (compSpeed){\n      return this.BNify(compSpeed);\n    }\n    return null;\n  }\n  getCompDistribution = async (tokenConfig,cTokenIdleSupply=null,annualize=true) => {\n\n    const cachedDataKey = `getCompDistribution_${tokenConfig.idle.token}_${cTokenIdleSupply}_${annualize}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    const cTokenInfo = tokenConfig.protocols.find( p => (p.name === 'compound') );\n    if (cTokenInfo){\n\n      // Get IdleToken allocation in compound\n      const tokenAllocation = await this.getTokenAllocation(tokenConfig,false,false);\n      const compoundAllocationPerc = tokenAllocation.protocolsAllocationsPerc[cTokenInfo.address.toLowerCase()];\n\n      // Calculate distribution if compound allocation >= 0.1%\n      if (compoundAllocationPerc && compoundAllocationPerc.gte(0.001)){\n\n        // Get COMP distribution speed and Total Supply\n        const [\n          compSpeed,\n          cTokenTotalSupply\n        ] = await Promise.all([\n          this.getCompSpeed(cTokenInfo.address),\n          this.getTokenTotalSupply(cTokenInfo.token)\n        ]);\n\n        if (compSpeed && cTokenTotalSupply){\n\n          // Get Idle liquidity supply\n          if (!cTokenIdleSupply){\n            cTokenIdleSupply = await this.getContractBalance(cTokenInfo.token,tokenConfig.idle.address);\n          }\n\n          if (cTokenIdleSupply){\n\n            // Get COMP distribution for Idle in a Year\n            const blocksPerYear = this.getGlobalConfig(['network','blocksPerYear']);\n\n            // Take 50% of distrubution for lenders side\n            const compoundPoolShare = this.BNify(cTokenIdleSupply).div(this.BNify(cTokenTotalSupply));\n            let compDistribution = this.BNify(compSpeed).times(compoundPoolShare);\n\n            if (annualize){\n              compDistribution = this.fixTokenDecimals(compDistribution,18).times(blocksPerYear);\n            }\n\n            if (!this.BNify(compDistribution).isNaN()){\n              return this.setCachedDataWithLocalStorage(cachedDataKey,compDistribution);\n            }\n          }\n        }\n      }\n    }\n\n    return null;\n  }\n  getCompUserDistribution = async (account=null,availableTokens=null) => {\n    if (!account){\n      account = this.props.account;\n    }\n    if (!availableTokens && this.props.selectedStrategy){\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n\n    if (!account || !availableTokens){\n      return false;\n    }\n\n    let output = this.BNify(0);\n    await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const tokenConfig = availableTokens[token];\n      const cTokenInfo = tokenConfig.protocols.find( p => (p.name === 'compound') );\n      if (cTokenInfo){\n        const [\n          userPoolShare,\n          compDistribution,\n        ] = await Promise.all([\n          this.getUserPoolShare(account,tokenConfig,false),\n          this.getCompDistribution(tokenConfig,null,false),\n        ]);\n\n        if (compDistribution && userPoolShare){\n          output = output.plus(compDistribution.times(userPoolShare));\n        }\n      }\n    });\n\n    return output;\n  }\n  getCompAvgApr = async (availableTokens=null) => {\n    if (!availableTokens && this.props.selectedStrategy){\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n    let output = this.BNify(0);\n    let totalAllocation = this.BNify(0);\n    await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const tokenConfig = availableTokens[token];\n      const [compApr,tokenAllocation] = await Promise.all([\n        this.getCompAPR(token,tokenConfig),\n        this.getTokenAllocation(tokenConfig,false,false)\n      ]);\n      \n      if (compApr && tokenAllocation){\n        output = output.plus(compApr.times(tokenAllocation.totalAllocation));\n        totalAllocation = totalAllocation.plus(tokenAllocation.totalAllocation);\n        // this.customLog(token,compApr.toString(),tokenAllocation.totalAllocation.toString(),output.toString(),totalAllocation.toString());\n      }\n    });\n\n    output = output.div(totalAllocation);\n\n    return output;\n  }\n  getTokensCsv = async () => {\n\n    // eslint-disable-next-line\n    Array.prototype.sum = function() {\n      return this.reduce(function(pv, cv) { return pv + cv; }, 0);\n    };\n    // eslint-disable-next-line\n    Array.prototype.max = function() {\n      return Math.max.apply(null, this);\n    };\n    // eslint-disable-next-line\n    Array.prototype.avg = function() {\n      return this.sum()/this.length;\n    };\n\n    const csv = [];\n    const availableStrategies = this.props.availableStrategies;\n    await this.asyncForEach(Object.keys(availableStrategies), async (strategy) => {\n      const availableTokens = availableStrategies[strategy];\n      const isRisk = strategy === 'risk';\n      await this.asyncForEach(Object.keys(availableTokens), async (token) => {\n        const tokenConfig = availableTokens[token];\n        const rates = await this.getTokenApiData(tokenConfig.address,isRisk,null,null,false,7200,'ASC');\n        const header = [];\n        let protocols = null;\n        const rows = [];\n        const aprAvg = {};\n        const scoreAvg = {};\n\n        const lastRow = rates[rates.length-1];\n\n        rates.forEach( r => {\n          if (!protocols){\n            header.push('Token');\n            header.push('Date');\n\n            // Get protocols\n            protocols = [];\n            lastRow.protocolsData.forEach( p1 => {\n              const foundProtocol = tokenConfig.protocols.find( p2 => ( p2.address.toLowerCase() === p1.protocolAddr.toLowerCase() ) );\n              if (foundProtocol){\n                protocols.push(foundProtocol);\n              }\n            });\n\n            // Add APR columns\n            header.push('APR Idle');\n            header.push('SCORE Idle');\n\n            aprAvg['idle'] = [];\n            scoreAvg['idle'] = [];\n\n            protocols.forEach( p => {\n              header.push('APR '+p.name);\n              header.push('SCORE '+p.name);\n\n              aprAvg[p.name] = [];\n              scoreAvg[p.name] = [];\n            });\n\n            rows.push(header.join(','));\n          }\n\n          const date = moment(r.timestamp*1000).format('YYYY-MM-DD');\n          const rate = this.BNify(r.idleRate).div(1e18).toFixed(5);\n          const score = parseFloat(r.idleScore);\n\n          const row = [];\n          row.push(`${token}-${strategy}`);\n          row.push(date);\n          row.push(rate);\n          row.push(score);\n\n          if (date>='2020-09-15'/* && date<='2020-11-09'*/){\n            aprAvg['idle'].push(parseFloat(rate));\n            scoreAvg['idle'].push(parseFloat(score));\n          }\n\n          protocols.forEach( pInfo => {\n            const pData = r.protocolsData.find( p => (p.protocolAddr.toLowerCase() === pInfo.address.toLowerCase()) );\n            let pRate = '';\n            let pScore = '';\n            if (pData){\n              pScore = !this.BNify(pData.defiScore).isNaN() ? parseFloat(pData.defiScore) : '0.00000';\n              pRate = !this.BNify(pData.rate).isNaN() ? this.BNify(pData.rate).div(1e18) : '0.00000';\n              if (typeof pData[`${pInfo.name}AdditionalAPR`] !== 'undefined'){\n                const additionalRate = this.BNify(pData[`${pInfo.name}AdditionalAPR`]).div(1e18);\n                if (!additionalRate.isNaN()){\n                  pRate = pRate.plus(additionalRate);\n                }\n              }\n\n              if (date>='2020-09-15'/* && date<='2020-11-09'*/){\n                if (!isNaN(parseFloat(pRate))){\n                  aprAvg[pInfo.name].push(parseFloat(pRate));\n                }\n                if (!isNaN(parseFloat(pScore))){\n                  scoreAvg[pInfo.name].push(parseFloat(pScore));\n                }\n              }\n            }\n\n            row.push(pRate);\n            row.push(pScore);\n          });\n\n          rows.push(row.join(','));\n        });\n\n        Object.keys(aprAvg).forEach( p => {\n          const avgRate = aprAvg[p].sum()/aprAvg[p].length;\n          this.customLog(`${token}-${strategy}-${p} - Avg Rate: ${avgRate}`);\n        });\n\n        Object.keys(scoreAvg).forEach( p => {\n          const avgScore = scoreAvg[p].sum()/scoreAvg[p].length;\n          this.customLog(`${token}-${strategy}-${p} - Avg Score: ${avgScore}`);\n        });\n\n        // if (token==='DAI' && isRisk){\n        //   debugger;\n        // }\n\n        csv.push(rows.join('\\n'));\n      });\n    });\n\n    this.customLog(csv.join('\\n'));\n  }\n  getGovTokenPool = async (govToken=null,availableTokens=null,convertToken=null) => {\n    let output = this.BNify(0);\n\n    if (!availableTokens){\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n\n    await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const tokenConfig = availableTokens[token];\n      const enabledTokens = govToken ? [govToken] : null;\n      const compTokenBalance = await this.getGovTokensBalances(tokenConfig.idle.address,convertToken,enabledTokens);\n      if (compTokenBalance && compTokenBalance.total){\n        output = output.plus(compTokenBalance.total);\n      }\n    });\n    return output;\n  }\n  getIdleGovToken = () => {\n    if (!this.idleGovToken){\n      this.idleGovToken = new IdleGovToken(this.props);\n    }\n    return this.idleGovToken;\n  }\n  getTokenGovTokens = (tokenConfig) => {\n    const output = {};\n    const govTokens = this.getGlobalConfig(['govTokens']);\n    Object.keys(govTokens).forEach( govToken => {\n      const govTokenConfig = govTokens[govToken];\n      if (!govTokenConfig.enabled || govTokenConfig.disabledTokens.includes(tokenConfig.idle.token)){\n        return;\n      }\n      if (govTokenConfig.protocol === 'idle'){\n        output[govToken] = govTokenConfig;\n      } else {\n        const foundProtocol = tokenConfig.protocols.find( p => (p.enabled && p.name.toLowerCase() === govTokenConfig.protocol.toLowerCase()) )\n        if (foundProtocol){\n          output[govToken] = govTokenConfig;\n        }\n      }\n    });\n    return output;\n  }\n  fixDistributionSpeed = (speed,frequency='day',mode='block') => {\n    const blocksPerYear = this.BNify(this.getGlobalConfig(['network','blocksPerYear']));\n    const secondsPerYear = this.BNify(this.getGlobalConfig(['network','secondsPerYear']));\n    const multipliers = {\n      'day':{\n        'block':blocksPerYear.div(365.242199),\n        'second':secondsPerYear.div(365.242199)\n      },\n      'week':{\n        'block':blocksPerYear.div(52.1429),\n        'second':secondsPerYear.div(52.1429)\n      },\n      'month':{\n        'block':blocksPerYear.div(12),\n        'second':secondsPerYear.div(12)\n      },\n      'year':{\n        'block':blocksPerYear.div(1),\n        'second':secondsPerYear.div(1)\n      }\n    };\n    speed = this.BNify(speed);\n    if (speed && !speed.isNaN()){\n      return speed.times(multipliers[frequency][mode]);\n    }\n    return null;\n  }\n  getGovTokensUserDistributionSpeed = async (account,tokenConfig=null,enabledTokens=null) => {\n    const govTokensUserDistribution = {};\n    const govTokens = this.getGlobalConfig(['govTokens']);\n\n    await this.asyncForEach(Object.keys(govTokens),async (govToken) => {\n      if (enabledTokens && !enabledTokens.includes(govToken)){\n        return;\n      }\n\n      const govTokenConfig = govTokens[govToken];\n\n      if (!govTokenConfig.enabled){\n        return;\n      }\n\n      const availableTokens = {};\n      availableTokens[tokenConfig.token] = tokenConfig;\n\n      let output = null;\n      switch (govToken){\n        case 'COMP':\n          output = await this.getCompUserDistribution(account,availableTokens);\n        break;\n        case 'IDLE':\n          const idleGovToken = this.getIdleGovToken();\n          output = await idleGovToken.getUserDistribution(account,availableTokens);\n        break;\n        default:\n        break;\n      }\n\n      if (output){\n        output = output.div(1e18);\n        if (govTokenConfig.distributionFrequency){\n          output = this.fixDistributionSpeed(output,govTokenConfig.distributionFrequency,govTokenConfig.distributionMode);\n        }\n        govTokensUserDistribution[govToken] = output;\n      }\n    });\n\n    return govTokensUserDistribution;\n  }\n  getGovTokensDistributionSpeed = async (tokenConfig,enabledTokens=null) => {\n    const govTokensDistribution = {};\n    const tokenGovTokens = this.getTokenGovTokens(tokenConfig);\n    \n    await this.asyncForEach(Object.keys(tokenGovTokens), async (govToken) => {\n      let govSpeed = null;\n      const govTokenConfig = tokenGovTokens[govToken];\n\n      switch (govToken){\n        case 'COMP':\n          govSpeed = await this.getCompDistribution(tokenConfig,null,false);\n        break;\n        case 'stkAAVE':\n          govSpeed = await this.getStkAaveDistribution(tokenConfig,null,false);\n        break;\n        case 'IDLE':\n          const idleGovToken = this.getIdleGovToken();\n          govSpeed = await idleGovToken.getSpeed(tokenConfig.idle.address);\n        break;\n        default:\n        break;\n      }\n\n      if (govSpeed){\n        govSpeed = govSpeed.div(1e18);\n        if (govTokenConfig.distributionFrequency && govTokenConfig.distributionMode){\n          govSpeed = this.fixDistributionSpeed(govSpeed,govTokenConfig.distributionFrequency,govTokenConfig.distributionMode);\n        }\n        govTokensDistribution[govToken] = govSpeed;\n      }\n    });\n\n    return govTokensDistribution;\n  }\n  getGovTokensAprs = async (token,tokenConfig,enabledTokens=null) => {\n    const govTokens = this.getGlobalConfig(['govTokens']);\n    const govTokensAprs = {}\n\n    await this.asyncForEach(Object.keys(govTokens),async (govToken) => {\n\n      if (enabledTokens && !enabledTokens.includes(govToken)){\n        return;\n      }\n\n      const govTokenConfig = govTokens[govToken];\n\n      if (!govTokenConfig.enabled || govTokenConfig.aprTooltipMode === false){\n        return;\n      }\n\n      let output = null;\n      let tokenAllocation = null;\n\n      switch (govToken){\n        case 'stkAAVE':\n          switch (govTokenConfig.aprTooltipMode){\n            default:\n            case 'apr':\n              [output,tokenAllocation] = await Promise.all([\n                this.getStkAaveApr(token,tokenConfig),\n                this.getTokenAllocation(tokenConfig,false,false)\n              ]);\n\n              // Cut the AAVE token proportionally on Idle funds allocation in aave\n              if (tokenAllocation){\n                const aTokenConfig = tokenConfig.protocols.find( p => (p.name === govTokenConfig.protocol) );\n                if (aTokenConfig){\n                  if (tokenAllocation.protocolsAllocationsPerc[aTokenConfig.address.toLowerCase()]){\n                    const aaveAllocationPerc = tokenAllocation.protocolsAllocationsPerc[aTokenConfig.address.toLowerCase()];\n                    output = output.times(aaveAllocationPerc);\n                  }\n                }\n              }\n            break;\n          }\n        break;\n        case 'COMP':\n          switch (govTokenConfig.aprTooltipMode){\n            default:\n            case 'apr':\n              [output,tokenAllocation] = await Promise.all([\n                this.getCompAPR(token,tokenConfig),\n                this.getTokenAllocation(tokenConfig,false,false)\n              ]);\n\n              // Cut the COMP token proportionally on Idle funds allocation in compound\n              if (tokenAllocation){\n                const cTokenConfig = tokenConfig.protocols.find( p => (p.name === 'compound') );\n                if (cTokenConfig){\n                  if (tokenAllocation.protocolsAllocationsPerc[cTokenConfig.address.toLowerCase()]){\n                    const compoundAllocationPerc = tokenAllocation.protocolsAllocationsPerc[cTokenConfig.address.toLowerCase()];\n                    output = output.times(compoundAllocationPerc);\n                  }\n                }\n              }\n            break;\n          }\n        break;\n        case 'IDLE':\n          const idleGovToken = this.getIdleGovToken();\n          switch (govTokenConfig.aprTooltipMode){\n            case 'apr':\n              output = await idleGovToken.getAPR(token,tokenConfig);\n            break;\n            case 'distribution':\n              output = await idleGovToken.getSpeed(tokenConfig.idle.address);\n              if (output){\n                output = this.fixTokenDecimals(output,18);\n                output = this.fixDistributionSpeed(output,govTokenConfig.distributionFrequency,govTokenConfig.distributionMode);\n              }\n            break;\n            case 'userDistribution':\n              output = await idleGovToken.getUserDistribution(tokenConfig);\n            break;\n            default:\n            break;\n          }\n        break;\n        default:\n        break;\n      }\n\n      if (output !== null && this.BNify(output).gt(0)){\n        govTokensAprs[govToken] = output;\n      }\n    });\n\n    return govTokensAprs;\n  }\n  getGovTokensBalances = async (address=null,convertToken='DAI',enabledTokens=null) => {\n    if (!address){\n      address = this.props.tokenConfig.idle.address;\n    }\n\n    const cachedDataKey = `getGovTokensBalances_${address}_${convertToken}_${JSON.stringify(enabledTokens)}`;\n    const cachedData = this.getCachedData(cachedDataKey);\n    if (cachedData){\n      return cachedData;\n    }\n\n    const govTokens = this.getGlobalConfig(['govTokens']);\n    const govTokensBalances = {}\n\n    await this.asyncForEach(Object.keys(govTokens),async (token) => {\n\n      if (enabledTokens && !enabledTokens.includes(token)){\n        return;\n      }\n      \n      const govTokenConfig = govTokens[token];\n\n      if (!govTokenConfig.enabled){\n        return;\n      }\n\n      const destTokenConfig = {\n        address:govTokenConfig.addressForPrice || govTokenConfig.address\n      };\n\n      // Get gov token balance\n      let govTokenBalance = await this.getProtocolBalance(token,address);\n\n      if (govTokenBalance){\n        // Get gov token conversion rate\n        let tokenConversionRate = null;\n        if (convertToken){\n          const fromTokenConfig = this.getGlobalConfig(['stats','tokens',convertToken]);\n          try {\n            tokenConversionRate = await this.getUniswapConversionRate(fromTokenConfig,destTokenConfig);\n          } catch (error) {\n            tokenConversionRate = this.BNify(0);\n          }\n        }\n\n        const tokenBalance = this.fixTokenDecimals(govTokenBalance,govTokens[token].decimals,tokenConversionRate);\n\n        // Fix token decimals and convert\n        govTokensBalances[token] = tokenBalance;\n\n        // Initialize Total gov Tokens\n        if (!govTokensBalances.total){\n          govTokensBalances.total = this.BNify(0);\n        }\n\n        // Sum Total gov Tokens\n        govTokensBalances.total = govTokensBalances.total.plus(govTokensBalances[token]);\n      }\n    });\n\n    return this.setCachedData(cachedDataKey,govTokensBalances);\n  }\n  getGovTokenConfigByAddress = (address) => {\n    if (!address){\n      return false;\n    }\n    const govTokens = this.getGlobalConfig(['govTokens']);\n    return Object.values(govTokens).find( tokenConfig => (tokenConfig.enabled && tokenConfig.address.toLowerCase() === address.toLowerCase()) );\n  }\n  getGovTokensUserTotalBalance = async (account=null,availableTokens=null,convertToken=null,checkShowBalance=true) => {\n\n    // Check for cached data\n    const cachedDataKey = `govTokensUserTotalBalance_${account}_${JSON.stringify(Object.keys(availableTokens))}_${convertToken}_${checkShowBalance}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    const govTokensUserBalances = await this.getGovTokensUserBalances(account,availableTokens,convertToken,null,checkShowBalance);\n    if (govTokensUserBalances){\n      const govTokensEarnings = Object.values(govTokensUserBalances).reduce( (acc, govTokenAmount) => {\n        acc = acc.plus(this.BNify(govTokenAmount));\n        return acc;\n      }, this.BNify(0));\n\n      return this.setCachedDataWithLocalStorage(cachedDataKey,govTokensEarnings);\n    }\n    return this.BNify(0);\n  }\n  getGovTokensIndexes = async (account,tokenConfig) => {\n    if (!account){\n      account = this.props.account;\n    }\n    const output = {};\n    const govTokensAmounts = await this.getGovTokensUserAmounts(tokenConfig.idle.token,account);\n    if (govTokensAmounts){\n      await this.asyncForEach(govTokensAmounts, async (govTokenAmount,govTokenIndex) => {\n        // Get gov Token config by index\n        const govTokenAddress = await this.getGovTokenAddessByIndex(tokenConfig.idle.token,govTokenIndex);\n\n        if (govTokenAddress){\n          const govTokenConfig = this.getGovTokenConfigByAddress(govTokenAddress);\n          if (govTokenConfig){\n            output[govTokenConfig.token] = govTokenIndex;\n          }\n        }\n      });\n    }\n\n    return output;\n  }\n  getGovTokenAddessByIndex = async (token,govTokenIndex) => {\n    const cachedDataKey = `govTokenAddressByIndex_${token}_${govTokenIndex}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    // console.log(cachedDataKey,cachedData);\n    if (cachedData){\n      return cachedData;\n    }\n\n    const govTokenAddress = await this.genericContractCall(token,'govTokens',[govTokenIndex]);\n    return this.setCachedDataWithLocalStorage(cachedDataKey,govTokenAddress,null);\n  }\n  getGovTokensUserAmounts = async (token,account) => {\n    const cachedDataKey = `govTokenUserAmount_${token}_${account}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData){\n      return cachedData;\n    }\n\n    const govTokenAddress = await this.genericContractCall(token,'getGovTokensAmounts',[account]);\n    return this.setCachedDataWithLocalStorage(cachedDataKey,govTokenAddress);\n  }\n  getGovTokensUserBalances = async (account=null,availableTokens=null,convertToken=null,govTokenConfigForced=null,checkShowBalance=false) => {\n    if (!account){\n      account = this.props.account;\n    }\n    if (!availableTokens && this.props.availableStrategies && this.props.selectedStrategy){\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n\n    const output = {};\n\n    await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const idleTokenConfig = availableTokens[token].idle;\n\n      // Get govTokens amounts\n      const govTokensAmounts = await this.getGovTokensUserAmounts(idleTokenConfig.token,account);\n\n      // console.log('getGovTokensUserBalances_1',idleTokenConfig.token,govTokensAmounts);\n\n      if (govTokensAmounts){\n        await this.asyncForEach(govTokensAmounts, async (govTokenAmount,govTokenIndex) => {\n          govTokenAmount = this.BNify(govTokenAmount);\n          // Get gov Token config by index\n          const govTokenAddress = await this.getGovTokenAddessByIndex(idleTokenConfig.token,govTokenIndex);\n\n          // console.log('getGovTokensUserBalances_2',idleTokenConfig.token,govTokenIndex,govTokenAddress);\n\n          if (govTokenAddress){\n            const govTokenConfig = govTokenConfigForced ? govTokenConfigForced : this.getGovTokenConfigByAddress(govTokenAddress);\n\n            if (govTokenConfig && (!checkShowBalance || govTokenConfig.showBalance) && govTokenConfig.address && govTokenConfig.address.toLowerCase() === govTokenAddress.toLowerCase()){\n\n              // Get gov token conversion rate\n              let tokenConversionRate = null;\n              if (convertToken){\n                const fromTokenConfig = this.getGlobalConfig(['stats','tokens',convertToken]);\n                if (fromTokenConfig){\n                  try {\n                    tokenConversionRate = await this.getUniswapConversionRate(fromTokenConfig,govTokenConfig);\n                  } catch (error) {\n                    \n                  }\n                }\n              }\n\n              govTokenAmount = this.fixTokenDecimals(govTokenAmount,govTokenConfig.decimals,tokenConversionRate);\n\n              // console.log('getGovTokensUserBalances',idleTokenConfig.token,govTokenIndex,govTokenConfig.token,govTokenAddress,parseFloat(tokenConversionRate),parseFloat(govTokenAmount));\n\n              // Initialize govToken balance\n              if (!output[govTokenConfig.token]){\n                output[govTokenConfig.token] = this.BNify(0); // this.BNify(1) for testing\n              }\n\n              // Add govTokens balance\n              output[govTokenConfig.token] = output[govTokenConfig.token].plus(govTokenAmount);\n            }\n          }\n        });\n      }\n    });\n\n    return output;\n  }\n  getTokenFees = async (tokenConfig=null) => {\n    if (!tokenConfig && this.props.tokenConfig){\n      tokenConfig = this.props.tokenConfig;\n    }\n    const fee = await this.genericContractCallCached(tokenConfig.idle.token, 'fee', [], {}, 'latest', null);\n    if (fee){\n      return this.BNify(fee).div(this.BNify(100000));\n    }\n    return null;\n  }\n  getUserTokenFees = async (tokenConfig=null,account=null) => {\n    if (!tokenConfig && this.props.tokenConfig){\n      tokenConfig = this.props.tokenConfig;\n    }\n    if (!account && this.props.account){\n      account = this.props.account;\n    }\n\n    if (!account || !tokenConfig){\n      return null;\n    }\n\n    let [\n      feePercentage,\n      amountLent,\n      redeemableBalance\n    ] = await Promise.all([\n      this.getTokenFees(tokenConfig),\n      this.loadAssetField('amountLent',tokenConfig.token,tokenConfig,account),\n      this.loadAssetField('redeemableBalance',tokenConfig.token,tokenConfig,account)\n    ]);\n\n    if (feePercentage && amountLent && redeemableBalance){\n      const gain = redeemableBalance.minus(amountLent);\n      const fees = gain.times(feePercentage);\n\n      // this.customLog('fees',tokenConfig.token,amountLent.toString(),redeemableBalance.toString(),gain.toString(),fees.toString());\n\n      return fees;\n    }\n\n    return null;\n  }\n  getGovTokenUserBalance = async (govTokenConfig,account=null,availableTokens=null,convertToken=null) => {\n    const govTokensUserBalances = await this.getGovTokensUserBalances(account,availableTokens,convertToken,govTokenConfig);\n    return govTokensUserBalances && govTokensUserBalances[govTokenConfig.token] ? govTokensUserBalances[govTokenConfig.token] : this.BNify(0);\n  }\n  getTotalTVL = async () => {\n    const tokensTVL = await this.getTokensTVL();\n    return Object.values(tokensTVL).reduce( (totalTVL,tokenInfo) => {\n      const tokenTVL = this.BNify(tokenInfo.totalTVL);\n      if (tokenTVL && !tokenTVL.isNaN()){\n        totalTVL = totalTVL.plus(tokenTVL);\n      }\n      return totalTVL;\n    },this.BNify(0));\n  }\n  getTokensTVL = async () => {\n    const output = {};\n    const DAITokenConfig = this.getGlobalConfig(['stats','tokens','DAI']);\n    await this.asyncForEach(Object.keys(this.props.availableStrategies),async (strategy) => {\n      const isRisk = strategy === 'risk';\n      const availableTokens = this.props.availableStrategies[strategy];\n      await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n\n        let tokenTVL = this.BNify(0);\n        let totalTVL = this.BNify(0);\n        let oldTokenTVL = this.BNify(0);\n        const tokenConfig = availableTokens[token];\n        const idleTokenName = tokenConfig.idle.token;\n\n        output[idleTokenName] = {\n          tokenTVL,\n          totalTVL,\n          oldTokenTVL,\n          govTokens:{},\n        };\n\n        const [\n          tokenPrice,\n          totalSupply\n        ] = await Promise.all([\n          this.getIdleTokenPrice(tokenConfig),\n          this.getIdleTokenSupply(idleTokenName)\n        ]);\n\n        tokenTVL = this.fixTokenDecimals(totalSupply,18).times(tokenPrice);\n        tokenTVL = await this.convertTokenBalance(tokenTVL,token,tokenConfig,isRisk);\n\n        output[idleTokenName].tokenTVL = tokenTVL;\n        totalTVL = totalTVL.plus(tokenTVL);\n\n        // Add Gov Tokens\n        const govTokens = this.getTokenGovTokens(tokenConfig);\n        if (govTokens){\n          await this.asyncForEach(Object.keys(govTokens).filter( govToken => (govTokens[govToken].showAUM) ), async (govToken) => {\n            const govTokenConfig = govTokens[govToken];\n            const [\n              govTokenBalance,\n              govTokenConversionRate\n            ] = await Promise.all([\n              this.getProtocolBalance(govToken,tokenConfig.idle.address),\n              this.getUniswapConversionRate(DAITokenConfig,govTokenConfig)\n            ]);\n            \n            if (govTokenBalance && govTokenConversionRate){\n              const govTokenBalanceConverted = this.fixTokenDecimals(govTokenBalance,govTokenConfig.decimals).times(this.BNify(govTokenConversionRate));\n              if (govTokenBalanceConverted && !govTokenBalanceConverted.isNaN()){\n                totalTVL = totalTVL.plus(govTokenBalanceConverted);\n                output[idleTokenName].govTokens[govToken] = govTokenBalanceConverted;\n              }\n            }\n          });\n        }\n\n        // Get old token allocation\n        if (tokenConfig.migration && tokenConfig.migration.oldContract){\n          const oldTokenConfig = Object.assign({},tokenConfig);\n          oldTokenConfig.protocols = Object.values(tokenConfig.protocols);\n          oldTokenConfig.idle = Object.assign({},tokenConfig.migration.oldContract);\n\n          // Replace protocols with old protocols\n          if (oldTokenConfig.migration.oldProtocols){\n            oldTokenConfig.migration.oldProtocols.forEach( oldProtocol => {\n              const foundProtocol = oldTokenConfig.protocols.find( p => (p.name === oldProtocol.name) );\n              if (foundProtocol){\n                const protocolPos = oldTokenConfig.protocols.indexOf(foundProtocol);\n                oldTokenConfig.protocols[protocolPos] = oldProtocol;\n              }\n            });\n          }\n\n          const [\n            oldTokenPrice,\n            oldTotalSupply\n          ] = await Promise.all([\n            this.getIdleTokenPrice(oldTokenConfig),\n            this.getIdleTokenSupply(oldTokenConfig.idle.name)\n          ]);\n\n          if (oldTokenPrice && oldTotalSupply){\n            oldTokenTVL = this.fixTokenDecimals(oldTotalSupply,18).times(oldTokenPrice);\n            oldTokenTVL = await this.convertTokenBalance(oldTokenTVL,token,oldTokenConfig,isRisk);\n            if (oldTokenTVL && !oldTokenTVL.isNaN()){\n              output[idleTokenName].oldTokenTVL = oldTokenTVL;\n              totalTVL = totalTVL.plus(oldTokenTVL);\n            }\n          }\n        }\n\n        output[idleTokenName].totalTVL = totalTVL;\n      });\n    });\n\n    return output;\n  }\n  getSubstackLatestFeed = async () => {\n    const cachedDataKey = `substackLatestFeed`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData){\n      return cachedData;\n    }\n\n    const config = this.getGlobalConfig(['stats','config']);\n    const endpointInfo = this.getGlobalConfig(['stats','substack']);\n    const idleSubstackFeed = await this.makeRequest(endpointInfo.endpoint,false,config);\n\n    if (idleSubstackFeed && idleSubstackFeed.data && idleSubstackFeed.data.items && idleSubstackFeed.data.items.length>0){\n      const latestFeed = idleSubstackFeed.data.items[0];\n      return this.setCachedDataWithLocalStorage(cachedDataKey,latestFeed,endpointInfo.TTL);\n    }\n\n    return null;\n  }\n  getAggregatedStats = async (addGovTokens=true) => {\n    const config = this.getGlobalConfig(['stats','config']);\n    const endpointInfo = this.getGlobalConfig(['stats','tvls']);\n    const tvls = await this.makeCachedRequest(endpointInfo.endpoint,endpointInfo.TTL,true,false,config);\n\n    if (tvls){\n      const avgAPY = this.BNify(tvls.avgAPY);\n      const totalAUM = this.BNify(tvls.totalTVL);\n      return {\n        avgAPY,\n        totalAUM\n      };\n    } else {\n      return await this.getAggregatedStats_chain();\n    }\n  }\n  getAggregatedStats_chain = async (addGovTokens=true) => {\n\n    // Check for cached data\n    const cachedDataKey = `getAggregatedStats_${addGovTokens}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && (cachedData.avgAPR && !this.BNify(cachedData.avgAPR).isNaN()) && (cachedData.avgAPY && !this.BNify(cachedData.avgAPY).isNaN()) && (cachedData.totalAUM && !this.BNify(cachedData.totalAUM).isNaN())){\n      return {\n        avgAPR:this.BNify(cachedData.avgAPR),\n        avgAPY:this.BNify(cachedData.avgAPY),\n        totalAUM:this.BNify(cachedData.totalAUM)\n      };\n    }\n\n    let avgAPR = this.BNify(0);\n    let avgAPY = this.BNify(0);\n    let totalAUM = this.BNify(0);\n    const DAITokenConfig = this.getGlobalConfig(['stats','tokens','DAI']);\n    await this.asyncForEach(Object.keys(this.props.availableStrategies),async (strategy) => {\n      const isRisk = strategy === 'risk';\n      const availableTokens = this.props.availableStrategies[strategy];\n      await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n        const tokenConfig = availableTokens[token];\n        const tokenAllocation = await this.getTokenAllocation(tokenConfig,false,addGovTokens);\n        const tokenAprs = await this.getTokenAprs(tokenConfig,tokenAllocation,addGovTokens);\n        if (tokenAllocation && tokenAllocation.totalAllocationWithUnlent && !tokenAllocation.totalAllocationWithUnlent.isNaN()){\n          const tokenAUM = await this.convertTokenBalance(tokenAllocation.totalAllocationWithUnlent,token,tokenConfig,isRisk);\n          totalAUM = totalAUM.plus(tokenAUM);\n          // console.log(tokenConfig.idle.token+'V4',tokenAUM.toFixed());\n          if (tokenAprs && tokenAprs.avgApr && !tokenAprs.avgApr.isNaN()){\n            avgAPR = avgAPR.plus(tokenAUM.times(tokenAprs.avgApr));\n            avgAPY = avgAPY.plus(tokenAUM.times(tokenAprs.avgApy));\n          }\n        }\n\n        // Add Gov Tokens\n        const govTokens = this.getTokenGovTokens(tokenConfig);\n        if (govTokens){\n          await this.asyncForEach(Object.keys(govTokens).filter( govToken => (govTokens[govToken].showAUM) ), async (govToken) => {\n            const govTokenConfig = govTokens[govToken];\n            const [\n              tokenBalance,\n              tokenConversionRate\n            ] = await Promise.all([\n              this.getProtocolBalance(govToken,tokenConfig.idle.address),\n              this.getUniswapConversionRate(DAITokenConfig,govTokenConfig)\n            ]);\n            \n            if (tokenBalance && tokenConversionRate){\n              const tokenBalanceConverted = this.fixTokenDecimals(tokenBalance,govTokenConfig.decimals).times(this.BNify(tokenConversionRate));\n              if (tokenBalanceConverted && !tokenBalanceConverted.isNaN()){\n                // console.log(tokenConfig.idle.token+'V4 - COMP',tokenBalanceConverted.toFixed());\n                totalAUM = totalAUM.plus(tokenBalanceConverted);\n              }\n            }\n          });\n        }\n\n        // Get old token allocation\n        if (tokenConfig.migration && tokenConfig.migration.oldContract){\n          const oldTokenConfig = Object.assign({},tokenConfig);\n          oldTokenConfig.protocols = Object.values(tokenConfig.protocols);\n          oldTokenConfig.idle = Object.assign({},tokenConfig.migration.oldContract);\n\n          // Replace protocols with old protocols\n          if (oldTokenConfig.migration.oldProtocols){\n            oldTokenConfig.migration.oldProtocols.forEach( oldProtocol => {\n              const foundProtocol = oldTokenConfig.protocols.find( p => (p.name === oldProtocol.name) );\n              if (foundProtocol){\n                const protocolPos = oldTokenConfig.protocols.indexOf(foundProtocol);\n                oldTokenConfig.protocols[protocolPos] = oldProtocol;\n              }\n            });\n          }\n\n          const oldTokenAllocation = await this.getTokenAllocation(oldTokenConfig,false,false);\n          if (oldTokenAllocation && oldTokenAllocation.totalAllocation && !oldTokenAllocation.totalAllocation.isNaN()){\n            const oldTokenTotalAllocation = await this.convertTokenBalance(oldTokenAllocation.totalAllocation,token,oldTokenConfig,isRisk);\n            totalAUM = totalAUM.plus(oldTokenTotalAllocation);\n            // console.log(oldTokenConfig.idle.name,oldTokenTotalAllocation.toFixed(5));\n          }\n        }\n      });\n    });\n\n    avgAPR = avgAPR.div(totalAUM);\n    avgAPY = avgAPY.div(totalAUM);\n\n    const output = {\n      avgAPR,\n      avgAPY,\n      totalAUM\n    };\n\n    return this.setCachedDataWithLocalStorage(cachedDataKey,output);\n  }\n  getTokenApy = async (tokenConfig) => {\n    const tokenAprs = await this.getTokenAprs(tokenConfig);\n    if (tokenAprs && tokenAprs.avgApy !== null){\n      return tokenAprs.avgApy;\n    }\n    return null;\n  }\n  getTokensToMigrate = async (selectedStrategy=null) => {\n\n    if (!this.props.availableStrategies || !this.props.account){\n      return false;\n    }\n\n    const tokensToMigrate = {};\n\n    await this.asyncForEach(Object.keys(this.props.availableStrategies),async (strategy) => {\n      if (selectedStrategy && selectedStrategy !== strategy){\n        return;\n      }\n      const availableTokens = this.props.availableStrategies[strategy];\n      await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n        const tokenConfig = availableTokens[token];\n        const {\n          migrationEnabled,\n          oldContractBalanceFormatted\n        } = await this.checkMigration(tokenConfig,this.props.account);\n        \n        if (migrationEnabled){\n          const tokenKey = selectedStrategy ? token : tokenConfig.idle.token;\n          tokensToMigrate[tokenKey] = {\n            token,\n            strategy,\n            tokenConfig,\n            oldContractBalanceFormatted\n          }\n        }\n      });\n    });\n\n    return tokensToMigrate;\n  }\n  /*\n  Get protocols tokens balances\n  */\n  getProtocolsTokensBalances = async (protocol=null) => {\n    if (!this.props.account){\n      return false;\n    }\n    const tokenBalances = {};\n    const minTokenBalance = this.BNify(1).div(1e4);\n    const protocolsTokens = this.getGlobalConfig(['tools','tokenMigration','props','availableTokens']);\n    if (protocolsTokens){\n      await this.asyncForEach(Object.keys(protocolsTokens),async (token) => {\n        const tokenConfig = protocolsTokens[token];\n        if (protocol !== null && tokenConfig.protocol.toLowerCase() !== protocol.toLowerCase() ){\n          return;\n        }\n        let tokenContract = this.getContractByName(tokenConfig.token);\n        if (!tokenContract && tokenConfig.abi){\n          tokenContract = await this.props.initContract(tokenConfig.token,tokenConfig.address,tokenConfig.abi);\n        }\n        if (tokenContract){\n          const tokenBalance = await this.getTokenBalance(tokenConfig.token,this.props.account);\n          if (tokenBalance && tokenBalance.gte(minTokenBalance)){\n            tokenBalances[token] = {\n              tokenConfig,\n              balance:tokenBalance,\n            };\n          }\n        }\n      });\n    }\n\n    return tokenBalances;\n  }\n  /*\n  Convert token Balance\n  */\n  convertTokenBalance = async (tokenBalance,token,tokenConfig,isRisk=false) => {\n    // Check for USD conversion rate\n    tokenBalance = this.BNify(tokenBalance);\n    if (tokenBalance.gt(0)){\n      const tokenUsdConversionRate = await this.getTokenConversionRate(tokenConfig,isRisk);\n      // console.log('convertTokenBalance',token,isRisk,tokenUsdConversionRate);\n      if (tokenUsdConversionRate){\n        tokenBalance = tokenBalance.times(tokenUsdConversionRate);\n      }\n    }\n    return tokenBalance;\n  }\n\n  getAvgAPYStats = async (address,isRisk,startTimestamp=null,endTimestamp=null) => {\n\n    const apiResults = await this.getTokenApiData(address,isRisk,startTimestamp,endTimestamp,true,7200);\n\n    if (apiResults && apiResults.length){\n      const apr = apiResults.reduce( (sum,r) => {\n        const idleRate = this.fixTokenDecimals(r.idleRate,18);\n        return sum.plus(idleRate);\n      },this.BNify(0));\n\n      // Calculate average\n      return apr.div(apiResults.length);\n    }\n\n    return this.BNify(0);\n  }\n\n  /*\n  Get idleToken conversion rate\n  */\n  getTokenConversionRate = async (tokenConfig,isRisk,conversionRateField=null,count=0) => {\n\n    if (!conversionRateField){\n      conversionRateField = this.getGlobalConfig(['stats','tokens',tokenConfig.token,'conversionRateField']);\n      if (!conversionRateField){\n        return null;\n      }\n    }\n\n    // Check for cached data\n    const cachedDataKey = `tokenConversionRate_${tokenConfig.address}_${isRisk}_${conversionRateField}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    let tokenData = await this.getTokenApiData(tokenConfig.address,isRisk,null,null,false,null,'desc',1);\n    if (tokenData && tokenData.length){\n      tokenData = tokenData.pop();\n      if (tokenData && !this.BNify(tokenData[conversionRateField]).isNaN()){\n        const conversionRate = this.fixTokenDecimals(tokenData[conversionRateField],18);\n        if (!this.BNify(conversionRate).isNaN()){\n          return this.setCachedDataWithLocalStorage(cachedDataKey,conversionRate);\n        }\n      }\n    }\n\n    const DAITokenConfig = this.getGlobalConfig(['stats','tokens','DAI']);\n    const conversionRate = await this.getUniswapConversionRate(DAITokenConfig,tokenConfig);\n    if (!this.BNify(conversionRate).isNaN()){\n      return this.setCachedDataWithLocalStorage(cachedDataKey,conversionRate);\n    }\n\n    if (count<3){\n      return await this.getTokenConversionRate(tokenConfig,isRisk,conversionRateField,count+1); \n    }\n\n    return null;\n  }\n\n  getTokenScore = async (tokenConfig,isRisk) => {\n    // Check for cached data\n    const cachedDataKey = `tokenScore_${tokenConfig.address}_${isRisk}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    const apiInfo = this.getGlobalConfig(['stats','rates']);\n    const config = this.getGlobalConfig(['stats','config']);\n    const endpoint = `${apiInfo.endpoint}${tokenConfig.address}?isRisk=${isRisk}&limit=1&order=DESC`;\n    const [\n      tokenData,\n      tokenAllocation\n    ] = await Promise.all([\n      this.makeCachedRequest(endpoint,apiInfo.TTL,true,false,config),\n      this.getTokenAllocation(tokenConfig,false,false)\n    ]);\n\n    let tokenScore = this.BNify(0);\n\n    if (tokenAllocation){\n      Object.keys(tokenAllocation.protocolsAllocationsPerc).forEach( protocolAddr => {\n        const protocolAllocationPerc = this.BNify(tokenAllocation.protocolsAllocationsPerc[protocolAddr]);\n        if (protocolAllocationPerc.gt(0.001)){\n          let protocolScore = null;\n\n          const protocolInfo = tokenData && tokenData.length>0 ? tokenData[0].protocolsData.find( p => (p.protocolAddr.toLowerCase() === protocolAddr.toLowerCase()) ) : null;\n          if (protocolInfo){\n            protocolScore = this.BNify(protocolInfo.defiScore);\n          }\n\n          // Take protocol score from tokenConfig\n          if (!protocolScore || this.BNify(protocolScore).isNaN() || this.BNify(protocolScore).lte(0)){\n            const protocolConfig = tokenConfig.protocols.find(p => p.address.toLowerCase() === protocolAddr.toLowerCase());\n            if (protocolConfig){\n              protocolScore = this.BNify(protocolConfig.defiScore);\n            }\n          }\n\n          if (!protocolScore.isNaN()){\n            tokenScore = tokenScore.plus(protocolScore.times(protocolAllocationPerc));\n          }\n        }\n      });\n    }\n\n    // Fallback\n    if (!tokenScore || tokenScore.isNaN() || tokenScore.lte(0)){\n      tokenScore = await this.getTokenScoreApi(tokenConfig,isRisk);\n    }\n\n    return this.setCachedDataWithLocalStorage(cachedDataKey,tokenScore);\n  }\n\n  /*\n  Get idleToken score\n  */\n  getTokenScoreApi = async (tokenConfig,isRisk) => {\n    // Check for cached data\n    const cachedDataKey = `tokenScoreApi_${tokenConfig.address}_${isRisk}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    const apiInfo = globalConfigs.stats.scores;\n    const config = this.getGlobalConfig(['stats','config']);\n    const endpoint = `${apiInfo.endpoint}${tokenConfig.address}?isRisk=${isRisk}`;\n    let scores = await this.makeCachedRequest(endpoint,apiInfo.TTL,true,false,config);\n\n    if (scores && scores.length>0){\n      let tokenData = scores.find( s => s.address.toLowerCase() === tokenConfig.address.toLowerCase() );\n      if (tokenData){\n        let tokenScore = this.BNify(tokenData.idleScore);\n        if (tokenScore && tokenScore.gt(0)){\n          // Set cached data\n          return this.setCachedData(cachedDataKey,tokenScore);\n        // Take latest historical valid score\n        } else {\n          const timestamp = parseInt(Date.now()/1000);\n          const startTimestamp = parseInt(timestamp)-(60*60*24);\n          tokenData = await this.getTokenApiData(tokenConfig.address,isRisk,startTimestamp,null,true,null,'DESC');\n\n          const filteredTokenData = tokenData.filter( d => (this.BNify(d.idleScore).gt(0)) );\n          if (filteredTokenData.length){\n            tokenScore = this.BNify(filteredTokenData[0].idleScore);\n            if (!this.BNify(tokenScore).isNaN()){\n              return this.setCachedDataWithLocalStorage(cachedDataKey,tokenScore);\n            }\n          }\n        }\n      }\n    }\n\n    return this.BNify(0);\n  }\n  /*\n  Get idleTokens aggregated APR\n  */\n  getTokenAprs = async (tokenConfig,tokenAllocation=false,addGovTokens=true) => {\n\n    const tokenAprs = {\n      avgApr: this.BNify(0),\n      avgApy: this.BNify(0)\n    };\n\n    if (!tokenConfig.idle){\n      return tokenAprs;\n    }\n\n    // Check for cached data\n    const cachedDataKey = `tokenAprs_${tokenConfig.idle.address}_${addGovTokens}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && (cachedData.avgApr && !this.BNify(cachedData.avgApr).isNaN()) && (cachedData.avgApy && !this.BNify(cachedData.avgApy).isNaN()) ){\n      // console.log('getTokenAprs - CACHED',tokenConfig.idle.token,cachedData);\n      return {\n        avgApr:this.BNify(cachedData.avgApr),\n        avgApy:this.BNify(cachedData.avgApy)\n      };\n    }\n\n    tokenAprs.avgApr = await this.genericContractCallCached(tokenConfig.idle.token,'getAvgAPR');\n    if (tokenAprs.avgApr){\n      tokenAprs.avgApr = this.fixTokenDecimals(tokenAprs.avgApr,18);\n    }\n\n    if (tokenAprs.avgApr){\n\n      tokenAprs.avgApy = this.apr2apy(tokenAprs.avgApr.div(100)).times(100);\n\n      // tokenAprs.avgApr = tokenAprs.avgApr.plus(govTokensApr);\n      // tokenAprs.avgApy = tokenAprs.avgApy.plus(govTokensApr);\n\n      // Add $IDLE token APR\n      const idleGovTokenShowAPR = this.getGlobalConfig(['govTokens','IDLE','showAPR']);\n      const idleGovTokenEnabled = this.getGlobalConfig(['govTokens','IDLE','enabled']);\n      if (idleGovTokenEnabled && idleGovTokenShowAPR){\n        const idleGovToken = this.getIdleGovToken();\n        const idleAPR = await idleGovToken.getAPR(tokenConfig.token,tokenConfig);\n        if (idleAPR){\n          tokenAprs.avgApr = tokenAprs.avgApr.plus(idleAPR);\n          tokenAprs.avgApy = tokenAprs.avgApy.plus(idleAPR);\n        }\n      }\n\n      // console.log('getTokenAprs',tokenConfig.idle.token,govTokensApr.toFixed(8),tokenAprs.avgApr.toFixed(8),tokenAprs.avgApy.toFixed(8));\n\n      if (this.BNify(tokenAprs.avgApy).isNaN()){\n        tokenAprs.avgApy = this.BNify(0);\n      }\n      if (this.BNify(tokenAprs.avgApr).isNaN()){\n        tokenAprs.avgApr = this.BNify(0);\n      }\n\n      // console.log('Aprs for '+tokenConfig.idle.token+' loaded in '+((Date.now()-start)/1000).toFixed(2)+'s');\n\n      return this.setCachedDataWithLocalStorage(cachedDataKey,tokenAprs);\n    }\n\n    return tokenAprs;\n  }\n  abbreviateNumber = (value,decimals=3,maxPrecision=5,minPrecision=0) => {\n\n    const isNegative = parseFloat(value)<0;\n    let newValue = this.BNify(value).abs();\n    const suffixes = [\"\", \"K\", \"M\", \"B\",\"T\"];\n    let suffixNum = 0;\n    while (newValue.gte(1000)) {\n      newValue = newValue.div(1000);\n      suffixNum++;\n    }\n\n    maxPrecision = Math.max(1,maxPrecision);\n\n    // Prevent decimals on integer number\n    if (value>=1000){\n      const decimalPart = decimals ? newValue.mod(1).toFixed(maxPrecision).substr(2,decimals) : null;\n      newValue = parseInt(newValue).toString()+( decimalPart ? '.'+decimalPart : '' );\n    } else {\n      newValue = newValue.toFixed(decimals);\n    }\n\n    // Adjust number precision\n    if (newValue>=1 && (newValue.length-1)>maxPrecision){\n      newValue = parseFloat(newValue).toPrecision(maxPrecision);\n    } else if ((newValue.length-1)<minPrecision) {\n      const difference = minPrecision-(newValue.length-1);\n      const append = this.BNify(value).abs().toString().replace('.','').substr((newValue.length-1),difference);\n      newValue += append;\n    }\n\n    // Add minus if number is negative\n    if (isNegative){\n      newValue = '-'+newValue;\n    }\n\n    newValue += suffixes[suffixNum];\n\n    return newValue;\n  }\n  getFormattedBalance(balance,label,decimals,maxLen,highlightedDecimals){\n    const defaultValue = '-';\n    decimals = !isNaN(decimals) ? decimals : 6;\n    maxLen = !isNaN(maxLen) ? maxLen : 10;\n    highlightedDecimals = !isNaN(highlightedDecimals) ? highlightedDecimals : 0;\n    balance = parseFloat(this.BNify(balance)).toFixed(decimals);\n\n    const numLen = balance.toString().replace('.','').length;\n    if (numLen>maxLen){\n      decimals = Math.max(0,decimals-(numLen-maxLen));\n      balance = parseFloat(this.BNify(balance)).toFixed(decimals);\n    }\n\n    const intPart = Math.floor(balance);\n    let decPart = (balance%1).toPrecision(decimals).substr(2,decimals);;\n    decPart = (decPart+(\"0\".repeat(decimals))).substr(0,decimals);\n\n    if (highlightedDecimals){\n      const highlightedDec = decPart.substr(0,highlightedDecimals);\n      decPart = decPart.substr(highlightedDecimals);\n      const highlightedIntPart = (<Text.span fontSize={'100%'} color={'blue'} fontWeight={'inerith'}>{intPart}.{highlightedDec}</Text.span>);\n      return !isNaN(this.trimEth(balance)) ? ( <>{highlightedIntPart}<small style={{fontSize:'70%'}}>{decPart}</small> <Text.span fontSize={[1,2]}>{label}</Text.span></> ) : defaultValue;\n    } else {\n      return !isNaN(this.trimEth(balance)) ? ( <>{intPart}<small>.{decPart}</small>{ label !== '%' ? ' ' : null }{ label ? <Text.span fontSize={[1,2]}>{label}</Text.span> : null }</> ) : defaultValue;\n    }\n  }\n};\n\nexport default FunctionsUtil;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"defaultOpacity\":\"DashboardCard_defaultOpacity__1B1rs\",\"hidden\":\"DashboardCard_hidden__8pO5t\",\"interactive\":\"DashboardCard_interactive__2adxr\",\"rainbow\":\"DashboardCard_rainbow__3HCI7\",\"disabled\":\"DashboardCard_disabled__uqHO2\"};","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass TableRow extends Component {\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  render() {\n    const FieldComponent = this.props.fieldComponent;\n    const isInteractive = typeof this.props.handleClick === 'function';\n    return (\n      <DashboardCard\n        cardProps={{\n          mb:2,\n          width:1,\n          px:[2,4],\n          py:[2,'12px']\n        }}\n        id={this.props.cardId}\n        {...this.props.rowProps}\n        className={this.props.token}\n        isInteractive={isInteractive}\n        handleClick={ isInteractive ? e => this.props.handleClick(this.props) : null }\n      >\n        <Flex\n          flexDirection={'row'}\n          id={this.props.rowId}\n        >\n          {\n            this.props.cols.map((colInfo,colIndex) => {\n              const visibleOnDesktop = colInfo.visibleOnDesktop || false;\n              if (colInfo.visible === false || (colInfo.mobile === false && this.props.isMobile) || (colInfo.mobile === true && !visibleOnDesktop && !this.props.isMobile)){\n                return null;\n              }\n              return (\n                <Flex\n                  key={`col-${colIndex}`}\n                  {...colInfo.props}\n                >\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    {...colInfo.parentProps}\n                  >\n                    {\n                      colInfo.fields.map((fieldInfo,fieldIndex) => {\n                        if (fieldInfo.visible === false || (fieldInfo.mobile === false && this.props.isMobile)){\n                          return null;\n                        }\n                        const CustomComponent = fieldInfo.fieldComponent;\n\n                        let fieldProps = fieldInfo.props;\n\n                        // Merge with funcProps\n                        if (fieldInfo.funcProps && Object.keys(fieldInfo.funcProps).length>0){\n                          fieldProps = this.functionsUtil.replaceArrayPropsRecursive(fieldProps,fieldInfo.funcProps,this.props);\n                        }\n\n                        return (\n                          <Flex\n                            height={'100%'}\n                            flexDirection={'column'}\n                            alignItems={'flex-start'}\n                            justifyContent={'center'}\n                            {...fieldInfo.parentProps}\n                            style={fieldInfo.style || {\n                              overflow:'hidden'\n                            }}\n                            width={colInfo.fields.length>1 ? 'auto' : 1}\n                            id={`field-${colIndex}-${fieldIndex}-${fieldInfo.name}`}\n                            key={`field-${colIndex}-${fieldIndex}-${fieldInfo.name}`}\n                          >\n                            {\n                              CustomComponent ? (\n                                <CustomComponent\n                                  {...this.props}\n                                  {...fieldProps}\n                                />\n                              ) : (\n                                <FieldComponent\n                                  {...this.props}\n                                  fieldInfo={fieldInfo}\n                                  colProps={colInfo.props}\n                                  parentId={`field-${colIndex}-${fieldIndex}-${fieldInfo.name}`}\n                                />\n                              )\n                            }\n                          </Flex>\n                        );\n                      })\n                    }\n                  </Flex>\n                </Flex>\n              )\n            })\n          }\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default TableRow;\n","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport TableCellHeader from '../TableCellHeader/TableCellHeader';\n\nclass TableHeader extends Component {\n  render() {\n    return (\n      <Flex\n        width={1}\n        px={[2,4]}\n        pb={[2,3]}\n        flexDirection={'row'}\n      >\n        {\n          this.props.cols.map((colInfo,colIndex) => {\n            // Skip non-mobile columns\n            const visibleOnDesktop = colInfo.visibleOnDesktop || false;\n            if (colInfo.visible === false || (colInfo.mobile === false && this.props.isMobile) || (colInfo.mobile === true && !visibleOnDesktop && !this.props.isMobile)){\n              return null;\n            }\n\n            return (colInfo.title && colInfo.title.length) ? (\n              <TableCellHeader\n                {...this.props}\n                {...colInfo.props}\n                desc={colInfo.desc}\n                title={colInfo.title}\n                key={`col-header-${colIndex}`}\n              >\n                {colInfo.title}\n              </TableCellHeader>\n            ) : (\n              <Flex key={`col-header-${colIndex}`} {...colInfo.props}></Flex>\n            )\n          })\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default TableHeader;\n","import { Text } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass FastBalanceSelector extends Component {\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  render() {\n\n    let cardProps = {\n      p:2,\n      width:0.23,\n      onMouseDown:this.props.onMouseDown\n    };\n\n    let textProps = {\n      fontSize:2,\n      fontWeight:3,\n      textAlign:'center',\n      color:this.props.isActive ? 'copyColor' : 'cellText'\n    }\n\n    cardProps = this.functionsUtil.replaceArrayProps(cardProps,this.props.cardProps);\n    textProps = this.functionsUtil.replaceArrayProps(textProps,this.props.textProps);\n\n    return (\n      <DashboardCard\n        isInteractive={true}\n        cardProps={cardProps}\n        isActive={this.props.isActive}\n      >\n        <Text \n          {...textProps}\n        >\n          {this.props.percentage}%\n        </Text>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default FastBalanceSelector;","import React, { Component } from 'react';\nimport styles from './DashboardCard.module.scss';\nimport { Flex, Icon, Heading, Card, Tooltip } from \"rimble-ui\";\n\nclass DashboardCard extends Component {\n\n  state = {\n    mouseOver:false\n  }\n\n  setMouseOver(mouseOver){\n    this.setState({\n      mouseOver\n    });\n  }\n\n  render() {\n    const isDisabled = this.props.isDisabled;\n    const isActive = this.props.isActive && !isDisabled;\n    const isInteractive = this.props.isInteractive && !isDisabled;\n    const isVisible = typeof this.props.isVisible !== 'undefined' ? this.props.isVisible : true;\n    const isRainbow = typeof this.props.isRainbow !== 'undefined' ? this.props.isRainbow : false;\n\n    const cardProps = {\n      p:0,\n      border:1,\n      boxShadow:1,\n      borderRadius:2,\n      borderColor:null,\n      position:'relative',\n      minHeight:'initial',\n      backgroundColor:'cardBg'\n    };\n\n    if (isActive || (isInteractive && this.state.mouseOver)){\n      cardProps.border = 2;\n      cardProps.boxShadow = null;\n      cardProps.backgroundColor = 'cardBgHover';\n    }\n\n    // Replace props\n    if (this.props.cardProps && Object.keys(this.props.cardProps).length){\n      Object.keys(this.props.cardProps).forEach(p => {\n        cardProps[p] = this.props.cardProps[p];\n      });\n    }\n\n    const className = [\n      styles.defaultOpacity,\n      isActive ? styles.active : null,\n      !isVisible ? styles.hidden : null,\n      isRainbow ? styles.rainbow : null,\n      isDisabled ? styles.disabled : null,\n      isInteractive ? styles.interactive : null,\n    ];\n\n    if (this.props.className && styles[this.props.className]){\n      className.push(styles[this.props.className]);\n    }\n\n    return (\n      <Card\n        {...cardProps}\n        className={className}\n        onClick={this.props.handleClick}\n        onMouseOut={(e) => this.setMouseOver(false)}\n        onMouseOver={(e) => this.setMouseOver(true)}\n      >\n        {\n          this.props.title && this.props.title.length>0 &&\n            <Flex\n              mt={[3,4]}\n              ml={[3,4]}\n              alignItems={'center'}\n              flexDirection={'row'}\n              {...this.props.titleParentProps}\n            >\n              <Heading.h4\n                fontWeight={4}\n                fontSize={[2,3]}\n                textAlign={'left'}\n                color={'dark-gray'}\n                lineHeight={'initial'}\n                {...this.props.titleProps}\n              >\n                {this.props.title}\n              </Heading.h4>\n              {\n                this.props.description && this.props.description.length>0 &&\n                  <Tooltip\n                    placement={'top'}\n                    message={this.props.description}\n                  >\n                    <Icon\n                      ml={2}\n                      name={\"Info\"}\n                      size={'1em'}\n                      color={'cellTitle'}\n                    />\n                  </Tooltip>\n              }\n            </Flex>\n        }\n        {this.props.children}\n      </Card>\n    );\n  }\n}\n\nexport default DashboardCard;","import React from \"react\";\nimport {\n  Text,\n  Modal,\n  Box,\n  Button,\n  Flex,\n  Image\n} from \"rimble-ui\";\nimport Select from 'react-select';\nimport ModalCard from './ModalCard';\nimport ImageButton from '../../ImageButton/ImageButton';\nimport styles from './Header.module.scss';\nimport globalConfigs from '../../configs/globalConfigs';\nimport FunctionsUtil from '../../utilities/FunctionsUtil';\n\nclass BuyModal extends React.Component {\n\n  state = {\n    selectedMethod:null,\n    availableMethods:[],\n    selectedCountry:null,\n    selectedProvider:null,\n    availableProviders:null,\n    selectedToken:this.props.buyToken,\n  }\n\n  async loadRemoteResources() {\n\n    if (!this.state.selectedToken){\n      return false;\n    }\n\n    // Load payments providers external remote resources\n    Object.keys(globalConfigs.payments.providers).forEach((provider,i) => {\n\n      const providerInfo = globalConfigs.payments.providers[provider];\n      if (providerInfo.enabled && providerInfo.remoteResources && (providerInfo.supportedTokens.indexOf(this.state.selectedToken) !== -1 || providerInfo.supportedTokens.indexOf(globalConfigs.baseToken) !== -1)){\n        \n        const remoteResources = providerInfo.remoteResources;\n\n        Object.keys(remoteResources).forEach((url,j) => {\n\n          const resourceType = url.split('.').pop().toLowerCase();\n\n          switch (resourceType){\n            case 'js':\n              const scriptID = `script_${provider}_${j}_${this.state.selectedToken}`;\n\n              if (!document.getElementById(scriptID)){\n                const script = document.createElement(\"script\");\n                const remoteResourceParams = remoteResources[url];\n                const callback = remoteResourceParams && remoteResourceParams.callback ? remoteResourceParams.callback : null;\n                const precall = remoteResourceParams && remoteResourceParams.precall ? remoteResourceParams.precall : null;\n\n                if (precall && typeof precall === 'function'){\n                  precall(this.state,globalConfigs,providerInfo);\n                }\n\n                if (callback && typeof callback === 'function'){\n                  if (script.readyState) {  // only required for IE <9\n                    script.onreadystatechange = function() {\n                      if ( script.readyState === 'loaded' || script.readyState === 'complete' ) {\n                        script.onreadystatechange = null;\n                        callback();\n                      }\n                    };\n                  } else {  //Others\n                    script.onload = callback;\n                  }\n                }\n\n                script.id = scriptID;\n                script.className = `script_${provider}`;\n                script.src = url;\n                script.async = true;\n\n                if (remoteResourceParams && remoteResourceParams.parentElement){\n                  remoteResourceParams.parentElement.appendChild(script)\n                } else {\n                  document.head.appendChild(script);\n                }\n              }\n            break;\n            case 'css':\n              const stylesheetId = `stylesheet_${provider}_${j}`;\n\n              if (!document.getElementById(stylesheetId)){\n                const style = document.createElement(\"link\");\n\n                style.id = stylesheetId;\n                style.rel = 'stylesheet';\n                style.href = url;\n\n                document.head.appendChild(style);\n              }\n            break;\n            default:\n            break;\n          }\n        });\n      }\n    });\n  }\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  loadAvailableMethods(){\n    const availableMethods = {};\n    const availableMethodsKeys = this.props.availableMethods && this.props.availableMethods.length ? this.props.availableMethods : Object.keys(globalConfigs.payments.methods);\n\n    availableMethodsKeys.forEach(method => {\n      const availableProviders = this.getAvailablePaymentProviders(method,this.state.selectedToken);\n      if (availableProviders && availableProviders.length>0){\n        const methodInfo = globalConfigs.payments.methods[method];\n        methodInfo.availableProviders = availableProviders;\n        availableMethods[method] = methodInfo;\n      }\n    });\n\n    this.setState({\n      availableMethods\n    });\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n\n    this.loadAvailableMethods();\n    this.loadRemoteResources();\n  }\n\n  async componentDidMount() {\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps) {\n\n    this.loadUtils();\n\n    if ( this.props.buyToken && prevProps.buyToken !== this.props.buyToken){\n      this.selectToken(null,this.props.buyToken);\n    }\n  }\n\n  renderPaymentMethod = async (e,provider,buyParams) => {\n\n    const onSuccess = async (tx) => {\n      // Toast message\n      window.toastProvider.addMessage(`Deposit completed`, {\n        secondaryMessage: `Your ${this.state.selectedToken} have been deposited`,\n        colorTheme: 'light',\n        actionHref: \"\",\n        actionText: \"\",\n        variant: \"success\",\n      });\n\n      this.props.getAccountBalance();\n    };\n\n    const onClose = async (e) => {\n      return true;\n    }\n\n    const paymentProvider = globalConfigs.payments.providers[provider];\n    const initParams = paymentProvider && paymentProvider.getInitParams ? paymentProvider.getInitParams(this.props,globalConfigs,buyParams,onSuccess,onClose) : null;\n\n    // Render the Payment Provider\n    switch (provider){\n      default:\n        if (typeof paymentProvider.render === 'function'){\n          const currentState = Object.assign({},this.state);\n          paymentProvider.render(initParams,null,currentState,globalConfigs);\n        }\n      break;\n    }\n\n    // Send Google Analytics event\n    if (globalConfigs.analytics.google.events.enabled){\n      await this.functionsUtil.sendGoogleAnalyticsEvent({\n        eventCategory: 'Buy',\n        eventAction: 'select_provider',\n        eventLabel: provider\n      });\n\n      this.closeModal(e);\n    } else {\n      this.closeModal(e);\n    }\n  }\n\n  goBack = (e) => {\n    e.preventDefault();\n\n    if (this.state.selectedProvider){\n      this.setState({\n        selectedProvider:null,\n      });\n    } else if (this.state.selectedMethod){\n      this.setState({\n        selectedMethod:null,\n        selectedCountry:null,\n        selectedProvider:null,\n      });\n    } else if (this.state.selectedToken){\n      this.setState({\n        selectedMethod:null,\n        selectedCountry:null,\n        selectedProvider:null,\n        selectedToken:this.props.buyToken,\n      });\n    } else {\n      this.resetModal();\n    }\n  }\n\n  resetModal = () => {\n    this.setState({\n      selectedMethod:null,\n      selectedCountry:null,\n      selectedProvider:null,\n      availableProviders:null,\n      selectedToken:this.props.buyToken\n    });\n\n    this.componentWillMount();\n  }\n\n  closeModal = (e) => {\n    this.resetModal();\n    if (!this.props.showInline && typeof this.props.closeModal === 'function'){\n      this.props.closeModal();\n    }\n  }\n\n  getProviderInfo = (provider) => {\n    if (!globalConfigs.payments.providers[provider]){\n      return false;\n    }\n    let providerInfo = globalConfigs.payments.providers[provider];\n    if (typeof providerInfo.getInfo === 'function'){\n      const newProviderInfo = providerInfo.getInfo(this.state);\n      if (newProviderInfo && Object.keys(newProviderInfo).length){\n        providerInfo = Object.assign(providerInfo,newProviderInfo);\n      }\n    }\n    return providerInfo;\n  }\n\n  getDefaultPaymentProvider = (selectedMethod) => {\n    const paymentMethod = this.state.availableMethods[selectedMethod];\n    if (paymentMethod && paymentMethod.defaultProvider){\n      return paymentMethod.defaultProvider;\n    }\n    return null;\n  }\n\n  getAvailablePaymentProviders = (selectedMethod,selectedToken) => {\n    const availableProviders = [];\n\n    Object.keys(globalConfigs.payments.providers).map((provider,i) => {\n      const providerInfo = globalConfigs.payments.providers[provider];\n      const providerSupportMethod = providerInfo.supportedMethods.indexOf(selectedMethod) !== -1;\n      const providerSupportToken = selectedToken ? providerInfo.supportedTokens.indexOf(selectedToken) !== -1 : (providerInfo.supportedTokens.indexOf(this.props.selectedToken) !== -1 || providerInfo.supportedTokens.indexOf(globalConfigs.baseToken) !== -1);\n      if (providerInfo.enabled && providerSupportMethod && providerSupportToken ){\n        availableProviders.push(provider);\n      }\n      return provider;\n    });\n\n    const defaultPaymentProvider = this.getDefaultPaymentProvider(selectedMethod);\n\n    if (defaultPaymentProvider && this.state.availableMethods[selectedMethod].showDefaultOnly && availableProviders.indexOf(defaultPaymentProvider) !== -1){\n      return [defaultPaymentProvider];\n    }\n\n    return availableProviders;\n  }\n\n  selectProvider = (e,selectedProvider) => {\n    if (e){\n      e.preventDefault();\n    }\n    \n    if (!selectedProvider || !globalConfigs.payments.providers[selectedProvider]){\n      return this.setState({\n        selectedProvider:null\n      });\n    }\n\n    const providerInfo = globalConfigs.payments.providers[selectedProvider];\n    if (providerInfo){\n\n      if (this.state.selectedToken){\n        this.renderPaymentMethod(e,selectedProvider,this.state);\n        return;\n      }\n\n      const ethAvailable = providerInfo.supportedTokens.indexOf(globalConfigs.baseToken) !== -1;\n      const tokenAvailable = providerInfo.supportedTokens.indexOf(this.props.selectedToken) !== -1;\n\n      // Show tokens to buy if more are available or if the selected one is not\n      const availableTokens = [];\n      if ( (ethAvailable && tokenAvailable) || !tokenAvailable ){\n        if (ethAvailable){\n          availableTokens.push(globalConfigs.baseToken);\n        }\n        if (tokenAvailable){\n          availableTokens.push(this.props.selectedToken);\n        }\n      } else {\n        this.renderPaymentMethod(e,selectedProvider,this.state);\n        return;\n      }\n\n      this.setState({\n        availableTokens,\n        selectedProvider\n      });\n    }\n  }\n\n  selectMethod = (e,selectedMethod) => {\n    if (e){\n      e.preventDefault();\n    }\n\n    if (Object.keys(this.state.availableMethods).indexOf(selectedMethod) !== -1){\n      const availableProviders = this.getAvailablePaymentProviders(selectedMethod,this.state.selectedToken);\n\n      // Send Google Analytics event\n      this.functionsUtil.sendGoogleAnalyticsEvent({\n        eventCategory: 'Buy',\n        eventAction: 'select_method',\n        eventLabel: selectedMethod\n      });\n\n      this.setState({\n        availableProviders,\n        selectedMethod\n      });\n    }\n  }\n\n  selectToken = (e,selectedToken) => {\n    if (e){\n      e.preventDefault();\n    }\n\n    // Send Google Analytics event\n    this.functionsUtil.sendGoogleAnalyticsEvent({\n      eventCategory: 'Buy',\n      eventAction: 'select_token',\n      eventLabel: selectedToken\n    });\n\n    this.setState({ selectedToken }, async () => {\n      if (this.state.selectedProvider){\n        return this.renderPaymentMethod(e,this.state.selectedProvider,this.state);\n      } else {\n        this.loadRemoteResources();\n      }\n    });\n  }\n\n  handleCountryChange = selectedCountry => {\n\n    // Send Google Analytics event\n    if (globalConfigs.analytics.google.events.enabled && selectedCountry){\n      this.functionsUtil.sendGoogleAnalyticsEvent({\n        eventCategory: 'Buy',\n        eventAction: 'select_country',\n        eventLabel: selectedCountry.value\n      });\n    }\n\n    this.setState({\n      selectedCountry\n    });\n  }\n\n  getAvailableCountries = () => {\n    const availableCountries = {};\n    this.state.availableProviders.forEach((provider,i) => {\n      const providerInfo = this.getProviderInfo(provider);\n      const providerSupportMethod = providerInfo.supportedMethods.indexOf(this.state.selectedMethod) !== -1;\n      const providerSupportToken = this.state.selectedToken ? providerInfo.supportedTokens.indexOf(this.state.selectedToken) !== -1 : (providerInfo.supportedTokens.indexOf(this.props.selectedToken) !== -1 || providerInfo.supportedTokens.indexOf(globalConfigs.baseToken) !== -1);\n\n      // Skip disabled provider, not supported selected method or not supported token\n      if (!providerInfo.enabled || !providerSupportMethod || !providerSupportToken ){\n        return;\n      }\n\n      // Get available providers and countries\n      providerInfo.supportedCountries.forEach((countryCode,j) => {\n        if (!availableCountries[countryCode]){\n          availableCountries[countryCode] = {\n            providers:[],\n            label:globalConfigs.countries[countryCode],\n            value:countryCode\n          };\n        }\n        availableCountries[countryCode].providers.push(provider);\n      });\n    });\n\n    return Object.values(availableCountries);\n  }\n\n  render() {\n\n    let title = null;\n    if (this.state.selectedToken === null){\n      title = 'BUY TOKEN';\n    } else {\n      title = 'BUY '+this.state.selectedToken;\n      if (this.state.selectedMethod !== null){\n        title += ' - '+this.state.availableMethods[this.state.selectedMethod].props.caption;\n      }\n    }\n\n    let availableTokens = this.props.availableTokens && Object.keys(this.props.availableTokens).length>0 ? [globalConfigs.baseToken,...Object.keys(this.props.availableTokens)] : [globalConfigs.baseToken];\n\n    // Show all tokens\n    if (this.props.showAllTokens){\n      availableTokens = [];\n      Object.keys(globalConfigs.payments.providers).forEach( provider => {\n        const providerInfo = globalConfigs.payments.providers[provider];\n        if (providerInfo.supportedTokens){\n          providerInfo.supportedTokens.forEach(token => {\n            if (!availableTokens.includes(token)){\n              availableTokens.push(token);\n            }\n          })\n        }\n      });\n    }\n\n    const InnerComponent = props => (\n      <Box minWidth={ this.props.showInline ? 'auto' : ['auto','35em'] }>\n      {\n        this.state.selectedToken === null ? (\n          <Box mb={2}>\n            <Text\n              mb={[2,3]}\n              fontWeight={2}\n              textAlign={'center'}\n              fontSize={[2, this.props.showInline ? 2 : 3]}\n            >\n              Which token do you want to buy?\n            </Text>\n            <Flex\n              mb={4}\n              style={{\n                flexWrap:'wrap'\n              }}\n              alignItems={'center'}\n              justifyContent={'center'}\n              flexDirection={['column','row']}\n            >\n            {\n              availableTokens.map((token,i) => {\n                return (\n                  <ImageButton\n                    caption={token}\n                    key={`token_${token}`}\n                    isMobile={this.props.isMobile}\n                    imageSrc={`images/tokens/${token}.svg`}\n                    handleClick={ e => { this.selectToken(e,token); } }\n                    imageProps={ this.props.isMobile ? {height:'42px'} : {p:[2,3],height:'80px'}}\n                    buttonProps={ !this.props.isMobile ? {\n                      style:{\n                        'flex':'0 0 170px'\n                      }\n                    } : null}\n                  />\n                );\n              })\n            }\n            </Flex>\n          </Box>\n        ) : this.state.selectedMethod === null ? (\n          <Box>\n            <Flex mb={3} flexDirection={'column'} justifyContent={'center'} alignItems={'center'}>\n              {\n                !this.props.showInline &&\n                  <Image height={2} mb={2} src={`images/tokens/${this.state.selectedToken}.svg`} />\n              }\n              <Text textAlign={'center'} fontWeight={500} fontSize={[2, this.props.showInline ? 2 : 3]} my={0}>\n                {\n                  this.props.showInline && this.props.buyToken ? `Ops... you don't have any ${this.props.buyToken} in your wallet, how do you prefer do buy some?` : `How do you prefer to buy ${this.state.selectedToken}?`\n                }\n              </Text>\n            </Flex>\n            <Flex mb={this.props.showInline ? 2 : 4} flexDirection={['column','row']} alignItems={'center'} justifyContent={'center'}>\n              {\n                Object.keys(this.state.availableMethods).map((method,i) => {\n                  const methodInfo = this.state.availableMethods[method];\n                  let imageProps = methodInfo.props && methodInfo.props.imageProps ? methodInfo.props.imageProps : {};\n                  const imagePropsExtended = this.props.isMobile ? {height:'42px'} : {height:'70px'};\n                  imageProps = Object.assign(imageProps,imagePropsExtended);\n\n                  return (\n                    <ImageButton\n                      {...methodInfo.props}\n                      buttonProps={{\n                        border:2\n                      }}\n                      key={`method_${method}`}\n                      imageProps={ imageProps }\n                      isMobile={ this.props.isMobile }\n                      handleClick={ e => this.selectMethod(e,method) }\n                    />\n                  );\n                })\n              }\n            </Flex>\n          </Box>\n        ) : this.state.selectedMethod === 'wallet' ? (\n              <Box mt={2} mb={3}>\n                <Text textAlign={'center'} fontWeight={3} fontSize={2} my={0}>\n                  <Box width={'100%'}>\n                      <Flex mb={this.props.showInline ? 2 : 4} flexDirection={['column','row']} alignItems={'center'} justifyContent={'center'}>\n                      {\n                        this.state.availableProviders.length > 0 ?\n                          (\n                            <Box>\n                              <Text textAlign={'center'} fontWeight={2} fontSize={2} mb={[2,3]}>\n                                Choose your preferred payment provider:\n                              </Text>\n                              {\n                                this.state.availableProviders.map((provider,i) => {\n                                  const providerInfo = this.getProviderInfo(provider);\n                                  return (\n                                    <ImageButton key={`payment_provider_${provider}`} {...providerInfo} handleClick={ e => { this.renderPaymentMethod(e,provider,this.state); } } />\n                                  );\n                                })\n                              }\n                            </Box>\n                          )\n                        : (\n                          <Text textAlign={'center'} fontWeight={3} fontSize={2} my={2}>\n                            Sorry, there are no providers available for the selected method.\n                          </Text>\n                        )\n                      }\n                      </Flex>\n                    </Box>\n                </Text>\n              </Box>\n            ) : (\n            <Flex\n              width={1}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'flex-start'}\n            >\n              {\n                !this.state.selectedProvider &&\n                <Box\n                  mb={3}\n                  maxWidth={ this.props.showInline ? '35em' : 'initial' }\n                  width={ (this.props.showInline && !this.props.isMobile) ? 0.72 : 1 }\n                >\n                  {\n                    !this.props.showInline &&\n                      <Flex flexDirection={'column'} justifyContent={'center'} alignItems={'center'}>\n                        <Image height={2} mb={2} src={`images/tokens/${this.state.selectedToken}.svg`} />\n                      </Flex>\n                  }\n                  <Text textAlign={'center'} fontWeight={ this.props.showInline ? 2 : 3 } fontSize={2} mb={2}>\n                    Select your country:\n                  </Text>\n                  <Select\n                    bg={'#162e4d'}\n                    backgroundColor={'#162e4d'}\n                    value={this.state.selectedCountry}\n                    placeholder={'Select your country'}\n                    onChange={this.handleCountryChange}\n                    options={this.getAvailableCountries()}\n                    maxWidth={ this.props.showInline && !this.props.isMobile ? '25em' : 'auto' }\n                    noOptionsMessage={ (inputValue) => 'For European countries select Europe' }\n                    className={this.props.themeMode === 'light' ? styles.select : styles.selectDark}\n                  />\n                </Box>\n              }\n              <Flex flexDirection={'column'} justifyContent={'center'} alignItems={'center'} minHeight={'200px'}>\n                {\n                  !this.state.selectedProvider ?\n                    this.state.selectedCountry !== null ? (\n                      <Box width={'100%'}>\n                        <Text textAlign={'center'} fontWeight={2} fontSize={2} mb={[2,3]}>\n                          Choose your preferred payment provider:\n                        </Text>\n                        <Flex mb={this.props.showInline ? 2 : 4} flexDirection={['column','row']} alignItems={'center'} justifyContent={'center'}>\n                        {\n                          this.state.selectedCountry.providers.length > 0 ?\n                            this.state.selectedCountry.providers.map((provider,i) => {\n                              const providerInfo = this.getProviderInfo(provider);\n                              return (\n                                <ImageButton key={`payment_provider_${provider}`} {...providerInfo} handleClick={ e => {this.selectProvider(e,provider) } } />\n                              );\n                            })\n                          : (\n                            <Text textAlign={'center'} fontWeight={3} fontSize={2} mb={2}>\n                              Sorry, there are no providers available for the selected method.\n                            </Text>\n                          )\n                        }\n                        </Flex>\n                      </Box>\n                    ) : (\n                      <Text textAlign={'center'} fontWeight={2} fontSize={2} mb={2}>\n                        Select the country to load the payment providers.\n                      </Text>\n                    )\n                  : false && this.state.availableTokens && this.state.availableTokens.length > 0 && (\n                    <Box mb={2}>\n                      <Flex justifyContent={'center'} my={2}>\n                        <Image src={ globalConfigs.payments.providers[this.state.selectedProvider].imageSrc } height={'35px'} />\n                      </Flex>\n                      <Text textAlign={'center'} fontWeight={2} fontSize={2} mb={[2,3]}>\n                        Choose which token do you want to buy:\n                      </Text>\n                      <Flex mb={this.props.showInline ? 2 : 4} flexDirection={['column','row']} alignItems={'center'} justifyContent={'center'}>\n                      {\n                        this.state.availableTokens.map((token,i) => {\n                          return (\n                            <ImageButton key={`token_${token}`} imageSrc={`images/tokens/${token}.svg`} caption={token} imageProps={{p:[2,3],height:'80px'}} handleClick={ e => { this.selectToken(e,token); } } />\n                          );\n                        })\n                      }\n                      </Flex>\n                    </Box>\n                  )\n                }\n              </Flex>\n            </Flex>\n          )\n      }\n        {\n          this.props.showInline && this.state.selectedToken !== null  && (this.props.buyToken === null || this.state.selectedMethod !== null) && (\n            <Flex\n              alignItems={'center'}\n              justifyContent={'center'}\n            >\n              <Button\n                my={2}\n                mx={[0, 2]}\n                size={'medium'}\n                borderRadius={4}\n                mainColor={'blue'}\n                onClick={ e => this.goBack(e) }\n              >\n                GO BACK\n              </Button>\n            </Flex>\n          )\n        }\n      </Box>\n    );\n\n    if (this.props.showInline){\n      return (\n        <InnerComponent\n          {...this.props}\n        />\n      );\n    }\n\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.closeModal}>\n          <ModalCard.Header title={title}>\n          </ModalCard.Header>\n          <ModalCard.Body>\n            <InnerComponent/>\n          </ModalCard.Body>\n          <ModalCard.Footer>\n            <Flex px={[2,0]} flexDirection={['column', 'row']} width={1} justifyContent={'center'}>\n              <Button\n                my={2}\n                mx={[0, 2]}\n                borderRadius={4}\n                mainColor={'blue'}\n                onClick={ e => this.closeModal(e) }\n                size={this.props.isMobile ? 'small' : 'medium'}\n              >\n              CLOSE\n              </Button>\n              {\n                this.state.selectedToken !== null && (this.props.buyToken === null || this.state.selectedMethod !== null) && (\n                  <Button\n                    my={2}\n                    mx={[0, 2]}\n                    borderRadius={4}\n                    onClick={ e => this.goBack(e) }\n                    className={styles.gradientButton}\n                    size={this.props.isMobile ? 'small' : 'medium'}\n                  >\n                    GO BACK\n                  </Button>\n                )\n              }\n            </Flex>\n          </ModalCard.Footer>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default BuyModal;","import React, { Component } from 'react';\nimport { Flex, Box, Text } from \"rimble-ui\";\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport AssetField from '../AssetField/AssetField';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n// import TokenWrapper from '../TokenWrapper/TokenWrapper';\nimport GenericSelector from '../GenericSelector/GenericSelector';\n\nclass Staking extends Component {\n\n  state = {\n    tokenConfig:null,\n    contractInfo:null,\n    selectedToken:null,\n    selectedOption:null,\n    availableTokens:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const selectedTokenChanged = prevState.selectedToken !== this.state.selectedToken;\n    if (selectedTokenChanged){\n      const tokenConfig = this.props.toolProps.availableTokens[this.state.selectedToken];\n      const contractInfo = tokenConfig.contract;\n\n      // Init contracts\n      await Promise.all([\n        this.props.initContract(contractInfo.name,contractInfo.address,contractInfo.abi),\n        this.props.initContract(this.state.selectedToken,tokenConfig.address,tokenConfig.abi)\n      ]);\n\n      this.setState({\n        tokenConfig,\n        contractInfo\n      });\n    }\n  }\n\n  async loadData(){\n    const availableTokens = Object.keys(this.props.toolProps.availableTokens).reduce( (output,token) => {\n      const tokenConfig = this.props.toolProps.availableTokens[token];\n      if (tokenConfig.enabled){\n        output.push({\n          value:token,\n          ...tokenConfig\n        });\n      }\n      return output;\n    },[]);\n\n    const selectedOption = availableTokens[0];\n    const selectedToken = selectedOption.value;\n\n    this.setState({\n      selectedToken,\n      selectedOption,\n      availableTokens\n    });\n  }\n\n  selectToken(selectedToken){\n    this.setState({\n      selectedToken\n    });\n  }\n\n  render() {\n\n    const CustomOptionValue = props => {\n      const label = props.label;\n      const tokenConfig = {\n        icon:props.data.icon\n      };\n\n      return (\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'row'}\n          justifyContent={'space-between'}\n        >\n          <Flex\n            alignItems={'center'}\n          >\n            <AssetField\n              token={label}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  width:'2em',\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={label}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n        </Flex>\n      );\n    }\n\n    const CustomValueContainer = props => {\n\n      const options = props.selectProps.options;\n      const selectProps = options.indexOf(props.selectProps.value) !== -1 ? props.selectProps.value : null;\n\n      if (!selectProps){\n        return null;\n      }\n\n      const label = selectProps.label;\n      const tokenConfig = {\n        icon:selectProps.icon\n      };\n\n      return (\n        <Flex\n          style={{\n            flex:'1'\n          }}\n          justifyContent={'space-between'}\n          {...props.innerProps}\n        >\n          <Flex\n            p={0}\n            width={1}\n            {...props.innerProps}\n            alignItems={'center'}\n            flexDirection={'row'}\n            style={{cursor:'pointer'}}\n            justifyContent={'flex-start'}\n          >\n            <AssetField\n              token={label}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={label}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n        </Flex>\n      );\n    }\n\n    const SelectedComponent = this.state.tokenConfig ? this.state.tokenConfig.component : null;\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        {\n          !this.state.availableTokens ? (\n            <Flex\n              mt={4}\n              flexDirection={'column'}\n            >\n              <FlexLoader\n                flexProps={{\n                  flexDirection:'row'\n                }}\n                loaderProps={{\n                  size:'30px'\n                }}\n                textProps={{\n                  ml:2\n                }}\n                text={'Loading tokens...'}\n              />\n            </Flex>\n          ) : (\n            <Flex\n              width={1}\n              alignItems={'center'}\n              justifyContent={'center'}\n            >\n              {\n                !this.state.availableTokens.length ? (\n                  <Text\n                    fontWeight={2}\n                    fontSize={[2,3]}\n                    color={'dark-gray'}\n                    textAlign={'center'}\n                  >\n                    There are no active tokens.\n                  </Text>\n                ) : (\n                  <Flex\n                    width={[1,0.46]}\n                    alignItems={'stretch'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <Box\n                      width={1}\n                    >\n                      <Text\n                        mb={1}\n                      >\n                        Select Token:\n                      </Text>\n                      <GenericSelector\n                        {...this.props}\n                        name={'tokens'}\n                        isSearchable={false}\n                        options={this.state.availableTokens}\n                        CustomOptionValue={CustomOptionValue}\n                        onChange={this.selectToken.bind(this)}\n                        defaultValue={this.state.selectedOption}\n                        CustomValueContainer={CustomValueContainer}\n                      />\n                    </Box>\n                    {\n                      SelectedComponent && (\n                        <SelectedComponent\n                          {...this.props}\n                          tokenConfig={this.state.tokenConfig}\n                          contractInfo={this.state.contractInfo}\n                          selectedToken={this.state.selectedToken}\n                        />\n                      )\n                    }\n                  </Flex>\n                )\n              }\n            </Flex>\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default Staking;","import React, { Component } from 'react';\nimport { Box, Flex, Text } from 'rimble-ui'\nimport Faquestion from '../Faquestion/Faquestion';\n\nclass GenericFaqs extends Component {\n  state = {\n    openedAnswer:null,\n    selectedSection:null\n  };\n  componentWillMount(){\n    const selectedSection = Object.keys(this.props.questions)[0];\n    this.setSection(selectedSection);\n  }\n  setSection(section) {\n    this.setState(state => ({...state, selectedSection: section, openedAnswer: null}));\n  }\n  toggleAnswer(e,i) {\n    e.preventDefault();\n    this.setState(state => ({...state, openedAnswer: state.openedAnswer===i ? null : i }));\n  };\n\n  render() {\n    const showSections = this.props.showSections === undefined || this.props.showSections;\n    return (\n      <Flex\n        width={1}\n        flexDirection={'column'}\n      >\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'column'}\n          justifyContent={\"center\"}\n        >\n          {\n            showSections && (\n              <Flex\n                mb={[3,4]}\n                px={[2,0]}\n                width={[1,3/5]}\n                flexDirection={'row'}\n                justifyContent={'space-between'}\n              >\n                {\n                  Object.keys(this.props.questions).map( (section,i) => {\n                    const isSelected = section === this.state.selectedSection;\n                    return (\n                      <Flex\n                        key={`section_${i}`}\n                        textAlign={'center'}\n                        justifyContent={'center'}\n                        width={1/Object.keys(this.props.questions).length}\n                        borderBottom={ isSelected ? '3px solid #0036ff' : 'none'}\n                      >\n                        <Text\n                          mb={1}\n                          fontWeight={3}\n                          fontSize={[2, 3]}\n                          textAlign={'center'}\n                          onClick={() => this.setSection(section)}\n                          color={isSelected ? 'blue' : 'copyColor'}\n                          className={['pointer', isSelected ? 'selected' : '']}\n                        >\n                          {section}\n                        </Text>\n                      </Flex>\n                    );\n                  })\n                }\n              </Flex>\n            )\n          }\n          <Box\n            width={1}\n          >\n            {\n              this.props.questions[this.state.selectedSection].map( (question,i) => (\n                <Faquestion\n                  key={`answer_${i}`}\n                  answer={question.a}\n                  pt={i === 0 ? 0 : ''}\n                  question={question.q}\n                  isOpened={this.state.openedAnswer === i}\n                  handleClick={ e => this.toggleAnswer(e,i) }\n                />\n              ))\n            }\n          </Box>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default GenericFaqs;","import React, { Component } from 'react';\nimport IconBox from '../IconBox/IconBox';\nimport ExtLink from '../ExtLink/ExtLink';\nimport ConnectBox from '../ConnectBox/ConnectBox';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport { Flex, Box, Text, Icon, Link, Input, Checkbox } from \"rimble-ui\";\nimport FastBalanceSelector from '../FastBalanceSelector/FastBalanceSelector';\n\nclass SendTxWithBalance extends Component {\n\n  state = {\n    processing:{\n      txHash:null,\n      loading:false\n    },\n    inputValue:null,\n    txSucceeded:false,\n    permitEnabled:true,\n    showPermitBox:false,\n    approveEnabled:true,\n    buttonDisabled:true,\n    contractApproved:false,\n    fastBalanceSelector:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n    await this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const actionChanged = prevProps.action !== this.props.action;\n    const accountChanged = prevProps.account !== this.props.account;\n    const tokenBalanceChanged = prevProps.tokenBalance !== this.props.tokenBalance;\n    const permitEnabledChanged = prevState.permitEnabled !== this.state.permitEnabled;\n    const approveEnabledChanged = prevProps.approveEnabled !== this.props.approveEnabled;\n    const contractChanged = JSON.stringify(prevProps.contractInfo) !== JSON.stringify(this.props.contractInfo);\n    const tokenConfigChanged = JSON.stringify(prevProps.tokenConfig) !== JSON.stringify(this.props.tokenConfig);\n    if (actionChanged || accountChanged || tokenBalanceChanged || contractChanged || approveEnabledChanged || tokenConfigChanged || permitEnabledChanged){\n      await this.loadData();\n    }\n\n    const contractApprovedChanged = prevState.contractApproved !== this.state.contractApproved;\n    if (contractApprovedChanged){\n      if (typeof this.props.contractApproved === 'function'){\n        this.props.contractApproved(this.state.contractApproved);\n      }\n    }\n\n    const fastBalanceSelectorChanged = this.state.fastBalanceSelector !== prevState.fastBalanceSelector;\n    if (fastBalanceSelectorChanged || actionChanged){\n      this.setInputValue();\n    }\n\n    const inputValueChanged = prevState.inputValue !== this.state.inputValue;\n    if (inputValueChanged){\n      this.checkButtonDisabled();\n    }\n  }\n\n  changeInputValue = (e,call_callback=true) => {\n    const fastBalanceSelector = null;\n    const inputValue = e.target.value.length && !isNaN(e.target.value) ? this.functionsUtil.BNify(e.target.value) : this.functionsUtil.BNify(0);\n    if (this.state.inputValue !== inputValue){\n      this.setState((prevState) => ({\n        inputValue,\n        fastBalanceSelector\n      }),() => {\n        if (call_callback && typeof this.props.changeInputCallback === 'function'){\n          this.props.changeInputCallback(this.state.inputValue);\n        }\n      });\n    }\n  }\n\n  setInputValue = () => {\n    if (this.state.fastBalanceSelector === null){\n      return false;\n    }\n    const selectedPercentage = this.functionsUtil.BNify(this.state.fastBalanceSelector).div(100);\n    const inputValue = this.props.tokenBalance && !this.functionsUtil.BNify(this.props.tokenBalance).isNaN() ? this.functionsUtil.BNify(this.props.tokenBalance).times(selectedPercentage) : null;\n\n    this.setState((prevState) => ({\n      inputValue\n    }),() => {\n      if (typeof this.props.changeInputCallback === 'function'){\n        this.props.changeInputCallback(this.state.inputValue);\n      }\n    });\n  }\n\n  getFastBalanceSelector = () => {\n    if (this.state.fastBalanceSelector === null){\n      return false;\n    }\n    return this.functionsUtil.BNify(this.state.fastBalanceSelector).div(100);\n  }\n\n  showPermitBox(){\n    this.setState({\n      showPermitBox:true\n    });\n  }\n\n  togglePermitEnabled(permitEnabled){\n    this.setState({\n      permitEnabled\n    });\n  }\n\n  setFastBalanceSelector = (fastBalanceSelector) => {\n    this.setState({\n      fastBalanceSelector\n    });\n  }\n\n  checkButtonDisabled = (amount=null) => {\n    if (!amount){\n      amount = this.state.inputValue;\n    }\n    amount = this.functionsUtil.BNify(amount);\n    const buttonDisabled = amount.isNaN() || amount.lte(0) || amount.gt(this.props.tokenBalance);\n    this.setState({\n      buttonDisabled\n    });\n  }\n\n  approve = async () => {\n    // Check if the migration contract is approved\n    const contractApproved = await this.checkContractApproved();\n\n    if (!contractApproved){\n\n      const callbackApprove = (tx,error) => {\n        // Send Google Analytics event\n        const eventData = {\n          eventAction: 'approve',\n          eventCategory: 'CurveDeposit',\n          eventLabel: tx ? tx.status : null\n        };\n\n        const txSucceeded = tx && tx.status === 'success';\n\n        if (error){\n          eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n        }\n\n        // Send Google Analytics event\n        if (error || eventData.status !== 'error'){\n          this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n        }\n\n        this.setState((prevState) => ({\n          contractApproved: txSucceeded, // True\n          processing: {\n            ...prevState.processing,\n            txHash:null,\n            loading:false\n          }\n        }));\n\n        if (typeof this.props.callbackApprove === 'function' && txSucceeded){\n          this.props.callbackApprove(tx);\n        }\n      };\n\n      const callbackReceiptApprove = (tx) => {\n        const txHash = tx.transactionHash;\n        this.setState((prevState) => ({\n          processing: {\n            ...prevState.processing,\n            txHash\n          }\n        }));\n      };\n\n      // console.log('Approve',this.props.tokenConfig.token,this.props.contractInfo.address);\n\n      this.functionsUtil.enableERC20(this.props.tokenConfig.token,this.props.contractInfo.address,callbackApprove,callbackReceiptApprove);\n\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          txHash:null,\n          loading:true\n        },\n        contractApproved:false\n      }));\n    } else {\n      this.setState({\n        contractApproved:true\n      });\n    }\n  }\n\n  executeTx = async () => {\n\n    const inputValue = this.state.inputValue ? this.functionsUtil.BNify(this.state.inputValue) : null;\n    if (!inputValue){\n      return false;\n    }\n\n    if (typeof this.props.checkLimit === 'function'){\n      const limitCheck = await this.props.checkLimit(inputValue);\n      if (!limitCheck){\n        return false;\n      }\n    }\n\n    const _amount = this.functionsUtil.normalizeTokenAmount(inputValue,this.props.tokenConfig.decimals);\n\n    // console.log('executeTx',params);\n\n    const callback = (tx,error) => {\n      const txSucceeded = tx.status === 'success';\n\n      // Send Google Analytics event\n      const eventData = {\n        eventLabel: tx.status,\n        eventCategory: `CurveDeposit`,\n        eventValue: inputValue.toFixed(),\n        eventAction: this.props.tokenConfig.token,\n      };\n\n      if (error){\n        eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n      }\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n      this.setState({\n        txSucceeded,\n        processing: {\n          txHash:null,\n          loading:false\n        }\n      });\n\n      if (txSucceeded){\n        // Reset input\n        this.changeInputValue({\n          target:{\n            value:0\n          }\n        },false);\n        this.setState({\n          showPermitBox:false\n        });\n        // Call upper component callback\n        if (typeof this.props.callback === 'function'){\n          this.props.callback(tx,_amount,params);\n        }\n      }\n    };\n\n    const callbackReceipt = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          txHash\n        }\n      }));\n    };\n\n    const contractName = this.props.contractInfo.name;\n\n    let params = null;\n\n    // Check contract approved without permit\n    const contractApproved = await this.checkContractApproved(false);\n\n    const permitEnabled = this.props.permitEnabled && this.state.permitEnabled && !contractApproved;\n    if (permitEnabled){\n      const signedParameters = await this.functionsUtil.signPermit(this.props.tokenConfig.token, this.props.account, contractName);\n      // console.log('signedParameters',signedParameters);\n      if (signedParameters){\n        params = this.props.getPermitTransactionParams(_amount,signedParameters);\n      }\n    } else {\n      params = this.props.getTransactionParams(_amount,this.state.fastBalanceSelector);\n    }\n\n    if (params){\n      let {\n        methodName,\n        methodParams\n      } = params;\n\n      const value = params.value || null;\n\n      // console.log('SendTxWithBalance',contractName, methodName, methodParams, value);\n\n      this.props.contractMethodSendWrapper(contractName, methodName, methodParams, value, callback, callbackReceipt);\n\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          loading:true\n        }\n      }));\n    } else {\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          loading:false\n        }\n      }));\n    }\n  }\n\n  cancelTransaction = async () => {\n    this.setState({\n      processing: {\n        txHash:null,\n        loading:false\n      }\n    });\n  }\n\n  async checkContractApproved(checkPermit=true){\n\n    if (checkPermit && this.props.permitEnabled && this.state.permitEnabled){\n      return true;\n    }\n\n    if (this.props.approveEnabled !== undefined && !this.props.approveEnabled){\n      return true;\n    }\n    const contractInfo = await this.props.initContract(this.props.contractInfo.name,this.props.contractInfo.address,this.props.contractInfo.abi);\n\n    if (contractInfo){\n      const contractApproved = await this.functionsUtil.checkTokenApproved(this.props.tokenConfig.token,this.props.contractInfo.address,this.props.account);\n      return contractApproved;\n    }\n    \n    return false;\n  }\n\n  async loadData(){\n    const inputValue = null;\n    const fastBalanceSelector = null;\n    const contractApproved = await this.checkContractApproved();\n    const approveEnabled = this.props.approveEnabled !== false;\n\n    this.setState({\n      inputValue,\n      approveEnabled,\n      contractApproved,\n      fastBalanceSelector\n    });\n  }\n\n  approveCallback = () => {\n    this.loadData();\n  }\n\n  render() {\n\n    const viewOnly = this.props.connectorName === 'custom';\n    const action = this.props.action ? this.props.action : 'Deposit';\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'stretch'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        {\n          viewOnly ? (\n            <IconBox\n              cardProps={{\n                mt:3\n              }}\n              icon={'Visibility'}\n              text={'You are using Idle in \"Read-Only\" mode.<br />Logout and connect with your wallet to interact.'}\n            />\n          ) : !this.props.account ? (\n            <ConnectBox\n              {...this.props}\n            />\n          ) : this.props.tokenConfig && !this.functionsUtil.BNify(this.props.tokenBalance).isNaN() && this.functionsUtil.BNify(this.props.tokenBalance).gt(0) ? (\n            <Box\n              width={1}\n            >\n              {\n                this.props.infoBox && (\n                  <IconBox\n                    cardProps={{\n                      mb:3\n                    }}\n                    {...this.props.infoBox}\n                  />\n                )\n              }\n              {\n                this.props.steps && this.props.steps.length>0 && (\n                  <DashboardCard\n                    cardProps={{\n                      p:3,\n                      px:[2,4]\n                    }}\n                  >\n                    <Flex\n                      alignItems={'center'}\n                      flexDirection={'column'}\n                    > \n                      {\n                        this.props.steps.map( (step,stepIndex) => (\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            key={`step_${stepIndex}`}\n                          >\n                            <Icon\n                              size={'1.5em'}\n                              name={ step.completed ? 'CheckBox' : step.icon}\n                              color={ step.completed ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                            />\n                            {\n                              step.link ? (\n                                <ExtLink\n                                  ml={2}\n                                  fontSize={2}\n                                  color={'blue'}\n                                  fontWeight={1}\n                                  href={step.link}\n                                  textAlign={'left'}\n                                  hoverColor={'blue'}\n                                >\n                                  {step.description}\n                                </ExtLink>\n                              ) : (\n                                <Text\n                                  ml={2}\n                                  fontSize={2}\n                                  fontWeight={1}\n                                  color={'cellText'}\n                                  textAlign={'left'}\n                                >\n                                  {step.description}\n                                </Text>\n                              )\n                            }\n                          </Flex>\n                        ) )\n                      }\n                    </Flex>\n                  </DashboardCard>\n                )\n              }\n              <Box\n                mt={2}\n                width={1}\n              >\n                {\n                  this.state.showPermitBox && this.props.permitEnabled ? (\n                    <DashboardCard\n                      cardProps={{\n                        py:3,\n                        px:3,\n                        mt:3,\n                        display:'flex',\n                        alignItems:'center',\n                        flexDirection:'column',\n                        justifyContent:'center',\n                      }}\n                    >\n                      <Flex\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                        justifyContent={'center'}\n                      >\n                        <Icon\n                          size={'1.8em'}\n                          name={'Warning'}\n                          color={'cellText'}\n                        />\n                        <Text\n                          mt={1}\n                          fontSize={1}\n                          color={'cellText'}\n                          textAlign={'center'}\n                        >\n                          Approve and Deposit in a single transaction is supported for this transaction, disable this feature and try again if you can't deposit.\n                        </Text>\n                      </Flex>\n                      <Checkbox\n                        mt={1}\n                        required={false}\n                        checked={this.state.permitEnabled}\n                        label={`Approve and Deposit in a single transaction`}\n                        onChange={ e => this.togglePermitEnabled(e.target.checked) }\n                      />\n                    </DashboardCard>\n                  ) : !this.state.showPermitBox && this.props.permitEnabled && (\n                    <Flex\n                      p={2}\n                      mt={3}\n                      width={1}\n                      borderRadius={2}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                      justifyContent={'center'}\n                      backgroundColor={'DashboardCard'}\n                      border={`1px solid ${this.props.theme.colors.primary}`}\n                    >\n                      <Link\n                        textAlign={'center'}\n                        hoverColor={'primary'}\n                        onClick={this.showPermitBox.bind(this)}\n                      >\n                        Having trouble with the Permit signature?\n                      </Link>\n                      <Icon\n                        ml={1}\n                        size={'1em'}\n                        name={'Warning'}\n                        color={'primary'}\n                      />\n                    </Flex>\n                  )\n                }\n              </Box>\n              {\n                this.state.approveEnabled && !this.state.contractApproved ?\n                  this.state.processing.loading ? (\n                    <Flex\n                      mt={3}\n                      flexDirection={'column'}\n                    >\n                      <TxProgressBar\n                        {...this.props}\n                        waitText={`Approve estimated in`}\n                        hash={this.state.processing.txHash}\n                        endMessage={`Finalizing approve request...`}\n                        cancelTransaction={this.cancelTransaction.bind(this)}\n                      />\n                    </Flex>\n                  ) : (\n                    <DashboardCard\n                      cardProps={{\n                        p:3\n                      }}\n                    >\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                      >\n                        <Icon\n                          size={'2.3em'}\n                          name={'LockOpen'}\n                          color={'cellText'}\n                        />\n                        <Text\n                          mt={1}\n                          fontSize={2}\n                          color={'cellText'}\n                          textAlign={'center'}\n                          dangerouslySetInnerHTML={{\n                            __html:this.props.approveDescription\n                          }}\n                        />\n                        <RoundButton\n                          buttonProps={{\n                            mt:3,\n                            width:[1,1/2]\n                          }}\n                          handleClick={this.approve.bind(this)}\n                        >\n                          Approve\n                        </RoundButton>\n                      </Flex>\n                    </DashboardCard>\n                  )\n                : this.state.processing.loading ? (\n                  <Flex\n                    mt={3}\n                    flexDirection={'column'}\n                  >\n                    <TxProgressBar\n                      {...this.props}\n                      hash={this.state.processing.txHash}\n                      endMessage={`Finalizing ${action} request...`}\n                      cancelTransaction={this.cancelTransaction.bind(this)}\n                      waitText={`${this.functionsUtil.capitalize(action)} estimated in`}\n                    />\n                  </Flex>\n                ) : (\n                  <Box\n                    mt={2}\n                    width={1}\n                  >\n                    <Flex\n                      mt={2}\n                      mb={3}\n                      width={1}\n                      flexDirection={'column'}\n                    >\n                      <Flex\n                        mb={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={this.props.balanceSelectorInfo ? 'space-between' : 'flex-end'}\n                      >\n                        {\n                          this.props.balanceSelectorInfo && (\n                            <Flex\n                              width={1}\n                              maxWidth={'50%'}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                            >\n                              <Text\n                                fontSize={1}\n                                fontWeight={3}\n                                textAlign={'left'}\n                                style={{\n                                  maxWidth:'100%',\n                                  overflow:'hidden',\n                                  whiteSpace:'nowrap',\n                                  textOverflow:'ellipsis'\n                                }}\n                                color={this.props.balanceSelectorInfo.color ? this.props.balanceSelectorInfo.color : 'copyColor'}\n                              >\n                                {this.props.balanceSelectorInfo.text}\n                              </Text>\n                            </Flex>\n                          )\n                        }\n                        {\n                          !this.functionsUtil.BNify(this.props.tokenBalance).isNaN() && (\n                            <Flex\n                              width={1}\n                              maxWidth={'50%'}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'flex-end'}\n                            >\n                              <Link\n                                fontSize={1}\n                                fontWeight={3}\n                                color={'dark-gray'}\n                                textAlign={'right'}\n                                hoverColor={'copyColor'}\n                                onClick={ (e) => this.setFastBalanceSelector(100) }\n                                style={{\n                                  maxWidth:'100%',\n                                  overflow:'hidden',\n                                  whiteSpace:'nowrap',\n                                  textOverflow:'ellipsis'\n                                }}\n                              >\n                                Balance: {this.functionsUtil.BNify(this.props.tokenBalance).toFixed(this.props.isMobile ? 2 : 4)} {this.props.tokenConfig.token}\n                              </Link>\n                            </Flex>\n                          )\n                        }\n                      </Flex>\n                      <Input\n                        min={0}\n                        type={\"number\"}\n                        required={true}\n                        height={'3.4em'}\n                        borderRadius={2}\n                        fontWeight={500}\n                        borderColor={'cardBorder'}\n                        backgroundColor={'cardBg'}\n                        boxShadow={'none !important'}\n                        placeholder={`Insert amount`}\n                        onChange={this.changeInputValue.bind(this)}\n                        border={`1px solid ${this.props.theme.colors.divider}`}\n                        value={this.state.inputValue !== null ? this.functionsUtil.BNify(this.state.inputValue).toFixed() : ''}\n                      />\n                      <Flex\n                        mt={2}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'space-between'}\n                      >\n                        {\n                          [25,50,75,100].map( percentage => (\n                            <FastBalanceSelector\n                              percentage={percentage}\n                              key={`selector_${percentage}`}\n                              onMouseDown={()=>this.setFastBalanceSelector(percentage)}\n                              isActive={this.state.fastBalanceSelector === parseInt(percentage)}\n                            />\n                          ))\n                        }\n                      </Flex>\n                      <Flex\n                        mt={2}\n                        justifyContent={'center'}\n                      >\n                        <RoundButton\n                          handleClick={this.executeTx.bind(this)}\n                          buttonProps={Object.assign({\n                            mt:2,\n                            width:[1,1/2],\n                            style:{\n                              textTransform:'capitalize'\n                            },\n                            disabled:this.state.buttonDisabled||this.props.buttonDisabled\n                          },this.props.buttonProps)}\n                        >\n                          {this.props.action}\n                        </RoundButton>\n                      </Flex>\n                    </Flex>\n                  </Box>\n                )\n              }\n            </Box>\n          ) : this.props.children\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default SendTxWithBalance;","import React from \"react\";\nimport ModalCard from './ModalCard';\nimport { Text, Modal, Flex } from \"rimble-ui\";\nimport FunctionsUtil from '../../utilities/FunctionsUtil';\nimport RoundButton from '../../RoundButton/RoundButton.js';\n\nclass LimitReachedModal extends React.Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  constructor(props) {\n    super(props);\n    this.loadUtils();\n  }\n\n  componentDidUpdate = async () => {\n    this.loadUtils();\n  }\n\n  closeModal = async () => {\n    this.props.closeModal();\n  }\n\n  render() {\n\n    return (\n      <Modal\n        isOpen={this.props.isOpen}\n      >\n        <ModalCard\n          maxWidth={['960px','650px']}\n          closeFunc={this.props.closeModal}\n        >\n          <ModalCard.Header\n            pt={3}\n            iconHeight={'40px'}\n            title={'Limit Reached'}\n            icon={'images/warning.svg'}\n          >\n          </ModalCard.Header>\n          <ModalCard.Body>\n            <Flex\n              width={1}\n              flexDirection={'column'}\n            >\n              <Text\n                fontSize={2}\n                textAlign={'left'}\n                color={'dark-gray'}\n              >\n                The pool has reached the limit size of {this.props.limit}! Please wait for the limit to be increased before trying to deposit again!\n              </Text>\n            </Flex>\n            <Flex\n              my={3}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              <RoundButton\n                handleClick={this.closeModal}\n                buttonProps={{\n                  width:['100%','40%']\n                }}\n              >\n                Got it\n              </RoundButton>\n            </Flex>\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default LimitReachedModal;","import IconBox from '../IconBox/IconBox';\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport ConnectBox from '../ConnectBox/ConnectBox';\nimport { Flex, Text, Image, Button } from \"rimble-ui\";\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport BuyModal from '../utilities/components/BuyModal';\nimport TrancheField from '../TrancheField/TrancheField';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport ShareModal from '../utilities/components/ShareModal';\nimport CardIconButton from '../CardIconButton/CardIconButton';\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\nimport LimitReachedModal from '../utilities/components/LimitReachedModal';\n\nclass TrancheDetails extends Component {\n\n  state = {\n    infoText:null,\n    canUnstake:null,\n    canWithdraw:null,\n    activeModal:null,\n    balanceProp:null,\n    tokenConfig:null,\n    contractInfo:null,\n    tranchePrice:null,\n    tokenBalance:null,\n    stakedBalance:null,\n    trancheBalance:null,\n    approveEnabled:null,\n    buttonDisabled:false,\n    approveDescription:null,\n    selectedAction:'deposit',\n    userHasAvailableFunds:false\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const accountChanged = this.props.account !== prevProps.account;\n    if (accountChanged){\n      this.loadData();\n    }\n\n    const selectedActionChange = prevState.selectedAction !== this.state.selectedAction;\n    if (selectedActionChange){\n      this.loadActionData();\n    }\n  }\n\n  async loadData(){\n\n    if (!this.props.account){\n      return null;\n    }\n\n    const [\n      // blockNumber,\n      tokenBalance,\n      trancheBalance,\n      // cdoCoolingPeriod,\n      // latestHarvestBlock,\n      // stakeCoolingPeriod,\n      // rewardsTokensInfo,\n      // userStakeBlock,\n      stakedBalance,\n      trancheAPY,\n      tranchePrice\n    ] = await Promise.all([\n      // this.functionsUtil.getBlockNumber(),\n      this.functionsUtil.getTokenBalance(this.props.selectedToken,this.props.account),\n      this.functionsUtil.getTokenBalance(this.props.trancheConfig.name,this.props.account),\n      // this.functionsUtil.genericContractCall(this.props.tokenConfig.CDO.name,'coolingPeriod'),\n      // this.functionsUtil.genericContractCall(this.props.tokenConfig.CDO.name,'latestHarvestBlock'),\n      // this.functionsUtil.genericContractCall(this.props.trancheConfig.CDORewards.name,'coolingPeriod'),\n      // this.functionsUtil.getTrancheRewardTokensInfo(this.props.tokenConfig,this.props.trancheConfig),\n      // this.functionsUtil.genericContractCall(this.props.trancheConfig.CDORewards.name,'usersStakeBlock',[this.props.account]),\n      this.functionsUtil.getTrancheStakedBalance(this.props.trancheConfig.CDORewards.name,this.props.account,this.props.trancheConfig.CDORewards.decimals),\n      this.functionsUtil.loadTrancheFieldRaw('trancheApy',{},this.props.selectedProtocol,this.props.selectedToken,this.props.selectedTranche,this.props.tokenConfig,this.props.trancheConfig,this.props.account),\n      this.functionsUtil.loadTrancheFieldRaw('lastTranchePrice',{},this.props.selectedProtocol,this.props.selectedToken,this.props.selectedTranche,this.props.tokenConfig,this.props.trancheConfig,this.props.account)\n    ]);\n\n    const userHasAvailableFunds = trancheBalance && trancheBalance.gt(0);\n\n\n    const canUnstake = true; // !stakeCoolingPeriod || this.functionsUtil.BNify(userStakeBlock).plus(stakeCoolingPeriod).lt(blockNumber);\n    const canWithdraw = true; // !cdoCoolingPeriod || !latestHarvestBlock || this.functionsUtil.BNify(latestHarvestBlock).plus(cdoCoolingPeriod).lt(blockNumber);\n    \n    // console.log('loadData',this.props.trancheConfig.tranche,blockNumber,cdoCoolingPeriod,latestHarvestBlock,stakeCoolingPeriod,userStakeBlock,canUnstake,canWithdraw);\n\n    this.setState({\n      trancheAPY,\n      canUnstake,\n      canWithdraw,\n      tokenBalance,\n      tranchePrice,\n      stakedBalance,\n      trancheBalance,\n      userHasAvailableFunds\n    }, () => {\n      this.loadActionData();\n    });\n  }\n\n  loadActionData(){\n    let infoBox = null;\n    let balanceProp = null;\n    let tokenConfig = null;\n    let contractInfo = null;\n    let approveEnabled = null;\n    let buttonDisabled = false;\n\n    const trancheDetails = this.functionsUtil.getGlobalConfig(['tranches',this.props.selectedTranche]);\n    let infoText = trancheDetails.description[this.state.selectedAction];\n\n    switch (this.state.selectedAction){\n      case 'deposit':\n        approveEnabled = true;\n        contractInfo = this.props.cdoConfig;\n        tokenConfig = this.props.tokenConfig;\n        balanceProp = this.state.tokenBalance;\n      break;\n      case 'stake':\n        approveEnabled = true;\n        tokenConfig = this.props.trancheConfig;\n        balanceProp = this.state.trancheBalance;\n        contractInfo = this.props.trancheConfig.CDORewards;\n      break;\n      case 'unstake':\n        approveEnabled = false;\n        tokenConfig = this.props.trancheConfig;\n        contractInfo = this.props.trancheConfig.CDORewards;\n        balanceProp = this.state.stakedBalance;\n        if (!this.state.canUnstake){\n          buttonDisabled = true;\n          infoText = trancheDetails.description.cantUnstake;\n        }\n      break;\n      case 'withdraw':\n        approveEnabled = false;\n        contractInfo = this.props.cdoConfig;\n        // tokenConfig = this.props.tokenConfig;\n        tokenConfig = this.props.trancheConfig;\n        balanceProp = this.state.trancheBalance;\n        // balanceProp = this.state.trancheBalance.times(this.state.tranchePrice);\n        // console.log('balanceProp',this.state.trancheBalance.toFixed(),this.state.tranchePrice.toFixed(),balanceProp.toFixed());\n        if (!this.state.canWithdraw){\n          buttonDisabled = true;\n          infoText = trancheDetails.description.cantWithdraw;\n          // infoBox = {\n          //   text:'You need to wait 1 block from the last ',\n          //   icon:'Warning',\n          //   iconProps:{\n          //     color:'cellText'\n          //   },\n          // };\n        }\n      break;\n      default:\n      break;\n    }\n\n    const approveDescription = `To ${this.state.selectedAction} your <strong>${tokenConfig.token}</strong> you need to approve the Smart-Contract first.`;\n\n    // console.log('loadActionData',approveEnabled);\n\n    this.setState({\n      infoBox,\n      infoText,\n      tokenConfig,\n      balanceProp,\n      contractInfo,\n      buttonDisabled,\n      approveEnabled,\n      approveDescription\n    })\n  }\n\n  changeInputCallback(){\n\n  }\n\n  contractApprovedCallback(){\n\n  }\n\n  getTransactionParams(amount){\n    let methodName = null;\n    let methodParams = null;\n\n    if (this.props.trancheConfig.functions[this.state.selectedAction]){\n      methodName = this.props.trancheConfig.functions[this.state.selectedAction];\n\n      // if (this.state.selectedAction === 'withdraw'){\n\n      // }\n\n      methodParams = [amount];\n    }\n\n    console.log('getTransactionParams',methodName,methodParams);\n\n    return {\n      methodName,\n      methodParams\n    };\n  }\n\n  async checkLimit(amount){\n    const trancheLimit = this.functionsUtil.BNify(this.props.tokenConfig.limit);\n    const poolSize = await this.functionsUtil.loadTrancheFieldRaw(`pool`,{},this.props.selectedProtocol,this.props.selectedToken,this.props.selectedTranche,this.props.tokenConfig,this.props.trancheConfig,this.props.account);\n    if (poolSize.plus(amount).gt(trancheLimit)){\n      this.setState({\n        activeModal:'limit'\n      })\n      return false;\n    }\n    return true;\n  }\n\n  transactionSucceeded(){\n    this.loadData();\n    switch (this.state.selectedAction){\n      case 'stake':\n      case 'deposit':\n        this.setState({\n          activeModal:'share'\n        })\n      break;\n      default:\n      break;\n    }\n  }\n\n  resetModal = () => {\n    this.setState({\n      activeModal: null\n    });\n  }\n\n  setSelectedAction(selectedAction){\n    this.setState({\n      selectedAction\n    });\n  }\n\n  render() {\n    const trancheDetails = this.functionsUtil.getGlobalConfig(['tranches',this.props.selectedTranche]);\n    const otherTrancheType = this.props.selectedTranche === 'AA' ? 'BB' : 'AA';\n    const otherTrancheDetails = this.functionsUtil.getGlobalConfig(['tranches',otherTrancheType]);\n    const trancheLimit = this.functionsUtil.formatMoney(this.functionsUtil.BNify(this.props.tokenConfig.limit),0)+' '+this.props.selectedToken;\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        {\n          !this.props.showSelectButton && (\n            <Flex\n              width={1}\n              alignItems={'center'}\n              justifyContent={'flex-end'}\n            >\n              <Button\n                mb={2}\n                size={'small'}\n                width={'auto'}\n                contrastColor={'cardBg'}\n                icon={otherTrancheDetails.icon}\n                mainColor={otherTrancheDetails.color.hex}\n                onClick={e => this.props.selectTrancheType(otherTrancheDetails.route)}\n              >\n                Switch to {otherTrancheDetails.name}\n              </Button>\n            </Flex>\n          )\n        }\n        <DashboardCard\n          cardProps={{\n            py:3,\n            px:3,\n            border:null,\n            // style:{\n            //   border:`1px solid ${trancheDetails.color.hex}`\n            // }\n          }}\n        >\n          <Flex\n            pb={2}\n            mb={2}\n            alignItems={'center'}\n            flexDirection={'row'}\n            borderBottom={`1px solid ${trancheDetails.color.hex}`}\n          > \n            <Image\n              mr={2}\n              src={trancheDetails.image}\n              size={this.props.isMobile ? '1.6em' : '1.8em'}\n            />\n            <Text\n              fontWeight={4}\n              fontSize={[3,4]}\n              color={'copyColor'}\n            >\n              {trancheDetails.name}\n            </Text>\n          </Flex>\n          <Flex\n            style={{\n              flexBasis:'0',\n              flex:'1 1 0px',\n              flexWrap:'wrap',\n              borderBottom:`1px solid ${this.props.theme.colors.divider}`\n            }}\n            alignItems={'flex-start'}\n            justifyContent={'flex-start'}\n          >\n            <Flex\n              mb={3}\n              width={[0.5,0.33]}\n              flexDirection={'column'}\n            >\n              <Text\n                mb={1}\n                fontWeight={3}\n                fontSize={[1,2]}\n                color={'cellText'}\n              >\n                Protocol\n              </Text>\n              <Flex\n                alignItems={'center'}\n                flexDirection={'row'}\n              >\n                <TrancheField\n                  {...this.props}\n                  fieldInfo={{\n                    name:'protocolIcon',\n                    props:{\n                      mr:2,\n                      height:['1.4em','2em']\n                    }\n                  }}\n                  token={this.props.selectedToken}\n                  tokenConfig={this.props.tokenConfig}\n                  protocol={this.props.selectedProtocol}\n                  trancheConfig={this.props.trancheConfig}\n                />\n                <TrancheField\n                  {...this.props}\n                  fieldInfo={{\n                    name:'protocolName',\n                    props:{\n                      fontSize:[2,3],\n                      color:'copyColor'\n                    }\n                  }}\n                  token={this.props.selectedToken}\n                  tokenConfig={this.props.tokenConfig}\n                  protocol={this.props.selectedProtocol}\n                  trancheConfig={this.props.trancheConfig}\n                />\n              </Flex>\n            </Flex>\n            <Flex\n              mb={3}\n              width={[0.5,0.33]}\n              flexDirection={'column'}\n            >\n              <Text\n                mb={1}\n                fontWeight={3}\n                fontSize={[1,2]}\n                color={'cellText'}\n              >\n                Token\n              </Text>\n              <Flex\n                alignItems={'center'}\n                flexDirection={'row'}\n              >\n                <TrancheField\n                  {...this.props}\n                  fieldInfo={{\n                    name:'tokenIcon',\n                    props:{\n                      mr:2,\n                      height:['1.4em','2em']\n                    }\n                  }}\n                  token={this.props.selectedToken}\n                  tokenConfig={this.props.tokenConfig}\n                  protocol={this.props.selectedProtocol}\n                  trancheConfig={this.props.trancheConfig}\n                />\n                <TrancheField\n                  {...this.props}\n                  fieldInfo={{\n                    name:'tokenName',\n                    props:{\n                      fontSize:[2,3],\n                      color:'copyColor'\n                    }\n                  }}\n                  token={this.props.selectedToken}\n                  tokenConfig={this.props.tokenConfig}\n                  protocol={this.props.selectedProtocol}\n                  trancheConfig={this.props.trancheConfig}\n                />\n              </Flex>\n            </Flex>\n            <Flex\n              mb={3}\n              width={[0.5,0.33]}\n              flexDirection={'column'}\n            >\n              <Text\n                fontWeight={3}\n                fontSize={[1,2]}\n                color={'cellText'}\n              >\n                Pool Size\n              </Text>\n              <TrancheField\n                {...this.props}\n                fieldInfo={{\n                  name:'tranchePool',\n                  props:{\n                    decimals:2,\n                    fontSize:[2,3],\n                    color:'copyColor'\n                  }\n                }}\n                token={this.props.selectedToken}\n                tranche={this.props.selectedTranche}\n                tokenConfig={this.props.tokenConfig}\n                protocol={this.props.selectedProtocol}\n                trancheConfig={this.props.trancheConfig}\n              />\n            </Flex>\n            <Flex\n              mb={3}\n              width={[0.5,0.33]}\n              flexDirection={'column'}\n              alignItems={'flex-start'}\n            >\n              <Text\n                mb={1}\n                fontWeight={3}\n                fontSize={[1,2]}\n                color={'cellText'}\n              >\n                Auto-Farming\n              </Text>\n              <TrancheField\n                {...this.props}\n                fieldInfo={{\n                  name:'autoFarming',\n                  parentProps:{\n                    justifyContent:'flex-start'\n                  }\n                }}\n                token={this.props.selectedToken}\n                tokenConfig={this.props.tokenConfig}\n                protocol={this.props.selectedProtocol}\n                trancheConfig={this.props.trancheConfig}\n              />\n            </Flex>\n            <Flex\n              mb={3}\n              width={[0.5,0.33]}\n              flexDirection={'column'}\n            >\n              <Text\n                mb={1}\n                fontWeight={3}\n                fontSize={[1,2]}\n                color={'cellText'}\n              >\n                Staking Rewards\n              </Text>\n              <TrancheField\n                {...this.props}\n                fieldInfo={{\n                  name:'stakingRewards',\n                  props:{\n                    decimals:2,\n                    fontSize:[2,3],\n                    color:'copyColor'\n                  }\n                }}\n                token={this.props.selectedToken}\n                tranche={this.props.selectedTranche}\n                tokenConfig={this.props.tokenConfig}\n                protocol={this.props.selectedProtocol}\n                trancheConfig={this.props.trancheConfig}\n              />\n            </Flex>\n            <Flex\n              mb={3}\n              width={[0.5,0.33]}\n              flexDirection={'column'}\n            >\n              <Text\n                fontWeight={3}\n                fontSize={[1,2]}\n                color={'cellText'}\n              >\n                APY\n              </Text>\n              <TrancheField\n                {...this.props}\n                fieldInfo={{\n                  name:'trancheApy',\n                  props:{\n                    decimals:2,\n                    fontSize:[2,3],\n                    color:'copyColor'\n                  }\n                }}\n                token={this.props.selectedToken}\n                tranche={this.props.selectedTranche}\n                tokenConfig={this.props.tokenConfig}\n                protocol={this.props.selectedProtocol}\n                trancheConfig={this.props.trancheConfig}\n              />\n              <Flex\n                width={1}\n                alignItems={'center'}\n                flexDirection={'row'}\n              >\n                <Text\n                  fontSize={1}\n                  fontWeight={2}\n                  lineHeight={'1'}\n                  color={'cellText'}\n                >\n                  +\n                </Text>\n                <TrancheField\n                  {...this.props}\n                  fieldInfo={{\n                    name:'trancheIDLELastHarvest',\n                    props:{\n                      decimals:4,\n                      fontSize:1,\n                      fontWeight:2,\n                      lineHeight:'1',\n                      color:'cellText'\n                    }\n                  }}\n                  token={this.props.selectedToken}\n                  tranche={this.props.selectedTranche}\n                  tokenConfig={this.props.tokenConfig}\n                  protocol={this.props.selectedProtocol}\n                  trancheConfig={this.props.trancheConfig}\n                />\n              </Flex>\n            </Flex>\n          </Flex>\n          {\n            /*\n            (this.functionsUtil.BNify(this.state.stakedBalance).gt(0) || this.functionsUtil.BNify(this.state.trancheBalance).gt(0)) && (\n              <Flex\n                py={2}\n                style={{\n                  flexBasis:'0',\n                  flex:'1 1 0px',\n                  flexWrap:'wrap',\n                  borderBottom:`1px solid ${this.props.theme.colors.divider}`\n                }}\n                alignItems={'flex-start'}\n                justifyContent={'flex-start'}\n              >\n                <Flex\n                  width={0.33}\n                  flexDirection={'column'}\n                >\n                  <Text\n                    fontWeight={3}\n                    fontSize={[1,2]}\n                    color={'cellText'}\n                  >\n                    Deposited\n                  </Text>\n                  <TrancheField\n                    {...this.props}\n                    fieldInfo={{\n                      name:'trancheDeposited',\n                      props:{\n                        decimals:4,\n                        fontWeight:2,\n                        fontSize:[2,4],\n                        color:'copyColor'\n                      }\n                    }}\n                    token={this.props.selectedToken}\n                    tranche={this.props.selectedTranche}\n                    tokenConfig={this.props.tokenConfig}\n                    protocol={this.props.selectedProtocol}\n                    trancheConfig={this.props.trancheConfig}\n                  />\n                </Flex>\n                <Flex\n                  width={0.33}\n                  flexDirection={'column'}\n                >\n                  <Text\n                    fontWeight={3}\n                    fontSize={[1,2]}\n                    color={'cellText'}\n                  >\n                    Staked\n                  </Text>\n                  <TrancheField\n                    {...this.props}\n                    fieldInfo={{\n                      name:'trancheStaked',\n                      props:{\n                        decimals:4,\n                        fontWeight:2,\n                        fontSize:[2,4],\n                        color:'copyColor'\n                      }\n                    }}\n                    token={this.props.selectedToken}\n                    tranche={this.props.selectedTranche}\n                    tokenConfig={this.props.tokenConfig}\n                    protocol={this.props.selectedProtocol}\n                    trancheConfig={this.props.trancheConfig}\n                  />\n                </Flex>\n                <Flex\n                  width={0.33}\n                  flexDirection={'column'}\n                >\n                  <Text\n                    fontWeight={3}\n                    fontSize={[1,2]}\n                    color={'cellText'}\n                  >\n                    Redeemable\n                  </Text>\n                  <TrancheField\n                    {...this.props}\n                    fieldInfo={{\n                      name:'trancheRedeemable',\n                      props:{\n                        decimals:4,\n                        fontWeight:2,\n                        fontSize:[2,4],\n                        color:'copyColor'\n                      }\n                    }}\n                    token={this.props.selectedToken}\n                    tranche={this.props.selectedTranche}\n                    tokenConfig={this.props.tokenConfig}\n                    protocol={this.props.selectedProtocol}\n                    trancheConfig={this.props.trancheConfig}\n                  />\n                </Flex>\n              </Flex>\n            )\n            */\n          }\n          {\n            this.props.showSelectButton ? (\n                <Button\n                  mt={3}\n                  width={1}\n                  contrastColor={'cardBg'}\n                  icon={trancheDetails.icon}\n                  mainColor={trancheDetails.color.hex}\n                  onClick={e => this.props.selectTrancheType(trancheDetails.route)}\n                >\n                  {\n                    this.props.tokenConfig ? `Go to ${trancheDetails.name}` : `Start with ${trancheDetails.name}`\n                  }\n                </Button>\n            ) : this.state.balanceProp && this.state.tokenConfig ? (\n              <Flex\n                width={1}\n                flexDirection={'column'}\n              >\n                <Flex\n                  mt={3}\n                  alignItems={'center'}\n                  flexDirection={'row'}\n                  justifyContent={'space-between'}\n                >\n                  <CardIconButton\n                    {...this.props}\n                    textProps={{\n                      fontSize:[1,2]\n                    }}\n                    cardProps={{\n                      px:3,\n                      py:2,\n                      width:0.32\n                    }}\n                    text={'Deposit'}\n                    iconColor={'deposit'}\n                    icon={'ArrowDownward'}\n                    iconBgColor={'#ced6ff'}\n                    isActive={ this.state.selectedAction === 'deposit' }\n                    handleClick={ e => this.setSelectedAction('deposit') }\n                  />\n                  {\n                    this.state.stakedBalance && this.functionsUtil.BNify(this.state.stakedBalance).gt(0) ? (\n                      <CardIconButton\n                        {...this.props}\n                        textProps={{\n                          fontSize:[1,2]\n                        }}\n                        cardProps={{\n                          px:3,\n                          py:2,\n                          width:0.32\n                        }}\n                        text={'Unstake'}\n                        icon={'LayersClear'}\n                        iconColor={'redeem'}\n                        iconBgColor={'#ceeff6'}\n                        isActive={ this.state.selectedAction === 'unstake' }\n                        handleClick={ e => this.setSelectedAction('unstake') }\n                      />\n                    ) : (\n                      <CardIconButton\n                        {...this.props}\n                        textProps={{\n                          fontSize:[1,2]\n                        }}\n                        cardProps={{\n                          px:3,\n                          py:2,\n                          width:0.32\n                        }}\n                        text={'Stake'}\n                        icon={'Layers'}\n                        iconColor={'deposit'}\n                        iconBgColor={'#ced6ff'}\n                        isDisabled={ !this.state.userHasAvailableFunds }\n                        isActive={ this.state.selectedAction === 'stake' }\n                        handleClick={ e => this.state.userHasAvailableFunds ? this.setSelectedAction('stake') : null }\n                      />\n                    )\n                  }\n                  <CardIconButton\n                    {...this.props}\n                    textProps={{\n                      fontSize:[1,2]\n                    }}\n                    cardProps={{\n                      px:3,\n                      py:2,\n                      width:0.32\n                    }}\n                    text={'Withdraw'}\n                    icon={'ArrowUpward'}\n                    iconColor={'redeem'}\n                    iconBgColor={'#ceeff6'}\n                    isDisabled={ !this.state.userHasAvailableFunds }\n                    isActive={ this.state.selectedAction === 'withdraw' }\n                    handleClick={ e => this.state.userHasAvailableFunds ? this.setSelectedAction('withdraw') : null }\n                  />\n                </Flex>\n                {\n                  this.state.infoText && (\n                    <IconBox\n                      cardProps={{\n                        p:2,\n                        mt:3,\n                        width:1,\n                      }}\n                      isActive={true}\n                      isInteractive={false}\n                      iconProps={{\n                        size:'1.2em',\n                        color:'flashColor'\n                      }}\n                      textProps={{\n                        fontWeight:500,\n                        color:'flashColor',\n                        textAlign:'center',\n                        fontSize:['13px','15px']\n                      }}\n                      icon={'LightbulbOutline'}\n                      text={this.state.infoText}\n                    />\n                  )\n                }\n                <Flex\n                  mt={2}\n                >\n                  <SendTxWithBalance\n                    error={null}\n                    {...this.props}\n                    buttonProps={{\n                      width:[1,0.45]\n                    }}\n                    permitEnabled={false}\n                    tokenConfig={this.state.tokenConfig}\n                    tokenBalance={this.state.balanceProp}\n                    contractInfo={this.state.contractInfo}\n                    checkLimit={this.checkLimit.bind(this)}\n                    approveEnabled={this.state.approveEnabled}\n                    buttonDisabled={this.state.buttonDisabled}\n                    callback={this.transactionSucceeded.bind(this)}\n                    approveDescription={this.state.approveDescription}\n                    changeInputCallback={this.changeInputCallback.bind(this)}\n                    contractApproved={this.contractApprovedCallback.bind(this)}\n                    getTransactionParams={this.getTransactionParams.bind(this)}\n                    action={this.functionsUtil.capitalize(this.state.selectedAction)}\n                  >\n                    <Flex\n                      width={1}\n                      alignItems={'stretch'}\n                      flexDirection={'column'}\n                      justifyContent={'center'}\n                    >\n                      <BuyModal\n                        {...this.props}\n                        showInline={true}\n                        availableMethods={[]}\n                        buyToken={this.props.selectedToken}\n                      />\n                    </Flex>\n                  </SendTxWithBalance>\n                </Flex>\n              </Flex>\n            ) : !this.props.account ? (\n              <ConnectBox\n                {...this.props}\n              />\n            ) : (\n              <FlexLoader\n                flexProps={{\n                  mt:3,\n                  flexDirection:'row'\n                }}\n                loaderProps={{\n                  size:'30px'\n                }}\n                textProps={{\n                  ml:2\n                }}\n                text={'Loading Tranche Data...'}\n              />\n            )\n          }\n        </DashboardCard>\n        <LimitReachedModal\n          {...this.props}\n          limit={trancheLimit}\n          closeModal={this.resetModal}\n          isOpen={this.state.activeModal === 'limit'}\n        />\n        <ShareModal\n          confettiEnabled={true}\n          icon={`images/medal.svg`}\n          title={`Congratulations!`}\n          account={this.props.account}\n          closeModal={this.resetModal}\n          tokenName={this.props.selectedToken}\n          isOpen={this.state.activeModal === 'share'}\n          text={`You have successfully deposited in Idle!<br />Enjoy <strong>${this.state.trancheAPY ? this.state.trancheAPY.toFixed(2) : '0.00'}% APY</strong> on your <strong>${this.props.selectedToken}</strong>!`}\n          tweet={`I'm earning ${this.state.trancheAPY ? this.state.trancheAPY.toFixed(2) : '0.00'}% APY on my ${this.props.selectedToken} with @idlefinance tranches! Go to ${this.functionsUtil.getGlobalConfig(['baseURL'])}${this.props.selectedSection.route} and start earning now from your idle tokens!`}\n        />\n      </Flex>\n    );\n  }\n}\n\nexport default TrancheDetails;\n","import { Line } from '@nivo/line';\nimport React, { Component } from 'react';\n// import { linearGradientDef } from '@nivo/core'\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericChart from '../GenericChart/GenericChart';\nimport ChartCustomTooltip from '../ChartCustomTooltip/ChartCustomTooltip';\nimport ChartCustomTooltipRow from '../ChartCustomTooltipRow/ChartCustomTooltipRow';\n\nclass PortfolioEquityTranches extends Component {\n  state = {\n    startDate:null,\n    chartData:null,\n    chartProps:null,\n    chartwidth:null,\n    chartHeight:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n    this.loadChartData();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const quickDateSelectionChanged = prevProps.quickDateSelection !== this.props.quickDateSelection;\n    const tokenChanged = JSON.stringify(prevProps.enabledTokens) !== JSON.stringify(this.props.enabledTokens);\n    if (tokenChanged || quickDateSelectionChanged){\n      this.setState({\n        chartData:null\n      },() => {\n        this.componentDidMount();\n      });\n    }\n\n    const mobileChanged = prevProps.isMobile !== this.props.isMobile;\n    const themeModeChanged = prevProps.themeMode !== this.props.themeMode;\n    if (mobileChanged || themeModeChanged){\n      this.loadChartData();\n    }\n  }\n\n  async loadChartData() {\n    let enabledTokens = this.props.enabledTokens;\n\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTranches).reduce( (enabledTokens,protocol) => {\n        const tokens = Object.keys(this.props.availableTranches[protocol]);\n        tokens.forEach( token => {\n          if (!enabledTokens.includes(token)){\n            enabledTokens.push(token);\n          }\n        });\n        return enabledTokens;\n      },[]);\n    }\n\n    const transactions = this.props.transactionsList;\n\n    const chartData = [];\n    let tokensBalance = {};\n    let firstTxTimestamp = null;\n\n    await this.functionsUtil.asyncForEach(enabledTokens,async (selectedToken) => {\n\n      tokensBalance[selectedToken] = [];\n\n      const filteredTxs = Object.values(transactions).filter(tx => (tx.token === selectedToken));\n      if (filteredTxs && filteredTxs.length){\n\n        let amountLent = this.functionsUtil.BNify(0);\n\n        filteredTxs.forEach((tx,index) => {\n\n          // Skip transactions with no hash or pending\n          if (!tx.hash || (tx.status && tx.status === 'Pending')){\n            return false;\n          }\n          \n          firstTxTimestamp = firstTxTimestamp ? Math.min(firstTxTimestamp,parseInt(tx.timeStamp)) : parseInt(tx.timeStamp);\n\n          const tokenAmount = this.functionsUtil.BNify(tx.tokenAmount);\n\n          switch (tx.action){\n            case 'Deposit':\n              amountLent = amountLent.plus(tokenAmount);\n            break;\n            case 'Withdraw':\n              amountLent = amountLent.minus(tokenAmount);\n            break;\n            default:\n            break;\n          }\n\n          // Reset amountLent if below zero\n          if (amountLent.lt(0)){\n            amountLent = this.functionsUtil.BNify(0);\n          }\n\n          const action = tx.action;\n          const balance = amountLent;\n          const timeStamp = parseInt(tx.timeStamp);\n          const tranchePrice = this.functionsUtil.BNify(tx.tranchePrice);\n          const trancheTokens = this.functionsUtil.BNify(tx.trancheTokens);\n\n          if (!tranchePrice.isNaN() && !tranchePrice.isNaN()){\n            tokensBalance[selectedToken].push({\n              action,\n              balance,\n              timeStamp,\n              tokenAmount,\n              tranchePrice,\n              trancheTokens\n            });\n          }\n        });\n      }\n    });\n\n    // console.log('tokensBalance',tokensBalance);\n\n    // Calculate Start Date\n    let startDate = null;\n    const currentDate = this.functionsUtil.strToMoment(new Date());\n\n    switch (this.props.quickDateSelection){\n      case 'week':\n        startDate = currentDate.clone().subtract(1,'week');\n      break;\n      case 'month':\n        startDate = currentDate.clone().subtract(1,'month');\n      break;\n      case 'month3':\n        startDate = currentDate.clone().subtract(3,'month');\n      break;\n      case 'month6':\n        startDate = currentDate.clone().subtract(6,'month');\n      break;\n      default:\n        startDate = null;\n      break;\n    }\n\n    const days = {};\n    let prevBalances = {};\n    let prevTimestamp = null;\n    let minChartValue = null;\n    let maxChartValue = null;\n    let aggregatedBalance = null;\n    const aggregatedBalancesKeys = {};\n    const tokensBalancesPerDate = {};\n    const currTimestamp = parseInt(Date.now()/1000)+86400;\n\n    const tokensData = {};\n\n    await this.functionsUtil.asyncForEach(Object.keys(tokensBalance),async (token) => {\n      // tokensData[token] = await this.functionsUtil.getTokenApiData(this.props.availableTokens[token].address,isRisk,firstTxTimestamp,null,false,3600);\n      tokensData[token] = [];\n    });\n\n    const trancheTokenBalance = {};\n\n    if (!firstTxTimestamp){\n      firstTxTimestamp = currTimestamp;\n    }\n\n    for (let timeStamp=firstTxTimestamp;timeStamp<=currTimestamp;timeStamp+=this.props.frequencySeconds){\n\n      const foundBalances = {};\n      const tokensBalances = {};\n      if (timeStamp > currTimestamp){\n        timeStamp = currTimestamp;\n      }\n      // timeStamp = Math.min(currTimestamp,timeStamp);\n      aggregatedBalance = this.functionsUtil.BNify(0);\n\n      // await this.functionsUtil.asyncForEach(Object.keys(tokensBalance),async (token) => {\n      // eslint-disable-next-line\n      Object.keys(tokensBalance).forEach(token => {\n\n        let lastTokenData = null;\n        const lastTokenDataUnfiltered = Object.values(tokensData[token]).pop();\n        const filteredTokenData = tokensData[token].filter(tx => (tx.timestamp>=prevTimestamp && tx.timestamp<=timeStamp));\n        if (filteredTokenData && filteredTokenData.length){\n          lastTokenData = filteredTokenData.pop();\n        }\n\n        if (!trancheTokenBalance[token]){\n          trancheTokenBalance[token] = this.functionsUtil.BNify(0);\n        }\n\n        const tokenDecimals = this.functionsUtil.getGlobalConfig(['stats','tokens',token,'decimals']);\n        let filteredBalances = tokensBalance[token].filter(tx => (tx.timeStamp<=timeStamp && (!prevTimestamp || tx.timeStamp>prevTimestamp)));\n        \n        if (!filteredBalances.length){\n          if (prevBalances && prevBalances[token]){\n            filteredBalances = prevBalances[token];\n            const lastFilteredTx = Object.assign([],filteredBalances).pop();\n            const currentBalance = parseFloat(lastFilteredTx.balance);\n\n            // Take idleToken price from API and calculate new balance\n            if (currentBalance>0 && timeStamp>firstTxTimestamp && lastTokenData){\n              const trancheTokens = trancheTokenBalance[token];\n              const tranchePrice = this.functionsUtil.fixTokenDecimals(lastTokenData.tranchePrice,tokenDecimals);\n              let newBalance = trancheTokens.times(tranchePrice);\n\n              // Set new balance and tranchePrice\n              lastFilteredTx.balance = newBalance;\n              lastFilteredTx.tranchePrice = tranchePrice;\n              filteredBalances = [lastFilteredTx];\n            }\n          } else {\n            filteredBalances = [{\n              balance:this.functionsUtil.BNify(0),\n              tranchePrice:this.functionsUtil.BNify(0)\n            }];\n          }\n        } else {\n          filteredBalances.forEach(tx => {\n            switch (tx.action){\n              case 'Deposit':\n                trancheTokenBalance[token] = trancheTokenBalance[token].plus(tx.trancheTokens);\n              break;\n              default:\n                trancheTokenBalance[token] = trancheTokenBalance[token].minus(tx.trancheTokens);\n                if (trancheTokenBalance[token].lt(0)){\n                  trancheTokenBalance[token] = this.functionsUtil.BNify(0);\n                }\n              break;\n            }\n          });\n        }\n\n        const lastTx = Object.assign([],filteredBalances).pop();\n        // let lastTxBalance = this.functionsUtil.BNify(lastTx.balance);\n        let lastTxBalance = trancheTokenBalance[token].times(lastTx.tranchePrice);\n\n        if (lastTxBalance.gt(0)){\n          // Convert token balance to USD\n          let tokenUsdConversionRate = null;\n          const conversionRateField = this.functionsUtil.getGlobalConfig(['stats','tokens',token,'conversionRateField']);\n          if (!this.props.chartToken && conversionRateField){\n            const conversionRate = lastTokenData && lastTokenData[conversionRateField] ? lastTokenData[conversionRateField] : (lastTokenDataUnfiltered && lastTokenDataUnfiltered[conversionRateField] ? lastTokenDataUnfiltered[conversionRateField] : null);\n            if (conversionRate){\n              tokenUsdConversionRate = this.functionsUtil.fixTokenDecimals(conversionRate,18);\n              if (tokenUsdConversionRate.gt(0)){\n                lastTxBalance = lastTxBalance.times(tokenUsdConversionRate);\n              }\n            }\n          }\n          \n          tokensBalances[token] = lastTxBalance;\n          aggregatedBalance = aggregatedBalance.plus(lastTxBalance);\n        }\n\n        foundBalances[token] = filteredBalances;\n      });\n\n      let momentDate = this.functionsUtil.strToMoment(timeStamp*1000);\n\n      if (startDate === null || (momentDate.isSameOrAfter(startDate) && momentDate.isSameOrBefore(new Date(),'day'))){\n        \n        // if (momentDate.isAfter(new Date(),'day')){\n        //   momentDate = this.functionsUtil.strToMoment(new Date());\n        // }\n\n        // Force date to midnight\n        const formattedDate = momentDate.format('YYYY/MM/DD 00:00');\n\n        // Save days for axisBottom format\n        days[momentDate.format('YYYY/MM/DD')] = 1;\n\n        aggregatedBalance = parseFloat(parseFloat(aggregatedBalance.toFixed(6)));\n\n        tokensBalancesPerDate[formattedDate] = tokensBalances;\n        aggregatedBalancesKeys[formattedDate] = aggregatedBalance;\n\n        // console.log(timeStamp,formattedDate,tokensBalances);\n\n        minChartValue = minChartValue === null ? aggregatedBalance : Math.min(minChartValue,aggregatedBalance);\n        maxChartValue = maxChartValue === null ? aggregatedBalance : Math.max(maxChartValue,aggregatedBalance);\n      }\n\n      prevTimestamp = timeStamp;\n      prevBalances = foundBalances;\n    }\n\n    const aggregatedBalances = Object.keys(aggregatedBalancesKeys).map(date => ({\n      x:date,\n      y:aggregatedBalancesKeys[date],\n      balances:tokensBalancesPerDate[date]\n    }));\n\n    let itemIndex = 0;\n    aggregatedBalances.forEach( (item,index) => {\n      const itemPos = Math.floor(itemIndex/aggregatedBalances.length*100);\n      aggregatedBalances[index].itemPos = itemPos;\n      itemIndex++;\n    });\n\n    /*\n    aggregatedBalances.push({\n      x:momentDate.format('YYYY/MM/DD HH:mm'),\n      y:aggregatedBalance\n    });\n    */\n\n    // Add day before to start with zero balance\n    /*\n    const firstTxMomentDate = this.functionsUtil.strToMoment(firstTxTimestamp*1000);\n    if ((startDate === null || startDate.isSameOrBefore(firstTxMomentDate)) && aggregatedBalances.length){\n      const firstItem = aggregatedBalances[0];\n      const firstDate = this.functionsUtil.strToMoment(firstItem.x,'YYYY/MM/DD HH:mm');\n      firstDate.subtract(1,'day');\n      aggregatedBalances.unshift({\n        x:firstDate.format('YYYY/MM/DD HH:mm'),\n        y:0\n      });\n    }\n    */\n\n    const chartToken = this.props.chartToken ? this.props.chartToken.toUpperCase() : 'USD';\n\n    // Add token Data\n    chartData.push({\n      id:chartToken,\n      color: 'hsl('+ this.functionsUtil.getGlobalConfig(['stats','tokens',chartToken,'color','hsl']).join(',')+')',\n      data:aggregatedBalances\n    });\n\n    // console.log('PortfolioEquityTranches',chartData);\n\n    let yFormatDecimals = 2;\n    if (maxChartValue-minChartValue<1){\n      yFormatDecimals = 4;\n    }\n\n    if (maxChartValue === minChartValue){\n      minChartValue = Math.max(0,maxChartValue-1);\n    }\n\n    const maxGridLines = 5;\n    const gridYStep = (maxChartValue-minChartValue)/maxGridLines;\n    const gridYValues = [];\n    for (let i=0;i<=maxGridLines;i++){\n      const gridYValue = parseFloat(parseFloat(minChartValue+(i*gridYStep)).toFixed(6));\n      gridYValues.push(gridYValue);\n    }\n    \n    const axisBottomMaxValues = 10;\n    const daysCount = Object.values(days).length;    \n    const daysFrequency = Math.max(1,Math.ceil(daysCount/axisBottomMaxValues));\n\n    const chartProps = {\n      xScale:{\n        type: 'time',\n        format: '%Y/%m/%d %H:%M',\n      },\n      yScale:{\n        type: 'linear',\n        stacked: false,\n        min: minChartValue,\n        max: maxChartValue\n      },\n      xFormat:'time:%b %d %Y',\n      yFormat:value => this.functionsUtil.formatMoney(value,yFormatDecimals),\n      axisBottom: this.props.isMobile ? null : {\n        legend: '',\n        tickSize:0,\n        format: '%b %d',\n        tickPadding: 15,\n        orient: 'bottom',\n        legendOffset: 36,\n        legendPosition: 'middle',\n        tickValues:'every '+daysFrequency+' days'\n      },\n      gridYValues,\n      pointSize:0,\n      useMesh:true,\n      axisLeft: this.props.isMobile ? null : {\n        legend: '',\n        tickSize: 0,\n        orient: 'left',\n        tickPadding: 10,\n        tickRotation: 0,\n        legendOffset: -70,\n        tickValues:gridYValues,\n        legendPosition: 'middle',\n        format: v => this.functionsUtil.abbreviateNumber(v,2),\n      },\n      animate:true,\n      pointLabel:'y',\n      enableArea:true,\n      enableSlices:'x',\n      enableGridY:true,\n      curve:'monotoneX',\n      enableGridX:false,\n      pointBorderWidth:1,\n      colors:d => d.color,\n      pointLabelYOffset:-12,\n      areaBaselineValue:minChartValue,\n      pointColor:{ from: 'color', modifiers: []},\n      areaOpacity:this.props.themeMode === 'light' ? 0.1 : 0.5,\n      theme:{\n        axis: {\n          ticks: {\n            text: {\n              fontSize:12,\n              fontWeight:600,\n              fill:this.props.theme.colors.legend,\n              fontFamily:this.props.theme.fonts.sansSerif\n            }\n          }\n        },\n        grid: {\n          line: {\n            stroke: this.props.theme.colors.lineChartStroke, strokeDasharray: '8 4'\n          }\n        },\n      },\n      /*\n      defs:[\n        linearGradientDef('gradientA', [\n          { offset: 0, color: 'inherit' },\n          { offset: 100, color: 'inherit', opacity: 0 },\n        ]),\n      ],\n      fill:[{ match: '*', id: 'gradientA' }],\n      */\n      margin: this.props.isMobile ? { top: 20, right: 25, bottom: 25, left: 20 } : { top: 30, right: 50, bottom: 45, left: 60 },\n      sliceTooltip:(slideData) => {\n        const { slice } = slideData;\n        const point = slice.points[0];\n        return (\n          <ChartCustomTooltip\n            point={point}\n          >\n            <ChartCustomTooltipRow\n              color={point.color}\n              label={point.serieId}\n              value={`$ ${point.data.yFormatted}`}\n            />\n            {\n            (typeof point.data.balances === 'object' && Object.keys(point.data.balances).length>0) &&\n              Object.keys(point.data.balances).map(token => {\n                if (token === point.serieId){\n                  return null;\n                }\n                const color = this.functionsUtil.getGlobalConfig(['stats','tokens',token,'color','hex']);\n                const balance = point.data.balances[token];\n                let formattedBalance = this.functionsUtil.formatMoney(balance,2);\n                if (parseFloat(balance)>=0.01){\n                  return (\n                    <ChartCustomTooltipRow\n                      label={token}\n                      color={color}\n                      key={`row_${token}`}\n                      value={`$ ${formattedBalance}`}\n                    />\n                  );\n                }\n                return null;\n              })\n            }\n          </ChartCustomTooltip>\n        );\n      }\n    };\n\n    this.setState({\n      chartData,\n      chartProps\n    });\n  }\n\n  render() {\n    return (\n      <GenericChart\n        type={Line}\n        showLoader={true}\n        {...this.state.chartProps}\n        data={this.state.chartData}\n        parentId={this.props.parentId}\n        height={this.props.chartHeight}\n        parentIdHeight={this.props.parentIdHeight}\n      />\n    );\n  }\n}\n\nexport default PortfolioEquityTranches;","import Title from '../Title/Title';\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport TrancheField from '../TrancheField/TrancheField';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport { Flex, Heading, Text, Tooltip, Icon } from \"rimble-ui\";\nimport PortfolioEquityTranches from '../PortfolioEquityTranches/PortfolioEquityTranches';\n\nclass FundsOverviewTranche extends Component {\n\n  state = {\n    // govTokensAprs:null,\n    aggregatedValues:[],\n    govTokensTotalApr:null,\n    govTokensUserBalance:null,\n    govTokensDistribution:null,\n    govTokensTotalBalance:null,\n    govTokensTotalAprTooltip:null,\n    idleTokenUserDistribution:null,\n    govTokensDistributionTooltip:null,\n    govTokensTotalBalanceTooltip:null\n  };\n\n  // Utils\n  functionsUtil = null;\n  idleGovToken = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n\n    this.idleGovToken = this.functionsUtil.getIdleGovToken();\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n\n    /*\n    const govTokenAvailableTokens = {};\n    govTokenAvailableTokens[this.props.selectedToken] = this.props.tokenConfig;\n\n    const isRisk = this.props.selectedStrategy === 'risk';\n\n    const [\n      // govTokensAprs,\n      idleTokenUserDistribution,\n      govTokensUserBalance,\n      apy,\n      depositTimestamp,\n      days\n    ] = await Promise.all([\n      // this.functionsUtil.getGovTokensAprs(this.props.selectedToken,this.props.tokenConfig),\n      this.idleGovToken.getUserDistribution(this.props.account,govTokenAvailableTokens,true),\n      this.functionsUtil.getGovTokensUserBalances(this.props.account,govTokenAvailableTokens,null),\n      this.functionsUtil.loadTrancheField('apy',this.props.selectedToken,this.props.tokenConfig,this.props.account,false),\n      this.functionsUtil.loadTrancheField('depositTimestamp',this.props.selectedToken,this.props.tokenConfig,this.props.account),\n      this.functionsUtil.loadTrancheField('daysFirstDeposit',this.props.selectedToken,this.props.tokenConfig,this.props.account),\n    ]);\n\n    let avgAPY = await this.functionsUtil.getAvgAPYStats(this.props.tokenConfig.address,isRisk,depositTimestamp);\n\n    if (!avgAPY || this.functionsUtil.BNify(avgAPY).lte(0)){\n      avgAPY = apy;\n    }\n\n    const govTokensTotalBalance = govTokensUserBalance ? Object.values(govTokensUserBalance).reduce( (totBalance,govTokenBalance) => {\n      return totBalance.plus(this.functionsUtil.BNify(govTokenBalance));\n    },this.functionsUtil.BNify(0)) : null;\n\n    const govTokensTotalBalanceTooltip = govTokensUserBalance ? Object.keys(govTokensUserBalance).map( govToken => {\n      const balance = govTokensUserBalance[govToken];\n      if (balance.gt(0)){\n        return `+${balance.toFixed(2)} ${govToken}`;\n      } else {\n        return null;\n      }\n    }).filter(v => (v !== null)) : null;\n\n    const aggregatedValues = [\n      {\n        flexProps:{\n          width:[1,0.32],\n        },\n        props:{\n          title:'Avg APY',\n          desc:this.functionsUtil.getGlobalConfig(['messages','apyLong']),\n          children:(\n            <Flex\n              width={1}\n              alignItems={'center'}\n              height={['55px','59px']}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              <Text\n                lineHeight={1}\n                fontWeight={[3,4]}\n                color={'copyColor'}\n                fontFamily={'counter'}\n                fontSize={['1.7em','1.7em']}\n                dangerouslySetInnerHTML={{ __html: (avgAPY ? avgAPY.toFixed(2)+'%' : '0.00%') }}\n              />\n            </Flex>\n          )\n        }\n      },\n      {\n        flexProps:{\n          width:[1,0.32],\n        },\n        props:{\n          title:'Current Allocation',\n          children:(\n            <Flex\n              width={1}\n              id={'allocationChart'}\n              height={['55px','59px']}\n              flexDirection={'column'}\n            >\n              <TrancheField\n                {...this.props}\n                showLoader={true}\n                fieldInfo={{\n                  name:'allocationChart'\n                }}\n                parentId={'allocationChart'}\n                token={this.props.selectedToken}\n                tokenConfig={this.props.tokenConfig}\n              />\n            </Flex>\n          ),\n          label:'',\n        }\n      },\n      {\n        flexProps:{\n          width:[1,0.32],\n        },\n        props:{\n          title:'Days since first deposit',\n          children:(\n            <Flex\n              width={1}\n              alignItems={'center'}\n              height={['55px','59px']}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              <Text\n                lineHeight={1}\n                fontWeight={[3,4]}\n                color={'copyColor'}\n                fontFamily={'counter'}\n                fontSize={['1.7em','1.7em']}\n                dangerouslySetInnerHTML={{ __html: (days ? parseInt(days) : '-') }}\n              />\n            </Flex>\n          )\n        }\n      }\n    ];\n\n    this.setState({\n      // govTokensAprs,\n      aggregatedValues,\n      // govTokensTotalApr,\n      govTokensUserBalance,\n      govTokensTotalBalance,\n      // govTokensTotalAprTooltip,\n      idleTokenUserDistribution,\n      govTokensTotalBalanceTooltip\n    });\n    */\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  render() {\n\n    return (\n      <Flex\n        width={1}\n        flexDirection={'column'}\n      >\n        {\n          this.state.aggregatedValues.length>0 && \n            <Flex\n              width={1}\n              mb={[0,3]}\n              mt={[2,0]}\n              alignItems={'center'}\n              flexDirection={['column','row']}\n              justifyContent={'space-between'}\n            >\n              {\n                this.state.aggregatedValues.map((v,i) => (\n                  <Flex\n                    {...v.flexProps}\n                    flexDirection={'column'}\n                    key={`aggregatedValue_${i}`}\n                  >\n                    <DashboardCard\n                      cardProps={{\n                        py:[2,3],\n                        mb:[3,0]\n                      }}\n                    >\n                      <Flex\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                        justifyContent={'center'}\n                      >\n                        {\n                          v.props.children ? v.props.children : (\n                            <Text\n                              lineHeight={1}\n                              fontWeight={[3,4]}\n                              color={'copyColor'}\n                              fontFamily={'counter'}\n                              fontSize={[4,'1.7em']}\n                              dangerouslySetInnerHTML={{ __html: v.props.value }}\n                            >\n                            </Text>\n                          )\n                        }\n                        <Flex\n                          mt={2}\n                          width={1}\n                          alignItems={'center'}\n                          justifyContent={'center'}\n                        >\n                          <Text\n                            fontWeight={2}\n                            fontSize={[1,2]}\n                            color={'cellText'}\n                          >\n                            {v.props.title}\n                          </Text>\n                          {\n                            v.props.desc && \n                              <Tooltip\n                                placement={'bottom'}\n                                message={v.props.desc}\n                              >\n                                <Icon\n                                  ml={2}\n                                  name={\"Info\"}\n                                  size={'1em'}\n                                  color={'cellTitle'}\n                                />\n                              </Tooltip>\n                          }\n                        </Flex>\n                      </Flex>\n                    </DashboardCard>\n                  </Flex>\n                ))\n              }\n            </Flex>\n        }\n        <DashboardCard\n          cardProps={{\n            px:2,\n            py:3\n          }}\n        >\n          {\n            this.props.transactionsList && this.props.transactionsList.length>0 && (\n              <Flex\n                width={1}\n                ml={[0,3]}\n                id={\"funds-overview\"}\n              >\n                <PortfolioEquityTranches\n                  {...this.props}\n                  chartHeight={350}\n                  parentId={'funds-overview'}\n                  chartToken={this.props.selectedToken}\n                  enabledTokens={[this.props.selectedToken]}\n                  frequencySeconds={this.functionsUtil.getFrequencySeconds('day',1)}\n                />\n              </Flex>\n            )\n          }\n          <Flex\n            width={1}\n            flexDirection={['column','row']}\n          >\n            <Flex\n              mb={[2,0]}\n              width={[1,1/6]}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'flex-start'}\n            >\n              <Title\n                mb={2}\n                fontSize={[3,4]}\n                component={Heading.h3}\n              >\n                Deposited\n              </Title>\n              <TrancheField\n                {...this.props}\n                addTokenName={false}\n                fieldInfo={{\n                  name:'trancheDeposited',\n                  props:{\n                    decimals:7,\n                    fontWeight:300,\n                    maxPrecision:8,\n                    fontSize:['1.8em','1.9em'],\n                    color:this.props.theme.colors.counter,\n                    flexProps:{\n                      justifyContent:'center'\n                    }\n                  }\n                }}\n              />\n            </Flex>\n            <Flex\n              mb={[2,0]}\n              width={[1,1/6]}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'flex-start'}\n            >\n              <Title\n                mb={2}\n                fontSize={[3,4]}\n                component={Heading.h3}\n              >\n                Staked Amount\n              </Title>\n              <TrancheField\n                {...this.props}\n                addTokenName={false}\n                fieldInfo={{\n                  name:'trancheStaked',\n                  props:{\n                    decimals:7,\n                    fontWeight:300,\n                    maxPrecision:8,\n                    fontSize:['1.8em','1.9em'],\n                    color:this.props.theme.colors.counter,\n                    flexProps:{\n                      justifyContent:'center'\n                    }\n                  }\n                }}\n              />\n            </Flex>\n            <Flex\n              mb={[2,0]}\n              width={[1,1/6]}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'flex-start'}\n            >\n              <Title\n                mb={2}\n                fontSize={[3,4]}\n                component={Heading.h3}\n              >\n                Redeemable\n              </Title>\n              <TrancheField\n                {...this.props}\n                addTokenName={false}\n                fieldInfo={{\n                  name:'trancheRedeemableWithStaked',\n                  props:{\n                    decimals:7,\n                    maxPrecision:8,\n                    style:{\n                      fontWeight:300,\n                      color:this.props.theme.colors.counter,\n                      fontSize: this.props.isMobile ? '1.8em' : '1.9em',\n                    },\n                    flexProps:{\n                      justifyContent:'center'\n                    }\n                  }\n                }}\n              />\n              <Flex\n                width={1}\n                mt={'-8px'}\n                justifyContent={'center'}\n              >\n                <TrancheField\n                  {...this.props}\n                  addTokenName={false}\n                  fieldInfo={{\n                    name:'earningsPerc',\n                    props:{\n                      fontSize:1,\n                      fontWeight:2,\n                      color:'cellText',\n                      flexProps:{\n                        justifyContent:'center'\n                      }\n                    }\n                  }}\n                />\n              </Flex>\n            </Flex>\n            <Flex\n              mb={[2,0]}\n              width={[1,1/6]}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'flex-start'}\n            >\n              <Title\n                mb={2}\n                fontSize={[3,4]}\n                component={Heading.h3}\n              >\n                Earnings\n              </Title>\n              <TrancheField\n                {...this.props}\n                addTokenName={false}\n                fieldInfo={{\n                  name:'earningsCounter',\n                  props:{\n                    decimals:7,\n                    maxPrecision:8,\n                    style:{\n                      fontWeight:300,\n                      fontSize:this.props.isMobile ? '1.8em' : '1.9em',\n                      color:this.props.theme.colors.counter\n                    },\n                    flexProps:{\n                      justifyContent:'center'\n                    }\n                  }\n                }}\n              />\n              {\n                this.state.govTokensTotalBalanceTooltip && this.state.govTokensTotalBalanceTooltip.length>0 && (\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    {\n                      this.state.govTokensTotalBalanceTooltip.map((govTokenBalance,govTokenIndex) => (\n                        <Text\n                          fontSize={1}\n                          lineHeight={1}\n                          fontWeight={2}\n                          color={'cellText'}\n                          textAlign={'center'}\n                          mt={govTokenIndex ? 1 : 0}\n                          key={`govToken_${govTokenIndex}`}\n                        >\n                          {govTokenBalance}\n                        </Text>\n                      ))\n                    }\n                  </Flex>\n                )\n              }\n            </Flex>\n            <Flex\n              mb={[2,0]}\n              width={[1,1/6]}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'flex-start'}\n            >\n              <Title\n                mb={2}\n                fontSize={[3,4]}\n                component={Heading.h3}\n              >\n                Fees\n              </Title>\n              <TrancheField\n                {...this.props}\n                addTokenName={false}\n                fieldInfo={{\n                  name:'feesCounter',\n                  props:{\n                    decimals:7,\n                    maxPrecision:8,\n                    style:{\n                      fontWeight:300,\n                      fontSize:this.props.isMobile ? '1.8em' : '1.9em',\n                      color:this.props.theme.colors.counter\n                    },\n                    flexProps:{\n                      justifyContent:'center'\n                    }\n                  }\n                }}\n              />\n            </Flex>\n            <Flex\n              mb={[2,0]}\n              width={[1,1/6]}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'flex-start'}\n            >\n              <Title\n                mb={2}\n                fontSize={[3,4]}\n                component={Heading.h3}\n              >\n                Realized APY\n              </Title>\n              <TrancheField\n                {...this.props}\n                addTokenName={false}\n                fieldInfo={{\n                  name:'realizedApy',\n                  props:{\n                    decimals:2,\n                    fontWeight:300,\n                    fontSize:['1.8em','1.9em'],\n                    color:this.props.theme.colors.counter,\n                    flexProps:{\n                      justifyContent:'center'\n                    }\n                  }\n                }}\n              />\n              {\n                this.state.idleTokenUserDistribution && (\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <Text\n                      mt={1}\n                      fontSize={1}\n                      lineHeight={1}\n                      fontWeight={2}\n                      color={'cellText'}\n                      textAlign={'center'}\n                    >\n                      {this.state.idleTokenUserDistribution.toFixed(4)} {this.idleGovToken.tokenName}/{this.idleGovToken.tokenConfig.distributionFrequency}\n                    </Text>\n                  </Flex>\n                )\n              }\n            </Flex>\n          </Flex>\n        </DashboardCard>\n      </Flex>\n    );\n  }\n}\n\nexport default FundsOverviewTranche;","import Title from '../Title/Title';\nimport { Button, Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport CustomList from '../CustomList/CustomList';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport ExecuteTransaction from '../ExecuteTransaction/ExecuteTransaction';\n\nclass StakingRewardsTranche extends Component {\n\n  state = {\n    stakingRewards:null,\n    stakingRewardsRows:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadUserRewards();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const accountChanged = prevProps.account !== this.props.account;\n    const portfolioChanged = JSON.stringify(prevProps.portfolio) !== JSON.stringify(this.props.portfolio);\n    const trancheConfigChanged = JSON.stringify(prevProps.trancheConfig) !== JSON.stringify(this.props.trancheConfig);\n    const transactionsChanged = prevProps.transactions && this.props.transactions && Object.values(prevProps.transactions).filter(tx => (tx.status==='success')).length !== Object.values(this.props.transactions).filter(tx => (tx.status==='success')).length;\n\n    if (accountChanged || trancheConfigChanged || portfolioChanged || transactionsChanged){\n      this.loadUserRewards();\n    }\n  }\n\n  async loadUserRewards(){\n    if (!this.props.account || !this.props.trancheConfig || !this.props.portfolio){\n      return false;\n    }\n\n    const [\n      stakingRewards,\n      trancheBalance,\n      rewardTokensInfo,\n      trancheStakedAmount\n    ] = await Promise.all([\n      this.functionsUtil.getTrancheStakingRewards(this.props.account,this.props.trancheConfig),\n      this.functionsUtil.getTokenBalance(this.props.trancheConfig.name,this.props.account,false),\n      this.functionsUtil.getTrancheRewardTokensInfo(this.props.tokenConfig,this.props.trancheConfig),\n      this.functionsUtil.getTrancheStakedBalance(this.props.trancheConfig.CDORewards.name,this.props.account,this.props.trancheConfig.CDORewards.decimals)\n    ]);\n\n    const trancheBalanceInfo = this.props.portfolio.tranchesBalance.find( p => p.token === this.props.token && p.protocol === this.props.protocol && p.tranche === this.props.tranche );\n    \n    const stakingRewardsRows = [];\n    await this.functionsUtil.asyncForEach(Object.keys(stakingRewards), async (rewardToken) => {\n      const tokenConfig = this.functionsUtil.getGlobalConfig(['stats','tokens',rewardToken]);\n      const tokenAmount = this.functionsUtil.BNify(stakingRewards[rewardToken]);\n      const rewardTokenInfo = rewardTokensInfo[rewardToken];\n      const tokenBalance = await this.functionsUtil.getTokenBalance(rewardToken,this.props.account);\n      let distributionSpeed = rewardTokenInfo ? rewardTokenInfo.lastAmount : null;\n      if (trancheBalanceInfo){\n        distributionSpeed = distributionSpeed.times(trancheBalanceInfo.poolShare);\n      }\n      stakingRewardsRows.push({\n        token:rewardToken,\n        staked:trancheStakedAmount,\n        balance:tokenBalance.toFixed(8),\n        reedemable:tokenAmount.toFixed(8),\n        trancheBalance:this.functionsUtil.integerValue(trancheBalance),\n        tokenIcon:tokenConfig.icon || `images/tokens/${rewardToken}.svg`,\n        distributionSpeed:distributionSpeed ? distributionSpeed.toFixed(8)+` ${rewardToken} (last harvest)` : '-'\n      });\n    });\n\n    // console.log('stakingRewardsRows',stakingRewardsRows);\n\n    this.setState({\n      stakingRewardsRows\n    });\n  }\n\n  claimCallback(tx){\n    this.loadUserRewards();\n  }\n\n  stakeCallback(tx){\n    this.loadUserRewards();\n  }\n\n  render() {\n    return (\n      this.state.stakingRewardsRows ?\n        <Flex\n          mb={[0,4]}\n          width={1}\n          flexDirection={'column'}\n          id={'funds-overview-container'}\n        >\n          <Title my={[3,4]}>Staking Rewards</Title>\n          <CustomList\n            rows={this.state.stakingRewardsRows}\n            cols={[\n              {\n                title:'TOKEN',\n                props:{\n                  width:[0.18,0.16]\n                },\n                fields:[\n                  {\n                    type:'image',\n                    props:{\n                      mr:2,\n                      size:this.props.isMobile ? '1.2em' : '1.8em'\n                    },\n                    path:['tokenIcon']\n                  },\n                  {\n                    type:'text',\n                    path:['token'],\n                  }\n                ]\n              },\n              {\n                mobile:false,\n                title:'BALANCE',\n                props:{\n                  width:[0.27,0.24],\n                  justifyContent:['center','flex-start']\n                },\n                fields:[\n                  {\n                    type:'text',\n                    path:['balance'],\n                    props:{\n                      decimals: this.props.isMobile ? 4 : 8\n                    }\n                  },\n                ]\n              },\n              {\n                title:'REDEEMABLE',\n                desc:this.functionsUtil.getGlobalConfig(['messages','govTokenRedeemableBalance']),\n                props:{\n                  width:[0.29,0.24],\n                  justifyContent:['center','flex-start']\n                },\n                fields:[\n                  {\n                    type:'text',\n                    path:['reedemable'],\n                    props:{\n                      decimals: this.props.isMobile ? 4 : 8\n                    }\n                  },\n                ]\n              },\n              {\n                title:'DISTRIBUTION',\n                desc:this.functionsUtil.getGlobalConfig(['messages','userDistributionSpeed']),\n                props:{\n                  width:[0.29,0.24],\n                },\n                fields:[\n                  {\n                    type:'text',\n                    path:['distributionSpeed'],\n                    props:{\n                      decimals: this.props.isMobile ? 4 : 8\n                    }\n                  }\n                ]\n              },\n              {\n                title:'',\n                props:{\n                  width:[0.26,0.16],\n                },\n                parentProps:{\n                  width:1\n                },\n                fields:[\n                  {\n                    funcProps:{\n                      componentProps:{\n                        disabled:(props) => (this.functionsUtil.BNify(props.row.reedemable).lte(0) ? true : false ),\n                      },\n                      // value:(props) => (this.functionsUtil.BNify(props.row.reedemable).lte(0) ? (props.row.staked.lte(0) ? 'stake' : 'claim') : 'claim'),\n                      // action:(props) => (this.functionsUtil.BNify(props.row.reedemable).lte(0) ? (props.row.staked.lte(0) ? 'Stake' : 'Claim') : 'Claim'),\n                      // methodName:(props) => (this.functionsUtil.BNify(props.row.reedemable).lte(0) ? (props.row.staked.lte(0) ? 'stake' : 'claim') : 'claim'),\n                      // transactionParams:(props) => (this.functionsUtil.BNify(props.row.reedemable).lte(0) ? (props.row.staked.lte(0) ? [this.functionsUtil.BNify(props.row.trancheBalance).toFixed()] : []) : []),\n                      // callback:(props) => (this.functionsUtil.BNify(props.row.reedemable).lte(0) ? (props.row.staked.lte(0) ? this.stakeCallback.bind(this) : this.claimCallback.bind(this)) : this.claimCallback.bind(this))\n                    },\n                    fieldComponent:ExecuteTransaction,\n                    props:{\n                      params:[],\n                      parentProps:{\n                        width:1\n                      },\n                      Component:Button,\n                      componentProps:{\n                        style:{\n                          width:'100%'\n                        },\n                        value:'Claim',\n                        borderRadius:4,\n                        mainColor:'redeem',\n                        size:this.props.isMobile ? 'small' : 'medium'\n                      },\n                      value:'Claim',\n                      action:'claim',\n                      methodName:'claim',\n                      callback:this.claimCallback.bind(this),\n                      contractName:this.props.trancheConfig.CDORewards.name\n                    }\n                  }\n                ]\n              }\n            ]}\n            {...this.props}\n          />\n        </Flex>\n      : this.props.children || null\n    );\n  }\n}\n\nexport default StakingRewardsTranche;\n","import Title from '../Title/Title';\nimport { Box, Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport GenericFaqs from '../GenericFaqs/GenericFaqs';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport TrancheDetails from '../TrancheDetails/TrancheDetails';\n// import TrancheWelcome from '../TrancheWelcome/TrancheWelcome';\nimport TransactionsList from '../TransactionsList/TransactionsList';\nimport FundsOverviewTranche from '../FundsOverviewTranche/FundsOverviewTranche';\nimport StakingRewardsTranche from '../StakingRewardsTranche/StakingRewardsTranche';\n\nclass TranchePage extends Component {\n\n  state = {\n    transactions:[],\n    componentLoaded:false\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadTransactions();\n  }\n\n  async componentDidMount(){\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const portfolioChanged = (this.props.portfolio && !prevProps.portfolio) || JSON.stringify(this.props.portfolio) !== JSON.stringify(prevProps.portfolio);\n    if (portfolioChanged){\n      this.loadTransactions();\n    }\n  }\n\n  loadTransactions(){\n    const transactions = this.props.portfolio ? this.props.portfolio.transactions.filter( t => t.protocol.toLowerCase() === this.props.selectedProtocol.toLowerCase() && t.token.toLowerCase() === this.props.selectedToken.toLowerCase() && (!this.props.trancheType || t.tranche === this.props.trancheType) ) : [];\n\n    // console.log('loadTransactions',this.props.selectedProtocol,this.props.selectedToken,this.props.trancheType,transactions);\n    const componentLoaded = true;\n\n    this.setState({\n      transactions,\n      componentLoaded\n    });\n  }\n\n  render() {\n    const tranchesDetails = this.functionsUtil.getGlobalConfig(['tranches']);\n    const filteredTranchesTypes = Object.keys(tranchesDetails).filter( trancheType => !this.props.trancheType || this.props.trancheType === trancheType );\n    return (\n      <Box\n        mb={4}\n        width={1}\n      >\n        <Title\n          mb={3}\n        >\n          {this.functionsUtil.capitalize(this.props.selectedProtocol)} - {this.props.selectedToken} - {this.props.trancheDetails ? this.props.trancheDetails.name : 'Tranches'} \n        </Title>\n        {\n          /*\n          !this.props.trancheType ? (\n            <TrancheWelcome\n              {...this.props}\n              tokenConfig={this.props.tokenConfig}\n              selectTrancheType={this.props.selectTrancheType}\n            />\n          ) : (\n          */\n            <Flex\n              mt={2}\n              width={1}\n              flexDirection={['column','row']}\n              justifyContent={this.props.trancheType ? 'center' : 'space-between'}\n            >\n              {\n                filteredTranchesTypes.map( trancheType => (\n                  <Flex\n                    mb={[3,0]}\n                    flexDirection={'column'}\n                    key={`tranche_${trancheType}`}\n                    width={[1,Math.min(0.5,(1/filteredTranchesTypes.length)-0.02)]}\n                  >\n                    <TrancheDetails\n                      {...this.props}\n                      selectedTranche={trancheType}\n                      cdoConfig={this.props.tokenConfig.CDO}\n                      showSelectButton={!this.props.trancheType}\n                      selectTrancheType={this.props.selectTrancheType}\n                      trancheConfig={this.props.tokenConfig[trancheType]}\n                    />\n                  </Flex>\n                ))\n              }\n            </Flex>\n            /*\n          )\n        */\n        }\n        {\n          this.state.componentLoaded && this.props.account && this.props.userHasFunds && this.props.trancheType &&\n            <StakingRewardsTranche\n              {...this.props}\n              token={this.props.selectedToken}\n              tranche={this.props.trancheType}\n              tokenConfig={this.props.tokenConfig}\n              protocol={this.props.selectedProtocol}\n              transactionsList={this.state.transactions}\n              trancheConfig={this.props.tokenConfig[this.props.trancheType]}\n            />\n        }\n        {\n          this.state.componentLoaded && this.props.account && this.props.userHasFunds && this.props.trancheType &&\n            <Flex\n              mb={[0,4]}\n              width={1}\n              flexDirection={'column'}\n              id={'funds-overview-container'}\n            >\n              <Title my={[3,4]}>Funds Overview</Title>\n              <FundsOverviewTranche\n                {...this.props}\n                token={this.props.selectedToken}\n                tranche={this.props.trancheType}\n                tokenConfig={this.props.tokenConfig}\n                protocol={this.props.selectedProtocol}\n                transactionsList={this.state.transactions}\n                trancheConfig={this.props.tokenConfig[this.props.trancheType]}\n              />\n            </Flex>\n        }\n        {\n          this.props.account && this.state.transactions && this.state.transactions.length>0 && \n            <Flex\n              mb={[3,4]}\n              width={1}\n              id={'transactions'}\n              flexDirection={'column'}\n            >\n              <Title my={[3,4]}>Transactions</Title>\n              <TransactionsList\n                {...this.props}\n                enabledTokens={[this.props.selectedToken]}\n                transactionsList={this.state.transactions}\n                availableActions={this.state.transactions.reduce( (availableActions,t) => {\n                  availableActions[t.action.toLowerCase()] = t.action;\n                  return availableActions;\n                },{})}\n                cols={[\n                  {\n                    title: this.props.isMobile ? '' : 'HASH',\n                    props:{\n                      width:[0.13,0.18]\n                    },\n                    fields:[\n                      {\n                        name:'icon',\n                        props:{\n                          mr:[0,2]\n                        }\n                      },\n                      {\n                        name:'hash',\n                        mobile:false\n                      }\n                    ]\n                  },\n                  {\n                    title:'ACTION',\n                    mobile:false,\n                    props:{\n                      width:0.12,\n                    },\n                    fields:[\n                      {\n                        name:'action'\n                      }\n                    ]\n                  },\n                  {\n                    title:'DATE',\n                    props:{\n                      width:[0.27,0.15],\n                    },\n                    fields:[\n                      {\n                        name:'date'\n                      }\n                    ]\n                  },\n                  {\n                    mobile:false,\n                    title:'STATUS',\n                    props:{\n                      width:[0.18,0.16],\n                      justifyContent:['center','flex-start']\n                    },\n                    fields:[\n                      {\n                        name:'statusIcon',\n                        props:{\n                          mr:[0,2]\n                        }\n                      },\n                      {\n                        mobile:false,\n                        name:'status'\n                      }\n                    ]\n                  },\n                  {\n                    title:'AMOUNT',\n                    props:{\n                      width:[0.23,0.11],\n                    },\n                    fields:[\n                      {\n                        name:'amount'\n                      },\n                    ]\n                  },\n                  {\n                    title:'PROTOCOL',\n                    props:{\n                      width:[0.21, 0.14],\n                    },\n                    fields:[\n                      {\n                        type:'image',\n                        name:'custom',\n                        path:['protocolIcon'],\n                        props:{\n                          mr:2,\n                          height:['1.4em','2em']\n                        }\n                      },\n                      {\n                        type:'text',\n                        mobile:false,\n                        name:'custom',\n                        path:['protocol']\n                      }\n                    ]\n                  },\n                  {\n                    title:'ASSET',\n                    props:{\n                      width:[0.16,0.14],\n                      justifyContent:['center','flex-start']\n                    },\n                    fields:[\n                      {\n                        name:'tokenIcon',\n                        props:{\n                          mr:[0,2],\n                          height:['1.4em','1.6em']\n                        }\n                      },\n                      {\n                        mobile:false,\n                        name:'tokenName'\n                      },\n                    ]\n                  },\n                ]}\n              />\n            </Flex>\n        }\n        {\n          this.props.trancheType && (\n            <Flex\n              width={1}\n              id={'faqs'}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              <Title\n                my={3}\n              >\n                Frequently asked questions\n              </Title>\n              <Flex\n                width={[1,0.5]}\n                alignItems={'center'}\n                flexDirection={'column'}\n                justifyContent={'center'}\n              >\n                <GenericFaqs\n                  showSections={false}\n                  questions={{\n                    '':[\n                      {\n                        q: 'Is there a locking period?',\n                        a: `There are no locking period or epochs and users are free to enter and exit at any time. The interest earned (and governance tokens, after being partially sold in the market) will be split between the two classes according to a predefined ratio called trancheAPRSplitRatio (eg 20% interest to Senior tranche holders and 80% to Junior tranche). Hence, the rate is variable for both classes of tranches.`\n                      },\n                      {\n                        q: 'How the APY is determined?',\n                        a: `The base APY, before being splitted between tranches, is provided by the underlying strategy that takes into account the reinvestment of the accrued governance tokens (except for eventual IDLE rewards). The actual APY of each tranche class is determined by the ratio between the current underlying TVL of Senior and Junior tranches (ie APY = share of yield allocated to senior tranches / Senior TVL). The APY has to be considered net of fees. For more info <a href=\"https://github.com/Idle-Labs/idle-tranches#idle-dynamic-tranches\" target=\"_blank\" rel=\"nofollow noopener noreferrer\" style=\"color:${this.props.theme.colors.link}\">view the readme</a>`\n                      },\n                      {\n                        q: 'What happens in case of hack?',\n                        a: `In case of hack, an emergency shutdown can be triggered (by both the guardian, which would be a multi-sig wallet, and the owner which will be the Idle governance) in order to pause both deposits and redeems.<br />The redistribution of remaining funds can happens selectively, by allowing only Senior tranche holders to withdraw first directly in the main contract, or through a separate contract for more complex cases and resolutions (managed by the Idle governance).`\n                      },\n                      {\n                        q: 'How are fees collected?',\n                        a: `Fees collected at each harvest event. When the strategy auto-reinvest accrued tokens, Idle protocol charges a 10% performance fee. Renevues get routed to FeeCollector address.`\n                      },\n                      {\n                        q: 'What are staking rewards?',\n                        a: `To keep a good ratio between Senior and Junior tranches and an healthy APY part of farmed governance tokens (eg IDLE) are redistributed to users who stakes their tranche tokens in specific tranche rewards contracts.`\n                      } \n                    ]\n                  }}\n                />\n              </Flex>\n            </Flex>\n          )\n        }\n      </Box>\n    );\n  }\n}\n\nexport default TranchePage;","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport TableRow from '../TableRow/TableRow';\nimport TableHeader from '../TableHeader/TableHeader';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport TrancheField from '../TrancheField/TrancheField';\n\nclass TranchesList extends Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  render() {\n\n    let enabledProtocols = this.props.enabledProtocols;\n    if (!enabledProtocols || !enabledProtocols.length){\n      enabledProtocols = Object.keys(this.props.availableTranches);\n    }\n\n    return (\n      <Flex id=\"tranches-list-container\" width={1} flexDirection={'column'}>\n        <TableHeader\n          {...this.props}\n          cols={this.props.cols}\n          isMobile={this.props.isMobile}\n        />\n        <Flex id=\"tranches-list\" flexDirection={'column'}>\n          {\n            enabledProtocols.map(protocol => {\n              const protocolConfig = this.props.availableTranches[protocol];\n              if (!protocolConfig){\n                return null;\n              }\n              const tranche = this.props.trancheType || null;\n              return Object.keys(protocolConfig).map( token => (\n                <TableRow\n                  {...this.props}\n                  token={token}\n                  tranche={tranche}\n                  protocol={protocol}\n                  key={`tranche-${protocol}`}\n                  rowId={`tranche-col-${protocol}`}\n                  tokenConfig={protocolConfig[token]}\n                  cardId={`tranche-card-${protocol}`}\n                  fieldComponent={this.props.fieldComponent || TrancheField}\n                />\n              ))\n            })\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default TranchesList;\n","import React, { Component } from \"react\";\nimport RoundButton from \"../RoundButton/RoundButton\";\nimport FunctionsUtil from \"../utilities/FunctionsUtil\";\nimport TrancheField from \"../TrancheField/TrancheField\";\nimport { Box, Flex, Icon, Text, Image } from \"rimble-ui\";\n\n//import DashboardCard from \"../DashboardCard/DashboardCard\";\n\nclass Base extends Component {\n  // Utils\n  functionsUtil = null;\n\n  loadUtils() {\n    if (this.functionsUtil) {\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount() {\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  render() {\n    const trancheDetails = this.props.trancheDetails;\n    const strategyInfo = this.functionsUtil.getGlobalConfig([\n      \"strategies\",\n      \"tranches\"\n    ]);\n    \n    const tokenConfig =\n      this.props.tokenConfig ||\n      this.props.availableTranches[strategyInfo.protocol][strategyInfo.token];\n\n    return (\n      <Box\n        my={[3, 0]}\n        boxShadow={1}\n        width={[1,0.49]}\n      >\n        <Flex\n          p={0}\n          mx={0}\n          border={1}\n          borderRadius={2}\n          overflow={'hidden'}\n          flexDirection={'column'}\n          backgroundColor={'cardBg'}\n          justifyContent={[\n            \"center\",\n            trancheDetails.type === \"AA\" ? \"left\" : \"right\"\n          ]}\n        >\n          <Flex\n            width={1}\n            borderBottom={`1px solid ${this.props.theme.colors.divider2}`}\n          >\n            <Flex\n              pb={2}\n              mx={2}\n              my={3}\n              flexDirection={\"column\"}\n            >\n              <Flex mt={3} alignItems={\"center\"}>\n                <Image\n                  ml={3}\n                  mr={1}\n                  src={trancheDetails.image}\n                  alt={\"random unsplash image\"}\n                  size={this.props.isMobile ? \"2em\" : \"2.4em\"}\n                />\n                <Flex mx={2}>\n                  <Text\n                    ml={[2, 0]}\n                    fontWeight={4}\n                    fontSize={[4, 5]}\n                    lineHeight={1}\n                  >\n                    {trancheDetails.name}\n                  </Text>\n                </Flex>\n              </Flex>\n              <Flex\n                ml={5}\n                mr={3}\n                mt={3}\n                alignItems={\"flex-start\"}\n                flexDirection={\"column\"}\n              >\n                <Flex\n                  mx={1}\n                  flexDirection={\"row\"}\n                  alignItems={\"baseline\"}\n                >\n                  <TrancheField\n                    fieldInfo={{\n                      name: `${trancheDetails.baseName}Apy`,\n                      showTooltip: false,\n                      props: {\n                        decimals: 2,\n                        fontWeight: 4,\n                        lineHeight: \"1\",\n                        fontSize: [3, 4],\n                        textAlign: \"center\",\n                        flexProps: {\n                          justifyItems: \"flex-end\"\n                        },\n                        color: this.props.trancheDetails.color.hex\n                      }\n                    }}\n                    {...this.props}\n                    tokenConfig={tokenConfig}\n                    token={strategyInfo.token}\n                    tranche={strategyInfo.tranche}\n                    protocol={strategyInfo.protocol}\n                  />\n                  <Text\n                    my={1}\n                    ml={[2, 3]}\n                    fontSize={1}\n                    lineHeight={\"1\"}\n                    textAlign={\"left\"}\n                    color={\"cellText\"}\n                  >\n                    Current APY (variable)\n                  </Text>\n                </Flex>\n                {/*\n                <TrancheField\n                  fieldInfo={{\n                    showLoader:false,\n                    name:'trancheIDLEDistribution',\n                    props:{\n                      decimals:2,\n                      fontWeight:2,\n                      fontSize:[0,1],\n                      color:'cellText',\n                      textAlign:'center',\n                      flexProps:{\n                        justifyContent:'center'\n                      }\n                    },\n                  }}\n                  {...this.props}\n                  tokenConfig={tokenConfig}\n                  token={strategyInfo.token}\n                  trancheConfig={tokenConfig.AA}\n                  tranche={strategyInfo.tranche}\n                  protocol={strategyInfo.protocol}\n                />\n                */}\n                <Text\n                  mt={3}\n                  ml={1}\n                  fontWeight={2}\n                  fontSize={[1,2]}\n                  textAlign={\"left\"}\n                  lineHeight={\"1.5\"}\n                  color={\"copyColor\"}\n                >\n                  {trancheDetails.description.long}\n                </Text>\n              </Flex>\n            </Flex>\n          </Flex>\n          <Flex\n            bg={\"cardBgContrast\"}\n            flexDirection={\"column\"}\n          >\n            <Flex\n              mt={3}\n              my={3}\n              pl={2}\n              width={1}\n              flexDirection={\"column\"}\n            >\n              {trancheDetails.features.map((feature, index) => (\n                <Flex\n                  mb={2}\n                  my={1}\n                  px={2}\n                  mt={[2, 1]}\n                  alignItems={\"center\"}\n                  flexDirection={\"row\"}\n                  key={`feature_${index}`}\n                >\n                  <Icon\n                    mr={2}\n                    ml={3}\n                    name={\"Done\"}\n                    color={\"tick\"}\n                    size={this.props.isMobile ? \"1.6em\" : \"1.8em\"}\n                  />\n                  <Text\n                    ml={[2,1]}\n                    fontSize={[1,2]}\n                    fontWeight={\"500\"}\n                  >\n                    {feature}\n                  </Text>\n                </Flex>\n              ))}\n            </Flex>\n            <Flex\n              width={1}\n              justifyContent={\"center\"}\n            >\n              <RoundButton\n                buttonProps={{\n                  my:3,\n                  width:0.85,\n                  fontSize:2,\n                  contrastColor:\"white\",\n                  mainColor:trancheDetails.color.hex\n                }}\n                handleClick={e =>\n                  this.props.selectTrancheType(trancheDetails.route)\n                }\n              >\n                {this.props.tokenConfig\n                  ? `Go to ${trancheDetails.name}`\n                  : `Enter the ${trancheDetails.name}`}\n              </RoundButton>\n            </Flex>\n          </Flex>\n        </Flex>\n      </Box>\n    );\n  }\n}\n\nexport default Base;\n","import React, { Component } from \"react\";\nimport { Link, Flex, Text, Image } from \"rimble-ui\";\nimport FunctionsUtil from \"../utilities/FunctionsUtil\";\n\n//import DashboardCard from \"../DashboardCard/DashboardCard\";\n\nclass TrancheFlash extends Component {\n  // Utils\n  functionsUtil = null;\n\n  loadUtils() {\n    if (this.functionsUtil) {\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount() {\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  render() {\n    const flashData = this.functionsUtil.getGlobalConfig([\"tranchflash\"]);\n    return (\n      <Flex\n        width={1}\n        mx={4}\n        flexDirection={[\"column\", \"row\"]}\n        justifyContent={\"center\"}\n      >\n        <Flex\n          mx={2}\n          my={[2,4]}\n          width={[1, 0.4]}\n          flexDirection={\"column\"}\n        >\n          <Flex justifyContent={\"left\"} my={3} width={[1, 0.7]}>\n            <Text\n              bold={\"true\"}\n              color={\"white\"}\n              textAlign={\"left\"}\n              fontWeight={4}\n              fontSize={[5, 6]}\n              lineHeight={1}\n            >\n              {flashData.subtitle}\n            </Text>\n          </Flex>\n          <Flex justifyContent={\"left\"} mt={2} mb={[2,4]} width={1}>\n            <Text\n              color={\"white\"}\n              textAlign={\"left\"}\n              fontWeight={2}\n              fontSize={2}\n            >\n              {flashData.desc}\n            </Text>\n          </Flex>\n          <Flex mt={[2,3]} mb={2} flexDirection={\"column\"} width={1}>\n            {flashData.questions.map(question => (\n              <Flex my={2} alignItems={\"flex-start\"}>\n                <Image src={flashData.helpcircle} />\n                <Link\n                  ml={2}\n                  fontSize={2}\n                  fontWeight={2}\n                  opacity={\"50%\"}\n                  color={\"white\"}\n                  textAlign={\"left\"}\n                  onClick={e =>\n                    this.props.openTooltipModal(question.desc, question.msg)\n                  }\n                >\n                  {question.desc}\n                </Link>\n              </Flex>\n            ))}\n          </Flex>\n        </Flex>\n\n        <Flex\n          hidden={this.props.isMobile ? 1 : 0}\n          alignItems={\"flex-start\"}\n          width={0.2}\n          mt={6}\n        >\n          <Image\n            hidden={this.props.isMobile ? 1 : 0}\n            src={flashData.arrows}\n          />\n        </Flex>\n        <Flex ml={2} my={[3, 5]} width={[1, 0.4]} flexDirection={\"column\"}>\n          <Flex my={[1, 0]} flexDirection={\"row\"} alignItems={\"flex-start\"}>\n            <Image\n              my={[0, 2]}\n              width={['2.4em', '4.7em']}\n              src={this.functionsUtil.getGlobalConfig([\n                \"tranches\",\n                \"AA\",\n                \"bubble\"\n              ])}\n            />\n            <Text\n              mt={[0, 2]}\n              mx={2}\n              mb={[2, 1]}\n              color={\"white\"}\n              textAlign={\"left\"}\n              fontWeight={2}\n              fontSize={2}\n              dangerouslySetInnerHTML={{\n                __html: flashData.seniorinfo\n              }}\n            ></Text>\n          </Flex>\n          <Flex my={[1, 0]} flexDirection={\"row\"} alignItems={\"flex-start\"}>\n            <Image\n              my={[0, 2]}\n              ml={[0, 4]}\n              width={['2.4em', '4.7em']}\n              src={this.functionsUtil.getGlobalConfig([\n                \"tranches\",\n                \"BB\",\n                \"bubble\"\n              ])}\n            />\n            <Text\n              mt={[0, 2]}\n              mx={2}\n              mb={[2, 1]}\n              color={\"white\"}\n              textAlign={\"left\"}\n              fontWeight={2}\n              fontSize={2}\n              dangerouslySetInnerHTML={{\n                __html: flashData.juniorinfo\n              }}\n            ></Text>\n          </Flex>\n        </Flex>\n        {/*<Flex width={0.3}>\n          <Text>ABC</Text>\n        </Flex>*/}\n      </Flex>\n    );\n  }\n}\nexport default TrancheFlash;\n","import { Flex } from \"rimble-ui\";\nimport Title from \"../Title/Title\";\nimport React, { Component } from \"react\";\nimport styles from './TrancheWelcome.module.scss';\nimport TrancheBox from \"../TrancheBox/TrancheBox\";\nimport FunctionsUtil from \"../utilities/FunctionsUtil\";\nimport TrancheFlash from \"../TrancheFlash/TrancheFlash\";\n\nclass TrancheWelcome extends Component {\n  // Utils\n  functionsUtil = null;\n\n  loadUtils() {\n    if (this.functionsUtil) {\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount() {\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  render() {\n    const tranchesDetails = this.functionsUtil.getGlobalConfig([\"tranches\"]);\n    return (\n      <Flex\n        width={1}\n        aligItems={'center'}\n        justifyContent={'center'}\n      >\n        <Flex\n          mb={3}\n          width={1}\n          maxWidth={8}\n          aligItems={\"center\"}\n          flexDirection={\"column\"}\n          justifyContent={\"space-between\"}\n        >\n          {!this.props.tokenConfig ? (\n            <>\n              <Title\n                fontSize={[5, 6]}\n              >\n                Perpetual Yield Tranches\n              </Title>\n              <Flex\n                width={1}\n                mb={[3, 4]}\n                mx={\"auto\"}\n                aligItems={\"center\"}\n                justifyContent={\"center\"}\n              ></Flex>\n              <Flex\n                border={1}\n                borderRadius={2}\n                backgroundColor={\"newblue\"}\n                className={[styles.trancheFlash,this.props.isMobile ? styles.mobile : null]}\n              >\n                <TrancheFlash {...this.props}></TrancheFlash>\n              </Flex>\n            </>\n          ) : (\n            <Title\n              mb={3}\n              fontWeight={2}\n              fontSize={[3, 4]}\n              color={\"copyColor\"}\n              textAlign={\"center\"}\n            >\n              Select your preferred Tranche\n            </Title>\n          )}\n          <Flex my={3} mx={0} justifyContent={\"center\"}>\n            <Flex\n              width={1}\n              flexDirection={[\"column\", \"row\"]}\n              justifyContent={\"space-between\"}\n            >\n              {Object.keys(tranchesDetails).map((trancheType,index) => (\n                <TrancheBox\n                  {...this.props}\n                  key={`tranche_${index}`}\n                  tokenConfig={this.props.tokenConfig}\n                  trancheDetails={tranchesDetails[trancheType]}\n                />\n              ))}\n            </Flex>\n          </Flex>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default TrancheWelcome;","import { Pie } from '@nivo/pie';\nimport React, { Component } from 'react';\nimport { Flex, Text, Image } from \"rimble-ui\";\nimport SmartNumber from '../SmartNumber/SmartNumber';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericChart from '../GenericChart/GenericChart';\n\nclass GenericPieChart extends Component {\n  state = {\n    chartProps:null,\n    selectedSlice:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n  componentUnmounted = false;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentDidMount(){\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const mobileChanged = prevProps.isMobile !== this.props.isMobile;\n    if (mobileChanged){\n      this.setStateSafe({\n        chartProps:null,\n        selectedSlice:null,\n      },() => {\n        this.loadData();\n      });\n    }\n  }\n\n  async setStateSafe(newState,callback=null) {\n    if (!this.componentUnmounted){\n      return this.setState(newState,callback);\n    }\n    return null;\n  }\n\n  async loadData(){\n\n    const chartProps = {\n      padAngle:0,\n      animate:true,\n      borderWidth: 0,\n      cornerRadius:0,\n      motionDamping:15,\n      innerRadius: 0.65,\n      motionStiffness:90,\n      colors:d => d.color,\n      onMouseEnter:(data, e) => {\n        this.setStateSafe({\n          selectedSlice:data\n        });\n      },\n      onMouseLeave:(data, e) => {\n        this.setStateSafe({\n          selectedSlice:null\n        });\n      },\n      tooltipFormat: this.props.tooltipFormat || (v => v),\n      sliceLabel: this.props.sliceLabel || (d => d.value),\n      radialLabel: d => {\n        return null;\n      },\n      theme:{\n        tooltip: {\n          container: this.props.inline ? {\n            background: this.props.theme.colors.cardBg\n          } : {\n            display: 'none',\n          }\n        },\n        labels:{\n          text:{\n            fontWeight:600,\n            fontSize:this.props.isMobile ? 13 : 15,\n            fontFamily: this.props.theme.fonts.sansSerif\n          }\n        },\n        legends:{\n          text:{\n            fontSize:13,\n            fontWeight:500,\n            fontFamily: this.props.theme.fonts.sansSerif\n          }\n        }\n      },\n      slicesLabelsSkipAngle:5,\n      radialLabelsSkipAngle:10,\n      enableRadialLabels:false,\n      radialLabelsTextXOffset:0,\n      slicesLabelsTextColor:'#fff',\n      radialLabelsTextColor:'#333',\n      radialLabelsLinkStrokeWidth:0,\n      radialLabelsLinkDiagonalLength:0,\n      radialLabelsLinkHorizontalLength:0,\n      enableSlicesLabels: !this.props.inline,\n      radialLabelsLinkColor:{ from: 'color' },\n      margin: this.props.margin || {top:0,right:0,bottom:0,left:0},\n      borderColor:{ from: 'color', modifiers: [ [ 'darker', 0.2 ] ] },\n    };\n\n    if (this.props.showLegend){\n      chartProps.legends = [\n        {\n          itemWidth: 60,\n          itemHeight: 18,\n          translateY: this.props.isMobile ? 25 : 50,\n          symbolSize: 10,\n          anchor: 'bottom',\n          direction: 'row',\n          itemTextColor: this.props.theme.colors.legend,\n          symbolShape: 'circle',\n          effects: [\n            {\n              on: 'hover',\n              style: {\n                itemTextColor: '#000'\n              }\n            }\n          ]\n        }\n      ];\n    }\n\n    this.setStateSafe({\n      chartProps\n    });\n  }\n\n  render() {\n\n    return (\n      <Flex\n        width={1}\n        position={'relative'}\n        alignItems={'center'}\n        justifyContent={'center'}\n      >\n        {\n          this.state.chartProps && !this.props.inline &&\n            <Flex\n              zIndex={0}\n              top={['23%','25%']}\n              left={['20%','27%']}\n              textAlign={'center'}\n              alignItems={'center'}\n              position={'absolute'}\n              width={['60%','46%']}\n              height={['53%','46%']}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              {\n                this.state.selectedSlice ? (\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <Image\n                      mb={1}\n                      width={['1.8em','2em']}\n                      height={['1.8em','2em']}\n                      src={this.state.selectedSlice.image}\n                    />\n                    <SmartNumber\n                      fontSize={[3,4]}\n                      decimals={3}\n                      fontWeight={4}\n                      maxPrecision={5}\n                      number={this.state.selectedSlice.value}\n                    />\n                    <Text\n                      fontSize={[1,2]}\n                      fontWeight={3}\n                      color={'cellTitle'}\n                    >\n                      {this.state.selectedSlice.label}\n                    </Text>\n                  </Flex>\n                ) : (\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <Image\n                      mb={1}\n                      height={'2.2em'}\n                      src={this.props.defaultImage}\n                    />\n                    <Text\n                      fontSize={[3,4]}\n                      fontWeight={[3,4]}\n                    >\n                      {this.props.defaultValue}\n                    </Text>\n                    <Text\n                      fontWeight={3}\n                      fontSize={[1,2]}\n                      color={'cellTitle'}\n                    >\n                      {this.props.defaultLabel}\n                    </Text>\n                  </Flex>\n                )\n              }\n            </Flex>\n        }\n        <GenericChart\n          type={Pie}\n          showLoader={true}\n          {...this.props}\n          {...this.state.chartProps}\n          data={this.props.chartData}\n        />\n      </Flex>\n    );\n  }\n}\n\nexport default GenericPieChart;","import CountUp from 'react-countup';\nimport { Box, Loader } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass TotalBalanceCounter extends Component {\n\n  state = {\n    counterEnd:null,\n    counterStart:null\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadTotalEarnings();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n    const contractsInitialized = prevProps.contractsInitialized !== this.props.contractsInitialized;\n    const availableStrategiesChanged = !prevProps.availableStrategies && JSON.stringify(prevProps.availableStrategies) !== JSON.stringify(this.props.availableStrategies);\n    if (availableStrategiesChanged || contractsInitialized){\n      this.loadTotalEarnings();\n    }\n\n    const mobileChanged = prevProps.isMobile !== this.props.isMobile;\n    const themeModeChanged = prevProps.themeMode !== this.props.themeMode;\n    const styleChanged = JSON.stringify(prevProps.counterStyle) !== JSON.stringify(this.props.counterStyle);\n    if (styleChanged || themeModeChanged || mobileChanged){\n      const oldState = Object.assign({},this.state);\n      this.setState({\n        counterEnd:null,\n        counterStart:null\n      },() => {\n        this.setState(oldState);\n      });\n    }\n  }\n\n  async loadTotalEarnings(){\n\n    if (!this.props.availableStrategies || !this.props.contractsInitialized){\n      return true;\n    }\n\n    const availableTokens = this.props.availableTokens || {};\n    const portfolio = this.props.portfolio || await this.functionsUtil.getAccountPortfolio(availableTokens,this.props.account);\n\n    const counterStart = portfolio.totalAmountLent.plus(portfolio.totalEarnings);\n    const counterEnd = counterStart.plus(counterStart.times(portfolio.avgAPY.div(100)));\n\n    this.setState({\n      counterEnd,\n      counterStart\n    });\n  }\n\n  render() {\n\n    const counterStyle = {\n      lineHeight:1,\n      color:this.props.theme.colors.copyColor,\n      fontFamily:this.props.theme.fonts.counter,\n      fontWeight: this.props.isMobile ? 600 : 700,\n      fontSize:this.props.isMobile ? '21px' : '1.7em',\n    };\n\n    // Replace props\n    if (this.props.counterStyle && Object.keys(this.props.counterStyle).length){\n      Object.keys(this.props.counterStyle).forEach(p => {\n        counterStyle[p] = this.props.counterStyle[p];\n      });\n    }\n\n    const decimals = this.props.decimals || 8;\n\n    return this.state.counterStart && this.state.counterEnd ? (\n      <Box\n        width={1}\n      >\n        <CountUp\n          delay={0}\n          decimal={'.'}\n          separator={''}\n          useEasing={false}\n          decimals={decimals}\n          duration={31536000}\n          end={parseFloat(this.state.counterEnd)}\n          start={parseFloat(this.state.counterStart)}\n          formattingFn={ n => '$ '+this.functionsUtil.formatMoney(n,decimals) }\n        >\n          {({ countUpRef, start }) => (\n            <span\n              ref={countUpRef}\n              style={counterStyle}\n            />\n          )}\n        </CountUp>\n      </Box>\n    ) : (\n      <Loader size={\"20px\"} />\n    );\n  }\n}\n\nexport default TotalBalanceCounter;\n","import CountUp from 'react-countup';\nimport { Flex, Loader } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass TotalEarningsCounter extends Component {\n\n  state = {\n    earningsEnd:null,\n    earningsStart:null\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadTotalEarnings();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n    const contractsInitialized = prevProps.contractsInitialized !== this.props.contractsInitialized;\n    const availableStrategiesChanged = !prevProps.availableStrategies && JSON.stringify(prevProps.availableStrategies) !== JSON.stringify(this.props.availableStrategies);\n    if (availableStrategiesChanged || contractsInitialized){\n      this.loadTotalEarnings();\n    }\n\n    const mobileChanged = prevProps.isMobile !== this.props.isMobile;\n    const themeModeChanged = prevProps.themeMode !== this.props.themeMode;\n    const styleChanged = JSON.stringify(prevProps.counterStyle) !== JSON.stringify(this.props.counterStyle);\n    if (styleChanged || themeModeChanged || mobileChanged){\n      const oldState = Object.assign({},this.state);\n      this.setState({\n        earningsEnd:null,\n        earningsStart:null\n      },() => {\n        this.setState(oldState);\n      });\n    }\n  }\n\n  async loadTotalEarnings(){\n\n    if (!this.props.availableStrategies || !this.props.contractsInitialized){\n      return true;\n    }\n\n    const availableTokens = this.props.availableTokens || {};\n    const portfolio = this.props.portfolio || await this.functionsUtil.getAccountPortfolio(availableTokens,this.props.account);\n\n    const earningsStart = portfolio.totalEarnings;\n    const earningsEnd = earningsStart.plus(portfolio.totalAmountLent.times(portfolio.avgAPY.div(100)));\n\n    this.setState({\n      earningsEnd,\n      earningsStart\n    });\n  }\n\n  render() {\n\n    const counterStyle = {\n      lineHeight:1,\n      color:this.props.theme.colors.copyColor,\n      fontFamily:this.props.theme.fonts.counter,\n      fontWeight: this.props.isMobile ? 600 : 700,\n      fontSize:this.props.isMobile ? '21px' : '1.7em',\n    };\n\n    // Replace props\n    if (this.props.counterStyle && Object.keys(this.props.counterStyle).length){\n      Object.keys(this.props.counterStyle).forEach(p => {\n        counterStyle[p] = this.props.counterStyle[p];\n      });\n    }\n\n    const unit = this.props.unit || '$ ';\n    const decimals = this.props.decimals || 8;\n\n    return this.state.earningsStart && this.state.earningsEnd ? (\n      <Flex\n      >\n        <CountUp\n          delay={0}\n          decimal={'.'}\n          separator={''}\n          useEasing={false}\n          decimals={decimals}\n          duration={31536000}\n          end={parseFloat(this.state.earningsEnd)}\n          start={parseFloat(this.state.earningsStart)}\n          formattingFn={ n => unit+this.functionsUtil.formatMoney(n,decimals) }\n        >\n          {({ countUpRef, start }) => (\n            <span\n              ref={countUpRef}\n              style={counterStyle}\n            />\n          )}\n        </CountUp>\n      </Flex>\n    ) : (\n      <Loader size={\"20px\"} />\n    );\n  }\n}\n\nexport default TotalEarningsCounter;\n","import Title from '../Title/Title';\nimport React, { Component } from 'react';\nimport Breadcrumb from '../Breadcrumb/Breadcrumb';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport TranchePage from '../TranchePage/TranchePage';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport TranchesList from '../TranchesList/TranchesList';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport TrancheWelcome from '../TrancheWelcome/TrancheWelcome';\nimport GenericPieChart from '../GenericPieChart/GenericPieChart';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport TransactionsList from '../TransactionsList/TransactionsList';\nimport TotalBalanceCounter from '../TotalBalanceCounter/TotalBalanceCounter';\nimport TotalEarningsCounter from '../TotalEarningsCounter/TotalEarningsCounter';\nimport { Box, Flex, Heading, Loader, Text, Icon, Tooltip, Image } from \"rimble-ui\";\nimport PortfolioEquityTranches from '../PortfolioEquityTranches/PortfolioEquityTranches';\n\nclass Tranches extends Component {\n\n  state = {\n    portfolio:null,\n    transactions:[],\n    tokenConfig:null,\n    trancheType:null,\n    trancheRoute:null,\n    selectedToken:null,\n    userHasFunds:false,\n    depositedTokens:[],\n    trancheDetails:null,\n    useTrancheType:false,\n    portfolioLoaded:false,\n    componentLoaded:false,\n    selectedProtocol:null,\n    allocationChartData:null,\n    portfolioEquityQuickSelection:'week'\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n\n    this.loadPortfolio().then( () => {\n      const componentLoaded = true;\n      const trancheRoute = this.props.urlParams.param1;\n      const tranchesDetails = this.functionsUtil.getGlobalConfig(['tranches']);\n      const trancheDetails = Object.values(tranchesDetails).find( t => t.route === trancheRoute );\n\n      if (trancheDetails !== undefined){\n        const trancheType = trancheDetails.type;\n        const useTrancheType = !this.state.userHasFunds;\n        const selectedToken = this.props.urlParams.param3;\n        const selectedProtocol = this.props.urlParams.param2;\n        const tokenConfig = selectedProtocol ? (this.props.availableTranches[selectedProtocol] && this.props.availableTranches[selectedProtocol][selectedToken] ? this.props.availableTranches[selectedProtocol][selectedToken] : null) : null;\n\n        if (this.state.userHasFunds && !tokenConfig){\n          return this.props.goToSection(this.props.selectedSection.route);\n        }\n\n        this.setState({\n          trancheType,\n          tokenConfig,\n          trancheRoute,\n          selectedToken,\n          trancheDetails,\n          useTrancheType,\n          selectedProtocol\n        });\n      } else {\n        const selectedToken = this.props.urlParams.param2;\n        const selectedProtocol = this.props.urlParams.param1;\n        const tokenConfig = this.props.availableTranches[selectedProtocol] && this.props.availableTranches[selectedProtocol][selectedToken] ? this.props.availableTranches[selectedProtocol][selectedToken] : null;\n        if (tokenConfig){\n          this.setState({\n            tokenConfig,\n            selectedToken,\n            selectedProtocol\n          });\n        }\n      }\n\n      this.setState({\n        componentLoaded\n      });\n    });\n  }\n\n  async componentDidMount(){\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const accountChanged = prevProps.account !== this.props.account;\n    const availableTranchesChanged = JSON.stringify(prevProps.availableTranches) !== JSON.stringify(this.props.availableTranches);\n    if (accountChanged || availableTranchesChanged){\n      this.setState({\n        portfolioLoaded:false\n      },() => {\n        this.loadPortfolio();\n      });\n    }\n  }\n\n  async loadPortfolio(){\n    if (!this.props.account){\n      const userHasFunds = false;\n      const portfolioLoaded = true;\n      this.setState({\n        userHasFunds,\n        portfolioLoaded\n      });\n      return false;\n    }\n\n    const portfolio = await this.functionsUtil.getAccountPortfolioTranches(this.props.availableTranches,this.props.account);\n    // console.log('loadPortfolio',portfolio);\n\n    if (portfolio){\n      const portfolioLoaded = true;\n      const tranchesConfig = this.functionsUtil.getGlobalConfig(['tranches']);\n\n      const tranchesTokens = [];\n      const tranchesBalances = [];\n      portfolio.tranchesBalance.forEach( trancheInfo => {\n        if (!tranchesBalances[trancheInfo.tranche]){\n          tranchesBalances[trancheInfo.tranche] = {\n            weight:this.functionsUtil.BNify(0),\n            balance:this.functionsUtil.BNify(0)\n          };\n        }\n        tranchesBalances[trancheInfo.tranche].weight = tranchesBalances[trancheInfo.tranche].weight.plus(trancheInfo.trancheWeight);\n        tranchesBalances[trancheInfo.tranche].balance = tranchesBalances[trancheInfo.tranche].balance.plus(trancheInfo.tokenBalance);\n\n        if (!tranchesTokens[trancheInfo.token]){\n          tranchesTokens[trancheInfo.token] = this.functionsUtil.BNify(0);\n        }\n        tranchesTokens[trancheInfo.token] = tranchesTokens[trancheInfo.token].plus(trancheInfo.tokenBalance);\n      });\n\n      const depositedTokens = Object.keys(tranchesTokens);\n\n      const portfolioDonutData = Object.keys(tranchesTokens).map( token => {\n        const balanceValue = parseFloat(tranchesTokens[token].toFixed(4));\n        const tokenConfig = this.functionsUtil.getGlobalConfig(['stats','tokens',token]);\n        return {\n          id:token,\n          name:token,\n          label:token,\n          value:balanceValue,\n          description: `$ ${balanceValue} in ${token}`,\n          color:'hsl('+tokenConfig.color.hsl.join(',')+')',\n          image:tokenConfig.icon || `images/tokens/${token}.svg`,\n        };\n      });\n\n      const allocationChartData = Object.keys(tranchesBalances).map((trancheName,i)=>{\n        const trancheConfig = tranchesConfig[trancheName];\n        const balanceInfo = tranchesBalances[trancheName];\n        const weightValue = parseFloat(balanceInfo.weight.times(100).toFixed(2));\n        return {\n          id:trancheName,\n          name:trancheName,\n          value:weightValue,\n          label: trancheConfig.name,\n          color:'hsl('+trancheConfig.color.hsl.join(',')+')',\n          description: `$ ${balanceInfo.balance.toFixed(2)} in ${trancheConfig.name}`\n        };\n      });\n\n      // console.log('allocationChartData',allocationChartData,'portfolioDonutData',portfolioDonutData);\n      \n      const transactions = portfolio.transactions;\n      const userHasFunds = portfolio && this.functionsUtil.BNify(portfolio.totalBalance).gt(0);\n\n      this.setState({\n        portfolio,\n        userHasFunds,\n        transactions,\n        portfolioLoaded,\n        depositedTokens,\n        portfolioDonutData,\n        allocationChartData\n      });\n    }\n  }\n\n  selectTrancheType(trancheRoute){\n    let route = `${this.props.selectedSection.route}/${trancheRoute}`;\n    const tokenConfig = this.props.availableTranches[this.state.selectedProtocol] && this.props.availableTranches[this.state.selectedProtocol][this.state.selectedToken] ? this.props.availableTranches[this.state.selectedProtocol][this.state.selectedToken] : null;\n    if (tokenConfig){\n      route += `/${this.state.selectedProtocol}/${this.state.selectedToken}`;\n    }\n    this.props.goToSection(route);\n  }\n\n  selectTranche(protocol,token){\n    const tokenConfig = this.props.availableTranches[protocol] && this.props.availableTranches[protocol][token] ? this.props.availableTranches[protocol][token] : null;\n    if (tokenConfig){\n      let route = `${this.props.selectedSection.route}`;\n      if (this.state.trancheRoute){\n        route += `/${this.state.trancheRoute}`;\n      }\n      route += `/${protocol}/${token}`;\n\n      this.props.goToSection(route);\n    }\n  }\n\n  setPortfolioEquityQuickSelection(portfolioEquityQuickSelection){\n    this.setState({\n      portfolioEquityQuickSelection\n    });\n  }\n\n  goBack(){\n    if (this.state.tokenConfig && this.state.trancheType){\n      if (!this.state.userHasFunds){\n        this.props.goToSection(this.props.selectedSection.route+'/'+this.state.trancheDetails.route);\n      } else {\n        this.props.goToSection(this.props.selectedSection.route+'/'+this.state.selectedProtocol+'/'+this.state.selectedToken);\n      }\n    }/* else if (this.state.trancheType){\n      this.props.goToSection(this.props.selectedSection.route);\n    } */else {\n      this.props.goToSection(this.props.selectedSection.route);\n    }\n  }\n\n  render() {\n\n    const pathLink = [];\n    const breadcrumbPath = [];\n    if (this.state.trancheType){\n      breadcrumbPath.push(this.functionsUtil.capitalize(this.state.trancheDetails.baseName));\n      if (this.state.tokenConfig){\n        if (!this.state.userHasFunds){\n          pathLink.push(this.props.selectedSection.route+'/'+this.state.trancheDetails.route);\n        } else if (this.state.tokenConfig){\n          pathLink.push(this.props.selectedSection.route+'/'+this.state.selectedProtocol+'/'+this.state.selectedToken);\n        }\n      }\n    }\n    if (this.state.selectedProtocol){\n      breadcrumbPath.push(this.functionsUtil.getGlobalConfig(['stats','protocols',this.state.selectedProtocol,'label']));\n    }\n    if (this.state.selectedToken){\n      breadcrumbPath.push(this.state.selectedToken);\n    }\n\n    return (\n      <Box\n        width={1}\n      >\n        {\n          breadcrumbPath.length>0 && (\n            <Flex\n              width={1}\n              mb={[2,0]}\n              alignItems={'center'}\n              flexDirection={'row'}\n              justifyContent={'flex-start'}\n            >\n              <Flex\n                width={0.5}\n              >\n                <Breadcrumb\n                  {...this.props}\n                  text={'Tranches'}\n                  pathLink={pathLink}\n                  path={breadcrumbPath}\n                  isMobile={this.props.isMobile}\n                  handleClick={this.goBack.bind(this)}\n                />\n              </Flex>\n              <Flex\n                width={0.5}\n                justifyContent={'flex-end'}\n              >\n                \n              </Flex>\n            </Flex>\n          )\n        }\n        {\n          !this.state.componentLoaded ? (\n            <FlexLoader\n              textProps={{\n                textSize:4,\n                fontWeight:2\n              }}\n              loaderProps={{\n                mb:3,\n                size:'40px'\n              }}\n              flexProps={{\n                my:3,\n                minHeight:'60vh',\n                flexDirection:'column'\n              }}\n              text={'Loading Portfolio...'}\n            />\n          ) : this.state.tokenConfig ? (\n            <TranchePage\n              {...this.props}\n              portfolio={this.state.portfolio}\n              trancheType={this.state.trancheType}\n              tokenConfig={this.state.tokenConfig}\n              userHasFunds={this.state.userHasFunds}\n              selectedToken={this.state.selectedToken}\n              trancheDetails={this.state.trancheDetails}\n              selectedProtocol={this.state.selectedProtocol}\n              availableTranches={this.props.availableTranches}\n              selectTrancheType={this.selectTrancheType.bind(this)}\n            />\n          ) : !this.state.trancheType && !this.state.userHasFunds ? (\n            <TrancheWelcome\n              {...this.props}\n              selectTrancheType={this.selectTrancheType.bind(this)}\n            />\n          ) : (\n            <Box\n              width={1}\n            >\n              {this.state.useTrancheType ? (\n                <Box\n                  width={1}\n                >\n                  <Flex\n                    mb={3}\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    justifyContent={'center'}\n                  > \n                    {\n                    /*\n                      <Icon\n                        mr={2}\n                        name={this.state.trancheDetails.icon}\n                        color={this.state.trancheDetails.color.hex}\n                        size={this.props.isMobile ? '1.8em' : '2.2em'}\n                      />\n                    */\n                    }\n                    <Image\n                      mr={2}\n                      src={this.state.trancheDetails.image}\n                      size={this.props.isMobile ? '1.8em' : '2.2em'}\n                    />\n                    <Title\n                    >\n                      {this.functionsUtil.capitalize(this.state.trancheDetails.baseName)} Tranches\n                    </Title>\n                  </Flex>\n                  <Flex\n                    mb={3}\n                    mx={'auto'}\n                    width={[1,0.8]}\n                    aligItems={'center'}\n                    justifyContent={'center'}\n                  >\n                    <Text\n                      fontWeight={2}\n                      fontSize={[1,2]}\n                      textAlign={'center'}\n                    >\n                      {this.functionsUtil.getGlobalConfig(['tranches',this.state.trancheType,'description','long'])}\n                    </Text>\n                  </Flex>\n                </Box>\n              ) : (\n                <Title\n                  mb={3}\n                >\n                  Perpetual Yield Tranches\n                </Title>\n              )}\n              {\n                this.state.portfolioLoaded && this.state.userHasFunds && (\n                  <Flex\n                    width={1}\n                    flexDirection={'column'}\n                  >\n                    <Flex\n                      mb={3}\n                      width={1}\n                      mt={[2,0]}\n                      alignItems={'center'}\n                      justifyContent={'center'}\n                      flexDirection={['column','row']}\n                    >\n                      <Flex\n                        pr={[0,2]}\n                        width={[1,1/3]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            py:[3,0],\n                            mb:[2,0],\n                            display:'flex',\n                            alignItems:'center',\n                            height:['auto','125px'],\n                            justifyContent:'center'\n                          }}\n                        >\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            {\n                              this.state.portfolio.avgAPY ? (\n                                <Text\n                                  lineHeight={1}\n                                  fontWeight={[3,4]}\n                                  color={'copyColor'}\n                                  fontFamily={'counter'}\n                                  fontSize={[4,'1.7em']}\n                                  dangerouslySetInnerHTML={{ __html: this.state.portfolio.avgAPY.toFixed(2)+'<small>%</small>' }}\n                                >\n                                </Text>\n                              ) : (\n                                <Loader size=\"20px\" />\n                              )\n                            }\n                            <Flex\n                              mt={2}\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'center'}\n                            >\n                              <Text\n                                fontWeight={2}\n                                fontSize={[1,2]}\n                                color={'cellText'}\n                              >\n                                Avg APY\n                              </Text>\n                              <Tooltip\n                                placement={'bottom'}\n                                message={this.functionsUtil.getGlobalConfig(['messages','apyLong'])}\n                              >\n                                <Icon\n                                  ml={2}\n                                  name={\"Info\"}\n                                  size={'1em'}\n                                  color={'cellTitle'}\n                                />\n                              </Tooltip>\n                            </Flex>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                      <Flex\n                        pr={[0,2]}\n                        width={[1,1/3]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            py:[3,0],\n                            mb:[2,0],\n                            display:'flex',\n                            alignItems:'center',\n                            height:['auto','125px'],\n                            justifyContent:'center'\n                          }}\n                        >\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            {\n                              this.state.portfolio ? (\n                                <Flex\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                  justifyContent={'center'}\n                                >\n                                  <TotalBalanceCounter\n                                    decimals={5}\n                                    {...this.props}\n                                    portfolio={this.state.portfolio}\n                                  />\n                                  <Flex\n                                    width={1}\n                                    alignItems={'center'}\n                                    flexDirection={'row'}\n                                    justifyContent={'center'}\n                                  >\n                                    <Flex\n                                      width={0.45}\n                                      alignItems={'center'}\n                                      justifyContent={'flex-end'}\n                                    >\n                                      <Text\n                                        fontSize={1}\n                                        fontWeight={3}\n                                        fontFamily={this.props.theme.fonts.counter}\n                                        color={this.props.theme.colors.transactions.status.completed}\n                                      >\n                                        +{this.state.portfolio.totalEarningsPerc.toFixed(2)}%\n                                      </Text>\n                                    </Flex>\n                                    <Text\n                                      mx={1}\n                                      fontSize={1}\n                                      fontWeight={3}\n                                      fontFamily={this.props.theme.fonts.counter}\n                                      color={this.props.theme.colors.transactions.status.completed}\n                                    >|</Text>\n                                    <Flex\n                                      width={0.45}\n                                      alignItems={'center'}\n                                      justifyContent={'flex-start'}\n                                    >\n                                      <TotalEarningsCounter\n                                        {...this.props}\n                                        unit={'+$'}\n                                        decimals={5}\n                                        counterStyle={{\n                                          fontSize:14,\n                                          fontWeight:600,\n                                          color:this.props.theme.colors.transactions.status.completed\n                                        }}\n                                        portfolio={this.state.portfolio}\n                                      />\n                                    </Flex>\n                                  </Flex>\n                                </Flex>\n                              ) : (\n                                <Loader size=\"20px\" />\n                              )\n                            }\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'center'}\n                            >\n                              <Text\n                                fontWeight={2}\n                                fontSize={[1,2]}\n                                color={'cellText'}\n                              >\n                                Total Balance\n                              </Text>\n                              {\n                                /*\n                                this.state.govTokensTotalBalance && (\n                                  <Tooltip\n                                    placement={'bottom'}\n                                    message={'Total Balance does not include accrued governance tokens: '+(this.state.govTokensTotalBalance && this.state.govTokensTotalBalance.gt(0) ? ` (${this.state.govTokensTotalBalanceTooltip.join(' / ')})` : '')}\n                                  >\n                                    <Icon\n                                      ml={2}\n                                      name={\"Info\"}\n                                      size={'1em'}\n                                      color={'cellTitle'}\n                                    />\n                                  </Tooltip>\n                                )\n                                */\n                              }\n                            </Flex>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                      <Flex\n                        width={[1,1/3]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            py:[3,0],\n                            mb:[2,0],\n                            display:'flex',\n                            alignItems:'center',\n                            height:['auto','125px'],\n                            justifyContent:'center'\n                          }}\n                        >\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            {\n                              this.state.allocationChartData ? (\n                                <Flex\n                                  width={1}\n                                  alignItems={'center'}\n                                  id={'allocationChart'}\n                                  height={['55px','59px']}\n                                  flexDirection={'column'}\n                                  justifyContent={'center'}\n                                >\n                                  <GenericPieChart\n                                    {...this.props}\n                                    inline={true}\n                                    showLoader={false}\n                                    tooltipFormat={v => v+'%'}\n                                    sliceLabel={d => d.value+'%'}\n                                    width={ this.props.isMobile ? 55 : 59 }\n                                    height={ this.props.isMobile ? 55 : 59 }\n                                    chartData={this.state.allocationChartData}\n                                  />\n                                </Flex>\n                              ) : (\n                                <Loader size=\"20px\" />\n                              )\n                            }\n                            <Flex\n                              mt={2}\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'center'}\n                            >\n                              <Text\n                                fontWeight={2}\n                                fontSize={[1,2]}\n                                color={'cellText'}\n                              >\n                                Portfolio Distribution\n                              </Text>\n                              {\n                                /*\n                                <Tooltip\n                                  placement={'bottom'}\n                                  message={this.functionsUtil.getGlobalConfig(['messages','riskScoreShort'])}\n                                >\n                                  <Icon\n                                    ml={2}\n                                    name={\"Info\"}\n                                    size={'1em'}\n                                    color={'cellTitle'}\n                                  />\n                                </Tooltip>\n                                */\n                              }\n                            </Flex>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                    </Flex>\n                    <Flex\n                      mb={3}\n                      width={1}\n                      id={\"portfolio-charts\"}\n                      justifyContent={'space-between'}\n                      flexDirection={['column','row']}\n                    >\n                      <Flex\n                        mb={[3,0]}\n                        width={[1,0.328]}\n                        flexDirection={'column'}\n                        id={\"portfolio-composition\"}\n                      >\n                        <DashboardCard\n                          title={'Composition'}\n                          titleProps={ !this.props.isMobile ? {\n                            style:{\n                              minHeight:'39px'\n                            }\n                          } : null}\n                        >\n                          <GenericPieChart\n                            {...this.props}\n                            showLegend={true}\n                            showLoader={false}\n                            sliceLabel={d => d.value}\n                            defaultLabel={'Total Funds'}\n                            parentId={'portfolio-composition'}\n                            chartData={this.state.portfolioDonutData}\n                            defaultImage={this.props.selectedSection.image}\n                            defaultValue={`$ ${this.functionsUtil.formatMoney(parseFloat(this.state.portfolio.totalBalance),4)}`}\n                            margin={this.props.isMobile ? { top: 15, right: 25, bottom: 30, left: 25 } : { top: 30, right: 50, bottom: 60, left: 50 }}\n                          />\n                        </DashboardCard>\n                      </Flex>\n                      <Flex\n                        width={[1,0.666]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard>\n                          <Flex\n                            pt={[3,4]}\n                            px={[3,4]}\n                            aligItems={'center'}\n                            flexDirection={['column','row']}\n                          >\n                            <Flex\n                              width={[1,0.7]}\n                              flexDirection={'column'}\n                              justifyContent={'flex-start'}\n                            >\n                              <Title\n                                fontWeight={4}\n                                fontSize={[2,3]}\n                                textAlign={'left'}\n                              >\n                                Performance\n                              </Title>\n                            </Flex>\n                            <Flex\n                              mt={[2,0]}\n                              width={[1,0.3]}\n                              flexDirection={'column'}\n                              justifyContent={'flex-end'}\n                            >\n                              <GenericSelector\n                                innerProps={{\n                                  p:0,\n                                  px:1\n                                }}\n                                defaultValue={\n                                  {value:'week',label:'1W'}\n                                }\n                                name={'performance-time'}\n                                options={[\n                                  {value:'week',label:'1W'},\n                                  {value:'month',label:'1M'},\n                                  {value:'month3',label:'3M'},\n                                  {value:'month6',label:'6M'},\n                                  {value:'all',label:'MAX'},\n                                ]}\n                                onChange={ v => this.setPortfolioEquityQuickSelection(v) }\n                              />\n                            </Flex>\n                          </Flex>\n                          <Flex\n                            ml={[0,3]}\n                            aligItems={'center'}\n                            justifyContent={'center'}\n                            id={\"portfolio-performance\"}\n                          >\n                            <PortfolioEquityTranches\n                              {...this.props}\n                              enabledTokens={[]}\n                              parentId={'portfolio-performance'}\n                              parentIdHeight={'portfolio-composition'}\n                              transactionsList={this.state.transactions}\n                              quickDateSelection={this.state.portfolioEquityQuickSelection}\n                              frequencySeconds={this.functionsUtil.getFrequencySeconds('day',1)}\n                            />\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                    </Flex>\n                  </Flex>\n                )\n              }\n              <Flex\n                width={1}\n                mb={[3,4]}\n                id={\"migrate-assets\"}\n                flexDirection={'column'}\n              >\n                <Flex\n                  pb={2}\n                  width={1}\n                  mb={[2,3]}\n                  borderColor={'divider'}\n                  borderBottom={'1px solid transparent'}\n                >\n                  <Heading.h4\n                    fontSize={[2,4]}\n                    fontWeight={[3,4]}\n                  >\n                    Available Tranches\n                  </Heading.h4>\n                </Flex>\n                <TranchesList\n                  enabledProtocols={[]}\n                  trancheType={this.state.trancheType}\n                  availableTranches={this.props.availableTranches}\n                  handleClick={(props) => this.selectTranche(props.protocol,props.token)}\n                  cols={[\n                    {\n                      title:'PROTOCOL',\n                      props:{\n                        width:[0.25,0.15]\n                      },\n                      fields:[\n                        {\n                          name:'protocolIcon',\n                          props:{\n                            mr:2,\n                            height:['1.4em','2em']\n                          }\n                        },\n                        {\n                          name:'protocolName'\n                        }\n                      ]\n                    },\n                    {\n                      title:'TOKEN',\n                      props:{\n                        width:[0.16, 0.12],\n                      },\n                      fields:[\n                        {\n                          name:'tokenIcon',\n                          props:{\n                            mr:2,\n                            height:['1.4em','2em']\n                          }\n                        },\n                        {\n                          mobile:false,\n                          name:'tokenName'\n                        }\n                      ]\n                    },\n                    /*\n                    {\n                      title:'TYPE',\n                      props:{\n                        width:[0.29,0.13],\n                      },\n                      fields:[\n                        {\n                          name:'trancheTypeIcon',\n                          props:{\n                            flexProps:{\n                              mr:2\n                            },\n                            size:'1.4em'\n                          }\n                        },\n                        {\n                          name:'trancheType'\n                        }\n                      ],\n                      visible:this.state.useTrancheType\n                    },\n                    */\n                    {\n                      title:'POOL',\n                      props:{\n                        width:[0.21, 0.14],\n                      },\n                      fields:[\n                        {\n                          name:this.state.useTrancheType ? `${this.state.trancheDetails.baseName}Pool` : 'pool',\n                          props:{\n                            decimals:2\n                          }\n                        }\n                      ]\n                    },\n                    {\n                      title:this.state.useTrancheType ? 'APY' : 'SENIOR APY',\n                      visible:!this.state.useTrancheType || this.state.trancheType === 'AA',\n                      props:{\n                        width:[this.state.useTrancheType ? 0.16 : 0.29,this.state.useTrancheType ? 0.12 : 0.15],\n                      },\n                      parentProps:{\n                        flexDirection:'column',\n                        alignItems:'flex-start',\n                      },\n                      fields:[\n                        {\n                          name:'seniorApy',\n                          showTooltip:true\n                        },\n                      ],\n                    },\n                    {\n                      title:this.state.useTrancheType ? 'APY' : 'JUNIOR APY',\n                      visible:!this.state.useTrancheType || this.state.trancheType === 'BB',\n                      props:{\n                        width:[this.state.useTrancheType ? 0.16 : 0.29,this.state.useTrancheType ? 0.12 : 0.15],\n                      },\n                      parentProps:{\n                        flexDirection:'column',\n                        alignItems:'flex-start',\n                      },\n                      fields:[\n                        {\n                          name:'juniorApy',\n                          showTooltip:true\n                        },\n                      ],\n                    },\n                    {\n                      mobile:false,\n                      title:'AUTO-FARMING',\n                      props:{\n                        width:[0.25,this.state.useTrancheType ? 0.18 : 0.15],\n                      },\n                      fields:[\n                        {\n                          name:'autoFarming'\n                        }\n                      ]\n                    },\n                    {\n                      mobile:false,\n                      title:'STAKING REWARDS',\n                      props:{\n                        width:[0.25,this.state.useTrancheType ? 0.18 : 0.13],\n                      },\n                      fields:[\n                        {\n                          name:'stakingRewards'\n                        }\n                      ]\n                    },\n                    {\n                      mobile:true,\n                      title:'TOKENS',\n                      props:{\n                        width:[0.17],\n                      },\n                      fields:[\n                        {\n                          name:'govTokens'\n                        }\n                      ]\n                    },\n                    {\n                      title:'',\n                      mobile:false,\n                      props:{\n                        width:[0.29, 0.16],\n                      },\n                      parentProps:{\n                        width:1\n                      },\n                      fields:[\n                        {\n                          name:'button',\n                          label: 'Deposit',\n                          props:{\n                            width:1,\n                            fontSize:3,\n                            fontWeight:3,\n                            height:'45px',\n                            borderRadius:4,\n                            boxShadow:null,\n                            mainColor:'deposit',\n                            size: this.props.isMobile ? 'small' : 'medium',\n                            handleClick:(props) => this.selectTranche(props.protocol,props.token)\n                          }\n                        }\n                      ]\n                    }\n                  ]}\n                  {...this.props}\n                />\n              </Flex>\n              {\n                this.props.account && this.state.userHasFunds && \n                  <Flex\n                    mb={[3,4]}\n                    width={1}\n                    id={'transactions'}\n                    flexDirection={'column'}\n                  >\n                    <Title mb={[3,4]}>Transactions</Title>\n                    <TransactionsList\n                      {...this.props}\n                      enabledTokens={this.state.depositedTokens}\n                      transactionsList={this.state.transactions}\n                      availableActions={this.state.transactions.reduce( (availableActions,t) => {\n                        availableActions[t.action.toLowerCase()] = t.action;\n                        return availableActions;\n                      },{})}\n                      cols={[\n                        {\n                          title: this.props.isMobile ? '' : 'HASH',\n                          props:{\n                            width:[0.13,0.18]\n                          },\n                          fields:[\n                            {\n                              name:'icon',\n                              props:{\n                                mr:[0,2]\n                              }\n                            },\n                            {\n                              name:'hash',\n                              mobile:false\n                            }\n                          ]\n                        },\n                        {\n                          title:'ACTION',\n                          mobile:false,\n                          props:{\n                            width:0.12,\n                          },\n                          fields:[\n                            {\n                              name:'action'\n                            }\n                          ]\n                        },\n                        {\n                          title:'DATE',\n                          props:{\n                            width:[0.27,0.15],\n                          },\n                          fields:[\n                            {\n                              name:'date'\n                            }\n                          ]\n                        },\n                        {\n                          mobile:false,\n                          title:'STATUS',\n                          props:{\n                            width:[0.18,0.16],\n                            justifyContent:['center','flex-start']\n                          },\n                          fields:[\n                            {\n                              name:'statusIcon',\n                              props:{\n                                mr:[0,2]\n                              }\n                            },\n                            {\n                              mobile:false,\n                              name:'status'\n                            }\n                          ]\n                        },\n                        {\n                          title:'AMOUNT',\n                          props:{\n                            width:[0.23,0.11],\n                          },\n                          fields:[\n                            {\n                              name:'amount'\n                            },\n                          ]\n                        },\n                        {\n                          title:'PROTOCOL',\n                          props:{\n                            width:[0.21, 0.14],\n                          },\n                          fields:[\n                            {\n                              type:'image',\n                              name:'custom',\n                              path:['protocolIcon'],\n                              props:{\n                                mr:2,\n                                height:['1.4em','2em']\n                              }\n                            },\n                            {\n                              type:'text',\n                              mobile:false,\n                              name:'custom',\n                              path:['protocol']\n                            }\n                          ]\n                        },\n                        {\n                          title:'ASSET',\n                          props:{\n                            width:[0.16,0.14],\n                            justifyContent:['center','flex-start']\n                          },\n                          fields:[\n                            {\n                              name:'tokenIcon',\n                              props:{\n                                mr:[0,2],\n                                height:['1.4em','1.6em']\n                              }\n                            },\n                            {\n                              mobile:false,\n                              name:'tokenName'\n                            },\n                          ]\n                        },\n                      ]}\n                    />\n                  </Flex>\n              }\n            </Box>\n          )\n        }\n      </Box>\n    );\n  }\n}\n\nexport default Tranches;\n","import React, { Component } from 'react';\nimport { Flex, Box, Text, Button } from \"rimble-ui\";\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport AssetSelector from '../AssetSelector/AssetSelector';\n\nclass TokenSwap extends Component {\n\n  state = {\n    tokenConfig:null,\n    selectedFromToken:null,\n    selectedDestToken:null,\n    availableDestinationTokens:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async loadKyberWidget(){\n\n    if (!this.state.selectedFromToken || !this.state.selectedDestToken){\n      return false;\n    }\n\n    const provider = 'kyberSwap';\n    const providerInfo = this.functionsUtil.getGlobalConfig(['payments','providers',provider]);\n    if (providerInfo.enabled && providerInfo.remoteResources){\n\n      const globalConfigs = this.functionsUtil.getGlobalConfigs();\n      const remoteResources = providerInfo.remoteResources;\n\n      Object.keys(remoteResources).forEach((url,j) => {\n\n        const resourceType = url.split('.').pop().toLowerCase();\n\n        switch (resourceType){\n          case 'js':\n            const scriptID = `script_${provider}_${j}_${this.state.selectedFromToken}_${this.state.selectedDestToken}`;\n\n            if (!document.getElementById(scriptID)){\n              const script = document.createElement(\"script\");\n              const remoteResourceParams = remoteResources[url];\n              const callback = remoteResourceParams && remoteResourceParams.callback ? remoteResourceParams.callback : null;\n              const precall = remoteResourceParams && remoteResourceParams.precall ? remoteResourceParams.precall : null;\n\n              if (precall && typeof precall === 'function'){\n                const precallProps = {\n                  baseToken:this.state.selectedFromToken,\n                  selectedToken:this.state.selectedDestToken,\n                  buttonId:`kyber-swapper-${this.state.selectedFromToken}_${this.state.selectedDestToken}`\n                };\n                precall(precallProps,globalConfigs,providerInfo);\n              }\n\n              if (callback && typeof callback === 'function'){\n                if (script.readyState) {  // only required for IE <9\n                  script.onreadystatechange = function() {\n                    if ( script.readyState === 'loaded' || script.readyState === 'complete' ) {\n                      script.onreadystatechange = null;\n                      callback();\n                    }\n                  };\n                } else {  //Others\n                  script.onload = callback;\n                }\n              }\n\n              script.id = scriptID;\n              script.className = `script_${provider}`;\n              script.src = url;\n              script.async = true;\n\n              if (remoteResourceParams && remoteResourceParams.parentElement){\n                remoteResourceParams.parentElement.appendChild(script)\n              } else {\n                document.head.appendChild(script);\n              }\n            }\n          break;\n          case 'css':\n            const stylesheetId = `stylesheet_${provider}_${j}`;\n\n            if (!document.getElementById(stylesheetId)){\n              const style = document.createElement(\"link\");\n\n              style.id = stylesheetId;\n              style.rel = 'stylesheet';\n              style.href = url;\n\n              document.head.appendChild(style);\n            }\n          break;\n          default:\n          break;\n        }\n      });\n    }\n\n    this.setState({\n      providerInfo\n    });\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    await this.loadTokens();\n  }\n\n  async loadTokens(){\n    const selectedFromToken = Object.keys(this.props.toolProps.availableTokens)[0];\n\n    await this.functionsUtil.asyncForEach(Object.keys(this.props.toolProps.availableTokens),async (token) => {\n      const tokenConfig = this.props.toolProps.availableTokens[token];\n      const tokenContract = this.functionsUtil.getContractByName(tokenConfig.token);\n      if (!tokenContract && tokenConfig.abi){\n        await this.props.initContract(tokenConfig.token,tokenConfig.address,tokenConfig.abi);\n      }\n    });\n\n    this.selectFromToken(selectedFromToken);\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const fromTokenChanged = prevState.selectedFromToken !== this.state.selectedFromToken;\n    const destTokenChanged = prevState.selectedDestToken !== this.state.selectedDestToken;\n    if ((fromTokenChanged ||  destTokenChanged) && this.state.selectedFromToken && this.state.selectedDestToken){\n      this.loadKyberWidget();\n    }\n  }\n\n  selectFromToken = async (selectedFromToken) => {\n    let selectedDestToken = null;\n    const availableDestinationTokens = {};\n    const supportedTokens = this.functionsUtil.getGlobalConfig(['payments','providers','kyberSwap','supportedTokens']);\n\n    supportedTokens.forEach( token => {\n      if (token !== selectedFromToken){\n        if (!selectedDestToken){\n          selectedDestToken = token;\n        }\n        availableDestinationTokens[token] = {\n          token\n        };\n      }\n    });\n\n    const baseToken = this.functionsUtil.getGlobalConfig(['baseToken']);\n    if (baseToken !== selectedFromToken){\n      availableDestinationTokens[baseToken] = {\n        token:baseToken\n      };\n    }\n\n    this.setState({\n      selectedFromToken,\n      availableDestinationTokens\n    },() => {\n      this.selectDestToken(selectedDestToken);\n    });\n  }\n\n  selectDestToken = async (selectedDestToken) => {\n    this.setState({\n      selectedDestToken\n    });\n  }\n\n  swap = () => {\n    const globalConfigs = this.functionsUtil.getGlobalConfigs();\n    const paymentProvider = this.state.providerInfo;\n    const initProps = {\n      baseToken:this.state.selectedFromToken,\n      selectedToken:this.state.selectedDestToken,\n      buttonId:`kyber-swapper-${this.state.selectedFromToken}_${this.state.selectedDestToken}`\n    };\n    const initParams = paymentProvider && paymentProvider.getInitParams ? paymentProvider.getInitParams(initProps,globalConfigs) : null;\n\n    // Render the Payment Provider\n    if (typeof paymentProvider.render === 'function'){\n      paymentProvider.render(initParams,null,initProps);\n    }\n\n    // Send GA event\n    this.functionsUtil.sendGoogleAnalyticsEvent({\n      eventCategory: 'Tools',\n      eventAction: 'TokenSwap',\n      eventLabel: `${this.state.selectedFromToken}_${this.state.selectedDestToken}`\n    });\n  }\n\n  render() {\n\n    if (!this.state.selectedFromToken){\n      return null;\n    }\n\n    return (\n      <Flex\n        width={1}\n        mt={[2,3]}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          width={[1,0.36]}\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Box\n            width={1}\n          >\n            <Text mb={1}>\n              Select asset to swap:\n            </Text>\n            <AssetSelector\n              {...this.props}\n              showBalance={false}\n              isSearchable={true}\n              onChange={this.selectFromToken}\n              selectedToken={this.state.selectedFromToken}\n              availableTokens={this.props.toolProps.availableTokens}\n            />\n          </Box>\n          {\n            this.state.availableDestinationTokens && this.state.selectedDestToken && \n              <Box\n                mt={2}\n                width={1}\n              >\n                <Text mb={1}>\n                  Select destination asset:\n                </Text>\n                <AssetSelector\n                  {...this.props}\n                  showBalance={false}\n                  isSearchable={true}\n                  onChange={this.selectDestToken}\n                  selectedToken={this.state.selectedDestToken}\n                  availableTokens={this.state.availableDestinationTokens}\n                />\n              </Box>\n          }\n          <Flex\n            mt={2}\n            width={1}\n            justifyContent={'center'}\n          >\n            <Button\n              my={2}\n              mx={[0, 2]}\n              size={'medium'}\n              borderRadius={4}\n              mainColor={'blue'}\n              onClick={ e => this.swap(e) }\n              disabled={ !this.state.selectedFromToken || !this.state.selectedDestToken }\n            >\n              SWAP TOKENS\n            </Button>\n          </Flex>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default TokenSwap;\n","import ExtLink from '../ExtLink/ExtLink';\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport { Flex, Box, Text, Icon } from \"rimble-ui\";\nimport ImageButton from '../ImageButton/ImageButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\n\nclass LpStaking extends Component {\n\n  state = {\n    stats:[],\n    steps:null,\n    infoBox:null,\n    globalStats:[],\n    inputValue:null,\n    description:null,\n    tokenConfig:null,\n    balanceProp:null,\n    statsLoaded:false,\n    tokenBalance:null,\n    contractInfo:null,\n    stakedBalance:null,\n    selectedToken:null,\n    rewardMultiplier:1,\n    accountingData:null,\n    selectedAction:null,\n    selectedOption:null,\n    successMessage:null,\n    permitEnabled:false,\n    poolTokenPrice:null,\n    availableTokens:null,\n    approveEnabled:false,\n    rewardTokenPrice:null,\n    contractApproved:false,\n    tokenWrapperProps:null,\n    distributionSpeed:null,\n    approveDescription:null,\n    balanceSelectorInfo:null,\n    transactionSucceeded:false,\n    showTokenWrapperEnabled:false\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.setState({\n      selectedAction:'Stake'\n    },() => {\n      this.updateData();\n    });\n  }\n\n  async componentDidMount(){\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const selectedActionChanged = prevState.selectedAction !== this.state.selectedAction;\n    const contractApprovedChanged = prevState.contractApproved !== this.state.contractApproved;\n    const tokenConfigChanged = JSON.stringify(prevProps.tokenConfig) !== JSON.stringify(this.props.tokenConfig);\n    const contractInfoChanged = JSON.stringify(prevProps.contractInfo) !== JSON.stringify(this.props.contractInfo);\n    if (selectedActionChanged || contractApprovedChanged || tokenConfigChanged){\n      this.setState({\n        tokenWrapperProps:null,\n        showTokenWrapperEnabled:false\n      },() => {\n        this.updateData(selectedActionChanged);\n      });\n    }\n\n    if (contractInfoChanged){\n      this.changeInputCallback();\n    }\n  }\n\n  async changeInputCallback(inputValue=null){\n\n    let infoBox = null;\n\n    if (inputValue && this.functionsUtil.BNify(inputValue).gt(0)){\n      inputValue = this.functionsUtil.BNify(inputValue);\n      switch (this.state.selectedAction){\n        case 'Stake':\n          const userStakedBalance = this.functionsUtil.fixTokenDecimals(this.state.stakedBalance,this.props.tokenConfig.decimals).plus(inputValue);\n          const totalStakedBalance = this.functionsUtil.fixTokenDecimals(this.state.totalStakingShares,this.props.contractInfo.decimals).plus(inputValue);\n          const userTotalStakingShare = userStakedBalance.div(totalStakedBalance);\n          const rewardsPerDay = this.state.distributionSpeed.times(86400).times(userTotalStakingShare);//.times(this.state.distributionSpeedMultiplier);\n\n          const stakedBalanceUSD = userStakedBalance.times(this.state.poolTokenPrice);\n          const rewardsPerYearUSD = rewardsPerDay.times(365).times(this.state.rewardTokenPrice);\n          const apy = stakedBalanceUSD.gt(0) ? rewardsPerYearUSD.div(stakedBalanceUSD).times(100) : this.functionsUtil.BNify(0);\n\n          // console.log(parseFloat(userStakedBalance),parseFloat(this.state.poolTokenPrice),parseFloat(stakedBalanceUSD),parseFloat(rewardsPerDay),parseFloat(this.state.rewardTokenPrice),parseFloat(rewardsPerYearUSD),parseFloat(apy));\n          infoBox = {\n            icon:'FileDownload',\n            iconProps:{\n              color:this.props.theme.colors.transactions.status.completed\n            },\n            text:`By staking <strong>${inputValue.toFixed(4)} ${this.props.tokenConfig.token}</strong> you will get <strong>${rewardsPerDay.toFixed(4)} ${this.props.contractInfo.rewardToken} / day</strong> with an average APY of <strong>${apy.toFixed(2)}%</strong><br /><small style=\"color:#ff9900\">assuming you have achieved the maximum reward multiplier</small>`\n          };\n        break;\n        case 'Withdraw':\n          const normalizedInputValue = this.functionsUtil.normalizeTokenAmount(inputValue,this.props.tokenConfig.decimals);\n          let unstakeRewards = await this.functionsUtil.genericContractCall(this.props.contractInfo.name,'unstakeQuery',[normalizedInputValue],{from:this.props.account});\n          unstakeRewards = this.functionsUtil.formatMoney(this.functionsUtil.fixTokenDecimals(unstakeRewards,this.props.tokenConfig.decimals));\n          infoBox = {\n            icon:'FileUpload',\n            iconProps:{\n              color:this.props.theme.colors.transactions.status.completed\n            },\n            text:`By unstaking <strong>${inputValue.toFixed(4)} ${this.props.tokenConfig.token}</strong> you will get <strong>${unstakeRewards} ${this.props.contractInfo.rewardToken}</strong>`\n          };\n        break;\n        default:\n        break;\n      }\n    }\n\n    this.setState({\n      infoBox\n    });\n  }\n\n  getTransactionParams(amount){\n    let methodName = null;\n    let methodParams = [];\n    amount = this.functionsUtil.toBN(amount);\n    switch (this.state.selectedAction){\n      case 'Stake':\n        methodName = 'wrapAndStake';\n        methodParams = [amount];\n      break;\n      case 'Withdraw':\n        methodName = 'unstakeAndUnwrap';\n        methodParams = [amount];\n      break;\n      default:\n      break;\n    }\n    return {\n      methodName,\n      methodParams\n    };\n  }\n\n  getPermitTransactionParams(amount,signedParameters){\n    let methodName = null;\n    let methodParams = [];\n    const { expiry, r, s, v } = signedParameters;\n    amount = this.functionsUtil.toBN(amount);\n    switch (this.state.selectedAction){\n      case 'Stake':\n        methodName = 'permitWrapAndStakeUnlimited';\n        methodParams = [amount, expiry, v, r, s];\n      break;\n      case 'Withdraw':\n        methodName = 'unstakeAndUnwrap';\n        methodParams = [amount];\n      break;\n      default:\n      break;\n    }\n    return {\n      methodName,\n      methodParams\n    };\n  }\n\n  async loadStats(){\n    const stats = [];\n\n    const [\n      totalLocked,\n      totalUnlocked,\n      totalStakingShares,\n      unlockScheduleCount,\n      accountingData,\n      collectedRewards\n    ] = await Promise.all([\n      this.functionsUtil.genericContractCall(this.props.contractInfo.name,'totalLocked'),\n      this.functionsUtil.genericContractCall(this.props.contractInfo.name,'totalUnlocked'),\n      this.functionsUtil.genericContractCall(this.props.contractInfo.name,'totalStakingShares'),\n      this.functionsUtil.genericContractCall(this.props.contractInfo.name,'unlockScheduleCount'),\n      this.functionsUtil.genericContractCall(this.props.contractInfo.name,'updateAccounting',[],{from:this.props.account}),\n      this.state.stakedBalance.gt(0) ? this.functionsUtil.genericContractCall(this.props.contractInfo.name,'unstakeQuery',[this.functionsUtil.integerValue(this.state.stakedBalance)],{from:this.props.account}) : this.functionsUtil.BNify(0)\n    ]);\n\n    const unlockSchedulesPromises = [];\n    for (let i = 0; i < unlockScheduleCount ; i++){\n      unlockSchedulesPromises.push(this.functionsUtil.genericContractCall(this.props.contractInfo.name,'unlockSchedules',[i]));\n    }\n\n    const unlockSchedules = await Promise.all(unlockSchedulesPromises);\n\n    const totalRewards = this.functionsUtil.fixTokenDecimals(this.functionsUtil.BNify(totalLocked).plus(this.functionsUtil.BNify(totalUnlocked)),this.props.tokenConfig.decimals);\n    stats.push({\n      title:'Total Rewards',\n      value:this.functionsUtil.formatMoney(parseFloat(totalRewards))+' '+this.props.contractInfo.rewardToken\n    });\n\n    const totalDeposits = this.functionsUtil.fixTokenDecimals(totalStakingShares,this.props.contractInfo.decimals);\n    stats.push({\n      title:'Total Deposits',\n      value:this.functionsUtil.formatMoney(parseFloat(totalDeposits))+' '+this.props.tokenConfig.token\n    });\n\n    const lockedRewards = this.functionsUtil.fixTokenDecimals(totalLocked,this.props.tokenConfig.decimals);\n    stats.push({\n      title:'Locked Rewards',\n      value:this.functionsUtil.formatMoney(parseFloat(lockedRewards))+' '+this.props.contractInfo.rewardToken\n    });\n\n    const unlockedRewards = this.functionsUtil.fixTokenDecimals(totalUnlocked,this.props.tokenConfig.decimals);\n    stats.push({\n      title:'Unlocked Rewards',\n      value:this.functionsUtil.formatMoney(parseFloat(unlockedRewards))+' '+this.props.contractInfo.rewardToken\n    });\n\n    const programEndTime = unlockSchedules.length>0 ? unlockSchedules.reduce( (endTime,s) => {\n      endTime = Math.max(s.endAtSec,endTime);\n      return endTime;\n    },parseInt(Date.now()/1000)) : null;\n\n    const programDuration = programEndTime ? `${this.functionsUtil.strToMoment(programEndTime*1000).utc().format('DD MMM, YYYY @ HH:mm')} UTC` : 'None';\n    stats.push({\n      title:'Program End-Date',\n      value:programDuration\n    });\n\n    const distributionSpeed = unlockSchedules.reduce( (distributionSpeed,s) => {\n      if (this.functionsUtil.BNify(s.initialLockedShares).gt(0) && this.functionsUtil.BNify(s.durationSec).gt(0)){\n        const tokensPerSecond = this.functionsUtil.fixTokenDecimals(s.initialLockedShares,this.props.contractInfo.decimals).div(s.durationSec);\n        if (!tokensPerSecond.isNaN()){\n          distributionSpeed = distributionSpeed.plus(tokensPerSecond);\n        }\n      }\n      return distributionSpeed;\n    },this.functionsUtil.BNify(0));\n\n    stats.push({\n      title:'Reward unlock rate',\n      value:this.functionsUtil.formatMoney(distributionSpeed.times(86400))+' '+this.props.contractInfo.rewardToken+' / day'\n    });\n\n    const globalStats = [];\n\n    const stakedBalance = this.functionsUtil.fixTokenDecimals(this.state.stakedBalance,this.props.tokenConfig.decimals);\n    const stakingShare = stakedBalance.div(totalDeposits); // accountingData && accountingData[2] && this.functionsUtil.BNify(accountingData[3]).gt(0) ? this.functionsUtil.BNify(accountingData[2]).div(this.functionsUtil.BNify(accountingData[3])) : this.functionsUtil.BNify(0);\n\n    const rewardMultiplier = accountingData && this.functionsUtil.BNify(accountingData[4]).gt(0) ? this.functionsUtil.BNify(Math.max(1,parseFloat(this.functionsUtil.BNify(collectedRewards).div(this.functionsUtil.BNify(accountingData[4])).times(this.props.contractInfo.maxMultiplier)))) : this.functionsUtil.BNify(1);\n\n    const distributionSpeedMultiplier = this.functionsUtil.BNify(1).div(this.props.contractInfo.maxMultiplier).times(rewardMultiplier);\n    const userDistributionSpeed = distributionSpeed.times(stakingShare).times(distributionSpeedMultiplier);\n    const rewardsPerDay = userDistributionSpeed.times(86400);\n\n    // console.log(parseFloat(this.functionsUtil.BNify(collectedRewards)),parseFloat(this.functionsUtil.BNify(accountingData[4])),this.props.contractInfo.maxMultiplier,parseFloat(this.functionsUtil.BNify(collectedRewards).div(this.functionsUtil.BNify(accountingData[4])).times(this.props.contractInfo.maxMultiplier)),parseFloat(rewardMultiplier));\n\n    // globalStats.push({\n    //   title:'Distribution rate',\n    //   description:'Your daily rewards distribution based on your current multiplier',\n    //   value:this.functionsUtil.formatMoney(rewardsPerDay)+' '+this.props.contractInfo.rewardToken+' / day',\n    // });\n\n    const stakedBalanceUSD = stakedBalance.times(this.state.poolTokenPrice);\n    const rewardsPerYearUSD = rewardsPerDay.times(365).times(this.state.rewardTokenPrice);\n    const apy = stakedBalanceUSD.gt(0) ? rewardsPerYearUSD.div(stakedBalanceUSD).times(100) : this.functionsUtil.BNify(0);\n\n    // console.log(parseFloat(this.state.stakedBalance),parseFloat(this.state.poolTokenPrice),parseFloat(stakedBalanceUSD),parseFloat(rewardsPerDay),parseFloat(this.state.rewardTokenPrice),parseFloat(rewardsPerYearUSD),parseFloat(apy));\n\n    globalStats.push({\n      title:'APY',\n      value:`${apy.toFixed(2)}%`,\n      description:'Annualized rewards based on your current multiplier',\n    });\n\n    globalStats.push({\n      title:'Share',\n      value:`${stakingShare.times(100).toFixed(2)}%`,\n      description:'Your share of the total deposits',\n    });\n\n    globalStats.push({\n      title:'Multiplier',\n      value:`${rewardMultiplier.toFixed(2)}x`,\n      description:`Deposit liquidity tokens for ${this.props.contractInfo.maxBonusDays} days to achieve a ${this.props.contractInfo.maxMultiplier}x reward multiplier`\n    });\n\n    const currentRewards = this.functionsUtil.formatMoney(this.functionsUtil.fixTokenDecimals(collectedRewards,this.props.tokenConfig.decimals));\n    globalStats.push({\n      title:'Rewards',\n      value:currentRewards+' '+this.props.contractInfo.rewardToken,\n      description:'Your share of the total unlocked reward pool. Larger your deposit and for longer, higher your share'\n    });\n\n    // console.log('loadStats',stats,globalStats);\n\n    const statsLoaded = true;\n\n    this.setState({\n      stats,\n      statsLoaded,\n      globalStats,\n      stakingShare,\n      totalRewards,\n      accountingData,\n      rewardMultiplier,\n      distributionSpeed,\n      totalStakingShares,\n      userDistributionSpeed,\n      distributionSpeedMultiplier\n    });\n  }\n\n  async contractApproved(contractApproved){\n    this.setState({\n      contractApproved\n    });\n  }\n\n  setAction(selectedAction){\n    this.setState({\n      selectedAction\n    });\n  }\n\n  async transactionSucceeded(tx,amount,params){\n    // console.log('transactionSucceeded',tx);\n    let infoBox = null;\n    switch (this.state.selectedAction){\n      case 'Stake':\n        const stakedTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.props.tokenConfig.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.props.contractInfo.address.replace('0x','').toLowerCase()) ) && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) ) && log.data.toLowerCase()!=='0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'.toLowerCase() ) : null;\n        const stakedTokens = stakedTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(stakedTokensLog.data,16),this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully staked <strong>${stakedTokens.toFixed(4)} ${this.props.selectedToken}</strong>`\n        }\n      break;\n      case 'Withdraw':\n        const unstakedTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.props.tokenConfig.address.toLowerCase() ) : null;\n        const unstakedTokens = unstakedTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(unstakedTokensLog.data,16),this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n        const rewardTokenConfig = this.functionsUtil.getGlobalConfig(['govTokens',this.props.contractInfo.rewardToken]);\n        const receivedRewardsLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => (log.address.toLowerCase() === rewardTokenConfig.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) )) ) : null;\n        const receivedRewards = receivedRewardsLog ? this.functionsUtil.fixTokenDecimals(parseInt(receivedRewardsLog.data,16),this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully withdrawn <strong>${unstakedTokens.toFixed(4)} ${this.props.selectedToken}</strong> and received <strong>${receivedRewards.toFixed(4)} ${this.props.contractInfo.rewardToken}</strong>`\n        }\n      break;\n      default:\n      break;\n    }\n\n    const transactionSucceeded = true;\n\n    this.setState({\n      infoBox,\n      transactionSucceeded\n    },() => {\n      this.updateData();\n    });\n  }\n\n  async updateData(selectedActionChanged=false){\n    const newState = {};\n\n    const DAITokenConfig = this.functionsUtil.getGlobalConfig(['stats','tokens','DAI']);\n    const rewardTokenConfig = this.functionsUtil.getGlobalConfig(['stats','tokens',this.props.contractInfo.rewardToken]);\n\n    const [\n      poolTokenPrice,\n      rewardTokenPrice,\n      tokenBalance,\n      stakedBalance,\n    ] = await Promise.all([\n      this.functionsUtil.getSushiswapPoolTokenPrice(this.props.selectedToken),\n      this.functionsUtil.getSushiswapConversionRate(DAITokenConfig,rewardTokenConfig),\n      this.functionsUtil.getTokenBalance(this.props.selectedToken,this.props.account),\n      this.functionsUtil.genericContractCall(this.props.contractInfo.name,'totalStakedFor',[this.props.account]),\n    ]);\n\n    newState.balanceProp = this.functionsUtil.BNify(0);\n    newState.tokenBalance = !this.functionsUtil.BNify(tokenBalance).isNaN() ? this.functionsUtil.BNify(tokenBalance) : this.functionsUtil.BNify(0);\n    newState.stakedBalance = !this.functionsUtil.BNify(stakedBalance).isNaN() ? this.functionsUtil.BNify(stakedBalance) : this.functionsUtil.BNify(0);\n    newState.poolTokenPrice = !this.functionsUtil.BNify(poolTokenPrice).isNaN() ? this.functionsUtil.BNify(poolTokenPrice) : this.functionsUtil.BNify(0);\n    newState.rewardTokenPrice = !this.functionsUtil.BNify(rewardTokenPrice).isNaN() ? this.functionsUtil.BNify(rewardTokenPrice) : this.functionsUtil.BNify(0);\n\n    switch (this.state.selectedAction){\n      case 'Stake':\n        newState.permitEnabled = true;\n        newState.approveEnabled = true;\n        newState.balanceProp = newState.tokenBalance;\n        newState.approveDescription = 'Approve the Staking contract to stake your LP tokens';\n        newState.tokenWrapperProps = {\n          startContract:{\n            name:'ETH',\n            token:'ETH',\n            decimals:18,\n            wrapMethod:'deposit',\n          },\n          destContract:{\n            unwrapMethod:'withdraw',\n            ...this.props.tokenConfig\n          },\n        };\n      break;\n      case 'Withdraw':\n        newState.permitEnabled = false;\n        newState.approveEnabled = false;\n        newState.approveDescription = '';\n        newState.balanceProp = this.functionsUtil.fixTokenDecimals(newState.stakedBalance,this.props.tokenConfig.decimals);\n        newState.tokenWrapperProps = {\n          startContract:{\n            name:'ETH',\n            token:'ETH',\n            decimals:18,\n            wrapMethod:'deposit',\n          },\n          destContract:{\n            unwrapMethod:'withdraw',\n            ...this.props.tokenConfig\n          },\n        };\n      break;\n      default:\n      break;\n    }\n\n    if (newState.balanceProp.lte(0)){\n      newState.showTokenWrapperEnabled = true;\n    }\n\n    if (selectedActionChanged){\n      newState.infoBox = null;\n      newState.transactionSucceeded = false;\n    }\n\n    // console.log('updateData',this.state.selectedAction,newState);\n\n    this.setState(newState,() => {\n      this.loadStats();\n    });\n  }\n\n  render() {\n\n    const StatsCard = props => {\n      const cardProps = {\n        p:3,\n        mb:2,\n        width:'49%',\n        ...props.cardProps\n      };\n      return (\n        <DashboardCard\n          title={props.title}\n          cardProps={cardProps}\n          titleProps={{\n            fontSize:1,\n            fontWeight:3,\n          }}\n          titleParentProps={{\n            mt:0,\n            ml:0\n          }}\n          description={props.description}\n        >\n          <Text\n            mt={1}\n            fontSize={[2,3]}\n            color={'statValue'}\n            {...props.textProps}\n          >\n            {props.value}\n          </Text>\n        </DashboardCard>\n      );\n    };\n\n    const isStake = this.state.selectedAction === 'Stake';\n    const isUnstake = this.state.selectedAction === 'Withdraw';\n    const isStats = this.state.selectedAction === 'Stats';\n    const txAction = this.state.selectedAction;\n\n    return (\n      <Box\n        width={1}\n      >\n      {\n        this.props.tokenConfig && this.props.tokenConfig.poolLink && (\n          <Box\n            mt={2}\n            width={1}\n          >\n            <Text\n              mb={1}\n            >\n              Pool link:\n            </Text>\n            <ExtLink\n              mt={1}\n              color={'link'}\n              hoverColor={'link'}\n              href={this.props.tokenConfig.poolLink}\n            >\n              <Text\n                color={'link'}\n                style={{\n                  maxWidth:'100%',\n                  overflow:'hidden',\n                  whiteSpace:'nowrap',\n                  textOverflow:'ellipsis'\n                }}\n              >\n                {this.props.tokenConfig.poolLink}\n              </Text>\n            </ExtLink>\n          </Box>\n        )\n      }\n      {\n        this.state.stakedBalance && this.functionsUtil.BNify(this.state.stakedBalance).gt(0) && this.state.globalStats.length>0 && (\n          <Box\n            mt={2}\n            width={1}\n          >\n            <Text\n              mb={1}\n            >\n              Your Stats:\n            </Text>\n            <Flex\n              mt={1}\n              width={1}\n              flexDirection={['column','row']}\n              justifyContent={'space-between'}\n            >\n              {\n                this.state.globalStats.map( (statInfo,index) =>\n                  <StatsCard\n                    key={`globalStats_${index}`}\n                    cardProps={{\n                      mb:[2,0],\n                      mr:[0,index<this.state.globalStats.length-1 ? 1 : 0],\n                      width:[1,'100%']\n                    }}\n                    textProps={{\n                      fontSize:[1,2]\n                    }}\n                    {...statInfo}\n                  />\n                )\n              }\n            </Flex>\n          </Box>\n        )\n      }\n      {\n        this.props.selectedToken && (\n          <Box\n            mt={2}\n            width={1}\n          >\n            <Text mb={1}>\n              Select Action:\n            </Text>\n            <Flex\n              alignItems={'center'}\n              flexDirection={['column','row']}\n              justifyContent={'space-between'}\n            >\n              <ImageButton\n                buttonProps={{\n                  mx:0,\n                  border:isStake ? 2 : 0\n                }}\n                width={[1,'32%']}\n                caption={'Stake'}\n                imageSrc={'images/mint.svg'}\n                isMobile={this.props.isMobile}\n                // subcaption={'stake LP Tokens'}\n                imageProps={{\n                  mb:[0,2],\n                  height:this.props.isMobile ? '42px' : '52px'\n                }}\n                isActive={isStake}\n                handleClick={ e => this.setAction('Stake') }\n              />\n              <ImageButton\n                buttonProps={{\n                  mx:0,\n                  border:isUnstake ? 2 : 0\n                }}\n                width={[1,'32%']}\n                caption={'Withdraw'}\n                imageSrc={'images/upload.svg'}\n                isMobile={this.props.isMobile}\n                // subcaption={'withdraw LP tokens'}\n                imageProps={{\n                  mb:[0,2],\n                  height:this.props.isMobile ? '42px' : '52px'\n                }}\n                isActive={isUnstake}\n                handleClick={ e => this.setAction('Withdraw') }\n              />\n              <ImageButton\n                buttonProps={{\n                  mx:0,\n                  border:isStats ? 2 : 0\n                }}\n                width={[1,'32%']}\n                caption={'Stats'}\n                imageSrc={'images/stats.svg'}\n                // subcaption={'view some stats'}\n                isMobile={this.props.isMobile}\n                imageProps={{\n                  mb:[0,2],\n                  height:this.props.isMobile ? '42px' : '52px'\n                }}\n                isActive={isStats}\n                handleClick={ e => this.setAction('Stats') }\n              />\n            </Flex>\n            {\n              (isStake || isUnstake) ?\n                (this.props.tokenConfig && this.state.balanceProp && this.state.statsLoaded && this.props.contractInfo ? (\n                  <Box\n                    mt={1}\n                    width={1}\n                    mb={[4,3]}\n                  >\n                    <SendTxWithBalance\n                      error={null}\n                      {...this.props}\n                      action={txAction}\n                      steps={this.state.steps}\n                      infoBox={this.state.infoBox}\n                      tokenConfig={this.props.tokenConfig}\n                      tokenBalance={this.state.balanceProp}\n                      contractInfo={this.props.contractInfo}\n                      permitEnabled={this.state.permitEnabled}\n                      approveEnabled={this.state.approveEnabled}\n                      callback={this.transactionSucceeded.bind(this)}\n                      approveDescription={this.state.approveDescription}\n                      contractApproved={this.contractApproved.bind(this)}\n                      balanceSelectorInfo={this.state.balanceSelectorInfo}\n                      changeInputCallback={this.changeInputCallback.bind(this)}\n                      getTransactionParams={this.getTransactionParams.bind(this)}\n                      getPermitTransactionParams={this.getPermitTransactionParams.bind(this)}\n                    >\n                      <DashboardCard\n                        cardProps={{\n                          p:3\n                        }}\n                      >\n                        <Flex\n                          alignItems={'center'}\n                          flexDirection={'column'}\n                        >\n                          <Icon\n                            name={'MoneyOff'}\n                            color={'cellText'}\n                            size={this.props.isMobile ? '1.8em' : '2.3em'}\n                          />\n                          <Text\n                            mt={1}\n                            fontSize={2}\n                            color={'cellText'}\n                            textAlign={'center'}\n                          >\n                            {\n                              isStake ? (\n                                `You don't have any ${this.props.selectedToken} in your wallet.`\n                              ) : isUnstake && (\n                                `You don't have any staked ${this.props.selectedToken} to withdraw.`\n                              )\n                            }\n                          </Text>\n                        </Flex>\n                      </DashboardCard>\n                    </SendTxWithBalance>\n                  </Box>\n                ) : (\n                  <Flex\n                    mt={3}\n                    mb={3}\n                    width={1}\n                  >\n                    <FlexLoader\n                      flexProps={{\n                        flexDirection:'row'\n                      }}\n                      loaderProps={{\n                        size:'30px'\n                      }}\n                      textProps={{\n                        ml:2\n                      }}\n                      text={'Loading info...'}\n                    />\n                  </Flex>\n                )\n              ) : isStats && (\n                <Flex\n                  mt={1}\n                  mb={3}\n                  width={1}\n                  style={{\n                    flexWrap:'wrap'\n                  }}\n                  justifyContent={'space-between'}\n                >\n                  {\n                    (!this.state.stats || !this.state.stats.length) ? (\n                      <Flex\n                        mt={3}\n                        mb={3}\n                        width={1}\n                      >\n                        <FlexLoader\n                          flexProps={{\n                            flexDirection:'row'\n                          }}\n                          loaderProps={{\n                            size:'30px'\n                          }}\n                          textProps={{\n                            ml:2\n                          }}\n                          text={'Loading stats...'}\n                        />\n                      </Flex>\n                    ) : this.state.stats.map( (statInfo,index) =>\n                      <StatsCard\n                        key={`stats_${index}`}\n                        cardProps={{\n                          width:[1,'49%']\n                        }}\n                        {...statInfo}\n                      />\n                    )\n                  }\n                </Flex>\n              )\n            }\n          </Box>\n        )\n      }\n      </Box>\n    );\n  }\n}\n\nexport default LpStaking;","import ExtLink from '../ExtLink/ExtLink';\nimport IconBox from '../IconBox/IconBox';\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport ConnectBox from '../ConnectBox/ConnectBox';\nimport ImageButton from '../ImageButton/ImageButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport CardIconButton from '../CardIconButton/CardIconButton';\nimport { Flex, Box, Text, Icon, Input, Button } from \"rimble-ui\";\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\nimport ExecuteTransaction from '../ExecuteTransaction/ExecuteTransaction';\n\nclass IdleStaking extends Component {\n\n  state = {\n    stats:[],\n    steps:null,\n    maxApr:null,\n    infoBox:null,\n    globalStats:[],\n    lockPeriods:[\n      {\n        value:14,\n        type:'day',\n        label:'2 weeks'\n      },\n      {\n        value:1,\n        type:'month',\n        label:'1 month'\n      },\n      {\n        value:1,\n        type:'year',\n        label:'1 year'\n      },\n      {\n        value:4,\n        type:'year',\n        label:'4 years'\n      },\n    ],\n    lockedEnd:null,\n    inputValue:null,\n    description:null,\n    tokenConfig:null,\n    balanceProp:null,\n    lockExpired:false,\n    statsLoaded:false,\n    tokenBalance:null,\n    contractInfo:null,\n    stakedBalance:null,\n    selectedToken:null,\n    rewardMultiplier:1,\n    claimedRewards:null,\n    accountingData:null,\n    increaseAction:null,\n    selectedAction:null,\n    selectedOption:null,\n    successMessage:null,\n    permitEnabled:false,\n    poolTokenPrice:null,\n    lockPeriodInput:null,\n    buttonDisabled:false,\n    internalInfoBox:null,\n    availableTokens:null,\n    approveEnabled:false,\n    rewardTokenPrice:null,\n    contractApproved:false,\n    tokenWrapperProps:null,\n    distributionSpeed:null,\n    distributedRewards:null,\n    selectedLockPeriod:null,\n    approveDescription:null,\n    balanceSelectorInfo:null,\n    lockPeriodTimestamp:null,\n    transactionSucceeded:false,\n    showTokenWrapperEnabled:false,\n    lockEndDateIsMaxEndDate:false\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.setState({\n      selectedAction:'Lock'\n    },() => {\n      this.updateData();\n    });\n  }\n\n  async componentDidMount(){\n    const feeDistributorConfig = this.props.tokenConfig.feeDistributor;\n    await this.props.initContract(feeDistributorConfig.name,feeDistributorConfig.address,feeDistributorConfig.abi);\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const accountChanged = prevProps.account !== this.props.account;\n    const selectedActionChanged = prevState.selectedAction !== this.state.selectedAction;\n    const contractApprovedChanged = prevState.contractApproved !== this.state.contractApproved;\n    const tokenConfigChanged = JSON.stringify(prevProps.tokenConfig) !== JSON.stringify(this.props.tokenConfig);\n    const contractInfoChanged = JSON.stringify(prevProps.contractInfo) !== JSON.stringify(this.props.contractInfo);\n    if (selectedActionChanged || accountChanged || contractApprovedChanged || tokenConfigChanged){\n      const increaseAction = selectedActionChanged ? null : this.state.increaseAction;\n      this.setState({\n        increaseAction,\n        tokenWrapperProps:null,\n        showTokenWrapperEnabled:false,\n      },() => {\n        this.updateData(selectedActionChanged);\n      });\n    }\n\n    if (contractInfoChanged){\n      this.changeInputCallback();\n    }\n\n    const lockPeriodChanged = prevState.lockPeriodTimestamp !== this.state.lockPeriodTimestamp;\n    const increaseActionChanged = prevState.increaseAction !== this.state.increaseAction;\n    if (lockPeriodChanged || increaseActionChanged || selectedActionChanged){\n      if (increaseActionChanged){\n        this.setState({\n          internalInfoBox:null\n        });\n      } else if (lockPeriodChanged){\n        this.calculateStkIDLEAmount();\n      }\n      this.checkButtonDisabled();\n    }\n  }\n\n  checkButtonDisabled(){\n    let buttonDisabled = false;\n    const minLockPeriod = this.state.lockPeriods[0];\n    const maxLockPeriod = Object.assign([],this.state.lockPeriods).pop();\n    const minDate = this.state.lockedEnd ? this.functionsUtil.strToMoment(this.state.lockedEnd*1000).add(minLockPeriod.value,minLockPeriod.type) : this.functionsUtil.strToMoment().add(minLockPeriod.value,minLockPeriod.type);\n    const mDate = this.functionsUtil.strToMoment(this.state.lockPeriodTimestamp*1000);\n    const maxDate = this.functionsUtil.strToMoment().add(maxLockPeriod.value,maxLockPeriod.type);\n    switch (this.state.selectedAction){\n      default:\n      case 'Lock':\n        buttonDisabled = mDate.isAfter(maxDate) || mDate.isSameOrBefore(minDate);\n      break;\n      case 'Increase Lock':\n        if (this.state.increaseAction === 'time'){\n          buttonDisabled = mDate.isAfter(maxDate) || mDate.isSameOrBefore(minDate);\n        }\n      break;\n    }\n\n    // console.log('checkButtonDisabled',this.state.selectedAction,this.state.increaseAction,buttonDisabled);\n\n    this.setState({\n      buttonDisabled\n    });\n  }\n\n  async changeInputCallback(inputValue=null){\n    inputValue = this.functionsUtil.BNify(inputValue);\n    this.setState({\n      inputValue\n    },() => {\n      this.calculateStkIDLEAmount();\n    });\n  }\n\n  calculateStkIDLEAmount(){\n    let internalInfoBox = null;\n    if (this.state.inputValue && this.functionsUtil.BNify(this.state.inputValue).gt(0) && this.state.lockPeriodTimestamp !== null){\n      switch (this.state.selectedAction){\n        case 'Lock':\n          const currTime = parseInt(Date.now()/1000);\n          const maxDate = this.functionsUtil.strToMoment().add(4,'year');\n          let endDate = this.functionsUtil.strToMoment(this.state.lockPeriodTimestamp*1000);\n          if (endDate.isAfter(maxDate)){\n            endDate = maxDate;\n          }\n          const endDateTime = parseInt(endDate._d.getTime()/1000)-currTime;\n          const maxDateTime = parseInt(maxDate._d.getTime()/1000)-currTime;\n          const stkIDLEAmount = this.state.inputValue.times(endDateTime).div(maxDateTime);\n\n          const percentage = stkIDLEAmount.div(this.state.inputValue).times(100);\n\n          // console.log(this.state.inputValue.toString(),endDate.format('YYYY-MM-DD HH:mm:ss'),maxDate.format('YYYY-MM-DD HH:mm:ss'),endDateTime,maxDateTime,stkIDLEAmount.toFixed());\n\n          let text = `By staking <strong>${this.state.inputValue.toFixed(4)} ${this.props.selectedToken}</strong> until <strong>${endDate.utc().format('YYYY-MM-DD HH:mm')} UTC</strong> you will get back <strong>${stkIDLEAmount.toFixed(4)} ${this.props.tokenConfig.contract.name}</strong> (${Math.ceil(percentage)}% of staking power).`;\n          if (Math.ceil(percentage)<100){\n            text += `<br />Stake your tokens for <strong>4 years</strong> to reach the maximum staking power.`;\n          }\n          text += `<br /><span style=\"color:${this.props.theme.colors.alert};font-size:14px\">Keep in mind that once you lock ${this.props.selectedToken} you cannot reverse the operation until the lock end date has been reached.</span>`;\n          internalInfoBox = {\n            text,\n            icon:'LockOutline',\n            iconProps:{\n              color:'cellText'\n            },\n          };\n        break;\n        default:\n        break;\n      }\n    }\n    this.setState({\n      internalInfoBox\n    });\n  }\n\n  getIncreaseTimeParams(){\n    const _unlock_time = parseInt(this.state.lockPeriodTimestamp);\n    // console.log('getIncreaseTimeParams',_unlock_time);\n    return [_unlock_time];\n  }\n\n  getTransactionParams(amount){\n    let methodName = null;\n    let methodParams = [];\n    const _value = this.functionsUtil.toBN(amount);\n    const _unlock_time = parseInt(this.state.lockPeriodTimestamp);\n    switch (this.state.selectedAction){\n      case 'Lock':\n        methodName = 'create_lock';\n        methodParams = [_value,_unlock_time];\n        // console.log('getTransactionParams',methodName,methodParams);\n      break;\n      case 'Increase Lock':\n        methodName = 'increase_amount';\n        methodParams = [_value];\n      break;\n      default:\n      break;\n    }\n    return {\n      methodName,\n      methodParams\n    };\n  }\n\n  async loadStats(){\n\n    const stats = [];\n    const globalStats = [];\n    const statsLoaded = true;\n\n    let [\n      etherscanRewardsTxs,\n      totalSupply,\n      tokenTotalSupply,\n      claimableRewards,\n      lockedInfo,\n      tokenUserBalance,\n      claimable,\n      claimEvents,\n      // checkpointEvents,\n      depositEvents\n    ] = await Promise.all([\n      this.functionsUtil.getIdleStakingRewardsTxs(),\n      this.functionsUtil.genericContractCallCached(this.props.contractInfo.name,'supply'),\n      this.functionsUtil.genericContractCallCached(this.props.contractInfo.name, 'totalSupply'),\n      this.functionsUtil.getTokenBalance(this.props.contractInfo.rewardToken,this.props.tokenConfig.feeDistributor.address),\n      this.props.account ? this.functionsUtil.genericContractCall(this.props.contractInfo.name,'locked',[this.props.account]) : null,\n      this.props.account ? this.functionsUtil.getContractBalance(this.props.contractInfo.name,this.props.account) : this.functionsUtil.BNify(0),\n      this.props.account ? this.functionsUtil.genericContractCall(this.props.tokenConfig.feeDistributor.name,'claim',[this.props.account]) : this.functionsUtil.BNify(0),\n      this.functionsUtil.getContractEvents(this.props.tokenConfig.feeDistributor.name,'Claimed',{fromBlock: this.props.tokenConfig.feeDistributor.fromBlock, toBlock:'latest'}),\n      // this.functionsUtil.getContractEvents(this.props.tokenConfig.feeDistributor.name,'CheckpointToken',{fromBlock: this.props.tokenConfig.feeDistributor.fromBlock, toBlock:'latest'}),\n      this.props.account ? this.functionsUtil.getContractEvents(this.props.contractInfo.name,'Deposit',{fromBlock: this.props.contractInfo.fromBlock, toBlock:'latest',filter:{provider:this.props.account}}) : []\n    ]);\n\n    // console.log('etherscanRewardsTxs',etherscanRewardsTxs);\n\n    const rewardTokenConfig = this.functionsUtil.getGlobalConfig(['govTokens',this.props.contractInfo.rewardToken]);\n\n    let distributedRewards = [];\n    let totalRewards = this.functionsUtil.BNify(0);\n    let totalRewardsDays = this.functionsUtil.BNify(0);\n\n    if (etherscanRewardsTxs && etherscanRewardsTxs.length){\n      totalRewardsDays = Math.abs(etherscanRewardsTxs[0].timeStamp-etherscanRewardsTxs[etherscanRewardsTxs.length-1].timeStamp)/86400;\n      distributedRewards = etherscanRewardsTxs.map( tx => {\n        const amount = this.functionsUtil.fixTokenDecimals(tx.value,rewardTokenConfig.decimals);\n        totalRewards = totalRewards.plus(amount);\n        return {\n          amount,\n          hash:tx.hash,\n          timeStamp:tx.timeStamp,\n          tokenName:tx.tokenSymbol,\n          date:this.functionsUtil.strToMoment(parseInt(tx.timeStamp)*1000).utc().format('YYYY-MM-DD HH:mm')+' UTC'\n        };\n      });\n    }\n\n    const claimedRewards = [];\n    let totalClaimedUser = this.functionsUtil.BNify(0);\n    await this.functionsUtil.asyncForEach(claimEvents, async (e) => {\n      if (this.props.account && e.returnValues && e.returnValues.recipient && e.returnValues.recipient.toLowerCase() === this.props.account.toLowerCase()){\n        const blockInfo = await this.functionsUtil.getBlockInfo(e.blockNumber);\n        if (blockInfo){\n          const claimedAmount = this.functionsUtil.fixTokenDecimals(e.returnValues.amount,rewardTokenConfig.decimals);\n          totalClaimedUser = totalClaimedUser.plus(claimedAmount);\n          claimedRewards.push({\n            amount:claimedAmount,\n            hash:e.transactionHash,\n            tokenName:this.props.contractInfo.rewardToken,\n            date:this.functionsUtil.strToMoment(parseInt(blockInfo.timestamp)*1000).utc().format('YYYY-MM-DD HH:mm')+' UTC'\n          });\n        }\n      }\n    });\n\n    tokenUserBalance = this.functionsUtil.fixTokenDecimals(tokenUserBalance,this.props.contractInfo.decimals);\n\n    const totalDeposited = totalSupply ? this.functionsUtil.fixTokenDecimals(totalSupply,this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n    const totalLockedFunds = totalSupply ? this.functionsUtil.formatMoney(totalDeposited,4)+' '+this.props.selectedToken : (this.state.stats.length ? this.state.stats[0] : this.functionsUtil.formatMoney(totalDeposited,4)+' '+this.props.selectedToken);\n    stats.push({\n      title:'Total Locked Funds',\n      value:totalLockedFunds\n    });\n\n    tokenTotalSupply = tokenTotalSupply ? this.functionsUtil.fixTokenDecimals(tokenTotalSupply,this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n    const stkTokenTotalSupply = tokenTotalSupply ? this.functionsUtil.formatMoney(tokenTotalSupply,4)+' '+this.props.contractInfo.name : (this.state.stats.length ? this.state.stats[1] : this.functionsUtil.formatMoney(tokenTotalSupply,4)+' '+this.props.contractInfo.name);\n    stats.push({\n      title:`${this.props.contractInfo.name} Total Supply`,\n      value:stkTokenTotalSupply\n    });\n\n    const claimableRewardsFormatted = claimableRewards ? this.functionsUtil.formatMoney(claimableRewards,4)+' '+this.props.contractInfo.rewardToken : (this.state.stats.length ? this.state.stats[2] : this.functionsUtil.formatMoney(claimableRewards,4)+' '+this.props.contractInfo.rewardToken);\n    stats.push({\n      title:'Claimable Rewards',\n      value:claimableRewardsFormatted\n    });\n\n    // const totalClaimed = claimEvents.reduce( (totalClaimed,event) => {\n    //   const claimedAmount = this.functionsUtil.fixTokenDecimals(event.returnValues.amount,rewardTokenConfig.decimals);\n    //   totalClaimed = totalClaimed.plus(claimedAmount);\n    //   return totalClaimed;\n    // },this.functionsUtil.BNify(0));\n\n    const totalRewardsFormatted = this.functionsUtil.formatMoney(totalRewards,4)+' '+this.props.contractInfo.rewardToken;\n    stats.push({\n      title:'Total Rewards',\n      value:totalRewardsFormatted\n    });\n\n    const maxApr = totalRewards.div(tokenTotalSupply).times(365.2425).div(totalRewardsDays);\n    stats.push({\n      title:'APR (1 year staking)',\n      value:maxApr.div(4).times(100).toFixed(2)+'%'\n    });\n    stats.push({\n      title:'APR (4 years staking)',\n      value:maxApr.times(100).toFixed(2)+'%'\n    });\n\n    const stakedBalance = lockedInfo && lockedInfo.amount ? this.functionsUtil.fixTokenDecimals(lockedInfo.amount,this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n    const userDeposited = this.functionsUtil.formatMoney(stakedBalance,4);\n    globalStats.push({\n      title:'Total Deposited',\n      description:'Your total deposited amount',\n      value:userDeposited+' '+this.props.contractInfo.rewardToken,\n    });\n\n    const stakingShare = tokenUserBalance.div(tokenTotalSupply);\n    globalStats.push({\n      title:'Share',\n      value:`${stakingShare.times(100).toFixed(2)}%`,\n      description:'Your share of the total deposits',\n    });\n\n    globalStats.push({\n      title:`${this.props.contractInfo.name} balance`,\n      value:`${this.functionsUtil.formatMoney(tokenUserBalance,4)} ${this.props.contractInfo.name}`,\n    });\n    \n    claimable = claimable ? this.functionsUtil.fixTokenDecimals(claimable,this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n    const currentRewards = this.functionsUtil.formatMoney(claimable,4);\n    globalStats.push({\n      title:'Claimable Rewards',\n      value:`${currentRewards} ${this.props.contractInfo.rewardToken}`,\n      // description:'Your claimable rewards'\n    });\n\n    const totalCollectedRewards = claimable.plus(totalClaimedUser);\n\n    let stakeStartTime = depositEvents.reduce( (stakedTime,event) => {\n      const depositTimestamp = this.functionsUtil.BNify(event.returnValues.ts);\n      const depositValue = this.functionsUtil.fixTokenDecimals(event.returnValues.value,this.props.tokenConfig.decimals);\n      if (depositValue.gt(0)){\n        stakedTime = stakedTime.plus(depositValue.times(depositTimestamp));\n        // console.log(depositTimestamp.toString(),depositValue.toFixed(),stakedTime.toString());\n      }\n      return stakedTime;\n    },this.functionsUtil.BNify(0));\n\n    // console.log('stakeStartTime',stakeStartTime,stakedBalance.toFixed());\n\n    stakeStartTime = stakedBalance.gt(0) ? Math.ceil(stakeStartTime.div(stakedBalance)) : 0;\n    // const latestCheckpoint = checkpointEvents.length ? checkpointEvents[checkpointEvents.length-1] : null;\n    // const latestDistribution = etherscanRewardsTxs[0];\n    // const latestDistributionTime = latestDistribution ? this.functionsUtil.BNify(latestDistribution.timeStamp) : this.functionsUtil.BNify(parseInt(Date.now()/1000));\n    // const latestDistributionTime = latestCheckpoint ? this.functionsUtil.BNify(latestCheckpoint.returnValues.time) : this.functionsUtil.BNify(parseInt(Date.now()/1000));\n    const currTime = parseInt(Date.now()/1000);\n    const stakePeriod = this.functionsUtil.BNify(currTime).minus(stakeStartTime);\n    const currentProfit = stakedBalance.gt(0) ? totalCollectedRewards.div(stakedBalance) : this.functionsUtil.BNify(0);\n    const weeksPerYear = 52.14;\n    const secondsPerWeek = 604800;\n    const stakePeriodWeeks = Math.max(1,Math.floor(stakePeriod.div(secondsPerWeek)));\n    const apr = stakePeriod.gt(0) ? currentProfit.times(weeksPerYear).div(stakePeriodWeeks).times(100) : this.functionsUtil.BNify(0);\n    \n    // console.log('APR',currTime,stakeStartTime,apr.toFixed(),currentProfit.toFixed(),stakePeriod.toFixed(),stakePeriodWeeks,totalCollectedRewards.toFixed(),stakedBalance.toFixed());\n\n    globalStats.push({\n      title:'APR',\n      value:`${apr.toFixed(2)}%`,\n      description:'APR is based on your Claimable Rewards and Total Deposited'\n    });\n\n    const lockEndDate = this.state.lockedEnd ? this.functionsUtil.strToMoment(this.state.lockedEnd*1000).utc().format('YYYY/MM/DD HH:mm') : '';\n    globalStats.push({\n      value:lockEndDate,\n      title:'Lock End Date (UTC)',\n      description:'Ending date of your Lock'\n    });\n\n    this.setState({\n      stats,\n      maxApr,\n      claimable,\n      globalStats,\n      statsLoaded,\n      stakedBalance,\n      claimedRewards,\n      distributedRewards\n    });\n  }\n\n  async contractApprovedCallback(contractApproved){\n    this.setState({\n      contractApproved\n    });\n  }\n\n  setAction(selectedAction){\n    this.setState({\n      selectedAction\n    });\n  }\n\n  setIncreaseAction(increaseAction){\n    this.setState({\n      increaseAction\n    });\n  }\n\n  changelockPeriodInput(e){\n    const selectedLockPeriod = null;\n    const lockPeriodInput = e.target.value;\n    const currDate = this.functionsUtil.strToMoment();\n    const mDate = this.functionsUtil.strToMoment(lockPeriodInput+' '+currDate.format('HH:mm:ss'),'YYYY-MM-DD HH:mm:ss').add(1,'second');\n    if (mDate.isValid()){\n      const lockPeriodTimestamp = parseInt(mDate._d.getTime()/1000);\n      // console.log('changelockPeriodInput',lockPeriodTimestamp);\n      this.setState({\n        lockPeriodInput,\n        selectedLockPeriod,\n        lockPeriodTimestamp\n      });\n    }\n  }\n\n  selectLockPeriod(selectedLockPeriod){\n    const minDate = this.state.lockedEnd ? this.functionsUtil.strToMoment(this.state.lockedEnd*1000) : this.functionsUtil.strToMoment();\n    const maxDate = this.functionsUtil.strToMoment().add(4,'year');\n    let mDate = minDate.add(selectedLockPeriod.value,selectedLockPeriod.type).add(1,'second');\n\n    // Check if after 4 years from now\n    if (mDate.isAfter(maxDate)){\n      mDate = maxDate;\n    }\n\n    const lockPeriodInput = mDate.format('YYYY-MM-DD');\n    const lockPeriodTimestamp = parseInt(mDate._d.getTime()/1000);\n\n    // console.log('selectLockPeriod',lockPeriodInput,lockPeriodTimestamp);\n\n    this.setState({\n      lockPeriodInput,\n      selectedLockPeriod,\n      lockPeriodTimestamp\n    });\n  }\n\n  async transactionSucceeded(tx,amount,params){\n    // console.log('transactionSucceeded',tx);\n    let infoBox = null;\n    let internalInfoBox = null;\n    switch (this.state.selectedAction){\n      case 'Lock':\n        const lockedTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.props.tokenConfig.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.props.contractInfo.address.replace('0x','').toLowerCase()) ) && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) ) && log.data.toLowerCase()!=='0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'.toLowerCase() ) : null;\n        const lockedTokens = lockedTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(lockedTokensLog.data,16),this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n        internalInfoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully locked <strong>${lockedTokens.toFixed(4)} ${this.props.selectedToken}</strong>`\n        }\n      break;\n      case 'Increase Lock':\n        switch (this.state.increaseAction){\n          case 'time':\n            internalInfoBox = {\n              icon:'DoneAll',\n              iconProps:{\n                color:this.props.theme.colors.transactions.status.completed\n              },\n              text:`You have successfully increased the lock until <strong>${this.functionsUtil.strToMoment(this.state.lockPeriodTimestamp*1000).utc().format('YYYY/MM/DD HH:mm')} UTC</strong>`\n            }\n          break;\n          case 'amount':\n            const increaseAmountTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.props.tokenConfig.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.props.contractInfo.address.replace('0x','').toLowerCase()) ) && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) ) && log.data.toLowerCase()!=='0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'.toLowerCase() ) : null;\n            const increaseTokens = increaseAmountTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(increaseAmountTokensLog.data,16),this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n            internalInfoBox = {\n              icon:'DoneAll',\n              iconProps:{\n                color:this.props.theme.colors.transactions.status.completed\n              },\n              text:`You have successfully increased the lock by <strong>${increaseTokens.toFixed(4)} ${this.props.selectedToken}</strong>`\n            }\n          break;\n          default:\n          break;\n        }\n      break;\n      case 'Withdraw':\n        const unstakedTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.props.tokenConfig.address.toLowerCase() ) : null;\n        const unstakedTokens = unstakedTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(unstakedTokensLog.data,16),this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n        internalInfoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully withdrawn <strong>${unstakedTokens.toFixed(4)} ${this.props.selectedToken}</strong>`\n        }\n      break;\n      case 'Claim':\n        const rewardTokenConfig = this.functionsUtil.getGlobalConfig(['govTokens',this.props.contractInfo.rewardToken]);\n        const receivedRewardsLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => (log.address.toLowerCase() === rewardTokenConfig.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) )) ) : null;\n        const receivedRewards = receivedRewardsLog ? this.functionsUtil.fixTokenDecimals(parseInt(receivedRewardsLog.data,16),rewardTokenConfig.decimals) : this.functionsUtil.BNify(0);\n        internalInfoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully claimed <strong>${receivedRewards.toFixed(4)} ${this.props.contractInfo.rewardToken}</strong>`\n        }\n      break;\n      default:\n      break;\n    }\n\n    const transactionSucceeded = true;\n\n    this.setState({\n      infoBox,\n      internalInfoBox,\n      transactionSucceeded\n    },() => {\n      this.updateData();\n    });\n  }\n\n  async updateData(selectedActionChanged=false){\n    const newState = {};\n\n    // const rewardTokenConfig = this.functionsUtil.getGlobalConfig(['stats','tokens',this.props.contractInfo.rewardToken]);\n\n    const [\n      tokenBalance,\n      lockedEnd,\n    ] = await Promise.all([\n      this.functionsUtil.getTokenBalance(this.props.selectedToken,this.props.account),\n      this.functionsUtil.genericContractCall(this.props.contractInfo.name,'locked__end',[this.props.account])\n    ]);\n\n    newState.lockedEnd = lockedEnd && parseInt(lockedEnd)>0 ? parseInt(lockedEnd) : null;\n    newState.lockExpired = newState.lockedEnd && newState.lockedEnd<=parseInt(Date.now()/1000);\n    newState.tokenBalance = !this.functionsUtil.BNify(tokenBalance).isNaN() ? this.functionsUtil.BNify(tokenBalance) : this.functionsUtil.BNify(0);\n\n    let selectedAction = this.state.selectedAction;\n\n    if (selectedAction==='Withdraw' && !newState.lockExpired){\n      selectedAction = 'Lock';\n      newState.selectedAction = selectedAction;\n    }\n\n    // Select Increase if already created a lock\n    if (newState.lockedEnd && selectedAction==='Lock'){\n      selectedAction = 'Increase Lock';\n      newState.increaseAction = 'time';\n      newState.selectedAction = selectedAction;\n    } else if (selectedAction==='Increase Lock' && !newState.increaseAction && !this.state.increaseAction){\n      newState.increaseAction = 'time';\n    }\n\n    // Select Withdraw if the lock has expired\n    if (selectedAction==='Increase Lock' && newState.lockExpired){\n      selectedAction = 'Withdraw';\n      newState.selectedAction = selectedAction;\n    }\n\n    switch (selectedAction){\n      case 'Lock':\n        newState.permitEnabled = false;\n        newState.approveEnabled = true;\n        newState.balanceProp = newState.tokenBalance;\n        newState.approveDescription = `Approve the Staking contract to stake your ${this.props.selectedToken} tokens`;\n      break;\n      case 'Increase Lock':\n        newState.permitEnabled = false;\n        newState.approveEnabled = false;\n        newState.approveDescription = '';\n        newState.balanceProp = newState.tokenBalance;\n        newState.lockPeriodInput = this.functionsUtil.strToMoment(newState.lockedEnd*1000).format('YYYY-MM-DD');\n      break;\n      case 'Withdraw':\n        newState.permitEnabled = false;\n        newState.approveEnabled = false;\n        newState.approveDescription = '';\n        newState.balanceProp = this.functionsUtil.fixTokenDecimals(newState.stakedBalance,this.props.tokenConfig.decimals);\n      break;\n      default:\n      break;\n    }\n\n    if (selectedActionChanged){\n      newState.infoBox = null;\n      newState.internalInfoBox = null;\n      newState.transactionSucceeded = false;\n    }\n\n    const maxDate = this.functionsUtil.strToMoment().add(4,'year').format('YYYY-MM-DD');\n    newState.lockEndDateIsMaxEndDate = newState.lockedEnd ? this.functionsUtil.strToMoment(newState.lockedEnd*1000).format('YYYY-MM-DD')===maxDate : false;\n\n    // console.log('lockEndDateIsMaxEndDate',newState.lockEndDateIsMaxEndDate,maxDate,this.functionsUtil.strToMoment(newState.lockedEnd*1000).format('YYYY-MM-DD'));\n\n    this.setState(newState,() => {\n      this.loadStats();\n    });\n  }\n\n  render() {\n\n    const StatsCard = props => {\n      const cardProps = {\n        p:3,\n        mb:2,\n        width:'49%',\n        ...props.cardProps\n      };\n      return (\n        <DashboardCard\n          title={props.title}\n          cardProps={cardProps}\n          titleProps={{\n            fontSize:1,\n            fontWeight:3,\n          }}\n          titleParentProps={{\n            mt:0,\n            ml:0\n          }}\n          description={props.description}\n        >\n          <Text\n            mt={1}\n            fontSize={[2,3]}\n            color={'statValue'}\n            {...props.textProps}\n          >\n            {props.value}\n          </Text>\n        </DashboardCard>\n      );\n    };\n\n    const isLock = this.state.selectedAction === 'Lock';\n    const isStats = this.state.selectedAction === 'Stats';\n    const isClaim = this.state.selectedAction === 'Claim';\n    const isUnstake = this.state.selectedAction === 'Withdraw';\n    const isIncrease = this.state.selectedAction === 'Increase Lock';\n    const txAction = this.state.selectedAction;\n    const canIncrease = !this.state.lockExpired;\n\n    return (\n      <Box\n        width={1}\n      >\n      {\n        this.props.tokenConfig && this.props.tokenConfig.poolLink && (\n          <Box\n            mt={2}\n            width={1}\n          >\n            <Text\n              mb={1}\n            >\n              Token link:\n            </Text>\n            <ExtLink\n              mt={1}\n              color={'link'}\n              hoverColor={'link'}\n              href={this.props.tokenConfig.poolLink}\n            >\n              <Text\n                color={'link'}\n                style={{\n                  maxWidth:'100%',\n                  overflow:'hidden',\n                  whiteSpace:'nowrap',\n                  textOverflow:'ellipsis'\n                }}\n              >\n                {this.props.tokenConfig.poolLink}\n              </Text>\n            </ExtLink>\n          </Box>\n        )\n      }\n      {\n        this.state.stakedBalance && this.functionsUtil.BNify(this.state.stakedBalance).gt(0) && this.state.globalStats.length>0 && (\n          <Box\n            mt={2}\n            width={1}\n          >\n            <Text\n              mb={1}\n            >\n              Your Stats:\n            </Text>\n            <Flex\n              mt={1}\n              mb={1}\n              width={1}\n              style={{\n                flexBasis:'0',\n                flex:'1 1 0px',\n                flexWrap:'wrap'\n              }}\n              justifyContent={'space-between'}\n            >\n              {\n                this.state.globalStats.map( (statInfo,index) =>\n                  <StatsCard\n                    key={`globalStats_${index}`}\n                    cardProps={{\n                      mb:2,\n                      width:['49%','33%'],\n                      // mr:[0,index<this.state.globalStats.length-1 ? 1 : 0]\n                    }}\n                    textProps={{\n                      fontSize:[1,2]\n                    }}\n                    {...statInfo}\n                  />\n                )\n              }\n            </Flex>\n          </Box>\n        )\n      }\n      {\n        this.props.selectedToken && (\n          <Box\n            mt={2}\n            width={1}\n          >\n            <Text mb={1}>\n              Select Action:\n            </Text>\n            <Flex\n              alignItems={'center'}\n              flexDirection={['column','row']}\n              justifyContent={'space-between'}\n            >\n              {\n                this.state.lockedEnd === null ? (\n                  <ImageButton\n                    buttonProps={{\n                      mx:0,\n                      border:isLock ? 2 : 0\n                    }}\n                    caption={'Lock'}\n                    width={[1,'32%']}\n                    imageSrc={'images/lock.svg'}\n                    isMobile={this.props.isMobile}\n                    // subcaption={'stake LP Tokens'}\n                    imageProps={{\n                      mb:[0,2],\n                      height:this.props.isMobile ? '42px' : '52px'\n                    }}\n                    isActive={isLock}\n                    handleClick={ e => this.setAction('Lock') }\n                  />\n                ) : !this.state.lockExpired ? (\n                  <ImageButton\n                    buttonProps={{\n                      mx:0,\n                      border:isIncrease ? 2 : 0\n                    }}\n                    width={[1,'32%']}\n                    isActive={isIncrease}\n                    caption={'Increase Lock'}\n                    imageSrc={'images/lock.svg'}\n                    isMobile={this.props.isMobile}\n                    imageProps={{\n                      mb:[0,2],\n                      height:this.props.isMobile ? '42px' : '54px'\n                    }}\n                    handleClick={ e => this.setAction('Increase Lock') }\n                  />\n                ) : (\n                  <ImageButton\n                    buttonProps={{\n                      mx:0,\n                      border:isUnstake ? 2 : 0\n                    }}\n                    width={[1,'32%']}\n                    caption={'Withdraw'}\n                    imageSrc={'images/upload.svg'}\n                    isMobile={this.props.isMobile}\n                    // subcaption={'withdraw LP tokens'}\n                    imageProps={{\n                      mb:[0,2],\n                      height:this.props.isMobile ? '42px' : '52px'\n                    }}\n                    isActive={isUnstake}\n                    handleClick={ e => this.setAction('Withdraw') }\n                  />\n                )\n              }\n              <ImageButton\n                buttonProps={{\n                  mx:0,\n                  border:isClaim ? 2 : 0\n                }}\n                width={[1,'32%']}\n                caption={'Claim'}\n                imageSrc={'images/reward.png'}\n                isMobile={this.props.isMobile}\n                // subcaption={'withdraw LP tokens'}\n                imageProps={{\n                  mb:[0,2],\n                  height:this.props.isMobile ? '42px' : '52px'\n                }}\n                isActive={isClaim}\n                handleClick={ e => this.setAction('Claim') }\n              />\n              <ImageButton\n                buttonProps={{\n                  mx:0,\n                  border:isStats ? 2 : 0\n                }}\n                width={[1,'32%']}\n                caption={'Stats'}\n                imageSrc={'images/stats.svg'}\n                isMobile={this.props.isMobile}\n                imageProps={{\n                  mb:[0,2],\n                  height:this.props.isMobile ? '42px' : '52px'\n                }}\n                isActive={isStats}\n                handleClick={ e => this.setAction('Stats') }\n              />\n            </Flex>\n            {\n              this.state.internalInfoBox && (\n                <IconBox\n                  cardProps={{\n                    mt:1,\n                    mb:3\n                  }}\n                  {...this.state.internalInfoBox}\n                />\n              )\n            }\n            {\n              isStats ? (\n                <Flex\n                  mt={1}\n                  mb={3}\n                  width={1}\n                  style={{\n                    flexWrap:'wrap'\n                  }}\n                  justifyContent={'space-between'}\n                >\n                  {\n                    (!this.state.stats || !this.state.stats.length) ? (\n                      <Flex\n                        mt={3}\n                        mb={3}\n                        width={1}\n                      >\n                        <FlexLoader\n                          flexProps={{\n                            flexDirection:'row'\n                          }}\n                          loaderProps={{\n                            size:'30px'\n                          }}\n                          textProps={{\n                            ml:2\n                          }}\n                          text={'Loading stats...'}\n                        />\n                      </Flex>\n                    ) : this.state.stats.map( (statInfo,index) =>\n                      <StatsCard\n                        key={`stats_${index}`}\n                        cardProps={{\n                          width:[1,'49%']\n                        }}\n                        {...statInfo}\n                      />\n                    )\n                  }\n                  <Text\n                    mb={1}\n                  >\n                    Distributed Rewards:\n                  </Text>\n                  <Flex\n                    mb={3}\n                    width={1}\n                    alignItems={'center'}\n                    justifyContent={'center'}\n                  >\n                    <DashboardCard\n                      cardProps={{\n                        pt:2,\n                        pb:3,\n                        px:3,\n                        width:1,\n                        display:'flex',\n                        alignItems:'center',\n                        justifyContent:'center'\n                      }}\n                      isActive={false}\n                      isInteractive={false}\n                    >\n                      {\n                        this.state.distributedRewards && this.state.distributedRewards.length ? (\n                          <Flex\n                            width={1}\n                            flexDirection={'column'}\n                          >\n                            <Flex\n                              pt={0}\n                              pb={1}\n                              width={1}\n                              flexDirection={'row'}\n                              borderBottom={`1px solid ${this.props.theme.colors.divider}`}\n                            >\n                              <Text\n                                fontSize={1}\n                                fontWeight={3}\n                                width={this.props.isMobile ? 0.5 : 0.4}\n                              >\n                                Date\n                              </Text>\n                              <Text\n                                fontSize={1}\n                                fontWeight={3}\n                                width={this.props.isMobile ? 0.5 : 0.3}\n                                textAlign={this.props.isMobile ? 'right' : 'left'}\n                              >\n                                Amount\n                              </Text>\n                              {\n                                !this.props.isMobile && (\n                                  <Text\n                                    width={0.3}\n                                    fontSize={1}\n                                    fontWeight={3}\n                                  >\n                                    Hash\n                                  </Text>\n                                )\n                              }\n                            </Flex>\n                            {\n                              this.state.distributedRewards.map( (reward,index) => (\n                                <Flex\n                                  py={1}\n                                  width={1}\n                                  flexDirection={'row'}\n                                  key={`rewards_${index}`}\n                                  borderBottom={`1px solid ${this.props.theme.colors.divider}`}\n                                >\n                                  <Text\n                                    fontWeight={2}\n                                    color={'statValue'}\n                                    fontSize={this.props.isMobile ? 1 : 2}\n                                    width={this.props.isMobile ? 0.5 : 0.4}\n                                  >\n                                    {reward.date}\n                                  </Text>\n                                  <Text\n                                    fontWeight={2}\n                                    color={'statValue'}\n                                    fontSize={this.props.isMobile ? 1 : 2}\n                                    width={this.props.isMobile ? 0.5 : 0.3}\n                                    textAlign={this.props.isMobile ? 'right' : 'left'}\n                                  >\n                                    {reward.amount.toFixed(4)} {reward.tokenName}\n                                  </Text>\n                                  {\n                                    !this.props.isMobile && (\n                                      <ExtLink\n                                        width={0.3}\n                                        color={'link'}\n                                        hoverColor={'link'}\n                                        href={this.functionsUtil.getEtherscanTransactionUrl(reward.hash)}\n                                      >\n                                        <Flex\n                                          alignItems={'center'}\n                                          flexDirection={'row'}\n                                        >\n                                          <Text\n                                            fontSize={2}\n                                            fontWeight={2}\n                                            color={'link'}\n                                          >\n                                            {this.functionsUtil.shortenHash(reward.hash)}\n                                          </Text>\n                                          <Icon\n                                            ml={1}\n                                            size={'1.2em'}\n                                            color={'link'}\n                                            name={'OpenInNew'}\n                                          />\n                                        </Flex>\n                                      </ExtLink>\n                                    )\n                                  }\n                                </Flex>\n                              ))\n                            }\n                          </Flex>\n                        ) : (\n                          <Text\n                            fontSize={2}\n                            color={'statValue'}\n                          >\n                            No reward distributed yet.\n                          </Text>\n                        )\n                      }\n                    </DashboardCard>\n                  </Flex>\n                </Flex>\n              ) : (this.props.account && this.props.tokenConfig && this.state.balanceProp && this.state.statsLoaded && this.props.contractInfo) ? (\n                <Box\n                  mt={1}\n                  width={1}\n                  mb={[4,3]}\n                >\n                  {\n                    (isIncrease && canIncrease) && (\n                      <Box\n                        mb={2}\n                        width={1}\n                      >\n                        <Text mb={1}>\n                          Choose increase value:\n                        </Text>\n                        <Flex\n                          alignItems={'center'}\n                          flexDirection={'row'}\n                          justifyContent={'space-between'}\n                        >\n                          <CardIconButton\n                            {...this.props}\n                            textProps={{\n                              fontSize:[1,2]\n                            }}\n                            cardProps={{\n                              px:3,\n                              py:2,\n                              width:0.49\n                            }}\n                            icon={'AccessTime'}\n                            iconColor={'deposit'}\n                            iconBgColor={'#ced6ff'}\n                            isActive={ this.state.increaseAction === 'time' }\n                            handleClick={ e => this.setIncreaseAction('time') }\n                            text={this.props.isMobile ? 'Time' : 'Increase Time'}\n                          />\n                          <CardIconButton\n                            {...this.props}\n                            textProps={{\n                              fontSize:[1,2]\n                            }}\n                            cardProps={{\n                              px:3,\n                              py:2,\n                              width:0.49\n                            }}\n                            icon={'AttachMoney'}\n                            iconColor={'redeem'}\n                            iconBgColor={'#ceeff6'}\n                            isActive={ this.state.increaseAction === 'amount' }\n                            handleClick={ e => this.setIncreaseAction('amount') }\n                            text={this.props.isMobile ? 'Amount' : 'Increase Amount'}\n                          />\n                        </Flex>\n                      </Box>\n                    )\n                  }\n                  {\n                    ((isLock && this.state.balanceProp && this.state.contractApproved && this.state.balanceProp.gt(0)) || (isIncrease && canIncrease)) && (\n                      <Box\n                        width={1}\n                      > \n                        {\n                          (isLock || this.state.increaseAction === 'time') && (\n                            <Box\n                              width={1}\n                            >\n                              <Text mb={1}>\n                                Choose lock period:\n                              </Text>\n                              {\n                                !this.state.lockEndDateIsMaxEndDate ? (\n                                  <Flex\n                                    width={1}\n                                    alignItems={'center'}\n                                    justifyContent={'center'}\n                                    flexDirection={'column'}\n                                  >\n                                    <Input\n                                      mb={2}\n                                      width={1}\n                                      type={\"date\"}\n                                      required={true}\n                                      height={'3.4em'}\n                                      borderRadius={2}\n                                      fontWeight={500}\n                                      borderColor={'cardBorder'}\n                                      backgroundColor={'cardBg'}\n                                      boxShadow={'none !important'}\n                                      value={this.state.lockPeriodInput || ''}\n                                      onChange={this.changelockPeriodInput.bind(this)}\n                                      border={`1px solid ${this.props.theme.colors.divider}`}\n                                    />\n                                    <Flex\n                                      mb={3}\n                                      width={1}\n                                      alignItems={'center'}\n                                      flexDirection={'row'}\n                                      justifyContent={'space-between'}\n                                    >\n                                      {\n                                        this.state.lockPeriods.map( (p,index) => {\n                                          const isActive = this.state.selectedLockPeriod ? this.state.selectedLockPeriod.value===p.value && this.state.selectedLockPeriod.type === p.type : false;\n                                          return (\n                                            <DashboardCard\n                                              cardProps={{\n                                                p:2,\n                                                width:0.24,\n                                              }}\n                                              isActive={isActive}\n                                              isInteractive={true}\n                                              key={`lockPeriod_${index}`}\n                                              handleClick={e => this.selectLockPeriod(p)}\n                                            >\n                                              <Text \n                                                fontWeight={3}\n                                                fontSize={[1,2]}\n                                                textAlign={'center'}\n                                                color={isActive ? 'copyColor' : 'cellText'}\n                                              >\n                                                {p.label}\n                                              </Text>\n                                            </DashboardCard>\n                                          );\n                                        })\n                                      }\n                                    </Flex>\n                                    {\n                                      isIncrease && (\n                                        <ExecuteTransaction\n                                          params={[]}\n                                          {...this.props}\n                                          parentProps={{\n                                            width:1,\n                                            alignItems:'center',\n                                            justifyContent:'center'\n                                          }}\n                                          Component={Button}\n                                          componentProps={{\n                                            fontSize:3,\n                                            fontWeight:3,\n                                            size:'medium',\n                                            width:[1,1/2],\n                                            borderRadius:4,\n                                            mainColor:'deposit',\n                                            value:'Increase Time',\n                                            disabled:this.state.buttonDisabled\n                                          }}\n                                          action={'Increase Time'}\n                                          methodName={'increase_unlock_time'}\n                                          contractName={this.props.contractInfo.name}\n                                          callback={this.transactionSucceeded.bind(this)}\n                                          getTransactionParams={this.getIncreaseTimeParams.bind(this)}\n                                        />\n                                      )\n                                    }\n                                  </Flex>\n                                ) : (\n                                  <IconBox\n                                    cardProps={{\n                                      mt:1,\n                                      mb:3\n                                    }}\n                                    icon={'Warning'}\n                                    iconProps={{\n                                      color:'cellText'\n                                    }}\n                                    text={`Your tokens are locked for the maxumum allowed period.`}\n                                  />\n                                )\n                              }\n                            </Box>\n                          )\n                        }\n                      </Box>\n                    )\n                  }\n                  {\n                    (isLock || this.state.increaseAction==='amount') ? (\n                      <SendTxWithBalance\n                        error={null}\n                        {...this.props}\n                        action={txAction}\n                        steps={this.state.steps}\n                        infoBox={this.state.infoBox}\n                        tokenConfig={this.props.tokenConfig}\n                        tokenBalance={this.state.balanceProp}\n                        contractInfo={this.props.contractInfo}\n                        permitEnabled={this.state.permitEnabled}\n                        buttonDisabled={this.state.buttonDisabled}\n                        approveEnabled={this.state.approveEnabled}\n                        callback={this.transactionSucceeded.bind(this)}\n                        approveDescription={this.state.approveDescription}\n                        balanceSelectorInfo={this.state.balanceSelectorInfo}\n                        changeInputCallback={this.changeInputCallback.bind(this)}\n                        contractApproved={this.contractApprovedCallback.bind(this)}\n                        getTransactionParams={this.getTransactionParams.bind(this)}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            p:3\n                          }}\n                        >\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              name={'MoneyOff'}\n                              color={'cellText'}\n                              size={this.props.isMobile ? '1.8em' : '2.3em'}\n                            />\n                            <Text\n                              mt={1}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              {\n                                (isLock || isIncrease) ? (\n                                  `You don't have any ${this.props.selectedToken} in your wallet.`\n                                ) : isUnstake && (\n                                  `You don't have any staked ${this.props.selectedToken} to withdraw.`\n                                )\n                              }\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                      </SendTxWithBalance>\n                    ) : (isIncrease && !canIncrease) ? (\n                      <DashboardCard\n                        cardProps={{\n                          p:3\n                        }}\n                      >\n                        <Flex\n                          alignItems={'center'}\n                          flexDirection={'column'}\n                        >\n                          <Icon\n                            name={'LockOpen'}\n                            color={'cellText'}\n                            size={this.props.isMobile ? '1.8em' : '2.3em'}\n                          />\n                          <Text\n                            mt={1}\n                            fontSize={2}\n                            color={'cellText'}\n                            textAlign={'center'}\n                          >\n                            You cannot increase an expired lock, please Withdraw.\n                          </Text>\n                        </Flex>\n                      </DashboardCard>\n                    ) : isUnstake ? (\n                      <DashboardCard\n                        cardProps={{\n                          p:3\n                        }}\n                      >\n                        {\n                          this.state.lockExpired ? (\n                            <Flex\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                            >\n                              <Icon\n                                name={'LockOpen'}\n                                color={'cellText'}\n                                size={this.props.isMobile ? '1.8em' : '2.3em'}\n                              />\n                              <Text\n                                mt={1}\n                                mb={3}\n                                fontSize={2}\n                                color={'cellText'}\n                                textAlign={'center'}\n                              >\n                                The lock has expired, you can withdraw your {this.props.selectedToken}.\n                              </Text>\n                              <ExecuteTransaction\n                                params={[]}\n                                {...this.props}\n                                Component={Button}\n                                parentProps={{\n                                  width:1,\n                                  alignItems:'center',\n                                  justifyContent:'center'\n                                }}\n                                componentProps={{\n                                  fontSize:3,\n                                  fontWeight:3,\n                                  size:'medium',\n                                  width:[1,1/2],\n                                  borderRadius:4,\n                                  mainColor:'redeem',\n                                  value:'Withdraw',\n                                }}\n                                action={'Withdraw'}\n                                methodName={'withdraw'}\n                                contractName={this.props.contractInfo.name}\n                                callback={this.transactionSucceeded.bind(this)}\n                              />\n                            </Flex>\n                          ) : (\n                            <Flex\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                            >\n                              <Icon\n                                name={'LockOpen'}\n                                color={'cellText'}\n                                size={this.props.isMobile ? '1.8em' : '2.3em'}\n                              />\n                              <Text\n                                mt={1}\n                                fontSize={2}\n                                color={'cellText'}\n                                textAlign={'center'}\n                              >\n                                The lock is not expired yet, please wait until {this.functionsUtil.strToMoment(this.state.lockedEnd*1000).utc().format('YYYY/MM/DD HH:mm')} UTC to withdraw your {this.props.selectedToken}.\n                              </Text>\n                            </Flex>\n                          )\n                        }\n                      </DashboardCard>\n                    ) : isClaim && (\n                      <Flex\n                        width={1}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            mb:1\n                          }}\n                        >\n                          {\n                            (this.state.claimable && this.state.claimable.gt(0)) ? (\n                              <Flex\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                              >\n                                <Icon\n                                  color={'cellText'}\n                                  name={'MonetizationOn'}\n                                  size={this.props.isMobile ? '1.8em' : '2.3em'}\n                                />\n                                <Text\n                                  mt={1}\n                                  mb={3}\n                                  fontSize={[2,3]}\n                                  color={'cellText'}\n                                  textAlign={'center'}\n                                >\n                                  You can claim <strong>{this.state.claimable.toFixed(8)} {this.props.contractInfo.rewardToken}</strong>.\n                                </Text>\n                                <ExecuteTransaction\n                                  params={[]}\n                                  {...this.props}\n                                  Component={Button}\n                                  parentProps={{\n                                    width:1,\n                                    alignItems:'center',\n                                    justifyContent:'center'\n                                  }}\n                                  componentProps={{\n                                    fontSize:3,\n                                    fontWeight:3,\n                                    size:'medium',\n                                    width:[1,1/3],\n                                    value:'Claim',\n                                    borderRadius:4,\n                                    mainColor:'redeem',\n                                  }}\n                                  action={'Claim'}\n                                  methodName={'claim'}\n                                  callback={this.transactionSucceeded.bind(this)}\n                                  contractName={this.props.tokenConfig.feeDistributor.name}\n                                />\n                              </Flex>\n                            ) : (\n                              <Flex\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                              >\n                                <Icon\n                                  name={'MoneyOff'}\n                                  color={'cellText'}\n                                  size={this.props.isMobile ? '1.8em' : '2.3em'}\n                                />\n                                <Text\n                                  mt={1}\n                                  fontSize={2}\n                                  color={'cellText'}\n                                  textAlign={'center'}\n                                >\n                                  You don't have rewards to Claim yet.\n                                </Text>\n                              </Flex>\n                            )\n                          }\n                        </DashboardCard>\n                        <Text\n                          mb={1}\n                        >\n                          Claimed Rewards:\n                        </Text>\n                        <Flex\n                          mb={3}\n                          width={1}\n                          alignItems={'center'}\n                          justifyContent={'center'}\n                        >\n                          <DashboardCard\n                            cardProps={{\n                              pt:2,\n                              pb:3,\n                              px:3,\n                              width:1,\n                              display:'flex',\n                              alignItems:'center',\n                              justifyContent:'center'\n                            }}\n                            isActive={false}\n                            isInteractive={false}\n                          >\n                            {\n                              this.state.claimedRewards && this.state.claimedRewards.length ? (\n                                <Flex\n                                  width={1}\n                                  flexDirection={'column'}\n                                >\n                                  <Flex\n                                    pt={0}\n                                    pb={1}\n                                    width={1}\n                                    flexDirection={'row'}\n                                    borderBottom={`1px solid ${this.props.theme.colors.divider}`}\n                                  >\n                                    <Text\n                                      fontSize={1}\n                                      fontWeight={3}\n                                      width={this.props.isMobile ? 0.5 : 0.4}\n                                    >\n                                      Date\n                                    </Text>\n                                    <Text\n                                      fontSize={1}\n                                      fontWeight={3}\n                                      width={this.props.isMobile ? 0.5 : 0.3}\n                                      textAlign={this.props.isMobile ? 'right' : 'left'}\n                                    >\n                                      Amount\n                                    </Text>\n                                    {\n                                      !this.props.isMobile && (\n                                        <Text\n                                          width={0.3}\n                                          fontSize={1}\n                                          fontWeight={3}\n                                        >\n                                          Hash\n                                        </Text>\n                                      )\n                                    }\n                                  </Flex>\n                                  {\n                                    this.state.claimedRewards.map( (claim,index) => (\n                                      <Flex\n                                        py={1}\n                                        width={1}\n                                        flexDirection={'row'}\n                                        key={`claim_${index}`}\n                                        borderBottom={`1px solid ${this.props.theme.colors.divider}`}\n                                      >\n                                        <Text\n                                          fontWeight={2}\n                                          color={'statValue'}\n                                          fontSize={this.props.isMobile ? 1 : 2}\n                                          width={this.props.isMobile ? 0.5 : 0.4}\n                                        >\n                                          {claim.date}\n                                        </Text>\n                                        <Text\n                                          fontWeight={2}\n                                          color={'statValue'}\n                                          fontSize={this.props.isMobile ? 1 : 2}\n                                          width={this.props.isMobile ? 0.5 : 0.3}\n                                          textAlign={this.props.isMobile ? 'right' : 'left'}\n                                        >\n                                          {claim.amount.toFixed(4)} {claim.tokenName}\n                                        </Text>\n                                        {\n                                          !this.props.isMobile && (\n                                            <ExtLink\n                                              width={0.3}\n                                              color={'link'}\n                                              hoverColor={'link'}\n                                              href={this.functionsUtil.getEtherscanTransactionUrl(claim.hash)}\n                                            >\n                                              <Flex\n                                                alignItems={'center'}\n                                                flexDirection={'row'}\n                                              >\n                                                <Text\n                                                  fontSize={2}\n                                                  fontWeight={2}\n                                                  color={'link'}\n                                                >\n                                                  {this.functionsUtil.shortenHash(claim.hash)}\n                                                </Text>\n                                                <Icon\n                                                  ml={1}\n                                                  size={'1.2em'}\n                                                  color={'link'}\n                                                  name={'OpenInNew'}\n                                                />\n                                              </Flex>\n                                            </ExtLink>\n                                          )\n                                        }\n                                      </Flex>\n                                    ))\n                                  }\n                                </Flex>\n                              ) : (\n                                <Text\n                                  fontSize={2}\n                                  color={'statValue'}\n                                >\n                                  No reward claimed yet.\n                                </Text>\n                              )\n                            }\n                          </DashboardCard>\n                        </Flex>\n                      </Flex>\n                    )\n                  }\n                </Box>\n              ) : !this.props.account ? (\n                <ConnectBox\n                  cardProps={{\n                    mt:2\n                  }}\n                  {...this.props}\n                />\n              ) : (\n                <Flex\n                  mt={3}\n                  mb={3}\n                  width={1}\n                >\n                  <FlexLoader\n                    flexProps={{\n                      flexDirection:'row'\n                    }}\n                    loaderProps={{\n                      size:'30px'\n                    }}\n                    textProps={{\n                      ml:2\n                    }}\n                    text={'Loading info...'}\n                  />\n                </Flex>\n              )\n            }\n          </Box>\n        )\n      }\n      </Box>\n    );\n  }\n}\n\nexport default IdleStaking;","import ExtLink from '../ExtLink/ExtLink';\nimport IconBox from '../IconBox/IconBox';\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\n// import NXMaster from '../abis/nexus/NXMaster.json';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport ButtonLoader from '../ButtonLoader/ButtonLoader';\nimport AssetSelector from '../AssetSelector/AssetSelector';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport CardIconButton from '../CardIconButton/CardIconButton';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\nimport ExecuteTransaction from '../ExecuteTransaction/ExecuteTransaction';\nimport { Flex, Box, Text, Input, Link, Progress, Button, Icon, Tooltip } from \"rimble-ui\";\n\nclass NexusMutual extends Component {\n\n  state = {\n    step:1,\n    quote:null,\n    steps:{\n      1:'Get Quote',\n      2:'Buy Cover'\n    },\n    periodOptions:{\n      30:{\n        label:'30d'\n      },\n      60:{\n        label:'60d'\n      },\n      90:{\n        label:'90d'\n      },\n      365:{\n        label:'1y'\n      }\n    },\n    coverId:null,\n    claimId:null,\n    capacity:null,\n    loading:false,\n    coverCost:null,\n    amountValue:'',\n    periodValue:'',\n    yearlyCost:null,\n    maxCapacity:null,\n    amountValid:true,\n    periodValid:true,\n    tokenConfig:null,\n    tokenBalance:null,\n    selectedToken:null,\n    claimableCovers:[],\n    tokenApproved:false,\n    selectedPeriod:null,\n    maxPriceWithFee:null,\n    transactionParams:[],\n    transactionValue:null,\n    yieldTokenBalance:null,\n    selectedUnderlying:null,\n    selectedAction:'deposit',\n    yieldTokenApproved:false,\n    claimButtonDisabled:false,\n    selectedCoverToClaim:null,\n    defaultClaimableCover:null,\n    selectedUnderlyingConfig:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadContracts();\n  }\n\n  async loadContracts(){\n    const claimableCovers = [];\n    const nexusMutualCoverages = await this.functionsUtil.getNexusMutualCoverages(this.props.account);\n    nexusMutualCoverages.forEach( coverage => {\n      if (coverage.incident){\n        claimableCovers.push(coverage);\n      }\n    });\n\n    const validClaimableCoverFromParam = this.props.urlParams.param3 ? claimableCovers.find( cover => parseInt(cover.value) === parseInt(this.props.urlParams.param3) ) : null;\n\n    const defaultClaimableCover = claimableCovers.length>0 ? claimableCovers[0] : null;\n    const selectedCoverToClaim = validClaimableCoverFromParam ? validClaimableCoverFromParam : defaultClaimableCover || null;\n\n    this.setState({\n      claimableCovers,\n      selectedCoverToClaim,\n      defaultClaimableCover\n    });\n\n    const selectedAction = ['deposit','claim'].includes(this.props.urlParams.param2) ? this.props.urlParams.param2 : this.state.selectedAction;\n    const paramIsValidToken = this.props.urlParams.param3 && Object.keys(this.props.toolProps.availableTokens).includes(this.props.urlParams.param3);\n    const selectedToken = paramIsValidToken ? this.props.urlParams.param3 : Object.keys(this.props.toolProps.availableTokens)[0];\n\n    this.setSelectedAction(selectedAction);\n    this.changeSelectedToken(selectedToken);\n    // console.log('coverBoughtEvents',coverBoughtEvents,'claimSubmittedEvents',claimSubmittedEvents,'claimableCovers',claimableCovers);\n  }\n\n  async getPoolCapacity(selectedUnderlying,tokenConfig){\n    const requiredNetwork = this.functionsUtil.getGlobalConfig(['network','requiredNetwork']);\n    const baseEndpoint = this.functionsUtil.getGlobalConfig(['network','providers','nexus','endpoints',requiredNetwork]);\n    const response = await this.functionsUtil.makeRequest(`${baseEndpoint}contracts/${tokenConfig.address}/capacity`);\n    if (response && response.data){\n      const capacity = response.data;\n      // console.log('getPoolCapacity',capacity);\n      const maxCapacity = capacity && capacity[`capacity${selectedUnderlying}`] ? this.functionsUtil.fixTokenDecimals(capacity[`capacity${selectedUnderlying}`],tokenConfig.decimals) : this.functionsUtil.BNify(0);\n      return maxCapacity;\n    }\n    return false;\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const selectedTokenChanged = prevState.selectedToken !== this.state.selectedToken;\n    const selectedUnderlyingChanged = prevState.selectedUnderlying !== this.state.selectedUnderlying;\n    if (selectedTokenChanged || selectedUnderlyingChanged){\n      this.loadTokenData();\n    }\n  }\n\n  async loadTokenData(){\n\n    const isETH = this.state.selectedToken === 'ETH';\n    const selectedUnderlyingConfig = this.state.tokenConfig.underlying[this.state.selectedUnderlying];\n\n    // Init Underlying Contract\n    await Promise.all([\n      this.props.initContract(this.state.tokenConfig.token, this.state.tokenConfig.realAddress, this.state.tokenConfig.abi),\n      this.props.initContract(selectedUnderlyingConfig.name, selectedUnderlyingConfig.address, selectedUnderlyingConfig.abi)\n    ]);\n\n    let [\n      maxCapacity,\n      yieldTokenBalance,\n      yieldTokenApproved,\n      tokenApproved,\n      tokenBalance\n    ] = await Promise.all([\n      this.getPoolCapacity(this.state.selectedUnderlying,this.state.tokenConfig),\n      this.functionsUtil.getTokenBalance(this.state.tokenConfig.token,this.props.account),\n      this.functionsUtil.checkTokenApproved(this.state.selectedToken,this.props.contractInfo.address,this.props.account),\n      this.functionsUtil.checkTokenApproved(selectedUnderlyingConfig.name,this.props.contractInfo.address,this.props.account),\n      isETH ? this.functionsUtil.getETHBalance(this.props.account,false) : this.functionsUtil.getTokenBalance(selectedUnderlyingConfig.name,this.props.account,false),\n    ]);\n\n    tokenBalance = tokenBalance || this.functionsUtil.BNify(0);\n    yieldTokenBalance = yieldTokenBalance || this.functionsUtil.BNify(0);\n\n    this.setState({\n      maxCapacity,\n      tokenBalance,\n      tokenApproved,\n      yieldTokenBalance,\n      yieldTokenApproved,\n      selectedUnderlyingConfig\n    });\n  }\n\n  async changeSelectedToken(selectedToken){\n    const periodValue = '';\n    const amountValue = '';\n    const tokenConfig = this.props.toolProps.availableTokens[selectedToken];\n    const selectedUnderlying = Object.keys(tokenConfig.underlying)[0];\n\n    this.setState({\n      amountValue,\n      periodValue,\n      tokenConfig,\n      selectedToken,\n      selectedUnderlying\n    });\n  }\n\n  changeSelectedUnderlying(selectedUnderlying){\n    this.setState({\n      selectedUnderlying\n    });\n  }\n\n  setMaxCoverAmount(){\n    const amountValue = this.state.maxCapacity.toFixed();\n    this.changeAmount({\n      target:{\n        value:amountValue\n      }\n    });\n  }\n\n  changeAmount = (e) => {\n    const amountValue = e.target.value.length && !isNaN(e.target.value) ? Math.floor(e.target.value) : '';\n    const amountValid = this.functionsUtil.BNify(amountValue).gt(0) && this.functionsUtil.BNify(amountValue).lte(this.state.maxCapacity);\n    this.setState({\n      amountValue,\n      amountValid\n    });\n  }\n\n  changePeriod = (e) => {\n    const periodValue = e.target.value.length && !isNaN(e.target.value) ? e.target.value : '';\n    const periodValid = parseInt(periodValue)>=30 && parseInt(periodValue)<=365;\n    this.setState({\n      periodValue,\n      periodValid,\n      selectedPeriod:null\n    });\n  }\n\n  selectPeriod = (selectedPeriod) => {\n    this.changePeriod({\n      target:{\n        value:selectedPeriod\n      }\n    });\n  }\n\n  async getQuote() {\n\n    this.setState({\n      loading:true\n    });\n\n    // Setup your cover data.\n    const coverData = {\n      period: this.state.periodValue, // days\n      coverAmount: this.state.amountValue, // ETH in units not wei\n      currency: this.state.selectedUnderlying,\n      contractAddress: this.state.tokenConfig.address, // the contract you will be buying cover for\n      asset: this.state.tokenConfig.underlying[this.state.selectedUnderlying].address\n    };\n\n    // URL to request a quote for.\n    // const quoteURL = 'https://api.nexusmutual.io/v1/quote?' +\n    const requiredNetwork = this.functionsUtil.getGlobalConfig(['network','requiredNetwork']);\n    const baseEndpoint = this.functionsUtil.getGlobalConfig(['network','providers','nexus','endpoints',requiredNetwork]);\n    const quoteURL = `${baseEndpoint}quote?coverAmount=${coverData.coverAmount}&currency=${coverData.currency}&period=${coverData.period}&contractAddress=${coverData.contractAddress}`;\n\n    const response = await this.functionsUtil.makeRequest(quoteURL);\n\n    const quote = response && response.data ? response.data : null;\n\n    if (!quote){\n      this.setState({\n        loading:false\n      });\n      return false;\n    }\n\n    // encode the signature result in the data field\n    const data = this.props.web3.eth.abi.encodeParameters(\n      ['uint', 'uint', 'uint', 'uint', 'uint8', 'bytes32', 'bytes32'],\n      [quote.price, quote.priceInNXM, quote.expiresAt, quote.generatedAt, quote.v, quote.r, quote.s],\n    );\n\n    const COVER_TYPE = this.functionsUtil.toBN(0);\n    const feePercentage = await this.functionsUtil.genericContractCall(this.props.contractInfo.name,'feePercentage');\n    const basePrice = this.functionsUtil.toBN(quote.price);\n    const priceWithFee = basePrice.mul(this.functionsUtil.toBN(feePercentage)).divn(10000).add(basePrice);\n    const amountInWei = this.functionsUtil.toWei(coverData.coverAmount.toString());\n    const maxPriceWithFee = priceWithFee;\n    const coverCost = this.functionsUtil.fixTokenDecimals(maxPriceWithFee,this.state.tokenConfig.decimals);\n    const yearlyCost = coverCost.div(this.state.amountValue).times(365).div(this.state.periodValue).times(100);\n\n    // console.log('coverCost',maxPriceWithFee,coverCost.toFixed(),this.state.amountValue.toFixed(),this.state.periodValue,yearlyCost.toFixed());\n\n    const transactionParams = [\n      coverData.contractAddress,\n      coverData.asset,\n      amountInWei,\n      coverData.period,\n      COVER_TYPE,\n      maxPriceWithFee,\n      data\n    ];\n\n    const transactionValue = this.state.selectedUnderlying === 'ETH' ? priceWithFee : null;\n\n    // console.log(feePercentage,transactionParams,transactionValue,quote);\n\n    // debugger;\n\n    const step = 2;\n    const loading = false;\n\n    this.setState({\n      step,\n      quote,\n      loading,\n      coverCost,\n      yearlyCost,\n      maxPriceWithFee,\n      transactionValue,\n      transactionParams\n    });\n  }\n\n  approveSucceeded = (tx) => {\n    const tokenApproved = true;\n    this.setState({\n      tokenApproved\n    });\n  }\n\n  yieldTokenApproveSucceeded = (tx) => {\n    const yieldTokenApproved = true;\n    this.setState({\n      yieldTokenApproved\n    });\n  }\n\n  claimInputChange = (amount) => {\n    const normalizedAmount = this.functionsUtil.normalizeTokenAmount(amount,this.state.tokenConfig.decimals);\n    const claimButtonDisabled = this.functionsUtil.BNify(amount).lte(0) || this.functionsUtil.BNify(normalizedAmount).gt(this.state.selectedCoverToClaim.coveredTokenAmount);\n    this.setState({\n      claimButtonDisabled\n    });\n  }\n\n  getClaimTransactionParams = (coveredTokenAmount) => {\n    return {\n      methodName:'claimTokens',\n      methodParams:[this.state.selectedCoverToClaim.value,this.state.selectedCoverToClaim.incident.id,coveredTokenAmount,this.state.tokenConfig.realAddress]\n    };\n  }\n\n  claimTransactionSucceeded = (tx) => {\n    // const claimId = this.functionsUtil.getGlobalConfig(['txReceipt','events','ClaimSubmitted','returnValues','claimId'],tx);\n    // this.setState({\n    //   claimId\n    // });\n    this.loadContracts();\n  }\n\n  buyCoverTransactionSucceeded = (tx) => {\n    const coverId = this.functionsUtil.getGlobalConfig(['txReceipt','events','CoverBought','returnValues','coverId'],tx);\n    this.setState({\n      coverId\n    });\n  }\n\n  setSelectedAction(selectedAction){\n    if (selectedAction !== this.state.selectedAction){\n      this.setState({\n        selectedAction\n      });\n    }\n  }\n\n  selectCoverToClaim(coverId){\n    const selectedCoverToClaim = this.state.selectedCoverToClaim ? this.state.claimableCovers.find( cover => parseInt(cover.value) === coverId ) : null;\n    // console.log('selectCoverToClaim',selectedCoverToClaim);\n    this.setState({\n      selectedCoverToClaim\n    });\n  }\n\n  reset(){\n    const step = 1;\n    const quote = null;\n    const coverId = null;\n    const periodValue = '';\n    const amountValue = '';\n    const transactionParams = [];\n    this.setState({\n      step,\n      quote,\n      coverId,\n      periodValue,\n      amountValue,\n      transactionParams\n    });\n  }\n\n  render() {\n    return (\n      <Flex\n        width={1}\n        mt={[2,3]}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          mb={3}\n          width={[1,0.36]}\n          flexDirection={'column'}\n        >\n          <Box\n            mb={2}\n            width={1}\n          >\n            <Text mb={1}>\n              Choose action:\n            </Text>\n            <Flex\n              alignItems={'center'}\n              flexDirection={'row'}\n              justifyContent={'space-between'}\n            >\n              <CardIconButton\n                {...this.props}\n                cardProps={{\n                  px:3,\n                  py:2,\n                  width:0.49\n                }}\n                textProps={{\n                  fontSize:[1,2]\n                }}\n                icon={'Security'}\n                iconColor={'deposit'}\n                text={'Buy Coverage'}\n                iconBgColor={'#ced6ff'}\n                isActive={ this.state.selectedAction === 'deposit' }\n                handleClick={ e => this.setSelectedAction('deposit') }\n              />\n              <CardIconButton\n                {...this.props}\n                cardProps={{\n                  px:3,\n                  py:2,\n                  width:0.49\n                }}\n                textProps={{\n                  fontSize:[1,2]\n                }}\n                icon={'FileUpload'}\n                iconColor={'redeem'}\n                text={'Claim Tokens'}\n                iconBgColor={'#ceeff6'}\n                isActive={ this.state.selectedAction === 'claim' }\n                handleClick={ e => this.setSelectedAction('claim') }\n              />\n            </Flex>\n          </Box>\n          {\n            this.state.selectedAction === 'deposit' &&\n              <IconBox\n                cardProps={{\n                  py:2,\n                  px:3,\n                  my:2,\n                  width:1,\n                }}\n                isActive={true}\n                isInteractive={false}\n                icon={'LightbulbOutline'}\n                iconProps={{\n                  color:'flashColor'\n                }}\n                textProps={{\n                  color:'flashColor'\n                }}\n                text={`If your yield bearing token de-pegs in value by more than 10%, claim up to 90% of your loss by swapping your yield bearing token for a claim payment.`}\n              >\n                <ExtLink\n                  ml={1}\n                  fontWeight={500}\n                  color={'primary'}\n                  fontSize={'15px'}\n                  hoverColor={'primary'}\n                  href={'https://nexusmutual.io/pages/YieldTokenCoverv1.0.pdf'}\n                >\n                  <Flex\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    justifyContent={'center'}\n                  >\n                    Read More\n                    <Icon\n                      ml={1}\n                      size={'0.9em'}\n                      color={'primary'}\n                      name={'OpenInNew'}\n                    />\n                    .\n                  </Flex>\n                </ExtLink>\n              </IconBox>\n          }\n          {\n            this.state.selectedAction === 'deposit' ? (\n              <Flex\n                width={1}\n                alignItems={'center'}\n                flexDirection={'column'}\n                justifyContent={'center'}\n              >\n                <Flex\n                  mb={1}\n                  width={1}\n                  flexDirection={'row'}\n                  justifyContent={'space-between'}\n                >\n                  {\n                    Object.keys(this.state.steps).map( stepIndex => (\n                      <Link\n                        style={{\n                          flexBasis:'0',\n                          flex:'1 1 0px',\n                          textDecoration:'none',\n                          cursor:this.state.step>=stepIndex ? 'pointer' : 'default'\n                        }}\n                        fontSize={2}\n                        textAlign={'center'}\n                        key={`step_${stepIndex}`}\n                        color={ this.state.step>=stepIndex ? 'primary' : 'cellText' }\n                        hoverColor={ this.state.step>=stepIndex ? 'primary' : 'cellText' }\n                        activeColor={ this.state.step>=stepIndex ? 'primary' : 'cellText' }\n                      >\n                        {this.state.steps[stepIndex]}\n                      </Link>\n                    ) )\n                  }\n                </Flex>\n                <Flex\n                  mb={2}\n                  width={1}\n                  flexDirection={'column'}\n                >\n                  <Progress\n                    style={{\n                      width:'100%',\n                      height:'15px'\n                    }}\n                    value={(1/Object.keys(this.state.steps).length)*this.state.step}\n                  />\n                </Flex>\n                {\n                  !this.state.selectedToken || !this.state.tokenBalance ? (\n                    <FlexLoader\n                      flexProps={{\n                        mt:2,\n                        flexDirection:'row'\n                      }}\n                      loaderProps={{\n                        size:'25px',\n                      }}\n                      textProps={{\n                        ml:2\n                      }}\n                      text={'Loading assets...'}\n                    />\n                  ) : this.state.coverId ? (\n                    <Flex\n                      width={1}\n                      alignItems={'center'}\n                      flexDirection={'column'}\n                      justifyContent={'center'}\n                    >\n                      <IconBox\n                        cardProps={{\n                          mt:1,\n                        }}\n                        icon={'DoneAll'}\n                        iconProps={{\n                          color:this.props.theme.colors.transactions.status.completed\n                        }}\n                        text={`You have successfully bought your Cover! Your Cover ID is <strong>${this.state.coverId}</strong>`}\n                      />\n                      <Link\n                        mt={2}\n                        color={'link'}\n                        hoverColor={'primary'}\n                        onClick={this.reset.bind(this)}\n                      >\n                        Get New Quote\n                      </Link>\n                    </Flex>\n                  ) : !this.state.quote ? (\n                    <Flex\n                      width={1}\n                      alignItems={'stretch'}\n                      flexDirection={'column'}\n                      justifyContent={'center'}\n                    >\n                      <Box\n                        width={1}\n                      >\n                        <Text mb={1}>\n                          Select Token to Cover:\n                        </Text>\n                        <AssetSelector\n                          {...this.props}\n                          id={'token-from'}\n                          showBalance={false}\n                          isSearchable={false}\n                          selectedToken={this.state.selectedToken}\n                          onChange={this.changeSelectedToken.bind(this)}\n                          availableTokens={this.props.toolProps.availableTokens}\n                        />\n                      </Box>\n                      <Box\n                        mt={2}\n                        width={1}\n                      >\n                        <Flex\n                          mb={1}\n                          alignItems={'center'}\n                          flexDirection={'row'}\n                        >\n                          <Text>\n                            Select Payment Asset:\n                          </Text>\n                          <Tooltip\n                            placement={'top'}\n                            message={`This is the asset that you will use as payment method for the coverage premium`}\n                          >\n                            <Icon\n                              ml={1}\n                              size={'1em'}\n                              name={\"Info\"}\n                              color={'cellTitle'}\n                            />\n                          </Tooltip>\n                        </Flex>\n                        <AssetSelector\n                          {...this.props}\n                          showBalance={false}\n                          selectedToken={this.state.selectedUnderlying}\n                          onChange={this.changeSelectedUnderlying.bind(this)}\n                          availableTokens={this.state.tokenConfig.underlying}\n                        />\n                      </Box>\n                      {\n                        this.functionsUtil.BNify(this.state.maxCapacity).gt(0) ? (\n                          <Box\n                            width={1}\n                          >\n                            <Box\n                              mt={2}\n                              width={1}\n                            >\n                              <Text\n                                mb={1}\n                              >\n                                How much do you want to cover?\n                              </Text>\n                              <Input\n                                min={0}\n                                step={1}\n                                width={'100%'}\n                                type={\"number\"}\n                                required={true}\n                                height={'3.4em'}\n                                borderRadius={2}\n                                fontWeight={500}\n                                borderColor={'cardBorder'}\n                                backgroundColor={'cardBg'}\n                                boxShadow={'none !important'}\n                                value={this.state.amountValue}\n                                onChange={this.changeAmount.bind(this)}\n                                border={`1px solid ${this.props.theme.colors.divider}`}\n                                placeholder={`Insert ${this.state.selectedUnderlying.toUpperCase()} amount`}\n                              />\n                              <Flex\n                                width={1}\n                                maxWidth={'100%'}\n                                alignItems={'center'}\n                                flexDirection={'row'}\n                                justifyContent={'flex-end'}\n                              >\n                                <Link\n                                  mt={1}\n                                  fontSize={1}\n                                  fontWeight={3}\n                                  color={'dark-gray'}\n                                  textAlign={'right'}\n                                  hoverColor={'copyColor'}\n                                  onClick={ (e) => this.setMaxCoverAmount() }\n                                  style={{\n                                    maxWidth:'100%',\n                                    overflow:'hidden',\n                                    whiteSpace:'nowrap',\n                                    textOverflow:'ellipsis'\n                                  }}\n                                >\n                                  Max Available: {this.state.maxCapacity.toFixed(this.props.isMobile ? 2 : 4)} {this.state.selectedUnderlying}\n                                </Link>\n                              </Flex>\n                            </Box>\n                            <Box\n                              mt={2}\n                              width={1}\n                            >\n                              <Text\n                                mb={1}\n                              >\n                                For how many days?\n                              </Text>\n                              <Input\n                                min={0}\n                                width={'100%'}\n                                type={\"number\"}\n                                required={true}\n                                height={'3.4em'}\n                                borderRadius={2}\n                                fontWeight={500}\n                                borderWidth={'1px'}\n                                borderStyle={'solid'}\n                                backgroundColor={'cardBg'}\n                                boxShadow={'none !important'}\n                                value={this.state.periodValue}\n                                placeholder={'Insert days of coverage'}\n                                onChange={this.changePeriod.bind(this)}\n                                borderColor={this.state.periodValid ? 'cardBorder' : 'red'}\n                              />\n                              {\n                                !this.state.periodValid && (\n                                  <Text\n                                    my={1}\n                                    fontSize={2}\n                                    color={'red'}\n                                  >\n                                    Enter a period between 30 and 365 days!\n                                  </Text>\n                                )\n                              }\n                              <Flex\n                                mt={2}\n                                alignItems={'center'}\n                                flexDirection={'row'}\n                                justifyContent={'space-between'}\n                              >\n                                {\n                                  Object.keys(this.state.periodOptions).map( period => {\n                                    const periodInfo = this.state.periodOptions[period];\n                                    const isActive = this.state.selectedPeriod===period;\n                                    const width = (1/Object.keys(this.state.periodOptions).length)-0.01;\n                                    return (\n                                      <DashboardCard\n                                        cardProps={{\n                                          p:2,\n                                          width:width,\n                                        }}\n                                        isActive={isActive}\n                                        isInteractive={true}\n                                        key={`coverPeriod_${period}`}\n                                        handleClick={e => this.selectPeriod(period)}\n                                      >\n                                        <Text\n                                          fontSize={2}\n                                          fontWeight={3}\n                                          textAlign={'center'}\n                                          color={this.props.isActive ? 'copyColor' : 'legend'}\n                                        >\n                                          {periodInfo.label}\n                                        </Text>\n                                      </DashboardCard>\n                                    );\n                                  })\n                                }\n                              </Flex>\n                            </Box>\n                            <Flex\n                              mt={2}\n                              width={1}\n                              justifyContent={'center'}\n                            >\n                              <ButtonLoader\n                                buttonProps={{\n                                  my:2,\n                                  mx:[0, 2],\n                                  size:'medium',\n                                  borderRadius:4,\n                                  mainColor:'blue',\n                                  disabled:(!this.state.amountValid || !this.state.selectedUnderlying || !this.state.periodValue || !this.state.periodValid)\n                                }}\n                                buttonText={'GET QUOTE'}\n                                isLoading={this.state.loading}\n                                handleClick={ e => this.getQuote(e) }\n                              />\n                            </Flex>\n                          </Box>\n                        ) : (\n                          <IconBox\n                            cardProps={{\n                              mt:3\n                            }}\n                            icon={'MoneyOff'}\n                            iconProps={{\n                              color:'cellText'\n                            }}\n                            text={`Coverage for ${this.state.selectedToken} is not available at the moment.`}\n                          />\n                        )\n                      }\n                    </Flex>\n                  ) : (\n                    <Flex\n                      width={1}\n                      alignItems={'stretch'}\n                      flexDirection={'column'}\n                      justifyContent={'center'}\n                    >\n                      <Text\n                        mb={2}\n                        fontSize={3}\n                        fontWeight={3}\n                        color={'primary'}\n                      >\n                        Cover Summary:\n                      </Text>\n                      <DashboardCard\n                        cardProps={{\n                          py:2,\n                          mb:2,\n                          px:3\n                        }}\n                        isActive={false}\n                        isInteractive={false}\n                      >\n                        <Text\n                          mb={1}\n                          fontSize={1}\n                          fontWeight={2}\n                          color={'cellText'}\n                        >\n                          Protocol:\n                        </Text>\n                        <Text\n                          mb={2}\n                          fontSize={2}\n                          fontWeight={3}\n                          color={'primary'}\n                        >\n                          Idle Finance\n                        </Text>\n                        <Text\n                          mb={1}\n                          fontSize={1}\n                          fontWeight={2}\n                          color={'cellText'}\n                        >\n                          Yield Token:\n                        </Text>\n                        <Text\n                          mb={2}\n                          fontSize={2}\n                          fontWeight={3}\n                          color={'primary'}\n                        >\n                          {this.state.selectedToken}\n                        </Text>\n                        <Text\n                          mb={1}\n                          fontSize={1}\n                          fontWeight={2}\n                          color={'cellText'}\n                        >\n                          Cover Amount:\n                        </Text>\n                        <Text\n                          mb={2}\n                          fontSize={2}\n                          fontWeight={3}\n                          color={'primary'}\n                        >\n                          {this.state.amountValue} {this.state.selectedUnderlying}\n                        </Text>\n                        <Text\n                          mb={1}\n                          fontSize={1}\n                          fontWeight={2}\n                          color={'cellText'}\n                        >\n                          Cover Period:\n                        </Text>\n                        <Text\n                          mb={2}\n                          fontSize={2}\n                          fontWeight={3}\n                          color={'primary'}\n                        >\n                          {this.state.periodValue} days\n                        </Text>\n                        <Text\n                          mb={1}\n                          fontSize={1}\n                          fontWeight={2}\n                          color={'cellText'}\n                        >\n                          Cover Price:\n                        </Text>\n                        <Text\n                          mb={2}\n                          fontSize={2}\n                          fontWeight={3}\n                          color={'primary'}\n                        >\n                          {this.state.coverCost.toFixed(6)} {this.state.selectedUnderlying}\n                        </Text>\n                        <Text\n                          mb={1}\n                          fontSize={1}\n                          fontWeight={2}\n                          color={'cellText'}\n                        >\n                          Yearly Cost:\n                        </Text>\n                        <Text\n                          mb={2}\n                          fontSize={2}\n                          fontWeight={3}\n                          color={'primary'}\n                        >\n                          {this.state.yearlyCost.toFixed(2)}%\n                        </Text>\n                      </DashboardCard>\n                      <Flex\n                        mt={2}\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                        justifyContent={'center'}\n                      >\n                        {\n                          this.functionsUtil.BNify(this.state.tokenBalance).lt(this.functionsUtil.BNify(this.state.quote.price)) ? (\n                            <DashboardCard\n                              cardProps={{\n                                p:3,\n                                mb:3\n                              }}\n                            >\n                              <Flex\n                                width={1}\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                                justifyContent={'center'}\n                              >\n                                <Icon\n                                  size={'2em'}\n                                  name={'MoneyOff'}\n                                  color={'cellText'}\n                                />\n                                <Text\n                                  mt={1}\n                                  fontSize={2}\n                                  color={'cellText'}\n                                  textAlign={'center'}\n                                >\n                                  You don't have enough {this.state.selectedUnderlying} in your wallet.\n                                </Text>\n                                <Link\n                                  mt={1}\n                                  color={'link'}\n                                  hoverColor={'primary'}\n                                  onClick={this.reset.bind(this)}\n                                >\n                                  Get New Quote\n                                </Link>\n                              </Flex>\n                            </DashboardCard>\n                          ) : !this.state.tokenApproved ? (\n                            <DashboardCard\n                              cardProps={{\n                                p:3,\n                                mb:3\n                              }}\n                            >\n                              <Flex\n                                width={1}\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                                justifyContent={'center'}\n                              >\n                                <Icon\n                                  size={'2em'}\n                                  name={'MoneyOff'}\n                                  color={'cellText'}\n                                />\n                                <Text\n                                  mb={2}\n                                  fontSize={2}\n                                  color={'cellText'}\n                                  textAlign={'center'}\n                                >\n                                  To buy the coverage you need to approve the Smart-Contract.\n                                </Text>\n                                <ExecuteTransaction\n                                  {...this.props}\n                                  parentProps={{\n                                    width:1,\n                                    alignItems:'center',\n                                    justifyContent:'center'\n                                  }}\n                                  Component={Button}\n                                  componentProps={{\n                                    fontSize:3,\n                                    fontWeight:3,\n                                    size:'medium',\n                                    width:[1,1/2],\n                                    borderRadius:4,\n                                    value:'Approve',\n                                    mainColor:'deposit'\n                                  }}\n                                  action={'Approve'}\n                                  methodName={'approve'}\n                                  callback={this.approveSucceeded.bind(this)}\n                                  contractName={this.state.selectedUnderlyingConfig.name}\n                                  params={[this.props.contractInfo.address,this.props.web3.utils.toTwosComplement('-1')]}\n                                />\n                                <Link\n                                  mt={1}\n                                  color={'link'}\n                                  hoverColor={'primary'}\n                                  onClick={this.reset.bind(this)}\n                                >\n                                  Get New Quote\n                                </Link>\n                              </Flex>\n                            </DashboardCard>\n                          ) : (\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'center'}\n                            >\n                              <ExecuteTransaction\n                                {...this.props}\n                                parentProps={{\n                                  width:1,\n                                  alignItems:'center',\n                                  justifyContent:'center'\n                                }}\n                                Component={Button}\n                                componentProps={{\n                                  fontSize:3,\n                                  fontWeight:3,\n                                  size:'medium',\n                                  width:[1,1/2],\n                                  borderRadius:4,\n                                  mainColor:'deposit',\n                                  value:'Buy Coverage',\n                                  disabled:this.state.buttonDisabled\n                                }}\n                                action={'Buy Coverage'}\n                                methodName={'buyCover'}\n                                value={this.state.transactionValue}\n                                params={this.state.transactionParams}\n                                contractName={this.props.contractInfo.name}\n                                callback={this.buyCoverTransactionSucceeded.bind(this)}\n                              />\n                              <Link\n                                mt={1}\n                                color={'link'}\n                                hoverColor={'primary'}\n                                onClick={this.reset.bind(this)}\n                              >\n                                Get New Quote\n                              </Link>\n                            </Flex>\n                          )\n                        }\n                      </Flex>\n                    </Flex>\n                  )\n                }\n              </Flex>\n            ) : this.state.selectedAction === 'claim' && (\n              <Box\n                width={1}\n              >\n                {\n                  this.state.claimableCovers.length>0 ? (\n                    <Flex\n                      width={1}\n                      alignItems={'stretch'}\n                      flexDirection={'column'}\n                      justifyContent={'center'}\n                    >\n                      <Text mb={1}>\n                        Select Cover:\n                      </Text>\n                      <GenericSelector\n                        {...this.props}\n                        isSearchable={false}\n                        name={'claimable_covers'}\n                        options={this.state.claimableCovers}\n                        onChange={this.selectCoverToClaim.bind(this)}\n                        defaultValue={this.state.defaultClaimableCover}\n                      />\n                      {\n                        this.state.selectedCoverToClaim.claimId ? (\n                          <IconBox\n                            cardProps={{\n                              mt:2,\n                            }}\n                            icon={'DoneAll'}\n                            iconProps={{\n                              color:this.props.theme.colors.transactions.status.completed\n                            }}\n                            text={`You've successfully claimed <strong>${this.state.selectedCoverToClaim.claimedAmount.toFixed(4)} ${this.state.selectedCoverToClaim.coverAsset}</strong> for this Cover!`}\n                          />\n                        ) : (\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            <DashboardCard\n                              cardProps={{\n                                p:3,\n                                mt:3,\n                                mb:1\n                              }}\n                            >\n                              <Flex\n                                width={1}\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                                justifyContent={'center'}\n                              >\n                                <Icon\n                                  size={'2em'}\n                                  color={'cellText'}\n                                  name={'FileUpload'}\n                                />\n                                <Text\n                                  fontSize={2}\n                                  color={'cellText'}\n                                  textAlign={'center'}\n                                >\n                                  You can Claim up to <strong>{this.state.selectedCoverToClaim.claimableAmount.toFixed(4)} {this.state.selectedCoverToClaim.coverAsset}</strong> for this Cover!\n                                </Text>\n                                <Text\n                                  fontSize={1}\n                                  color={'alert'}\n                                  textAlign={'center'}\n                                >\n                                  Keep in mind that the cover becomes inactive once any amount of tokens are claimed.\n                                </Text>\n                              </Flex>\n                            </DashboardCard>\n                            <SendTxWithBalance\n                              error={null}\n                              {...this.props}\n                              permitEnabled={false}\n                              approveEnabled={true}\n                              action={'Claim Token'}\n                              tokenConfig={this.state.tokenConfig}\n                              contractInfo={this.props.contractInfo}\n                              buttonDisabled={this.state.claimButtonDisabled}\n                              callback={this.claimTransactionSucceeded.bind(this)}\n                              changeInputCallback={this.claimInputChange.bind(this)}\n                              contractApproved={this.yieldTokenApproveSucceeded.bind(this)}\n                              getTransactionParams={this.getClaimTransactionParams.bind(this)}\n                              approveDescription={'To claim your tokens you need to approve the Smart-Contract.'}\n                              tokenBalance={this.functionsUtil.BNify(this.state.yieldTokenBalance).gt(this.state.selectedCoverToClaim.maxCoveredAmount) ? this.state.selectedCoverToClaim.maxCoveredAmount : this.state.yieldTokenBalance }\n                            >\n                              <DashboardCard\n                                cardProps={{\n                                  p:3,\n                                  mt:2\n                                }}\n                              >\n                                <Flex\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                >\n                                  <Icon\n                                    name={'MoneyOff'}\n                                    color={'cellText'}\n                                    size={this.props.isMobile ? '1.8em' : '2.3em'}\n                                  />\n                                  <Text\n                                    mt={1}\n                                    fontSize={2}\n                                    color={'cellText'}\n                                    textAlign={'center'}\n                                  >\n                                    You don't have any {this.state.selectedToken} in your wallet.\n                                  </Text>\n                                </Flex>\n                              </DashboardCard>\n                            </SendTxWithBalance>\n                          </Flex>\n                        )\n                      }\n                    </Flex>\n                  ) : (\n                    <IconBox\n                      cardProps={{\n                        mt:1,\n                      }}\n                      icon={'Warning'}\n                      iconProps={{\n                        color:'cellText'\n                      }}\n                      text={`You cannot submit any Claim for your Covers.`}\n                    />\n                  )\n                }\n              </Box>\n            )\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default NexusMutual;\n","import React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport { Box, Flex, Text, Icon } from \"rimble-ui\";\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport CardIconButton from '../CardIconButton/CardIconButton';\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\n\nclass TokenWrapper extends Component {\n\n  state = {\n    action:null,\n    infoBox:null,\n    balanceDest:null,\n    tokenConfig:null,\n    balanceStart:null,\n    tokenBalance:null,\n    contractInfo:null,\n    selectedToken:null,\n    approveEnabled:true,\n    approveDescription:null,\n    showTokenWrapperEnabled:false\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const actionChanged = (prevState.action !== this.state.action) || (this.props.action !== prevProps.action);\n    const startContractChanged = JSON.stringify(this.props.startContract) !== JSON.stringify(prevProps.startContract);\n    const destContractChanged = JSON.stringify(this.props.destContract) !== JSON.stringify(prevProps.destContract);\n    if (actionChanged || startContractChanged || destContractChanged){\n      this.loadData();\n    }\n  }\n\n  async loadData(){\n    const action = this.props.action || this.state.action || 'wrap';\n    this.setState({\n      action\n    },() => {\n      this.loadBalance();\n      this.updateActionData();\n    });\n  }\n\n  async getTokenBalance(contractInfo){\n\n    if (!contractInfo){\n      return false;\n    }\n\n    let tokenBalance = null;\n    switch (contractInfo.name){\n      case 'ETH':\n        tokenBalance = await this.functionsUtil.getETHBalance(this.props.account);\n      break;\n      default:\n        // Init Contract\n        await this.props.initContract(contractInfo.name,contractInfo.address,contractInfo.abi);\n        tokenBalance = await this.functionsUtil.getTokenBalance(contractInfo.name,this.props.account);\n      break;\n    }\n\n    tokenBalance = tokenBalance || this.functionsUtil.BNify(0);\n\n    return tokenBalance;\n  }\n\n  async loadBalance(){\n\n    if (!this.props.toolProps.startContract || !this.props.toolProps.destContract){\n      return false;\n    }\n\n    // Load Balances\n    const [\n      balanceDest,\n      balanceStart\n    ] = await Promise.all([\n      this.getTokenBalance(this.props.toolProps.destContract),\n      this.getTokenBalance(this.props.toolProps.startContract)\n    ]);\n\n    const tokenBalance = this.state.action === 'wrap' ? balanceStart : balanceDest;\n    // console.log('loadBalance',this.props.toolProps.startContract,parseFloat(balanceStart),this.props.toolProps.destContract,parseFloat(balanceDest));\n\n    this.setState({\n      balanceDest,\n      balanceStart,\n      tokenBalance\n    });\n  }\n\n  updateActionData(){\n    let infoBox = null;\n    let tokenConfig = null;\n    let tokenBalance = null;\n    let selectedToken = null;\n    let approveEnabled = true;\n    let approveDescription = null;\n\n    switch (this.state.action){\n      case 'wrap':\n        approveEnabled = true;\n        tokenBalance = this.state.balanceStart;\n        tokenConfig = this.props.toolProps.startContract;\n        selectedToken = this.props.toolProps.startContract.name;\n        approveDescription = `To Mint new ${this.props.toolProps.destContract.name} you need to approve the Smart-Contract first`;\n        infoBox = {\n          icon:'FileDownload',\n          // iconProps:{\n          //   color:this.props.theme.colors.transactions.action.deposit\n          // },\n          text:`Wrap your ${this.props.toolProps.startContract.name} and get ${this.props.toolProps.destContract.name}`\n        };\n      break;\n      case 'unwrap':\n        selectedToken = this.props.toolProps.destContract.name;\n        approveEnabled = false;\n        tokenBalance = this.state.balanceDest;\n        tokenConfig = this.props.toolProps.destContract;\n        approveDescription = `To withdraw your ${this.props.toolProps.startContract.name} you need to approve the Smart-Contract first`;\n        infoBox = {\n          icon:'FileUpload',\n          // iconProps:{\n          //   color:this.props.theme.colors.transactions.action.redeem\n          // },\n          text:`Unwrap your ${this.props.toolProps.destContract.name} and get back ${this.props.toolProps.startContract.name}`\n        };\n      break;\n      default:\n      break;\n    }\n\n    this.setState({\n      infoBox,\n      tokenConfig,\n      tokenBalance,\n      selectedToken,\n      approveEnabled,\n      approveDescription\n    },() => {\n      this.loadBalance();\n    });\n  }\n\n  setAction(action){\n    this.setState({\n      action\n    });\n  }\n\n  transactionSucceeded(tx,amount,params){\n    let infoBox = null;\n\n    switch (this.state.action){\n      case 'wrap':\n        const mintLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.props.toolProps.destContract.address.toLowerCase() ) : null;\n        let mintedAmount = mintLog ? parseInt(mintLog.data,16) : amount;\n        mintedAmount = this.functionsUtil.fixTokenDecimals(mintedAmount,this.state.tokenConfig.decimals);\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have received <strong>${mintedAmount.toFixed(4)} ${this.props.toolProps.destContract.name}</strong>`\n        }\n      break;\n      case 'unwrap':\n        const withdrawLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.props.toolProps.destContract.address.toLowerCase() ) : null;\n        let withdrawnAmount = withdrawLog ? parseInt(withdrawLog.data,16) : amount;\n        withdrawnAmount = this.functionsUtil.fixTokenDecimals(withdrawnAmount,this.state.tokenConfig.decimals);\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have received <strong>${withdrawnAmount.toFixed(4)} ${this.props.toolProps.startContract.name}</strong>`\n        }\n      break;\n      default:\n      break;\n    }\n\n    // Update balances\n    this.loadBalance();\n\n    this.setState({\n      infoBox\n    });\n  }\n\n  getTransactionParams(amount){\n    const params = {};\n    switch (this.state.action){\n      case 'wrap':\n        params.value = amount;\n        params.methodParams = [];\n        params.methodName = this.props.toolProps.startContract.wrapMethod;\n      break;\n      case 'unwrap':\n        params.value = null;\n        params.methodParams = [amount];\n        params.methodName = this.props.toolProps.destContract.unwrapMethod;\n      break;\n      default:\n      break;\n    }\n    return params;\n  }\n\n  render() {\n\n    const fullWidth = !!this.props.fullWidth;\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n        mt={[2,fullWidth ? 2 : 3]}\n      >\n        <Flex\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n          width={[1,fullWidth ? 1 : 0.36]}\n        >\n          {\n            !this.props.account ? (\n              <DashboardCard\n                cardProps={{\n                  p:3,\n                  mt:3\n                }}\n              >\n                <Flex\n                  alignItems={'center'}\n                  flexDirection={'column'}\n                >\n                  <Icon\n                    size={this.props.isMobile ? '1.8em' : '2.3em'}\n                    name={'Input'}\n                    color={'cellText'}\n                  />\n                  <Text\n                    mt={[1,2]}\n                    fontSize={2}\n                    color={'cellText'}\n                    textAlign={'center'}\n                  >\n                    Please connect with your wallet interact with Idle.\n                  </Text>\n                  <RoundButton\n                    buttonProps={{\n                      mt:2,\n                      width:[1,1/2]\n                    }}\n                    handleClick={this.props.connectAndValidateAccount}\n                  >\n                    Connect\n                  </RoundButton>\n                </Flex>\n              </DashboardCard>\n            ) : (\n              <Box\n                width={1}\n              >\n                {\n                  !this.props.action && (\n                    <Flex\n                      width={1}\n                      flexDirection={'column'}\n                    >\n                      <Text\n                        mb={2}\n                      >\n                        Choose the action:\n                      </Text>\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'space-between'}\n                      >\n                        <CardIconButton\n                          {...this.props}\n                          cardProps={{\n                            px:3,\n                            py:3,\n                            width:0.48\n                          }}\n                          text={'Wrap'}\n                          iconColor={'deposit'}\n                          icon={'ArrowDownward'}\n                          iconBgColor={'#ced6ff'}\n                          isActive={ this.state.action === 'wrap' }\n                          handleClick={ e => this.setAction('wrap') }\n                        />\n                        <CardIconButton\n                          {...this.props}\n                          cardProps={{\n                            px:3,\n                            py:3,\n                            width:0.48\n                          }}\n                          text={'Unwrap'}\n                          iconColor={'redeem'}\n                          icon={'ArrowUpward'}\n                          iconBgColor={'#ceeff6'}\n                          isActive={ this.state.action === 'unwrap' }\n                          handleClick={ e => this.setAction('unwrap') }\n                        />\n                      </Flex>\n                    </Flex>\n\n                  )\n                }\n                <Box\n                  width={1}\n                  my={fullWidth ? 2 : 3}\n                >\n                  {\n                    this.state.tokenBalance!==null ? (\n                      <SendTxWithBalance\n                        {...this.props}\n                        approveEnabled={false}\n                        action={this.state.action}\n                        infoBox={this.state.infoBox}\n                        tokenConfig={this.state.tokenConfig}\n                        tokenBalance={this.state.tokenBalance}\n                        contractInfo={this.props.toolProps.destContract}\n                        callback={this.transactionSucceeded.bind(this)}\n                        approveDescription={this.state.approveDescription}\n                        // changeInputCallback={this.changeInputCallback.bind(this)}\n                        getTransactionParams={this.getTransactionParams.bind(this)}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                          }}\n                        >\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              name={'MoneyOff'}\n                              color={'cellText'}\n                            />\n                            <Text\n                              mt={2}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              You don't have any {this.state.selectedToken} to {this.state.action} in your wallet.\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                      </SendTxWithBalance>\n                    ) : (\n                      <Flex\n                        width={1}\n                      >\n                        <FlexLoader\n                          flexProps={{\n                            flexDirection:'row'\n                          }}\n                          loaderProps={{\n                            size:'30px'\n                          }}\n                          textProps={{\n                            ml:2\n                          }}\n                          text={'Loading Balance...'}\n                        />\n                      </Flex>\n                    )\n                  }\n                </Box>\n              </Box>\n            )\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default TokenWrapper;","import theme from '../theme';\nimport { Pie } from '@nivo/pie';\nimport React, { Component } from 'react';\nimport { Flex, Text, Image } from \"rimble-ui\";\nimport AssetField from '../AssetField/AssetField';\nimport SmartNumber from '../SmartNumber/SmartNumber';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericChart from '../GenericChart/GenericChart';\n\nclass PortfolioDonut extends Component {\n  state = {\n    chartData:null,\n    totalFunds:null,\n    parentWidth:null,\n    selectedToken:null,\n    selectedTokenConfig:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n  }\n\n  componentWillUnmount() {\n    \n  }\n\n  async componentDidMount(){\n    this.loadPortfolio();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  async loadPortfolio() {\n\n    const portfolio = {};\n    let totalFunds = this.functionsUtil.BNify(0);\n    const isRisk = this.props.selectedStrategy === 'risk';\n\n    await this.functionsUtil.asyncForEach(Object.keys(this.props.availableTokens),async (token) => {\n      const tokenConfig = this.props.availableTokens[token];\n      const idleTokenBalance = await this.functionsUtil.getTokenBalance(tokenConfig.idle.token,this.props.account);\n\n      if (idleTokenBalance){\n        const tokenPrice = await this.functionsUtil.getIdleTokenPrice(tokenConfig);\n        const tokenBalance = await this.functionsUtil.convertTokenBalance(idleTokenBalance.times(tokenPrice),token,tokenConfig,isRisk);\n\n        if (tokenBalance.gt(0)){\n          portfolio[token] = tokenBalance;\n\n          // Increment total balance\n          totalFunds = totalFunds.plus(tokenBalance);\n        }\n      }\n    });\n\n    // Add Gov Tokens\n    const govTokensUserBalances = await this.functionsUtil.getGovTokensUserBalances(this.props.account,this.props.availableTokens,'DAI',null,true);\n    if (govTokensUserBalances){\n      Object.keys(govTokensUserBalances).forEach( govToken => {\n        const govTokenBalance = this.functionsUtil.BNify(govTokensUserBalances[govToken]);\n        portfolio[govToken] = govTokenBalance;\n        totalFunds = totalFunds.plus(govTokenBalance);\n      });\n    }\n\n    const chartData = [];\n\n    Object.keys(portfolio).forEach(token => {\n      const tokenBalance = portfolio[token];\n      if (tokenBalance.gt(0)){\n        const tokenPercentage = tokenBalance.div(totalFunds).times(100);\n        let tokenColorHsl = this.functionsUtil.getGlobalConfig(['stats','tokens',token.toUpperCase(),'color','hsl']);\n        tokenColorHsl = tokenColorHsl ? tokenColorHsl.join(',') : '0,0%,0%';\n        chartData.push({\n          id:token,\n          label:token.substr(0,1).toUpperCase()+token.substr(1),\n          value:Math.round(tokenPercentage),\n          color:'hsl('+tokenColorHsl+')'\n        });\n      }\n    });\n\n    this.setState({\n      portfolio,\n      chartData,\n      totalFunds\n    });\n  }\n\n  render() {\n\n    const chartProps = {\n      padAngle:0,\n      animate:true,\n      borderWidth:0,\n      cornerRadius:0,\n      innerRadius:0.65,\n      motionDamping:15,\n      motionStiffness:90,\n      colors:d => d.color,\n      tooltipFormat: v => v+'%',\n      sliceLabel: d => {\n        if (parseFloat(d.value)>=5){\n          return d.value+'%';\n        } else {\n          return null;\n        }\n      },\n      radialLabel: d => {\n        return null;//Object.keys(this.props.availableTokens).indexOf(d.label.toUpperCase());\n      },\n      theme:{\n        tooltip: {\n          container: {\n            display: 'none'\n          },\n        },\n        labels:{\n          text:{\n            fontSize:16,\n            fontWeight:500,\n            fontFamily: theme.fonts.sansSerif\n          }\n        },\n        legends:{\n          text:{\n            fontSize:13,\n            fontWeight:500,\n            fontFamily: theme.fonts.sansSerif\n          }\n        }\n      },\n      slicesLabelsSkipAngle:5,\n      radialLabelsSkipAngle:10,\n      radialLabelsTextXOffset:0,\n      slicesLabelsTextColor:'#fff',\n      radialLabelsTextColor:'#333',\n      radialLabelsLinkStrokeWidth:0,\n      radialLabelsLinkDiagonalLength:0,\n      radialLabelsLinkHorizontalLength:0,\n      radialLabelsLinkColor:{ from: 'color' },\n      radialLabelsLinkOffset:-parseInt(this.state.parentWidth*0.2),\n      margin: this.props.isMobile ? { top: 15, right: 25, bottom: 30, left: 25 } : { top: 30, right: 50, bottom: 60, left: 50 },\n      onMouseEnter:(data, e) => {\n        const selectedToken = data.id;\n        const selectedTokenConfig = selectedToken ? this.props.availableTokens[selectedToken] || this.functionsUtil.getGlobalConfig(['stats','tokens',selectedToken]) : null;\n        this.setState({\n          selectedToken,\n          selectedTokenConfig\n        });\n      },\n      onMouseLeave:(data, e) => {\n        this.setState({\n          selectedToken:null,\n          selectedTokenConfig:null\n        });\n      },\n      legends:[\n        {\n          itemWidth: 60,\n          itemHeight: 18,\n          translateY: this.props.isMobile ? 25 : 50,\n          symbolSize: 10,\n          anchor: 'bottom',\n          direction: 'row',\n          itemTextColor: theme.colors.legend,\n          symbolShape: 'circle',\n          effects: [\n            {\n              on: 'hover',\n              style: {\n                itemTextColor: '#000'\n              }\n            }\n          ]\n        }\n      ]\n    };\n\n    const selectedToken = this.state.selectedToken !== null && this.state.portfolio[this.state.selectedToken] ? this.state.portfolio[this.state.selectedToken] : false;\n    const strategyIcon = this.functionsUtil.getGlobalConfig(['strategies',this.props.selectedStrategy,'icon']);\n    const convertToken = this.state.selectedToken ? this.functionsUtil.getGlobalConfig(['stats','tokens',this.state.selectedToken,'conversionRateField']) : false;\n\n    return (\n      <Flex\n        width={1}\n      >\n        { \n          (this.state.totalFunds || selectedToken) && \n            <Flex\n              zIndex={0}\n              top={['32%','35%']}\n              left={['23%','27%']}\n              textAlign={'center'}\n              alignItems={'center'}\n              width={['55%','46%']}\n              position={'absolute'}\n              height={['40%','35%']}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              {\n                selectedToken ? (\n                  <>\n                    <AssetField\n                      fieldInfo={{\n                        name:'icon',\n                        props:{\n                          mb:1,\n                          height:'2.2em'\n                        }\n                      }}\n                      token={this.state.selectedToken}\n                      tokenConfig={this.state.selectedTokenConfig}\n                    />\n                    <SmartNumber\n                      unitProps={{\n                        ml:2,\n                        fontSize:4,\n                        fontWeight:3\n                      }}\n                      decimals={2}\n                      fontSize={[3,4]}\n                      maxPrecision={5}\n                      fontWeight={[3,4]}\n                      unit={ convertToken ? '$' : null}\n                      number={this.state.portfolio[this.state.selectedToken]}\n                    />\n                    <Text\n                      fontWeight={3}\n                      fontSize={[1,2]}\n                      color={'cellTitle'}\n                    >\n                      {this.state.selectedToken}\n                    </Text>\n                  </>\n                ) : (\n                  <>\n                    <Image\n                      mb={1}\n                      height={'2.2em'}\n                      src={strategyIcon}\n                    />\n                    <SmartNumber\n                      unit={'$'}\n                      unitProps={{\n                        ml:2,\n                        fontSize:4,\n                        fontWeight:3\n                      }}\n                      decimals={2}\n                      fontSize={[3,4]}\n                      maxPrecision={5}\n                      fontWeight={[3,4]}\n                      number={this.state.totalFunds}\n                    />\n                    <Text\n                      fontWeight={3}\n                      fontSize={[1,2]}\n                      color={'cellTitle'}\n                    >\n                      Total funds\n                    </Text>\n                  </>\n                )\n              }\n            </Flex>\n        }\n        <GenericChart\n          type={Pie}\n          {...chartProps}\n          showLoader={true}\n          data={this.state.chartData}\n          parentId={this.props.parentId}\n          parentIdHeight={this.props.parentId}\n        />\n      </Flex>\n    );\n  }\n}\n\nexport default PortfolioDonut;\n","import React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport AssetField from '../AssetField/AssetField';\nimport { Card, Flex, Image, Text } from \"rimble-ui\";\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport TotalEarningsCounter from '../TotalEarningsCounter/TotalEarningsCounter';\n\nclass EarningsEstimation extends Component {\n  state = {\n    tokensEarnings:null,\n    estimationStepsPerc:null,\n    estimationStepsOptions:null,\n    estimationStepsDefaultOption:null,\n    estimationSteps:{\n      0:{\n        'Month':{\n          perc:1/12,\n          width:1/3\n        },\n        '2 months':{\n          perc:1/6,\n          width:1/3\n        },\n        '3 months':{\n          perc:1/4,\n          width:1/3,\n          optionName:'3M'\n        }\n      },\n      25:{\n        '3 months':{\n          perc:3/12,\n          width:3/12\n        },\n        '8 months':{\n          perc:8/12,\n          width:5/12\n        },\n        'Year':{\n          perc:1,\n          width:4/12,\n          optionName:'1Y'\n        }\n      },\n      90:{\n        'Year':{\n          perc:1,\n          width:1/3,\n        },\n        '2 Years':{\n          perc:2,\n          width:1/3,\n        },\n        '5 Years':{\n          perc:5,\n          width:3/5,\n          optionName:'5Y'\n        }\n      }\n    }\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadEarnings();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  setEstimationStepsPerc(estimationStepsPerc){\n    this.setState({\n      estimationStepsPerc\n    });\n  }\n\n  async loadEarnings(){\n    let stepsCount = {};\n    let tokensEarnings = {};\n    // let estimationStepsPerc = 0;\n\n    const isRisk = this.props.selectedStrategy === 'risk';\n\n    const aggregatedEarnings = {\n      earnings:this.functionsUtil.BNify(0),\n      amountLent:this.functionsUtil.BNify(0),\n      earningsYear:this.functionsUtil.BNify(0),\n    };\n\n    await this.functionsUtil.asyncForEach(this.props.enabledTokens,async (token) => {\n      const tokenConfig = this.props.availableTokens[token];\n      const amountDeposited = await this.functionsUtil.getAmountDeposited(tokenConfig,this.props.account);\n\n      const [amountLent,avgBuyPrice,idleTokenPrice] = await Promise.all([\n        this.functionsUtil.convertTokenBalance(amountDeposited,token,tokenConfig,isRisk),\n        this.functionsUtil.getAvgBuyPrice([token],this.props.account),\n        this.functionsUtil.getIdleTokenPrice(tokenConfig)\n      ]);\n\n      const earningsPerc = idleTokenPrice.div(avgBuyPrice[token]).minus(1);\n      const earnings = amountLent.times(earningsPerc);\n\n      let earningsYear = 0;\n      let tokenAPY = 0;\n      const tokenAprs = await this.functionsUtil.getTokenAprs(tokenConfig);\n      if (tokenAprs && tokenAprs.avgApr !== null){\n        tokenAPY = tokenAprs.avgApy;\n        earningsYear = amountLent.times(tokenAPY.div(100));\n      }\n\n      const earningsPercStep = Math.floor(earnings.div(earningsYear).times(100));\n      \n      const possibleSteps = Object.keys(this.state.estimationSteps).filter(perc => perc<=earningsPercStep);\n      const maxPossibleStep = parseInt(possibleSteps.pop());\n\n      stepsCount[maxPossibleStep] = stepsCount[maxPossibleStep] ? stepsCount[maxPossibleStep]+1 : 1;\n\n      if (!this.functionsUtil.BNify(amountLent).isNaN() && !this.functionsUtil.BNify(idleTokenPrice).isNaN() && !this.functionsUtil.BNify(earnings).isNaN() && !this.functionsUtil.BNify(earningsYear).isNaN()){\n        tokensEarnings[token] = {\n          earnings,\n          amountLent,\n          earningsYear,\n          idleTokenPrice\n        };\n\n        // const earningsUSD = await this.functionsUtil.convertTokenBalance(earningsYearings,token,tokenConfig,isRisk);\n        // const amountLentUSD = await this.functionsUtil.convertTokenBalance(amountLent,token,tokenConfig,isRisk);\n        // const earningsYearUSD = await this.functionsUtil.convertTokenBalance(earningsYear,token,tokenConfig,isRisk);\n\n        aggregatedEarnings.earnings = aggregatedEarnings.earnings.plus(earnings);\n        aggregatedEarnings.amountLent = aggregatedEarnings.amountLent.plus(amountLent);\n        aggregatedEarnings.earningsYear = aggregatedEarnings.earningsYear.plus(earningsYear);\n      }\n    });\n\n    const maxCountStep = Object.keys(stepsCount).reduce( (maxCountStep,step) => {\n      const count = stepsCount[step];\n      if (count>maxCountStep.count){\n        maxCountStep.step = parseInt(step);\n        maxCountStep.count = parseInt(count);\n      }\n      return maxCountStep;\n    },{\n      step:0,\n      count:0\n    });\n\n    const estimationStepsPerc = maxCountStep.step || parseInt(Object.keys(this.state.estimationSteps)[1]);\n\n    const orderedTokensEarnings = {};\n    this.props.enabledTokens.forEach( token => {\n      if (tokensEarnings[token]){\n        orderedTokensEarnings[token] = tokensEarnings[token];\n      }\n    });\n\n    tokensEarnings = orderedTokensEarnings;\n\n    // Add USD aggregated earnings\n    if (Object.keys(tokensEarnings).length>1){\n      tokensEarnings['USD'] = aggregatedEarnings;\n    }\n\n    let estimationStepsDefaultOption = null;\n    const estimationStepsOptions = Object.keys(this.state.estimationSteps).map( step => {\n      const estimationStep = Object.values(this.state.estimationSteps[step]).pop();\n      const label = estimationStep.optionName ? estimationStep.optionName : Object.keys(this.state.estimationSteps[step]).pop();\n      const value = parseInt(step);\n      const option = { value, label };\n\n      if (value === estimationStepsPerc){\n        estimationStepsDefaultOption = option;\n      }\n      return option;\n    });\n\n    this.setState({\n      tokensEarnings,\n      estimationStepsPerc,\n      estimationStepsOptions,\n      estimationStepsDefaultOption,\n    });\n  }\n\n  render() {\n\n    if (!this.state.tokensEarnings){\n      return (\n        <FlexLoader\n          flexProps={{\n            flexDirection:'row',\n            minHeight:this.props.height\n          }}\n          loaderProps={{\n            size:'30px'\n          }}\n          textProps={{\n            ml:2\n          }}\n          text={'Loading estimations...'}\n        />\n      );\n    }\n\n    const estimationSteps = this.state.estimationSteps[this.state.estimationStepsPerc] ? this.state.estimationSteps[this.state.estimationStepsPerc] : this.state.estimationSteps[0];\n\n    return (\n      <Card\n        pr={0}\n        my={1}\n        width={1}\n        px={[3,4]}\n        py={[2,3]}\n        boxShadow={1}\n        borderRadius={2}\n        borderColor={'cardBorder'}\n        backgroundColor={'cardBg'}\n      >\n        <Flex\n          mt={2}\n          mb={3}\n          zIndex={9999}\n          justifyContent={'flex-end'}\n        >\n          <Flex\n            zIndex={9999}\n            width={[1,0.2]}\n            flexDirection={'column'}\n          >\n            <GenericSelector\n              innerProps={{\n                p:0,\n                px:1\n              }}\n              name={'estimation-step'}\n              options={this.state.estimationStepsOptions}\n              onChange={ v => this.setEstimationStepsPerc(v) }\n              defaultValue={this.state.estimationStepsDefaultOption}\n            />\n          </Flex>\n        </Flex>\n        {\n          Object.keys(this.state.tokensEarnings).map((token,tokenIndex) => {\n            const tokenConfig = this.props.availableTokens[token];\n            const tokenEarnings = this.state.tokensEarnings[token];\n            const estimationStepPerc = this.functionsUtil.BNify(Object.values(estimationSteps).pop().perc);\n            const finalEarnings = tokenEarnings.earningsYear.times(estimationStepPerc);\n            const cursorPerc = finalEarnings.gt(0) ? Math.min(1,parseFloat(tokenEarnings.earnings.div(finalEarnings))) : 1;\n            const tokenIcon = tokenConfig && tokenConfig.icon ? tokenConfig.icon :`images/tokens/${token}.svg`;\n            const tokenRGBColor = this.functionsUtil.getGlobalConfig(['stats','tokens',token,'color','rgb']).join(',');\n            // console.log(tokenEarnings.earnings.toFixed(10),tokenEarnings.earningsYear.toFixed(10),finalEarnings.toFixed(10),cursorPerc.toFixed(10),estimationStepPerc.toFixed(10));\n            return (\n              <Flex\n                id={`asset-${token}`}\n                flexDirection={'row'}\n                key={`asset-${token}`}\n                borderTop={ token === 'USD' ? `1px solid ${this.props.theme.colors.divider}` : null }\n              >\n                <Flex\n                  width={[1,0.93]}\n                  position={'relative'}\n                >\n                  <Flex\n                    width={1}\n                    height={'100%'}\n                    position={'absolute'}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    justifyContent={'center'}\n                  >\n                    <Flex\n                      width={[0.15,0.1]}\n                    >\n                    </Flex>\n                    <Flex\n                      width={[0.85,0.9]}\n                      height={'100%'}\n                      flexDirection={'row'}\n                    >\n                      {\n                        Object.keys(estimationSteps).map((label,estimateIndex) => {\n                          const estimationStep = estimationSteps[label];\n                          const estimationStepEarnings = tokenEarnings.earningsYear.times(this.functionsUtil.BNify(estimationStep.perc));\n                          let estimationStepEarningsFormatted = this.functionsUtil.formatMoney(estimationStepEarnings,this.props.isMobile ? 2 : estimationStepEarnings.lt(1) ? 3 : 2);\n                          const conversionRateField = this.functionsUtil.getGlobalConfig(['stats','tokens',token,'conversionRateField']);\n                          if (conversionRateField){\n                            estimationStepEarningsFormatted = '$ '+estimationStepEarningsFormatted;\n                          }\n                          return (\n                            <Flex\n                              pr={2}\n                              justifyContent={'flex-end'}\n                              width={estimationStep.width}\n                              pt={ token === 'USD' ? 2 : null }\n                              key={`asset-estimate-${token}-${estimateIndex}`}\n                              borderRight={`1px solid ${this.props.theme.colors.divider}`}\n                            >\n                              {\n                                (token === 'USD' || (estimateIndex === Object.keys(estimationSteps).length-1)) && \n                                  <Text\n                                    fontWeight={3}\n                                    fontSize={[0,'1em']}\n                                    style={{\n                                      wordBreak:'break-all'\n                                    }}\n                                    color={tokenEarnings.earnings.gte(estimationStepEarnings) ? 'copyColor' : 'legend'}\n                                  >\n                                    {estimationStepEarningsFormatted}\n                                  </Text>\n                              }\n                            </Flex>\n                          );\n                        })\n                      }\n                    </Flex>\n                  </Flex>\n                  <Flex\n                    width={1}\n                    zIndex={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    justifyContent={'center'}\n                    pt={ token === 'USD' ? ['2em','2.8em'] : '1.4em' }\n                    pb={ tokenIndex<Object.keys(this.state.tokensEarnings).length-1 ? '1em' : 0 }\n                  >\n                    <Flex\n                      width={[0.15,0.1]}\n                      justifyContent={['flex-start','flex-end']}\n                    >\n                      <Text\n                        pr={[0,2]}\n                        fontSize={[0,3]}\n                        fontWeight={[3,4]}\n                      >\n                        {token}\n                      </Text>\n                    </Flex>\n                    <Flex\n                      width={[0.85,0.9]}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                      height={['20px','35px']}\n                      justifyContent={'flex-start'}\n                    >\n                      <Flex\n                        height={'100%'}\n                        width={cursorPerc}\n                        backgroundColor={'cardBg'}\n                      >\n                        <Flex\n                          height={'100%'}\n                          width={'100%'}\n                          borderRadius={['0 20px 20px 0','0 35px 35px 0']}\n                          style={{background:`linear-gradient(90deg, rgba(${tokenRGBColor},0) 0%, rgba(${tokenRGBColor},0.1) 30%, rgba(${tokenRGBColor},1) 100%)`}}\n                        ></Flex>\n                      </Flex>\n                      <Flex\n                        pl={2}\n                        width={'auto'}\n                        height={'100%'}\n                        alignItems={'center'}\n                        justifyContent={'flex-start'}\n                      >\n                        <Image src={tokenIcon} height={['1.4em','2.2em']} />\n                      </Flex>\n                      {\n                        <Flex\n                          pl={2}\n                          alignItems={'center'}\n                        >\n                          {\n                            token !== 'USD' ? (\n                              <AssetField\n                                {...this.props}\n                                token={token}\n                                tokenConfig={tokenConfig}\n                                fieldInfo={{\n                                  name:'earningsCounter',\n                                  props:{\n                                    decimals:this.props.isMobile ? 6 : 7,\n                                    maxPrecision:this.props.isMobile ? 9 : 10,\n                                    style:{\n                                      color:this.props.theme.colors.copyColor,\n                                      fontWeight:this.props.isMobile ? 500 : 700,\n                                      fontSize:this.props.isMobile ? '14px' : '22px',\n                                    }\n                                  }\n                                }}\n                              />\n                            ) : (\n                              <TotalEarningsCounter\n                                {...this.props}\n                                decimals={this.props.isMobile ? 6 : 7}\n                                maxPrecision={this.props.isMobile ? 9 : 10}\n                                counterStyle={{\n                                  color:this.props.theme.colors.copyColor,\n                                  fontWeight:this.props.isMobile ? 500 : 700,\n                                  fontFamily:this.props.theme.fonts.sansSerif,\n                                  fontSize:this.props.isMobile ? '14px' : '22px',\n                                }}\n                              />\n                            )\n                          }\n                        </Flex>\n                      }\n                    </Flex>\n                  </Flex>\n                </Flex>\n                {\n                  !this.props.isMobile && \n                    <Flex width={0.07} alignItems={'flex-start'} justifyContent={'flex-end'}>\n                    </Flex>\n                }\n              </Flex>\n            )\n          })\n        }\n        <Flex\n          flexDirection={'row'}\n        >\n          <Flex\n            width={[1,0.93]}\n            position={'relative'}\n          >\n            <Flex\n              width={1}\n              alignItems={'center'}\n              flexDirection={'row'}\n              justifyContent={'center'}\n            >\n              <Flex width={[0.15,0.1]}></Flex>\n              <Flex\n                width={[0.85,0.9]}\n                flexDirection={'row'}\n              >\n                {\n                  Object.keys(estimationSteps).map((estimationLabel,estimateIndex) => {\n                    const estimationStep = estimationSteps[estimationLabel];\n                    return (\n                      <Flex\n                        pt={2}\n                        pr={[1,2]}\n                        justifyContent={'flex-end'}\n                        width={estimationStep.width}\n                        key={`estimate-label-${estimateIndex}`}\n                        borderRight={`1px solid ${this.props.theme.colors.divider}`}\n                      >\n                        <Text\n                          fontWeight={3}\n                          fontSize={[0,2]}\n                          color={'legend'}\n                        >\n                          {estimationLabel}\n                        </Text>\n                      </Flex>\n                    );\n                  })\n                }\n              </Flex>\n            </Flex>\n          </Flex>\n          {\n            !this.props.isMobile && \n              <Flex width={0.07} alignItems={'flex-start'} justifyContent={'center'}>\n                <Text fontWeight={4} fontSize={3}></Text>\n              </Flex>\n          }\n        </Flex>\n      </Card>\n    );\n  }\n}\n\nexport default EarningsEstimation;\n","import React, { Component } from 'react';\nimport { Flex, Icon, Text, Image } from \"rimble-ui\";\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass DashboardIconButton extends Component {\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  render() {\n    return (\n      <DashboardCard\n        cardProps={{\n          pr:2,\n          py:[2,3],\n          pl:[2,3],\n        }}\n        isActive={false}\n        isInteractive={true}\n        handleClick={this.props.handleClick}\n      >\n        <Flex\n          height={'100%'}\n          alignItems={'center'}\n          flexDirection={'row'}\n          justifyContent={'center'}\n        > \n          <Flex\n            px={[1,0]}\n          >\n            {\n              this.props.icon ? (\n                <Icon\n                  name={this.props.icon}\n                  size={this.props.isMobile ? '1.8em' : '3em'}\n                  color={this.props.iconColor ? this.props.iconColor : 'redeem'}\n                />\n              ) : this.props.image && (\n                <Image\n                  src={this.props.image}\n                  width={this.props.isMobile ? '1.8em' : '2.7em'}\n                  height={this.props.isMobile ? '1.8em' : '2.7em'}\n                />\n              )\n            }\n          </Flex>\n          <Flex\n            ml={[2,3]}\n            flexDirection={'column'}\n            alignItems={'flex-start'}\n            justifyContent={'center'}\n          >\n            <Text\n              fontWeight={3}\n              fontSize={[1,3]}\n            >\n              {this.props.title}\n            </Text>\n            <Text\n              fontWeight={2}\n              fontSize={[0,2]}\n              color={'cellText'}\n            >\n              {this.props.text}\n            </Text>\n          </Flex>\n          <Icon\n            align={'center'}\n            color={'cellText'}\n            name={'KeyboardArrowRight'}\n            size={this.props.isMobile ? '1.8em' : '2.5em'}\n          />\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default DashboardIconButton;\n","import Title from '../Title/Title';\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport AssetsList from '../AssetsList/AssetsList';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport PortfolioDonut from '../PortfolioDonut/PortfolioDonut';\nimport ActiveCoverages from '../ActiveCoverages/ActiveCoverages';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport PortfolioEquity from '../PortfolioEquity/PortfolioEquity';\nimport TransactionsList from '../TransactionsList/TransactionsList';\nimport EarningsEstimation from '../EarningsEstimation/EarningsEstimation';\nimport { Flex, Box, Heading, Text, Tooltip, Icon, Loader } from \"rimble-ui\";\nimport DashboardIconButton from '../DashboardIconButton/DashboardIconButton';\nimport TotalBalanceCounter from '../TotalBalanceCounter/TotalBalanceCounter';\nimport TotalEarningsCounter from '../TotalEarningsCounter/TotalEarningsCounter';\n\n// const env = process.env;\n\nclass StrategyPage extends Component {\n\n  state = {\n    portfolio:null,\n    depositedTokens:[],\n    tokensToMigrate:{},\n    aggregatedValues:[],\n    remainingTokens:null,\n    batchedDeposits:null,\n    portfolioLoaded:false,\n    availableGovTokens:null,\n    portfolioEquityStartDate:null,\n    batchedDepositsAvailableTokens:null,\n    portfolioEquityQuickSelection:'week'\n  };\n\n  // Utils\n  functionsUtil = null;\n  componentUnmounted = false;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount(){\n    this.loadUtils();\n  }\n\n  componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentDidMount(){\n    await this.loadPortfolio();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const accountChanged = prevProps.account !== this.props.account;\n    const availableTokensChanged = JSON.stringify(prevProps.availableTokens) !== JSON.stringify(this.props.availableTokens);\n    if (accountChanged || availableTokensChanged){\n      // console.log('StrategyPage - availableTokensChanged',availableTokensChanged);\n      this.setState({\n        portfolioLoaded:false\n      },() => {\n        this.loadPortfolio();\n      });\n    }\n  }\n\n  async setStateSafe(newState,callback=null) {\n    if (!this.componentUnmounted){\n      return this.setState(newState,callback);\n    }\n    return null;\n  }\n\n  setPortfolioEquityQuickSelection(portfolioEquityQuickSelection){\n    this.setStateSafe({\n      portfolioEquityQuickSelection\n    });\n  }\n\n  async loadPortfolio(){\n    const availableTokens = this.props.availableTokens || {};\n\n    if (this.state.portfolioLoaded){\n      return false;\n    }\n\n    // Load portfolio if account is set\n    if (this.props.account){\n      const newState = {};\n      const firstBlockNumber = this.functionsUtil.getGlobalConfig(['network','firstBlockNumber']);\n\n      // Load data\n      const [\n        batchedDeposits,\n        tokensToMigrate,\n        portfolio\n      ] = await Promise.all([\n        // Load claimable batches\n        [],//this.functionsUtil.getBatchedDeposits(this.props.account),\n        // Load tokens to be migrated\n        this.functionsUtil.getTokensToMigrate(this.props.selectedStrategy),\n        // Load portfolio\n        this.functionsUtil.getAccountPortfolio(availableTokens,this.props.account),\n        // Load and process Etherscan Txs\n        this.functionsUtil.getEtherscanTxs(this.props.account,firstBlockNumber,'latest',Object.keys(availableTokens))\n      ]);\n\n      newState.portfolio = portfolio;\n\n      newState.batchedDeposits = batchedDeposits && Object.keys(batchedDeposits).length>0 ? batchedDeposits : null;\n\n      if (newState.batchedDeposits){\n        newState.batchedDepositsAvailableTokens = Object.keys(newState.batchedDeposits).reduce( (batchedDepositsAvailableTokens,token) => {\n          const batchInfo = newState.batchedDeposits[token];\n          const tokenConfig = this.functionsUtil.getGlobalConfig(['tools','batchDeposit','props','availableTokens',token]);\n          if (tokenConfig.strategy === this.props.selectedStrategy){\n            switch (batchInfo.status){\n              case 'pending':\n                tokenConfig.statusIcon = 'Timelapse';\n                tokenConfig.statusIconProps = {\n                  color:this.props.theme.colors.transactions.status.pending\n                };\n              break;\n              case 'executed':\n                tokenConfig.statusIcon = 'Done';\n                tokenConfig.statusIconProps = {\n                  color:this.props.theme.colors.transactions.status.completed\n                };\n              break;\n              default:\n              break;\n            }\n            tokenConfig.token = token;\n            tokenConfig.status = batchInfo.status;\n            tokenConfig.deposited = batchInfo.batchDeposits;\n            tokenConfig.redeemable = batchInfo.batchRedeems;\n            batchedDepositsAvailableTokens[tokenConfig.baseToken] = tokenConfig;\n          }\n          return batchedDepositsAvailableTokens;\n        },{});\n      }\n\n\n      if (portfolio){\n        const depositedTokens = Object.keys(portfolio.tokensBalance).filter(token => ( this.functionsUtil.BNify(portfolio.tokensBalance[token].idleTokenBalance).gt(0) ));\n\n        newState.depositedTokens = depositedTokens;\n\n        const isRisk = this.props.selectedStrategy === 'risk';\n\n        let avgAPY = this.functionsUtil.BNify(0);\n        let avgScore = this.functionsUtil.BNify(0);\n        let totalAmountLent = this.functionsUtil.BNify(0);\n        let totalBalanceWithScore = this.functionsUtil.BNify(0);\n\n        await this.functionsUtil.asyncForEach(depositedTokens,async (token) => {\n          const tokenConfig = availableTokens[token];\n\n          const [\n            tokenAprs,\n            tokenScore,\n            amountLent,\n          ] = await Promise.all([\n            this.functionsUtil.getTokenAprs(tokenConfig),\n            this.functionsUtil.getTokenScore(tokenConfig,isRisk),\n            this.functionsUtil.getAmountDeposited(tokenConfig,this.props.account)\n          ]);\n\n          const amountLentToken = await this.functionsUtil.convertTokenBalance(amountLent,token,tokenConfig,isRisk);\n\n          const tokenBalance = portfolio.tokensBalance[token].tokenBalance;\n          const tokenWeight = tokenBalance.div(portfolio.totalBalance);\n          const tokenAPY = tokenAprs.avgApy && !this.functionsUtil.BNify(tokenAprs.avgApy).isNaN() ? this.functionsUtil.BNify(tokenAprs.avgApy) : this.functionsUtil.BNify(0);\n\n          if (!tokenAPY.isNaN()){\n            avgAPY = avgAPY.plus(tokenAPY.times(tokenWeight));\n          }\n\n          if (!tokenScore.isNaN() && tokenScore.gt(0)){\n            avgScore = avgScore.plus(tokenScore.times(tokenBalance));\n            totalBalanceWithScore = totalBalanceWithScore.plus(tokenBalance);\n          }\n\n          if (amountLentToken){\n            totalAmountLent = totalAmountLent.plus(amountLentToken);\n          }\n        });\n\n        if (!totalBalanceWithScore.isNaN() && totalBalanceWithScore.gt(0)){\n          avgScore = avgScore.div(totalBalanceWithScore);\n        }\n\n        // console.log('avgAPY',avgAPY.toFixed());\n\n        // Add gov tokens to earnings\n        const govTokensTotalBalance = await this.functionsUtil.getGovTokensUserTotalBalance(this.props.account,availableTokens,'DAI');\n        const govTokensUserBalance = await this.functionsUtil.getGovTokensUserBalances(this.props.account,availableTokens,null);\n        const govTokensTotalBalanceTooltip = govTokensUserBalance ? Object.keys(govTokensUserBalance).map( govToken => {\n          const balance = govTokensUserBalance[govToken];\n          if (balance.gt(0)){\n            return `+${balance.toFixed(2)} ${govToken}`;\n          } else {\n            return null;\n          }\n        }).filter(v => (v !== null)) : null;\n\n        newState.avgAPY = avgAPY;\n        newState.avgScore = avgScore;\n        newState.govTokensTotalBalance = govTokensTotalBalance;\n        newState.govTokensTotalBalanceTooltip = govTokensTotalBalanceTooltip;\n      }\n\n      newState.tokensToMigrate = tokensToMigrate;\n      newState.portfolioLoaded = true;\n\n      const remainingTokens = Object.keys(availableTokens).filter(token => (!newState.depositedTokens.includes(token) && !Object.keys(newState.tokensToMigrate).includes(token)) );\n      newState.remainingTokens = remainingTokens;\n\n      // Portfolio loaded\n      this.setStateSafe(newState);\n    // Show available assets for not logged users\n    } else {\n      this.setStateSafe({\n        tokensToMigrate:{},\n        depositedTokens:[],\n        portfolioLoaded:true,\n        remainingTokens:Object.keys(availableTokens),\n      });\n    }\n  }\n\n  render(){\n    const viewOnly = this.props.connectorName === 'custom';\n    const govTokens = this.functionsUtil.getGlobalConfig(['govTokens']);\n    const apyLong = this.functionsUtil.getGlobalConfig(['messages','apyLong']);\n    const riskScore = this.functionsUtil.getGlobalConfig(['messages','riskScore']);\n    const yieldFarming = this.functionsUtil.getGlobalConfig(['messages','yieldFarming']);\n    const nexusMutualConfig = this.functionsUtil.getGlobalConfig(['tools','nexusMutual']);\n    const batchDepositConfig = this.functionsUtil.getGlobalConfig(['tools','batchDeposit']);\n\n    return (\n      <Box\n        width={1}\n      >\n        <Title\n          mb={3}\n        >\n          {this.functionsUtil.getGlobalConfig(['strategies',this.props.selectedStrategy,'title'])} strategy\n        </Title>\n        {\n          !this.state.portfolioLoaded ? (\n            <FlexLoader\n              textProps={{\n                textSize:4,\n                fontWeight:2\n              }}\n              loaderProps={{\n                mb:3,\n                size:'40px'\n              }}\n              flexProps={{\n                minHeight:'50vh',\n                flexDirection:'column'\n              }}\n              text={'Loading portfolio...'}\n            />\n          ) : (\n            <Box\n              width={1}\n            >\n              {\n                this.props.account && this.state.depositedTokens.length>0 ? (\n                  <Flex\n                    width={1}\n                    flexDirection={'column'}\n                  >\n                    <Flex\n                      mb={3}\n                      width={1}\n                      mt={[2,0]}\n                      alignItems={'center'}\n                      justifyContent={'center'}\n                      flexDirection={['column','row']}\n                    >\n                      <Flex\n                        pr={[0,2]}\n                        width={[1,1/3]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            py:[3,0],\n                            mb:[2,0],\n                            display:'flex',\n                            alignItems:'center',\n                            height:['auto','125px'],\n                            justifyContent:'center'\n                          }}\n                        >\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            {\n                              this.state.avgAPY ? (\n                                <Text\n                                  lineHeight={1}\n                                  fontWeight={[3,4]}\n                                  color={'copyColor'}\n                                  fontFamily={'counter'}\n                                  fontSize={[4,'1.7em']}\n                                  dangerouslySetInnerHTML={{ __html: this.state.avgAPY.toFixed(2)+'<small>%</small>' }}\n                                >\n                                </Text>\n                              ) : (\n                                <Loader size=\"20px\" />\n                              )\n                            }\n                            <Flex\n                              mt={2}\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'center'}\n                            >\n                              <Text\n                                fontWeight={2}\n                                fontSize={[1,2]}\n                                color={'cellText'}\n                              >\n                                Avg APY\n                              </Text>\n                              <Tooltip\n                                placement={'bottom'}\n                                message={this.functionsUtil.getGlobalConfig(['messages','apyLong'])}\n                              >\n                                <Icon\n                                  ml={2}\n                                  name={\"Info\"}\n                                  size={'1em'}\n                                  color={'cellTitle'}\n                                />\n                              </Tooltip>\n                            </Flex>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                      <Flex\n                        pr={[0,2]}\n                        width={[1,1/3]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            py:[3,0],\n                            mb:[2,0],\n                            display:'flex',\n                            alignItems:'center',\n                            height:['auto','125px'],\n                            justifyContent:'center'\n                          }}\n                        >\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            {\n                              this.state.portfolio ? (\n                                <Flex\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                  justifyContent={'center'}\n                                >\n                                  <TotalBalanceCounter\n                                    decimals={5}\n                                    {...this.props}\n                                    portfolio={this.state.portfolio}\n                                  />\n                                  <Flex\n                                    width={1}\n                                    alignItems={'center'}\n                                    flexDirection={'row'}\n                                    justifyContent={'center'}\n                                  >\n                                    <Flex\n                                      width={0.45}\n                                      alignItems={'center'}\n                                      justifyContent={'flex-end'}\n                                    >\n                                      <Text\n                                        fontSize={1}\n                                        fontWeight={3}\n                                        fontFamily={this.props.theme.fonts.counter}\n                                        color={this.props.theme.colors.transactions.status.completed}\n                                      >\n                                        +{this.state.portfolio.totalEarningsPerc.toFixed(2)}%\n                                      </Text>\n                                    </Flex>\n                                    <Text\n                                      mx={1}\n                                      fontSize={1}\n                                      fontWeight={3}\n                                      fontFamily={this.props.theme.fonts.counter}\n                                      color={this.props.theme.colors.transactions.status.completed}\n                                    >|</Text>\n                                    <Flex\n                                      width={0.45}\n                                      alignItems={'center'}\n                                      justifyContent={'flex-start'}\n                                    >\n                                      <TotalEarningsCounter\n                                        {...this.props}\n                                        unit={'+$'}\n                                        decimals={4}\n                                        counterStyle={{\n                                          fontSize:14,\n                                          fontWeight:600,\n                                          color:this.props.theme.colors.transactions.status.completed\n                                        }}\n                                        portfolio={this.state.portfolio}\n                                      />\n                                    </Flex>\n                                  </Flex>\n                                </Flex>\n                              ) : (\n                                <Loader size=\"20px\" />\n                              )\n                            }\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'center'}\n                            >\n                              <Text\n                                fontWeight={2}\n                                fontSize={[1,2]}\n                                color={'cellText'}\n                              >\n                                Total Balance\n                              </Text>\n                              {\n                                this.state.govTokensTotalBalance && (\n                                  <Tooltip\n                                    placement={'bottom'}\n                                    message={'Total Balance does not include accrued governance tokens: '+(this.state.govTokensTotalBalance && this.state.govTokensTotalBalance.gt(0) ? ` (${this.state.govTokensTotalBalanceTooltip.join(' / ')})` : '')}\n                                  >\n                                    <Icon\n                                      ml={2}\n                                      name={\"Info\"}\n                                      size={'1em'}\n                                      color={'cellTitle'}\n                                    />\n                                  </Tooltip>\n                                )\n                              }\n                            </Flex>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                      <Flex\n                        width={[1,1/3]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            py:[3,0],\n                            mb:[2,0],\n                            display:'flex',\n                            alignItems:'center',\n                            height:['auto','125px'],\n                            justifyContent:'center'\n                          }}\n                        >\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            {\n                              this.state.avgScore ? (\n                                <Text\n                                  lineHeight={1}\n                                  fontWeight={[3,4]}\n                                  color={'copyColor'}\n                                  fontFamily={'counter'}\n                                  fontSize={[4,'1.7em']}\n                                  dangerouslySetInnerHTML={{ __html: this.state.avgScore.toFixed(2) }}\n                                >\n                                </Text>\n                              ) : (\n                                <Loader size=\"20px\" />\n                              )\n                            }\n                            <Flex\n                              mt={2}\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'center'}\n                            >\n                              <Text\n                                fontWeight={2}\n                                fontSize={[1,2]}\n                                color={'cellText'}\n                              >\n                                Avg Risk Score\n                              </Text>\n                              <Tooltip\n                                placement={'bottom'}\n                                message={this.functionsUtil.getGlobalConfig(['messages','riskScoreShort'])}\n                              >\n                                <Icon\n                                  ml={2}\n                                  name={\"Info\"}\n                                  size={'1em'}\n                                  color={'cellTitle'}\n                                />\n                              </Tooltip>\n                            </Flex>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                    </Flex>\n                    <Flex\n                      width={1}\n                      id={\"portfolio-charts\"}\n                      justifyContent={'space-between'}\n                      flexDirection={['column','row']}\n                    >\n                      <Flex\n                        mb={[3,0]}\n                        width={[1,0.328]}\n                        flexDirection={'column'}\n                        id={\"portfolio-composition\"}\n                      >\n                        <DashboardCard\n                          title={'Composition'}\n                          titleProps={ !this.props.isMobile ? {\n                            style:{\n                              minHeight:'39px'\n                            }\n                          } : null}\n                        >\n                          <PortfolioDonut\n                            {...this.props}\n                            parentId={'portfolio-composition'}\n                          />\n                        </DashboardCard>\n                      </Flex>\n                      <Flex\n                        width={[1,0.666]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard>\n                          <Flex\n                            pt={[3,4]}\n                            px={[3,4]}\n                            aligItems={'center'}\n                            flexDirection={['column','row']}\n                          >\n                            <Flex\n                              width={[1,0.7]}\n                              flexDirection={'column'}\n                              justifyContent={'flex-start'}\n                            >\n                              <Title\n                                fontWeight={4}\n                                fontSize={[2,3]}\n                                textAlign={'left'}\n                              >\n                                Performance\n                              </Title>\n                            </Flex>\n                            <Flex\n                              mt={[2,0]}\n                              width={[1,0.3]}\n                              flexDirection={'column'}\n                              justifyContent={'flex-end'}\n                            >\n                              <GenericSelector\n                                innerProps={{\n                                  p:0,\n                                  px:1\n                                }}\n                                defaultValue={\n                                  {value:'week',label:'1W'}\n                                }\n                                name={'performance-time'}\n                                options={[\n                                  {value:'week',label:'1W'},\n                                  {value:'month',label:'1M'},\n                                  {value:'month3',label:'3M'},\n                                  {value:'month6',label:'6M'},\n                                  {value:'all',label:'MAX'},\n                                ]}\n                                onChange={ v => this.setPortfolioEquityQuickSelection(v) }\n                              />\n                            </Flex>\n                          </Flex>\n                          <Flex\n                            ml={[0,3]}\n                            aligItems={'center'}\n                            justifyContent={'center'}\n                            id={\"portfolio-performance\"}\n                          >\n                            <PortfolioEquity\n                              {...this.props}\n                              enabledTokens={[]}\n                              parentId={'portfolio-performance'}\n                              parentIdHeight={'portfolio-composition'}\n                              quickDateSelection={this.state.portfolioEquityQuickSelection}\n                              frequencySeconds={this.functionsUtil.getFrequencySeconds('day',1)}\n                            />\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                    </Flex>\n                  </Flex>\n                ) : (\n                  <Flex\n                    mb={3}\n                    mx={'auto'}\n                    width={[1,0.8]}\n                    aligItems={'center'}\n                    justifyContent={'center'}\n                  >\n                    <Text\n                      fontWeight={2}\n                      fontSize={[1,2]}\n                      textAlign={'center'}\n                    >\n                      {\n                        this.props.isMobile ?\n                          this.functionsUtil.getGlobalConfig(['strategies',this.props.selectedStrategy,'descShort'])\n                        :\n                          this.functionsUtil.getGlobalConfig(['strategies',this.props.selectedStrategy,'descLong'])\n                      }\n                    </Text>\n                  </Flex>\n                )\n              }\n              {\n                !viewOnly && this.state.depositedTokens.length>0 && this.props.account && nexusMutualConfig.enabled && (\n                  <Flex\n                    mt={3}\n                    width={1}\n                    id={\"tools\"}\n                    flexDirection={'column'}\n                  >\n                    <Flex\n                      pb={2}\n                      width={1}\n                      mb={[2,3]}\n                      borderColor={'divider'}\n                      borderBottom={'1px solid transparent'}\n                    >\n                      <Heading.h4\n                        fontSize={[2,4]}\n                        fontWeight={[3,4]}\n                      >\n                        Tools\n                      </Heading.h4>\n                    </Flex>\n                    <Flex\n                      flexDirection={['column','row']}\n                    >\n                      {\n                        ['addFunds','nexusMutual','tokenSwap'].map( (toolName,toolIndex) => {\n                          const toolConfig = this.functionsUtil.getGlobalConfig(['tools',toolName]);\n                          return (\n                            <Flex\n                              width={[1,1/3]}\n                              key={`tool_${toolIndex}`}\n                              mb={toolIndex<2 ? [2,0] : 0}\n                              pr={toolIndex<2 ? [0,3] : 0}\n                            >\n                              <DashboardIconButton\n                                {...this.props}  \n                                icon={toolConfig.icon}\n                                text={toolConfig.desc}\n                                image={toolConfig.image}\n                                title={toolConfig.label}\n                                handleClick={ e => this.props.goToSection(`tools/${toolConfig.route}`) }\n                              />\n                            </Flex>\n                          );\n                        })\n                      }\n                    </Flex>\n                  </Flex>\n                )\n              }\n              {\n                nexusMutualConfig.enabled && this.state.portfolio && this.state.portfolio.totalBalance.gt(0) && (\n                  <Flex\n                    width={1}\n                    id={'active-coverages'}\n                    flexDirection={'column'}\n                  >\n                    <ActiveCoverages\n                      {...this.props}\n                      title={'Coverage'}\n                      titleProps={{\n                        my:4\n                      }}\n                    />\n                  </Flex>\n                )\n              }\n              {\n                this.state.batchedDeposits && (\n                  <Flex\n                    width={1}\n                    mb={[0,3]}\n                    id={'batched-deposits'}\n                    flexDirection={'column'}\n                  >\n                    <Title my={[3,4]}>Batched Deposits</Title>\n                    <Flex\n                      width={1}\n                      flexDirection={'column'}\n                    >\n                      <AssetsList\n                        enabledTokens={Object.keys(this.state.batchedDepositsAvailableTokens)}\n                        cols={[\n                          {\n                            title:'TOKEN',\n                            props:{\n                              width:[0.3,0.2]\n                            },\n                            fields:[\n                              {\n                                name:'icon',\n                                props:{\n                                  mr:2,\n                                  height:['1.4em','2.3em']\n                                }\n                              },\n                              {\n                                name:'tokenName'\n                              }\n                            ]\n                          },\n                          {\n                            mobile:false,\n                            title:'DEPOSITED',\n                            props:{\n                              width:[0.33, 0.21],\n                            },\n                            fields:[\n                              {\n                                name:'custom',\n                                type:'number',\n                                path:['deposited'],\n                                props:{\n                                  decimals: 4\n                                }\n                              },\n                              {\n                                name:'tokenName',\n                                props:{\n                                  ml:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'REDEEMABLE',\n                            props:{\n                              width:[0.44,0.23],\n                              justifyContent:['center','flex-start']\n                            },\n                            fields:[\n                              {\n                                name:'custom',\n                                type:'number',\n                                path:['redeemable'],\n                                props:{\n                                  decimals: 4\n                                }\n                              },\n                              {\n                                type:'text',\n                                name:'custom',\n                                path:['token'],\n                                props:{\n                                  ml:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'STATUS',\n                            props:{\n                              width:[0.26,0.19],\n                              justifyContent:['center','flex-start']\n                            },\n                            fields:[\n                              {\n                                type:'icon',\n                                mobile:false,\n                                name:'custom',\n                                path:['statusIcon'],\n                                props:{\n                                  mr:2,\n                                  size:this.props.isMobile ? '1.2em' : '1.8em'\n                                }\n                              },\n                              {\n                                name:'custom',\n                                path:['status'],\n                                props:{\n                                  style:{\n                                    textTransform:'capitalize'\n                                  }\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'',\n                            visibleOnDesktop:true,\n                            mobile:this.props.account === null,\n                            props:{\n                              width:[0.35,0.17],\n                            },\n                            parentProps:{\n                              width:1\n                            },\n                            fields:[\n                              {\n                                name:'button',\n                                label:'Claim',\n                                funcProps:{\n                                  disabled:(props) => (props.tokenConfig.status === 'pending')\n                                },\n                                props:{\n                                  width:1,\n                                  fontSize:3,\n                                  fontWeight:3,\n                                  height:'45px',\n                                  borderRadius:4,\n                                  boxShadow:null,\n                                  mainColor:'migrate',\n                                  size: this.props.isMobile ? 'small' : 'medium',\n                                  handleClick:(props) => this.props.goToSection(`tools/${batchDepositConfig.route}/${props.tokenConfig.token}`)\n                                }\n                              }\n                            ]\n                          }\n                        ]}\n                        {...this.props}\n                        availableTokens={this.state.batchedDepositsAvailableTokens}\n                      />\n                    </Flex>\n                  </Flex>\n                )\n              }\n              <Flex\n                width={1}\n                id={'available-assets'}\n                flexDirection={'column'}\n                mb={!this.state.depositedTokens.length ? 4 : 0}\n              >\n                {\n                  (this.state.depositedTokens.length>0 || Object.keys(this.state.tokensToMigrate).length>0 || this.state.remainingTokens.length>0 ) &&\n                    <Title my={[3,4]}>Available assets</Title>\n                }\n                <Flex width={1} flexDirection={'column'}>\n                  {\n                    Object.keys(this.state.tokensToMigrate).length>0 &&\n                    <Flex\n                      width={1}\n                      mb={[3,4]}\n                      id={\"migrate-assets\"}\n                      flexDirection={'column'}\n                    >\n                      <Flex\n                        pb={2}\n                        width={1}\n                        mb={[2,3]}\n                        borderColor={'divider'}\n                        borderBottom={'1px solid transparent'}\n                      >\n                        <Heading.h4\n                          fontSize={[2,4]}\n                          fontWeight={[3,4]}\n                        >\n                          Assets to migrate\n                        </Heading.h4>\n                      </Flex>\n                      <AssetsList\n                        enabledTokens={Object.keys(this.state.tokensToMigrate)}\n                        handleClick={(props) => this.props.changeToken(props.token)}\n                        cols={[\n                          {\n                            title:'CURRENCY',\n                            props:{\n                              width:[0.27,0.15]\n                            },\n                            fields:[\n                              {\n                                name:'icon',\n                                props:{\n                                  mr:2,\n                                  height:['1.4em','2.3em']\n                                }\n                              },\n                              {\n                                name:'tokenName'\n                              }\n                            ]\n                          },\n                          {\n                            title:'POOL',\n                            visibleOnDesktop:true,\n                            mobile:this.props.account !== null,\n                            props:{\n                              width:[0.21, 0.12],\n                            },\n                            fields:[\n                              {\n                                name:'pool',\n                                props:{\n                                  decimals:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'APY',\n                            desc:apyLong,\n                            props:{\n                              width:[0.29,0.15],\n                            },\n                            parentProps:{\n                              flexDirection:'column',\n                              alignItems:'flex-start',\n                            },\n                            fields:[\n                              {\n                                name:'apy',\n                                showTooltip:true\n                              },\n                              {\n                                name:'idleDistribution',\n                                showLoader:false,\n                                props:{\n                                  decimals:this.props.isMobile ? 1 : 2,\n                                  fontSize:this.props.isMobile ? '9px' : 0\n                                }\n                              },\n                            ]\n                          },\n                          {\n                            title:'SCORE',\n                            desc:riskScore,\n                            props:{\n                              width:[0.21,0.12],\n                            },\n                            fields:[\n                              {\n                                name:'score'\n                              }\n                            ]\n                          },\n                          {\n                            title:'BALANCE',\n                            mobile:false,\n                            props:{\n                              width:[0.16,0.14],\n                            },\n                            parentProps:{\n                              width:1,\n                              pr:[2,4]\n                            },\n                            fields:[\n                              {\n                                name:'amountToMigrate',\n                              }\n                            ]\n                          },\n                          {\n                            mobile:false,\n                            title:'FARMING',\n                            desc:yieldFarming,\n                            props:{\n                              width:[0.25,0.15],\n                              textAlign:'center'\n                            },\n                            fields:[\n                              {\n                                name:'govTokens'\n                              }\n                            ]\n                          },\n                          {\n                            title:'',\n                            visibleOnDesktop:true,\n                            mobile:this.props.account === null,\n                            props:{\n                              width:[ this.props.account === null ? 0.29 : 0 ,0.17],\n                            },\n                            parentProps:{\n                              width:1\n                            },\n                            fields:[\n                              {\n                                name:'button',\n                                label: 'Migrate',\n                                props:{\n                                  width:1,\n                                  fontSize:3,\n                                  fontWeight:3,\n                                  height:'45px',\n                                  borderRadius:4,\n                                  boxShadow:null,\n                                  mainColor:'migrate',\n                                  size: this.props.isMobile ? 'small' : 'medium',\n                                  handleClick:(props) => this.props.changeToken(props.token)\n                                }\n                              }\n                            ]\n                          }\n                        ]}\n                        {...this.props}\n                      />\n                    </Flex>\n                  }\n                  {\n                  this.state.depositedTokens.length>0 &&\n                    <Flex\n                      mb={ this.state.remainingTokens.length>0 ? [3,4] : 0 }\n                      width={1}\n                      id={\"deposited-assets\"}\n                      flexDirection={'column'}\n                    >\n                      <Flex\n                        pb={2}\n                        width={1}\n                        mb={[2,3]}\n                        borderColor={'divider'}\n                        borderBottom={'1px solid transparent'}\n                      >\n                        <Heading.h4\n                          fontSize={[2,4]}\n                          fontWeight={[3,4]}\n                        >\n                          Deposited assets\n                        </Heading.h4>\n                      </Flex>\n                      <AssetsList\n                        enabledTokens={this.state.depositedTokens}\n                        handleClick={(props) => this.props.changeToken(props.token)}\n                        cols={[\n                          {\n                            title:'CURRENCY',\n                            props:{\n                              width:[0.27,0.13]\n                            },\n                            fields:[\n                              {\n                                name:'icon',\n                                props:{\n                                  mr:2,\n                                  height:['1.4em','2.3em']\n                                }\n                              },\n                              {\n                                name:'tokenName'\n                              }\n                            ]\n                          },\n                          {\n                            title:'POOL',\n                            mobile:false,\n                            props:{\n                              width:[0.12,0.09],\n                            },\n                            fields:[\n                              {\n                                name:'pool',\n                                props:{\n                                  decimals:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'APY',\n                            desc:apyLong,\n                            props:{\n                              width:[0.30,0.14],\n                            },\n                            parentProps:{\n                              flexDirection:'column',\n                              alignItems:'flex-start',\n                            },\n                            fields:[\n                              {\n                                name:'apy',\n                                showTooltip:true\n                              },\n                              {\n                                name:'idleDistribution',\n                                showLoader:false,\n                                props:{\n                                  decimals:this.props.isMobile ? 1 : 2,\n                                  fontSize:this.props.isMobile ? '9px' : 0\n                                }\n                              },\n                            ]\n                          },\n                          {\n                            title:'SCORE',\n                            desc:riskScore,\n                            props:{\n                              width:[0.21,0.10],\n                            },\n                            parentProps:{\n                              alignItems:['center','flex-start'],\n                            },\n                            fields:[\n                              {\n                                name:'score',\n                              }\n                            ]\n                          },\n                          {\n                            title:'DEPOSITED',\n                            props:{\n                              width:[0.22,0.13],\n                              justifyContent:['center','flex-start']\n                            },\n                            fields:[\n                              {\n                                name:'amountLent'\n                              }\n                            ]\n                          },\n                          {\n                            mobile:false,\n                            title:'FARMING',\n                            desc:yieldFarming,\n                            props:{\n                              width:[0.25,0.11],\n                              textAlign:'center'\n                            },\n                            fields:[\n                              {\n                                name:'govTokens',\n                                props:{\n                                  decimals:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            mobile:false,\n                            title:'EARNINGS',\n                            props:{\n                              width:[0.15,0.13],\n                              textAlign:'center'\n                            },\n                            parentProps:{\n                              alignItems:'center',\n                              flexDirection:'column',\n                            },\n                            fields:[\n                              {\n                                name:'earnings',\n                                props:{\n                                  decimals:3\n                                }\n                              },\n                              {\n                                name:'earningsPerc',\n                                showLoader:false,\n                                showDirection:false,\n                                props:{\n                                  fontSize:0,\n                                  decimals:3\n                                }\n                              }\n                            ]\n                          },\n                          /*\n                          {\n                            title:'EARNINGS %',\n                            props:{\n                              width:[0.27,0.14],\n                            },\n                            fields:[\n                              {\n                                name:'earningsPerc'\n                              }\n                            ]\n                          },\n                          */\n                          {\n                            title:'',\n                            mobile:false,\n                            props:{\n                              width:0.17,\n                            },\n                            parentProps:{\n                              width:1\n                            },\n                            fields:[\n                              {\n                                name:'button',\n                                label:'Manage',\n                                props:{\n                                  width:1,\n                                  fontSize:3,\n                                  fontWeight:3,\n                                  height:'45px',\n                                  borderRadius:4,\n                                  boxShadow:null,\n                                  mainColor:'redeem',\n                                  size: this.props.isMobile ? 'small' : 'medium',\n                                  handleClick:(props) => this.props.changeToken(props.token)\n                                }\n                              }\n                            ]\n                          }\n                        ]}\n                        {...this.props}\n                      />\n                    </Flex>\n                  }\n                  {\n                    this.state.remainingTokens.length>0 &&\n                    <Flex id=\"remaining-assets\" width={1} flexDirection={'column'}>\n                      <Flex\n                        pb={2}\n                        width={1}\n                        mb={[2,3]}\n                        borderColor={'divider'}\n                        borderBottom={'1px solid transparent'}\n                      >\n                        <Heading.h4\n                          fontSize={[2,4]}\n                          fontWeight={[3,4]}\n                        >\n                          Available assets\n                        </Heading.h4>\n                      </Flex>\n                      <AssetsList\n                        enabledTokens={this.state.remainingTokens}\n                        handleClick={(props) => this.props.changeToken(props.token)}\n                        cols={[\n                          {\n                            title:'CURRENCY',\n                            props:{\n                              width:[0.27,0.13]\n                            },\n                            fields:[\n                              {\n                                name:'icon',\n                                props:{\n                                  mr:2,\n                                  height:['1.4em','2.3em']\n                                }\n                              },\n                              {\n                                name:'tokenName'\n                              }\n                            ]\n                          },\n                          {\n                            title:'POOL',\n                            visibleOnDesktop:true,\n                            mobile:this.props.account !== null,\n                            props:{\n                              width:[0.21, 0.10],\n                            },\n                            fields:[\n                              {\n                                name:'pool',\n                                props:{\n                                  decimals:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'APY',\n                            desc:apyLong,\n                            props:{\n                              width:[0.31,this.state.depositedTokens.length>0 ? 0.14 : 0.14],\n                            },\n                            parentProps:{\n                              flexDirection:'column',\n                              alignItems:'flex-start',\n                            },\n                            fields:[\n                              {\n                                name:'apy',\n                                showTooltip:true\n                              },\n                              {\n                                name:'idleDistribution',\n                                showLoader:false,\n                                props:{\n                                  decimals:this.props.isMobile ? 1 : 2,\n                                  fontSize:this.props.isMobile ? '9px' : 0\n                                }\n                              },\n                            ]\n                          },\n                          {\n                            title:'SCORE',\n                            desc:riskScore,\n                            props:{\n                              width:[0.22,0.10],\n                            },\n                            fields:[\n                              {\n                                name:'score'\n                              }\n                            ]\n                          },\n                          {\n                            mobile:false,\n                            title:'FARMING',\n                            desc:yieldFarming,\n                            props:{\n                              width:[0.25,0.11],\n                              textAlign:'center'\n                            },\n                            fields:[\n                              {\n                                name:'govTokens',\n                                props:{\n                                  decimals:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'APR LAST WEEK',\n                            mobile:false,\n                            props:{\n                              width:0.25,\n                            },\n                            parentProps:{\n                              width:1,\n                              pr:[2,4]\n                            },\n                            fields:[\n                              {\n                                name:'aprChart',\n                                style:{\n                                  overflow:'visible',\n                                },\n                              }\n                            ]\n                          },\n                          {\n                            title:'',\n                            visibleOnDesktop:true,\n                            mobile:this.props.account === null,\n                            props:{\n                              width:[ this.props.account === null ? 0.26 : 0 , 0.17],\n                            },\n                            parentProps:{\n                              width:1\n                            },\n                            fields:[\n                              {\n                                name:'button',\n                                label: (props) => {\n                                  return Object.keys(this.state.tokensToMigrate).includes(props.token) ? 'Migrate' : 'Deposit';\n                                },\n                                props:{\n                                  width:1,\n                                  fontSize:3,\n                                  fontWeight:3,\n                                  height:'45px',\n                                  borderRadius:4,\n                                  boxShadow:null,\n                                  size: this.props.isMobile ? 'small' : 'medium',\n                                  handleClick:(props) => this.props.changeToken(props.token)\n                                },\n                                funcProps:{\n                                  mainColor: (props) => {\n                                    return Object.keys(this.state.tokensToMigrate).includes(props.token) ? 'migrate' : 'deposit'\n                                  }\n                                }\n                              }\n                            ]\n                          }\n                        ]}\n                        {...this.props}\n                      />\n                    </Flex>\n                  }\n                </Flex>\n              </Flex>\n              {\n                this.state.depositedTokens.length>0 &&\n                  <Flex\n                    width={1}\n                    id={\"yield-farming\"}\n                    flexDirection={'column'}\n                  >\n                    <Title my={[3,4]}>Yield Farming</Title>\n                    <AssetsList\n                      enabledTokens={Object.keys(govTokens).filter( govToken => govTokens[govToken].enabled )}\n                      cols={[\n                        {\n                          title:'TOKEN',\n                          props:{\n                            width:[0.3,0.15]\n                          },\n                          fields:[\n                            {\n                              name:'icon',\n                              props:{\n                                mr:2,\n                                height:['1.4em','2.3em']\n                              }\n                            },\n                            {\n                              name:'tokenName'\n                            }\n                          ]\n                        },\n                        {\n                          mobile:false,\n                          title:'BALANCE',\n                          props:{\n                            width:[0.33, 0.25],\n                          },\n                          fields:[\n                            {\n                              name:'tokenBalance',\n                              props:{\n                                decimals: this.props.isMobile ? 6 : 8\n                              }\n                            }\n                          ]\n                        },\n                        {\n                          title:'REDEEMABLE',\n                          desc:this.functionsUtil.getGlobalConfig(['messages','govTokenRedeemableBalance']),\n                          props:{\n                            width:[0.35,0.30],\n                            justifyContent:['center','flex-start']\n                          },\n                          fields:[\n                            {\n                              name:'redeemableBalance',\n                              props:{\n                                decimals: this.props.isMobile ? 6 : 8\n                              }\n                            },\n                          ]\n                        },\n                        {\n                          title:'DISTRIBUTION',\n                          desc:this.functionsUtil.getGlobalConfig(['messages','userDistributionSpeed']),\n                          props:{\n                            width:[0.35,0.30],\n                          },\n                          fields:[\n                            {\n                              name:'userDistributionSpeed',\n                              props:{\n                                decimals:6\n                              }\n                            }\n                          ]\n                        },\n                        /*\n                        {\n                          mobile:false,\n                          title:'APR',\n                          desc:this.functionsUtil.getGlobalConfig(['messages','govTokenApr']),\n                          props:{\n                            width:[0.2,0.15],\n                          },\n                          fields:[\n                            {\n                              name:'apr',\n                            }\n                          ]\n                        },\n                        {\n                          title:'TOKEN PRICE',\n                          desc:this.functionsUtil.getGlobalConfig(['messages','tokenPrice']),\n                          mobile:false,\n                          props:{\n                            width: 0.17,\n                          },\n                          parentProps:{\n                            width:1,\n                            pr:[2,4]\n                          },\n                          fields:[\n                            {\n                              name:'tokenPrice',\n                              props:{\n                                unit:'$',\n                                unitPos:'left',\n                                unitProps:{\n                                  mr:1,\n                                  fontWeight:3,\n                                  fontSize:[0,2],\n                                  color:'cellText'\n                                }\n                              }\n                            }\n                          ]\n                        },\n                        */\n                      ]}\n                      {...this.props}\n                      availableTokens={govTokens}\n                    />\n                  </Flex>\n              }\n              {\n                this.state.depositedTokens.length>0 &&\n                  <Flex\n                    width={1}\n                    id=\"earnings-estimation\"\n                    flexDirection={'column'}\n                  >\n                    <Title my={[3,4]}>Estimated earnings</Title>\n                    <EarningsEstimation\n                      {...this.props}\n                      enabledTokens={this.state.depositedTokens}\n                    />\n                  </Flex>\n              }\n              {\n                this.props.account && this.state.depositedTokens.length>0 && \n                  <Flex\n                    mb={[3,4]}\n                    width={1}\n                    id={'transactions'}\n                    flexDirection={'column'}\n                  >\n                    <Title my={[3,4]}>Transactions</Title>\n                    <TransactionsList\n                      {...this.props}\n                      enabledTokens={[]}\n                      cols={[\n                        {\n                          title: this.props.isMobile ? '' : 'HASH',\n                          props:{\n                            width:[0.15,0.24]\n                          },\n                          fields:[\n                            {\n                              name:'icon',\n                              props:{\n                                mr:[0,2]\n                              }\n                            },\n                            {\n                              name:'hash',\n                              mobile:false\n                            }\n                          ]\n                        },\n                        {\n                          title:'ACTION',\n                          mobile:false,\n                          props:{\n                            width:0.15,\n                          },\n                          fields:[\n                            {\n                              name:'action'\n                            }\n                          ]\n                        },\n                        {\n                          title:'DATE',\n                          props:{\n                            width:[0.32,0.23],\n                          },\n                          fields:[\n                            {\n                              name:'date'\n                            }\n                          ]\n                        },\n                        {\n                          title:'STATUS',\n                          props:{\n                            width:[0.18,0.22],\n                            justifyContent:['center','flex-start']\n                          },\n                          fields:[\n                            {\n                              name:'statusIcon',\n                              props:{\n                                mr:[0,2]\n                              }\n                            },\n                            {\n                              mobile:false,\n                              name:'status'\n                            }\n                          ]\n                        },\n                        {\n                          title:'AMOUNT',\n                          props:{\n                            width:0.19,\n                          },\n                          fields:[\n                            {\n                              name:'amount'\n                            },\n                          ]\n                        },\n                        {\n                          title:'ASSET',\n                          props:{\n                            width:[0.15,0.20],\n                            justifyContent:['center','flex-start']\n                          },\n                          fields:[\n                            {\n                              name:'tokenIcon',\n                              props:{\n                                mr:[0,2],\n                                height:['1.4em','1.6em']\n                              }\n                            },\n                            {\n                              mobile:false,\n                              name:'tokenName'\n                            },\n                          ]\n                        },\n                      ]}\n                    />\n                  </Flex>\n              }\n            </Box>\n          )\n        }\n      </Box>\n    );\n  }\n}\n\nexport default StrategyPage;","/*\n// batchDeposits[user][batchId] = amount\nmapping (address => mapping (uint256 => uint256)) public batchDeposits;\nmapping (uint256 => uint256) batchTotals; // in idleToken\nmapping (uint256 => uint256) batchRedeemedTotals; // in newIdleToken\n\nuint256 public currBatch;\naddress public idleToken;\naddress public newIdleToken;\naddress public underlying;\n\nfunction deposit() external\nfunction withdraw(uint256 batchId) external\n*/\n\nimport Migrate from '../Migrate/Migrate';\nimport React, { Component } from 'react';\nimport AssetField from '../AssetField/AssetField';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport AssetSelector from '../AssetSelector/AssetSelector';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport TransactionField from '../TransactionField/TransactionField';\nimport { Flex, Box, Text, Icon, Link, Checkbox, Tooltip } from \"rimble-ui\";\n\nclass BatchDeposit extends Component {\n\n  state = {\n    canClaim:false,\n    batchTotals:{},\n    canDeposit:true,\n    action:'deposit',\n    batchDeposits:{},\n    tokenConfig:null,\n    processing:{\n      execute:{\n        txHash:null,\n        loading:false\n      },\n      claim:{\n        txHash:null,\n        loading:false\n      },\n    },\n    usePermit:false,\n    batchRedeems:{},\n    lastExecution:null,\n    permitEnabled:true,\n    hasDeposited:false,\n    permitSigned:false,\n    selectedToken:null,\n    showPermitBox:false,\n    currBatchIndex:null,\n    batchCompleted:false,\n    claimSucceeded:false,\n    availableTokens:null,\n    selectedStrategy:null,\n    componentLoaded:false,\n    executeSucceeded:false,\n    migrationEnabled:false,\n    migrationSucceeded:false,\n    selectedTokenConfig:null,\n    availableStrategies:null,\n    batchDepositEnabled:false,\n    migrationContractApproved:false,\n    availableDestinationTokens:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadStrategies();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const tokenFromChanged = prevProps.urlParams.param2 !== this.props.urlParams.param2;\n    if (tokenFromChanged){\n      this.setState({\n        componentLoaded:false\n      },async () => {\n        await this.loadTokens();\n      });\n    }\n\n    const selectedStrategyChanged = prevState.selectedStrategy !== this.state.selectedStrategy;\n    if (selectedStrategyChanged){\n      const selectedToken = Object.keys(this.state.availableTokens)[0];\n      this.selectToken(selectedToken);\n    }\n\n    const selectedTokenChanged = prevState.selectedToken !== this.state.selectedToken;\n    const executeSucceededChanged = prevState.executeSucceeded !== this.state.executeSucceeded;\n    const contractApprovedChanged = prevState.migrationContractApproved !== this.state.migrationContractApproved;\n    if (selectedTokenChanged || contractApprovedChanged || executeSucceededChanged){\n      this.checkBatchs();\n    }\n\n  }\n\n  async execute () {\n\n    const loading = true;\n\n    const callbackExecute = (tx,error) => {\n      const txSucceeded = tx.status === 'success';\n\n      // Send Google Analytics event\n      const eventData = {\n        eventAction: 'Execute',\n        eventCategory: 'BatchDeposit',\n      };\n\n      if (error){\n        eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n      }\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n      this.setState((prevState) => ({\n        executeSucceeded:txSucceeded,\n        processing: {\n          ...prevState.processing,\n          execute:{\n            txHash:null,\n            loading:false\n          }\n        }\n      }));\n    };\n\n    const callbackReceiptExecute = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          execute:{\n            ...prevState.processing.execute,\n            txHash\n          }\n        }\n      }));\n    };\n\n    this.props.contractMethodSendWrapper(this.state.selectedTokenConfig.migrationContract.name, 'executeBatch', [true], null, callbackExecute, callbackReceiptExecute);\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        execute:{\n          ...prevState.processing.execute,\n          loading\n        }\n      }\n    }));\n  }\n\n  async checkBatchs(migrationSucceeded=false){\n\n    const migrationContractInfo = this.state.selectedTokenConfig.migrationContract;\n\n    await Promise.all([\n      this.props.initContract(migrationContractInfo.name,migrationContractInfo.address,migrationContractInfo.abi),\n      this.props.initContract(this.state.tokenConfig.name,this.state.tokenConfig.address,this.state.tokenConfig.abi)\n    ]);\n\n    let [\n      batchExecutions,\n      currBatchIndex,\n      migrationContractApproved\n    ] = await Promise.all([\n      this.functionsUtil.getBatchedDepositExecutions(migrationContractInfo.address),\n      this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'currBatch'),\n      this.functionsUtil.checkTokenApproved(this.state.tokenConfig.name,migrationContractInfo.address,this.props.account)\n    ]);\n\n    // If use Permit don't ask for Approve\n    let usePermit = false;\n    if (!migrationContractApproved && migrationContractInfo.functions && migrationContractInfo.functions.length === 1){\n      const functionInfo = migrationContractInfo.functions[0];\n      usePermit = typeof functionInfo.usePermit !== 'undefined' ? functionInfo.usePermit : false;\n      const nonceMethod = this.functionsUtil.getGlobalConfig(['permit',this.state.tokenConfig.name,'nonceMethod']);\n      const permitContract = this.functionsUtil.getContractByName(this.state.tokenConfig.name);\n      usePermit = usePermit && permitContract && (!nonceMethod || permitContract.methods[nonceMethod] !== undefined);\n    }\n\n    const newState = {};\n    const batchTotals = {};\n    const batchRedeems = {};\n    const batchDeposits = {};\n    let batchCompleted = false;\n\n    currBatchIndex = currBatchIndex || 0;\n    for (let batchIndex = 0; batchIndex <= parseInt(currBatchIndex) ; batchIndex++){\n      let [\n        batchTotal,\n        batchRedeem,\n        batchDeposit\n      ] = await Promise.all([\n        this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'batchTotals',[batchIndex]),\n        this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'batchRedeemedTotals',[batchIndex]),\n        this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'batchDeposits',[this.props.account,batchIndex])\n      ]);\n      if (batchTotal && batchTotal !== null){\n        batchTotals[batchIndex] = this.functionsUtil.fixTokenDecimals(batchTotal,this.state.tokenConfig.decimals);\n      }\n      if (batchDeposit !== null){\n        batchRedeem = this.functionsUtil.fixTokenDecimals(batchRedeem,18);\n        batchDeposit = this.functionsUtil.fixTokenDecimals(batchDeposit,this.state.tokenConfig.decimals);\n        if (batchDeposit.gt(0)){\n          batchDeposits[batchIndex] = batchDeposit;\n          // Calculate redeemable idleTokens\n          batchRedeems[batchIndex] = batchDeposit.times(batchRedeem).div(batchTotals[batchIndex]);\n          if (batchRedeems[batchIndex].gt(batchRedeem)){\n            batchRedeems[batchIndex] = batchRedeem;\n          }\n          // Check claimable\n          if (batchIndex < currBatchIndex){\n            batchCompleted = true;\n          }\n        }\n      }\n    }\n\n    newState.batchDeposits = batchDeposits;\n\n    const hasDeposited = (batchDeposits && Object.keys(batchDeposits).length>0);\n\n    const lastExecution = batchExecutions && batchExecutions.length ? batchExecutions[0] : null;\n    const batchDepositInfo = this.functionsUtil.getGlobalConfig(['tools','batchDeposit']);\n    const batchDepositEnabled = batchDepositInfo.depositEnabled;\n\n    newState.usePermit = usePermit;\n    newState.showPermitBox = false;\n    newState.claimSucceeded = false;\n    newState.componentLoaded = true;\n    newState.executeSucceeded = false;\n    newState.batchTotals = batchTotals;\n    newState.hasDeposited = hasDeposited;\n    newState.batchRedeems = batchRedeems;\n    newState.lastExecution = lastExecution;\n    newState.currBatchIndex = currBatchIndex;\n    newState.batchCompleted = batchCompleted;\n    newState.migrationSucceeded = migrationSucceeded;\n    newState.batchDepositEnabled = batchDepositEnabled;\n    newState.canClaim = batchCompleted || hasDeposited;\n    // Prevent user to deposit if the batch has been completed\n    newState.canDeposit = batchDepositEnabled && !batchCompleted;\n    newState.migrationContractApproved = migrationContractApproved;\n    newState.action = hasDeposited || newState.canClaim ? 'redeem' : 'deposit';\n\n    this.setState(newState);\n  }\n\n  async loadStrategies(){\n\n    // Init tokens contracts\n    const availableStrategiesKeys = {};\n    await this.functionsUtil.asyncForEach(Object.keys(this.props.toolProps.availableTokens),async (token) => {\n      const tokenConfig = this.props.toolProps.availableTokens[token];\n      const tokenContract = this.functionsUtil.getContractByName(tokenConfig.token);\n      if (!tokenContract && tokenConfig.abi){\n        await this.props.initContract(tokenConfig.token,tokenConfig.address,tokenConfig.abi);\n      }\n      availableStrategiesKeys[tokenConfig.strategy] = true;\n    });\n\n    const availableStrategies = Object.keys(availableStrategiesKeys).map( strategy => {\n      const strategyConfig = this.functionsUtil.getGlobalConfig(['strategies',strategy]);\n      return {\n        value:strategy,\n        icon:strategyConfig.icon,\n        label:strategyConfig.title\n      };\n    });\n\n    // console.log('availableStrategies',availableStrategies);\n\n    if (availableStrategies && availableStrategies.length>0){\n      let selectedStrategy = availableStrategies[0].value;\n      let selectedToken = this.props.urlParams.param2 && this.props.toolProps.availableTokens[this.props.urlParams.param2] ? this.props.urlParams.param2 : null;\n      if (selectedToken){\n        const selectedTokenConfig = this.props.toolProps.availableTokens[selectedToken];\n        selectedToken = selectedTokenConfig.baseToken;\n        selectedStrategy = selectedTokenConfig.strategy;\n      }\n\n      this.setState({\n        availableStrategies\n      },() => {\n        this.selectStrategy(selectedStrategy,selectedToken);\n      });\n    }\n  }\n\n  /*\n  async loadTokens(){\n    const selectedToken = this.props.urlParams.param2 && this.props.toolProps.availableTokens[this.props.urlParams.param2] ? this.props.urlParams.param2 : null;\n    if (selectedToken){\n      this.selectToken(selectedToken);\n    }\n  }\n  */\n\n  async selectStrategy (selectedStrategy,selectedToken=null) {\n    const availableTokens = Object.keys(this.props.toolProps.availableTokens)\n      .filter(key => this.props.toolProps.availableTokens[key].strategy === selectedStrategy )\n      .reduce((obj, key) => {\n        const tokenConfig = this.props.toolProps.availableTokens[key];\n        const baseTokenConfig = this.props.availableStrategies[selectedStrategy][tokenConfig.baseToken];\n\n        tokenConfig.abi = baseTokenConfig.abi;\n        tokenConfig.token = baseTokenConfig.token;\n        tokenConfig.address = baseTokenConfig.address;\n        tokenConfig.decimals = baseTokenConfig.decimals;\n        obj[tokenConfig.baseToken] = tokenConfig;\n        return obj;\n      }, {});\n\n    this.setState({\n      availableTokens,\n      selectedStrategy\n    },() => {\n      if (selectedToken){\n        this.selectToken(selectedToken);\n      }\n    });\n  }\n\n  async selectToken (selectedToken) {\n    const selectedTokenConfig = this.state.availableTokens[selectedToken];\n    const strategyAvailableTokens = this.props.availableStrategies[selectedTokenConfig.strategy];\n\n    const baseTokenConfig = strategyAvailableTokens[selectedTokenConfig.token];\n\n    const tokenConfig = {\n      name:baseTokenConfig.token,\n      token:baseTokenConfig.token,\n      address:baseTokenConfig.address,\n      decimals:baseTokenConfig.decimals\n    };\n\n    // Add Idle Token config\n    tokenConfig.idle = baseTokenConfig.idle;\n\n    // Add migration info\n    const oldContract = {\n      abi:baseTokenConfig.abi,\n      name:baseTokenConfig.token,\n      token:baseTokenConfig.token,\n      address:baseTokenConfig.address\n    };\n    \n    const migrationContract = selectedTokenConfig.migrationContract;\n\n    // Add migration function\n    if (baseTokenConfig.migrateFunction){\n      migrationContract.functions[0].name = baseTokenConfig.migrateFunction;\n    }\n\n    tokenConfig.migration = {\n      enabled:true,\n      oldContract,\n      migrationContract,\n      migrationSucceeded:false\n    };\n\n    await this.props.setStrategyToken(selectedTokenConfig.strategy,baseTokenConfig.token);\n\n    this.setState({\n      tokenConfig,\n      selectedToken,\n      selectedTokenConfig\n    },() => {\n      // Select strategy and available tokens\n      if (selectedTokenConfig.strategy !== this.state.selectedStrategy){\n        const selectedStrategy = selectedTokenConfig.strategy;\n        this.selectStrategy(selectedStrategy);\n      }\n    });\n  }\n\n  async claim () {\n    if (!this.state.batchCompleted){\n      return null;\n    }\n\n    const loading = true;\n    const claimableValue = 0;\n    const batchId = Object.keys(this.state.batchDeposits)[0];\n\n    const callbackClaim = (tx,error) => {\n      const txSucceeded = tx.status === 'success';\n\n      // Send Google Analytics event\n      const eventData = {\n        eventAction: 'Claim',\n        eventCategory: `BatchDeposit`,\n        eventValue: parseInt(claimableValue),\n        eventLabel: this.props.selectedToken,\n      };\n\n      if (error){\n        eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n      }\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n      this.setState((prevState) => ({\n        claimSucceeded:txSucceeded,\n        processing: {\n          ...prevState.processing,\n          claim:{\n            txHash:null,\n            loading:false\n          }\n        }\n      }));\n    };\n\n    const callbackReceiptClaim = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          claim:{\n            ...prevState.processing.claim,\n            txHash\n          }\n        }\n      }));\n    };\n\n    this.props.contractMethodSendWrapper(this.state.selectedTokenConfig.migrationContract.name, 'withdraw', [batchId], null, callbackClaim, callbackReceiptClaim);\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        claim:{\n          ...prevState.processing.claim,\n          loading\n        }\n      }\n    }));\n  }\n\n  async callbackPermit(){\n    this.setState({\n      permitSigned:true\n    });\n  }\n\n  showPermitBox(){\n    this.setState({\n      showPermitBox:true\n    });\n  }\n\n  async callbackApprove(migrationContractApproved){\n    // console.log('callbackApprove',this.state.migrationContractApproved,migrationContractApproved);\n    if (migrationContractApproved !== this.state.migrationContractApproved){\n      this.setState({\n        migrationContractApproved\n      });\n    }\n  }\n\n  setAction = (action) => {\n    if (action !== null && ['deposit','redeem'].includes(action.toLowerCase())){\n      const migrationSucceeded = false;\n      this.setState({\n        action,\n        migrationSucceeded\n      });\n    }\n  }\n\n  togglePermitEnabled(permitEnabled){\n    this.setState({\n      permitEnabled\n    });\n  }\n\n  migrationEnabledCallback = (migrationEnabled) => {\n    this.setState({\n      migrationEnabled\n    });\n  }\n\n  migrationCallback = (tx) => {\n    this.checkBatchs(true);\n  }\n\n  render() {\n\n    if (!this.state.selectedStrategy){\n      return null;\n    }\n\n    const usePermit = this.state.permitEnabled && this.state.usePermit;\n    // const batchId = this.state.batchDeposits && Object.keys(this.state.batchDeposits).length>0 ? Object.keys(this.state.batchDeposits)[0] : null;\n    const batchRedeem = this.state.batchRedeems && Object.values(this.state.batchRedeems).length>0 ? Object.values(this.state.batchRedeems)[0] : null;\n    const batchDeposit = this.state.batchDeposits && Object.values(this.state.batchDeposits).length>0 ? Object.values(this.state.batchDeposits)[0] : null;\n    const contractApproved = (usePermit && this.state.permitSigned) || (!usePermit && this.state.migrationContractApproved);\n    const canExecuteBatch = this.state.batchTotals && this.state.batchTotals[this.state.currBatchIndex] && this.state.batchTotals[this.state.currBatchIndex].gt(0);\n    const strategyDefaultValue = this.state.selectedStrategy ? this.state.availableStrategies.find( s => s.value === this.state.selectedStrategy ) : this.state.availableStrategies[0];\n\n    const CustomOptionValue = props => {\n      const label = props.label;\n      const tokenConfig = {\n        icon:props.data.icon\n      };\n\n      return (\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'row'}\n          justifyContent={'space-between'}\n        >\n          <Flex\n            alignItems={'center'}\n          >\n            <AssetField\n              token={label}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  width:'2em',\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={label}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n        </Flex>\n      );\n    }\n\n    const CustomValueContainer = props => {\n\n      const options = props.selectProps.options;\n      const selectProps = options.indexOf(props.selectProps.value) !== -1 ? props.selectProps.value : null;\n\n      if (!selectProps){\n        return null;\n      }\n\n      const label = selectProps.label;\n      const tokenConfig = {\n        icon:selectProps.icon\n      };\n\n      return (\n        <Flex\n          style={{\n            flex:'1'\n          }}\n          justifyContent={'space-between'}\n          {...props.innerProps}\n        >\n          <Flex\n            p={0}\n            width={1}\n            {...props.innerProps}\n            alignItems={'center'}\n            flexDirection={'row'}\n            style={{cursor:'pointer'}}\n            justifyContent={'flex-start'}\n          >\n            <AssetField\n              token={label}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={label}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n        </Flex>\n      );\n    }\n\n    return (\n      <Flex\n        width={1}\n        mt={[2,3]}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          width={[1,0.36]}\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Box\n            width={1}\n          >\n            <Text\n              mb={1}\n            >\n              Choose the strategy:\n            </Text>\n            <GenericSelector\n              {...this.props}\n              name={'strategy'}\n              isSearchable={false}\n              defaultValue={strategyDefaultValue}\n              CustomOptionValue={CustomOptionValue}\n              options={this.state.availableStrategies}\n              onChange={this.selectStrategy.bind(this)}\n              CustomValueContainer={CustomValueContainer}\n            />\n          </Box>\n          {\n            this.state.availableTokens && \n              <Box\n                mt={2}\n                width={1}\n              >\n                <Text\n                  mb={1}\n                >\n                  Select asset to deposit:\n                </Text>\n                <AssetSelector\n                  {...this.props}\n                  id={'token-from'}\n                  showBalance={true}\n                  isSearchable={false}\n                  onChange={this.selectToken.bind(this)}\n                  selectedToken={this.state.selectedToken}\n                  availableTokens={this.state.availableTokens}\n                />\n              </Box>\n          }\n          {\n            !this.state.componentLoaded && (\n              <Flex\n                mt={4}\n                flexDirection={'column'}\n              >\n                <FlexLoader\n                  flexProps={{\n                    flexDirection:'row'\n                  }}\n                  loaderProps={{\n                    size:'30px'\n                  }}\n                  textProps={{\n                    ml:2\n                  }}\n                  text={'Loading asset info...'}\n                />\n              </Flex>\n            )\n          }\n          {\n            !this.props.account ? (\n              <DashboardCard\n                cardProps={{\n                  p:3,\n                  mt:3\n                }}\n              >\n                <Flex\n                  alignItems={'center'}\n                  flexDirection={'column'}\n                >\n                  <Icon\n                    size={this.props.isMobile ? '1.8em' : '2.3em'}\n                    name={'Input'}\n                    color={'cellText'}\n                  />\n                  <Text\n                    mt={[1,2]}\n                    fontSize={2}\n                    color={'cellText'}\n                    textAlign={'center'}\n                  >\n                    Please connect with your wallet interact with Idle.\n                  </Text>\n                  <RoundButton\n                    buttonProps={{\n                      mt:2,\n                      width:[1,1/2]\n                    }}\n                    handleClick={this.props.connectAndValidateAccount}\n                  >\n                    Connect\n                  </RoundButton>\n                </Flex>\n              </DashboardCard>\n            ) : this.state.componentLoaded &&  this.state.selectedTokenConfig && (this.state.canDeposit || this.state.canClaim) && (\n              <Box\n                width={1}\n              >\n                <DashboardCard\n                  cardProps={{\n                    p:3,\n                    px:4,\n                    mt:3,\n                  }}\n                >\n                  <Flex\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                  > \n                    <Flex\n                      width={1}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                    >\n                      <Icon\n                        size={'1.5em'}\n                        name={ contractApproved ? 'CheckBox' : 'LooksOne'}\n                        color={ contractApproved ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                      />\n                      <Text\n                        ml={2}\n                        fontSize={2}\n                        color={'cellText'}\n                        textAlign={'left'}\n                      >\n                        {\n                          usePermit ? 'Sign Approve message' : 'Approve the batch deposit contract'\n                        }\n                      </Text>\n                    </Flex>\n                    <Flex\n                      mt={2}\n                      width={1}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                    >\n                      <Icon\n                        size={'1.5em'}\n                        name={ (this.state.hasDeposited || this.state.batchCompleted) ? 'CheckBox' : 'LooksTwo'}\n                        color={ (this.state.hasDeposited || this.state.batchCompleted) ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                      />\n                      <Text\n                        ml={2}\n                        fontSize={2}\n                        color={'cellText'}\n                        textAlign={'left'}\n                      >\n                        Deposit your {this.state.selectedToken}\n                      </Text>\n                    </Flex>\n                    <Flex\n                      mt={2}\n                      width={1}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                    >\n                      <Icon\n                        size={'1.5em'}\n                        name={ this.state.batchCompleted ? 'CheckBox' : 'Looks3'}\n                        color={ this.state.batchCompleted ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                      />\n                      <Text\n                        ml={2}\n                        fontSize={2}\n                        color={'cellText'}\n                        textAlign={'left'}\n                      >\n                        Wait for batch execution\n                        <Link\n                          ml={1}\n                          fontWeight={2}\n                          color={'primary'}\n                          display={'inline'}\n                          hoverColor={'primary'}\n                          onClick={ e => this.props.openTooltipModal('Batch Execution Schedule',this.functionsUtil.getGlobalConfig(['messages','batchDepositExecutionSchedule'])) }\n                        >\n                          (Read More)\n                        </Link>\n                      </Text>\n                    </Flex>\n                    <Flex\n                      mt={2}\n                      width={1}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                    >\n                      <Icon\n                        size={'1.5em'}\n                        name={ this.state.claimSucceeded ? 'CheckBox' : 'Looks4'}\n                        color={ this.state.claimSucceeded ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                      />\n                      <Flex\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'flex-start'}\n                      >\n                        <Text\n                          ml={1}\n                          fontSize={2}\n                          color={'cellText'}\n                          textAlign={'left'}\n                        >\n                          Claim your {this.state.tokenConfig.idle.token}\n                        </Text>\n                        <Tooltip\n                          placement={'top'}\n                          message={`You will start earning gov tokens after the batch is executed and you claim your ${this.state.tokenConfig.idle.token}`}\n                        >\n                          <Icon\n                            ml={1}\n                            size={'1.2em'}\n                            name={'Warning'}\n                            color={'#ffe000'}\n                            style={{\n                              cursor:'pointer'\n                            }}\n                          />\n                        </Tooltip>\n                      </Flex>\n                    </Flex>\n                  </Flex>\n                </DashboardCard>\n              </Box>\n            )\n          }\n          {\n            this.state.componentLoaded && this.props.account && this.state.availableTokens && this.state.selectedToken && (\n              <Box width={1}>\n                {\n                  (contractApproved || this.state.canClaim) && \n                    <Flex\n                      mt={2}\n                      flexDirection={'column'}\n                    >\n                      <Text mb={2}>\n                        Choose the action:\n                      </Text>\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'space-between'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            width:0.48,\n                            onMouseDown:() => {\n                              return this.state.canDeposit ? this.setAction('deposit') : null;\n                            }\n                          }}\n                          isInteractive={true}\n                          isDisabled={ !this.state.canDeposit }\n                          isActive={ this.state.action === 'deposit' }\n                        >\n                          <Flex\n                            my={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            justifyContent={'center'}\n                          >\n                            <TransactionField\n                              transaction={{\n                                action:'deposit'\n                              }}\n                              fieldInfo={{\n                                name:'icon',\n                                props:{\n                                  mr:3\n                                }\n                              }}\n                            />\n                            <Text\n                              fontSize={3}\n                              fontWeight={3}\n                            >\n                              Deposit\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            width:0.48,\n                            onMouseDown:() => {\n                              return this.state.canClaim ? this.setAction('redeem') : null;\n                            }\n                          }}\n                          isInteractive={true}\n                          isDisabled={ !this.state.canClaim }\n                          isActive={ this.state.action === 'redeem' }\n                        >\n                          <Flex\n                            my={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            justifyContent={'center'}\n                          >\n                            <TransactionField\n                              transaction={{\n                                action:'redeem'\n                              }}\n                              fieldInfo={{\n                                name:'icon',\n                                props:{\n                                  mr:3\n                                }\n                              }}\n                            />\n                            <Text\n                              fontSize={3}\n                              fontWeight={3}\n                            >\n                              Claim\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                    </Flex>\n                }\n                {\n                  this.state.showPermitBox && this.state.action === 'deposit' && this.state.usePermit && this.state.migrationEnabled && !this.state.migrationSucceeded ? (\n                    <DashboardCard\n                      cardProps={{\n                        py:3,\n                        px:2,\n                        mt:3,\n                        display:'flex',\n                        alignItems:'center',\n                        flexDirection:'column',\n                        justifyContent:'center',\n                      }}\n                    >\n                      <Flex\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                        justifyContent={'center'}\n                      >\n                        <Icon\n                          size={'1.8em'}\n                          color={'cellText'}\n                          name={'LightbulbOutline'}\n                        />\n                        <Text\n                          mt={1}\n                          fontSize={1}\n                          color={'cellText'}\n                          textAlign={'center'}\n                        >\n                          {this.state.selectedToken} supports Approve and Deposit in a single transaction, disable this feature and try again if you can't deposit in the batch.\n                        </Text>\n                      </Flex>\n                      <Checkbox\n                        mt={1}\n                        required={false}\n                        checked={this.state.permitEnabled}\n                        label={`Approve and Deposit in a single transaction`}\n                        onChange={ e => this.togglePermitEnabled(e.target.checked) }\n                      />\n                    </DashboardCard>\n                  ) : !this.state.showPermitBox && this.state.action === 'deposit' && this.state.usePermit && this.state.migrationEnabled && !this.state.migrationSucceeded && (\n                    <Flex\n                      p={0}\n                      mt={3}\n                      width={1}\n                      borderRadius={2}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                      justifyContent={'center'}\n                    >\n                      <Link\n                        textAlign={'center'}\n                        hoverColor={'primary'}\n                        onClick={this.showPermitBox.bind(this)}\n                      >\n                        Having trouble with the Batch Deposit?\n                      </Link>\n                    </Flex>\n                  )\n                }\n                {\n                  this.state.action === 'deposit' ? \n                    this.state.batchDepositEnabled ? (\n                      <Migrate\n                        {...this.props}\n                        useMetaTx={false}\n                        showActions={false}\n                        usePermit={usePermit}\n                        getTokenPrice={false}\n                        isMigrationTool={true}\n                        showBalanceSelector={true}\n                        migrationIcon={'FileDownload'}\n                        waitText={'Deposit estimated in'}\n                        tokenConfig={this.state.tokenConfig}\n                        selectedToken={this.state.selectedToken}\n                        migrationParams={toMigrate => [toMigrate]}\n                        selectedStrategy={this.props.selectedStrategy}\n                        callbackPermit={this.callbackPermit.bind(this)}\n                        callbackApprove={this.callbackApprove.bind(this)}\n                        migrationCallback={this.migrationCallback.bind(this)}\n                        migrationEnabledCallback={this.migrationEnabledCallback.bind(this)}\n                        migrationText={`Deposit your ${this.state.selectedToken} and wait until it is converted to the new ${this.state.tokenConfig.idle.token}.`}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            mt:3\n                          }}\n                        >\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              name={'MoneyOff'}\n                              color={'cellText'}\n                              size={this.props.isMobile ? '1.8em' : '2.3em'}\n                            />\n                            <Text\n                              mt={1}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              You don't have any {this.state.selectedToken} in your wallet.\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                      </Migrate>\n                    ) : (\n                      <DashboardCard\n                        cardProps={{\n                          p:3,\n                          my:3\n                        }}\n                      >\n                        <Flex\n                          alignItems={'center'}\n                          flexDirection={'column'}\n                        >\n                          <Text\n                            fontSize={2}\n                            color={'cellText'}\n                            textAlign={'center'}\n                          >\n                            Batch Deposit is disabled for this asset.\n                          </Text>\n                        </Flex>\n                      </DashboardCard>\n                    )\n                  : (\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        mt:3\n                      }}\n                    >\n                      {\n                        this.state.processing.claim.loading ? (\n                          <Flex\n                            flexDirection={'column'}\n                          >\n                            <TxProgressBar {...this.props} web3={this.props.web3} waitText={`Claim estimated in`} endMessage={`Finalizing approve request...`} hash={this.state.processing.claim.txHash} />\n                          </Flex>\n                        ) : this.state.claimSucceeded ? (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              name={'DoneAll'}\n                              size={this.props.isMobile ? '1.8em' : '2.3em'}\n                              color={this.props.theme.colors.transactions.status.completed}\n                            />\n                            <Text\n                              mt={[1,2]}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              You have successfully withdrawn your {this.state.tokenConfig.idle.token}!\n                            </Text>\n                            <Link\n                              mt={2}\n                              textAlign={'center'}\n                              hoverColor={'primary'}\n                              onClick={ e => this.props.goToSection(this.state.selectedTokenConfig.strategy+'/'+this.state.selectedTokenConfig.baseToken) }\n                            >\n                              Go to the Dashboard\n                            </Link>\n                          </Flex>\n                        ) : this.state.batchCompleted ? (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={this.props.isMobile ? '1.8em' : '2.3em'}\n                              color={'cellText'}\n                              name={'FileUpload'}\n                            />\n                            <Text\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              The Batch has been executed!<br />You can now claim your {batchRedeem.toFixed(4)} {this.state.tokenConfig.idle.token}\n                            </Text>\n                            <Text\n                              fontSize={1}\n                              color={'#ff9900'}\n                              textAlign={'center'}\n                            >\n                              (You need to claim your {this.state.tokenConfig.idle.token} to start earning Gov Tokens)\n                            </Text>\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'space-between'}\n                            >\n                              <RoundButton\n                                buttonProps={{\n                                  mt:2,\n                                  width:[1,0.5],\n                                  mainColor:this.props.theme.colors.redeem\n                                }}\n                                handleClick={ e => this.claim() }\n                              >\n                                Claim\n                              </RoundButton>\n                            </Flex>\n                          </Flex>\n                        ) : (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'1.8em'}\n                              color={'cellText'}\n                              name={'HourglassEmpty'}\n                            />\n                            <Text\n                              mt={[1,2]}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              <Text.span\n                                color={'cellText'}\n                              >\n                                You have successfully deposited <strong>{batchDeposit.toFixed(4)} {this.state.selectedToken}</strong>, please wait until the batch is executed to claim your {this.state.tokenConfig.idle.token}.\n                              </Text.span>\n                            </Text>\n                          </Flex>\n                        )\n                      }\n                    </DashboardCard>\n                  )\n                }\n                {\n                  this.state.batchTotals[this.state.currBatchIndex] && \n                    <DashboardCard\n                      cardProps={{\n                        p:2,\n                        my:3\n                      }}\n                    >\n                      {\n                        this.state.processing.execute.loading ? (\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            <TxProgressBar {...this.props} waitText={`Batch execution estimated in`} endMessage={`Finalizing batch execution request...`} hash={this.state.processing.execute.txHash} />\n                          </Flex>\n                        ) : this.state.executeSucceeded ? (\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            <Icon\n                              size={this.props.isMobile ? '1.8em' : '2.3em'}\n                              name={'DoneAll'}\n                              color={this.props.theme.colors.transactions.status.completed}\n                            />\n                            <Text\n                              mt={[1,2]}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              The Batch has been executed!\n                            </Text>\n                          </Flex>\n                        ) : (\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            <Text\n                              fontWeight={500}\n                              color={'copyColor'}\n                              textAlign={'center'}\n                            >\n                              Batch Pool: {this.state.batchTotals[this.state.currBatchIndex].toFixed(4)} {this.state.selectedToken}\n                            </Text>\n                            {\n                              canExecuteBatch && \n                                <Link\n                                  textAlign={'center'}\n                                  hoverColor={'primary'}\n                                  onClick={this.execute.bind(this)}\n                                >\n                                  Execute Batch\n                                </Link>\n                            }\n                            {\n                              this.state.batchTotals[this.state.currBatchIndex].lt(this.state.selectedTokenConfig.minPoolSize) && (\n                                <Text\n                                  mb={1}\n                                  fontSize={1}\n                                  color={'alert'}\n                                  textAlign={'center'}\n                                >\n                                  (The pool size has to reach at least {this.functionsUtil.formatMoney(this.state.selectedTokenConfig.minPoolSize,0)} {this.state.selectedToken} to be executed)\n                                </Text>\n                              )\n                            }\n                            {\n                              this.state.lastExecution && (\n                                <Text\n                                  fontSize={0}\n                                  color={'cellText'}\n                                  textAlign={'center'}\n                                >\n                                  Last Batch Execution: {this.functionsUtil.strToMoment(this.state.lastExecution.timeStamp*1000).utc().format('YYYY-MM-DD HH:mm UTC')}\n                                </Text>\n                              )\n                            }\n                          </Flex>\n                        )\n                      }\n                    </DashboardCard>\n                }\n              </Box>\n            )\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default BatchDeposit;","import React, { Component } from 'react';\nimport { Flex, Box, Text } from \"rimble-ui\";\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport AssetField from '../AssetField/AssetField';\nimport ImageButton from '../ImageButton/ImageButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport BuyModal from '../utilities/components/BuyModal';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\n\nclass CoverProtocol extends Component {\n\n  state = {\n    steps:null,\n    infoBox:null,\n    swapInfo:null,\n    portfolio:null,\n    inputValue:null,\n    description:null,\n    tokenConfig:null,\n    tokenBalance:null,\n    contractInfo:null,\n    selectedToken:null,\n    selectedAction:null,\n    successMessage:null,\n    activeCoverages:null,\n    defaultCoverage:null,\n    selectedCoverage:null,\n    contractApproved:false,\n    approveDescription:null,\n    balanceSelectorInfo:null,\n    transactionSucceeded:false\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadData();\n    // window.transactionSucceeded = this.transactionSucceeded.bind(this);\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const selectedCoverageChanged = prevState.selectedCoverage !== this.state.selectedCoverage;\n    if (selectedCoverageChanged){\n      const selectedToken = this.state.selectedCoverage.collateral;\n      const tokenConfig = Object.values(this.props.availableStrategies)[0][selectedToken];\n      const tokenBalance = await this.functionsUtil.getTokenBalance(selectedToken,this.props.account);\n      const selectedAction = !this.state.selectedAction ? (this.props.urlParams.param2 || 'Claim') : this.state.selectedAction;\n      this.setState({\n        tokenConfig,\n        tokenBalance,\n        selectedToken,\n        selectedAction\n      });\n    }\n\n    const contractApprovedChanged = prevState.contractApproved !== this.state.contractApproved;\n    const selectedActionChanged = prevState.selectedAction !== this.state.selectedAction;\n    const inputValueChanged = prevState.inputValue !== this.state.inputValue && this.state.inputValue.gt(0);\n    const swapInfoChanged = JSON.stringify(prevState.swapInfo) !== JSON.stringify(this.state.swapInfo) && this.state.inputValue && this.state.inputValue.gt(0);\n    if (selectedActionChanged || inputValueChanged || swapInfoChanged || contractApprovedChanged){\n      this.updateData();\n    }\n\n    const contractInfoChanged = JSON.stringify(prevState.contractInfo) !== JSON.stringify(this.state.contractInfo);\n    if (contractInfoChanged){\n      this.changeInputCallback();\n    }\n  }\n\n  async getSwapInfo(amount){\n    amount = this.functionsUtil.BNify(amount);\n    if (!amount.isNaN() && amount.gt(0)){\n      // console.log('getSwapInfo',this.state.contractInfo.name,this.state.tokenConfig.address,balancerTokenConfig.address,swapFee,covTokens,tokenPrice);\n\n      if (this.state.tokenPrice && this.state.swapFee && this.state.covTokens){\n\n        const swapFee = this.state.swapFee;\n        const tokenPrice = this.state.tokenPrice;\n        let tokenAmountOut = amount.div(tokenPrice);\n        tokenAmountOut = tokenAmountOut.minus(tokenAmountOut.times(swapFee));\n\n        return {\n          amount,\n          tokenAmountOut\n        };\n      }\n    }\n\n    return null;\n  }\n\n  async changeInputCallback(inputValue=null){\n    let swapInfo = null;\n    let balanceSelectorInfo = null;\n    inputValue = inputValue || this.state.inputValue;\n\n    if (inputValue && this.functionsUtil.BNify(inputValue).gt(0)){\n      switch (this.state.selectedAction){\n        case 'Mint':\n          balanceSelectorInfo = {\n            color:this.props.theme.colors.transactions.status.completed,\n            text:`You will Mint: ${inputValue.toFixed(4)} CLAIM and NOCLAIM`\n          };\n        break;\n        case 'Claim':\n        case 'NoClaim':\n          const amount = this.functionsUtil.normalizeTokenAmount(inputValue,this.state.tokenConfig.decimals);\n          swapInfo = await this.getSwapInfo(amount);\n          if (swapInfo){\n            if (swapInfo.tokenAmountOut.lte(this.state.covTokens)){\n              balanceSelectorInfo = {\n                color:this.props.theme.colors.transactions.status.completed,\n                text:`You will Buy: ~${this.functionsUtil.fixTokenDecimals(swapInfo.tokenAmountOut,18).toFixed(4)} ${this.state.selectedAction}`\n              };\n            } else {\n              balanceSelectorInfo = {\n                text:`Not enough liquidity`,\n                color:this.props.theme.colors.transactions.status.failed,\n              };\n            }\n          }\n        break;\n        default:\n        break;\n      }\n    }\n\n    this.setState({\n      swapInfo,\n      inputValue,\n      balanceSelectorInfo\n    });\n  }\n\n  async getTransactionParams(amount){\n    let methodName = null;\n    let methodParams = null;\n    amount = this.functionsUtil.BNify(amount);\n    const MAX_UINT256 = this.functionsUtil.BNify(2).pow(256).minus(1).toFixed(0);\n    switch (this.state.selectedAction){\n      case 'Mint':\n        methodName = 'addCover';\n        methodParams = [this.state.tokenConfig.address,parseInt(this.state.selectedCoverage.expirationTimestamp),this.functionsUtil.integerValue(amount)];\n      break;\n      case 'Claim':\n      case 'NoClaim':\n        methodName = 'swapExactAmountOut';\n        const balancerTokenConfig = this.state.selectedCoverage.tokens[this.state.selectedAction];\n        const swapInfo = await this.getSwapInfo(amount);\n        if (swapInfo){\n          if (swapInfo.tokenAmountOut.lte(this.state.covTokens)){\n            methodParams = [this.state.tokenConfig.address,this.functionsUtil.integerValue(amount),balancerTokenConfig.address, this.functionsUtil.integerValue(swapInfo.tokenAmountOut), MAX_UINT256];\n          } else {\n            return null;\n          }\n        }\n      break;\n      default:\n      break;\n    }\n    return {\n      methodName,\n      methodParams\n    };\n  }\n\n  async contractApproved(contractApproved){\n    this.setState({\n      contractApproved\n    });\n  }\n\n  async transactionSucceeded(tx,amount,params){\n    let infoBox = null;\n    const dashboardUrl = `#${this.functionsUtil.getGlobalConfig(['dashboard','baseRoute'])}/best`;\n    const fixedAmount = this.functionsUtil.fixTokenDecimals(amount,this.state.tokenConfig.decimals);\n    switch (this.state.selectedAction){\n      case 'Mint':\n        const mintedClaimLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.state.selectedCoverage.tokens['Claim'].address ) : null;\n        const mintedNoClaimLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.state.selectedCoverage.tokens['NoClaim'].address ) : null;\n        const mintedClaimAmount = mintedClaimLog ? this.functionsUtil.fixTokenDecimals(parseInt(mintedClaimLog.data,16),this.state.contractInfo.decimals) : fixedAmount;\n        const mintedNoClaimAmount = mintedNoClaimLog ? this.functionsUtil.fixTokenDecimals(parseInt(mintedNoClaimLog.data,16),this.state.contractInfo.decimals) : fixedAmount;\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully minted <strong>${mintedClaimAmount.toFixed(4)} CLAIM</strong> and <strong>${mintedNoClaimAmount.toFixed(4)} NOCLAIM</strong> tokens<br /><a href=\"${dashboardUrl}\" styles=\"text-align:center;font-size:14px;color:${this.props.theme.colors.primary}\">Go to Dashboard</a>`\n        }\n      break;\n      case 'Claim':\n        const claimTokenConfig = this.state.selectedCoverage.tokens[this.state.selectedAction];\n        const claimTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === claimTokenConfig.address ) : null;\n        const receivedClaimAmount = claimTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(claimTokensLog.data,16),claimTokenConfig.balancerPool.decimals) : this.functionsUtil.fixTokenDecimals(params[3],claimTokenConfig.balancerPool.decimals);\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully bought <strong>${receivedClaimAmount.toFixed(4)} ${this.state.selectedAction}</strong> tokens, you are now covered in the event that there is a successful attack on the protocol<br /><a href=\"${dashboardUrl}\" styles=\"text-align:center;font-size:14px;color:${this.props.theme.colors.primary}\">Go to Dashboard</a>`\n        }\n      break;\n      case 'NoClaim':\n        debugger;\n        const noClaimTokenConfig = this.state.selectedCoverage.tokens[this.state.selectedAction];\n        const noClaimTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === noClaimTokenConfig.address ) : null;\n        const receivedNoClaimAmount = noClaimTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(noClaimTokensLog.data,16),noClaimTokenConfig.balancerPool.decimals) : this.functionsUtil.fixTokenDecimals(params[3],noClaimTokenConfig.balancerPool.decimals);\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully bought <strong>${receivedNoClaimAmount.toFixed(4)} ${this.state.selectedAction}</strong> tokens, you will be rewarded if there is no successful attack on the protocol by the expiry date<br /><a href=\"${dashboardUrl}\" styles=\"text-align:center;font-size:14px;color:${this.props.theme.colors.primary}\">Go to Dashboard</a>`\n        }\n      break;\n      default:\n      break;\n    }\n\n    // Set second step completed\n    let steps = this.state.steps;\n    steps[1].completed = true;\n\n    const transactionSucceeded = true;\n    const tokenBalance = await this.functionsUtil.getTokenBalance(this.state.selectedToken,this.props.account);\n\n    // console.log('transactionSucceeded',infoBox);\n\n    this.setState({\n      steps,\n      infoBox,\n      tokenBalance,\n      transactionSucceeded\n    });\n  }\n\n  async updateData(){\n    let apy = null;\n    const steps = [];\n    let infoBox = null;\n    let swapFee = null;\n    let covTokens = null;\n    let tokenPrice = null;\n    let tokenAmount = null;\n    let contractInfo = null;\n    let collateralAmount = null;\n    let approveDescription = null;\n\n    const claimTokenConfig = this.state.selectedCoverage.tokens['Claim'];\n    const noClaimTokenConfig = this.state.selectedCoverage.tokens['NoClaim'];\n    const balancerClaimConfig = claimTokenConfig.balancerPool;\n    const balancerNoClaimConfig = noClaimTokenConfig.balancerPool;\n\n    await Promise.all([\n      this.props.initContract(claimTokenConfig.name,claimTokenConfig.address,claimTokenConfig.abi),\n      this.props.initContract(noClaimTokenConfig.name,noClaimTokenConfig.address,noClaimTokenConfig.abi),\n      this.props.initContract(balancerClaimConfig.name,balancerClaimConfig.address,balancerClaimConfig.abi),\n      this.props.initContract(balancerNoClaimConfig.name,balancerNoClaimConfig.address,balancerNoClaimConfig.abi)\n    ]);\n\n    const [\n      claimTokenBalance,\n      noClaimTokenBalance,\n      balancerPoolClaimBalance,\n      balancerPoolNoClaimBalance\n    ] = await Promise.all([\n      // Get Claim token balance\n      this.functionsUtil.getTokenBalance(claimTokenConfig.name,this.props.account),\n      // Get NOCLAIM token balance\n      this.functionsUtil.getTokenBalance(noClaimTokenConfig.name,this.props.account),\n      // Get Balancer Claim token Pool balance\n      this.functionsUtil.getTokenBalance(balancerClaimConfig.name,this.props.account),\n      // Get Balancer NOCLAIM token Pool balance\n      this.functionsUtil.getTokenBalance(balancerNoClaimConfig.name,this.props.account)\n    ]);\n\n    // Check if user has both Claim and NOCLAIM tokens\n    const hasMintedTokens = claimTokenBalance && noClaimTokenBalance && claimTokenBalance.gt(0) && noClaimTokenBalance.gt(0);\n\n    // Set Contract Info\n    switch (this.state.selectedAction){\n      case 'Mint':\n        contractInfo = this.props.toolProps.contract;\n      break;\n      case 'NoClaim':\n        contractInfo = noClaimTokenConfig.balancerPool;\n      break;\n      case 'Claim':\n        contractInfo = claimTokenConfig.balancerPool;\n      break;\n      default:\n      break;\n    }\n\n    const balancerTokenConfig = this.state.selectedCoverage.tokens[this.state.selectedAction];\n\n    if (contractInfo){\n      if (balancerTokenConfig){\n        [\n          swapFee,\n          covTokens,\n          tokenPrice\n        ] = await Promise.all([\n          this.functionsUtil.genericContractCall(contractInfo.name,'getSwapFee'),\n          this.functionsUtil.genericContractCall(contractInfo.name,'getBalance',[balancerTokenConfig.address]),\n          this.functionsUtil.genericContractCall(contractInfo.name,'getSpotPrice',[this.state.tokenConfig.address,balancerTokenConfig.address])\n        ]);\n\n        // Calculate yearly returns\n        if (tokenPrice){\n          const isClaim = this.state.selectedAction === 'Claim';\n          const expirationTimestamp = this.state.selectedCoverage.expirationTimestamp;\n          const days =  (expirationTimestamp*1000 - Date.now())/(60 * 60 * 24 * 1000);\n          tokenPrice = this.functionsUtil.fixTokenDecimals(tokenPrice,this.state.tokenConfig.decimals);\n          const apyPrice = isClaim ? tokenPrice : this.functionsUtil.BNify(1).minus(tokenPrice).div(tokenPrice);\n          apy = this.functionsUtil.BNify(100).times(apyPrice).times(365).div(days);\n        }\n\n        // Fix swap Fees\n        if (swapFee){\n          swapFee = this.functionsUtil.fixTokenDecimals(swapFee,18);\n        }\n      }\n\n      switch (this.state.selectedAction){\n        case 'Mint':\n          approveDescription = `Approve the Cover Protocol contract`;\n          infoBox = {\n            icon:'MonetizationOn',\n            text:`Stake ${this.state.selectedToken} to mint both CLAIM and NOCLAIM tokens in a 1:1 ratio then add them to the respective Balancer Pool to earn trading fees.<br /><small>Prior to expiry or an accepted claim, users can redeem back their collateral with both their CLAIM and NOCLAIM tokens. <a href=\"https://docs.coverprotocol.com/user-guide/redemption\" target=\"_blank\" rel=\"nofollow noopener noreferrer\" style=\"color:${this.props.theme.colors.primary}\">Read more</a></small>`\n          };\n          // Add Approve Step\n          steps.push({\n            icon:'LooksOne',\n            description:approveDescription,\n            completed:this.state.contractApproved\n          });\n          // Add Mint Step\n          steps.push({\n            icon:'LooksTwo',\n            completed:hasMintedTokens,\n            description:`Mint CLAIM and NOCLAIM tokens`\n          });\n          // Add Liquidity to Balancer Step\n          steps.push({\n            icon:'Looks3',\n            description:`Add your CLAIM tokens to the Balancer Pool`,\n            completed:balancerPoolClaimBalance && balancerPoolClaimBalance.gt(0),\n            link:`https://pools.balancer.exchange/#/pool/${this.state.selectedCoverage.tokens['Claim'].balancerPool.address}/`,\n          });\n          // Add Liquidity to Balancer Step\n          steps.push({\n            icon:'Looks4',\n            description:`Add your NOCLAIM tokens to the Balancer Pool`,\n            completed:balancerPoolNoClaimBalance && balancerPoolNoClaimBalance.gt(0),\n            link:`https://pools.balancer.exchange/#/pool/${this.state.selectedCoverage.tokens['NoClaim'].balancerPool.address}/`,\n          });\n        break;\n        case 'NoClaim':\n          if (this.state.swapInfo){\n            collateralAmount = this.functionsUtil.fixTokenDecimals(this.state.swapInfo.amount,this.state.tokenConfig.decimals);\n            tokenAmount = this.functionsUtil.fixTokenDecimals(this.state.swapInfo.tokenAmountOut,contractInfo.decimals);\n            infoBox = {\n              icon:'VerifiedUser',\n              text:`By providing <strong>${collateralAmount.toFixed(4)} ${this.state.selectedToken}</strong> your NOCLAIM tokens will pay out <strong>~${tokenAmount.toFixed(4)} ${this.state.selectedToken}</strong> if there is no successful attack on the protocol by the expiry date.`\n            };\n          } else {\n            infoBox = {\n              icon:'VerifiedUser',\n              text:`NOCLAIM tokens will pay out 1 ${this.state.selectedToken} for each token you hold if there is no successful attack on the protocol by the expiry date.`\n            };\n          }\n\n          // Add Yearly cost and read more\n          infoBox.text+=`${apy ? `<br /><span style=\"color:${this.props.theme.colors.primary}\">The yearly return of buying and holding NOCLAIM until expiration is <strong>${apy.toFixed(2)}%</strong>` : null}</span><br /><small><a href=\"https://docs.coverprotocol.com/product/claims-guidelines\" target=\"_blank\" rel=\"nofollow noopener noreferrer\" style=\"color:${this.props.theme.colors.primary}\">Read more</a> to understand how claims are assessed and paid out by Cover Protocol.</small>`;\n\n          // Add Approve Step\n          approveDescription = `Approve the NOCLAIM Balancer Pool contract`;\n          steps.push({\n            icon:'LooksOne',\n            description:approveDescription,\n            completed:this.state.contractApproved\n          });\n          // Add Mint Step\n          steps.push({\n            icon:'LooksTwo',\n            completed:noClaimTokenBalance && noClaimTokenBalance.gt(0),\n            description:`Buy NOCLAIM tokens with your ${this.state.selectedToken}`\n          });\n        break;\n        case 'Claim':\n          if (this.state.swapInfo){\n            collateralAmount = this.functionsUtil.fixTokenDecimals(this.state.swapInfo.amount,this.state.tokenConfig.decimals);\n            tokenAmount = this.functionsUtil.fixTokenDecimals(this.state.swapInfo.tokenAmountOut,contractInfo.decimals);\n            const portfolioCoveredPerc = 32;//this.state.portfolio && this.state.portfolio.totalBalance.gt(0) ? tokenAmount.div(this.state.portfolio.totalBalance).times(100) : null;\n            infoBox = {\n              icon:'BeachAccess',\n              text:`By providing <strong>${collateralAmount.toFixed(4)} ${this.state.selectedToken}</strong> your CLAIM tokens will pay out <strong>~${tokenAmount.toFixed(4)} ${this.state.selectedToken}</strong>${ portfolioCoveredPerc ? ` <strong>(${portfolioCoveredPerc}% of your portfolio)</strong>` : '' } in the event that there is a successful attack on the protocol before the expiry date.`\n            };\n          } else {\n            infoBox = {\n              icon:'BeachAccess',\n              text:`CLAIM tokens will pay out 1 ${this.state.selectedToken} for each token you hold in the event that there is a successful attack on the protocol before the expiry date.`\n            };\n          }\n\n          infoBox.text+=`${apy ? `<br /><span style=\"color:${this.props.theme.colors.primary}\">The yearly cost of buying and holding CLAIM until expiration is <strong>${apy.toFixed(2)}%` : null}</strong></span><br /><small><a href=\"https://docs.coverprotocol.com/product/claims-guidelines\" target=\"_blank\" rel=\"nofollow noopener noreferrer\" style=\"color:${this.props.theme.colors.primary}\">Read more</a> to understand how claims are assessed and paid out by Cover Protocol.</small>`;\n\n          // Add Approve Step\n          approveDescription = `Approve the CLAIM Balancer Pool contract`;\n          steps.push({\n            icon:'LooksOne',\n            description:approveDescription,\n            completed:this.state.contractApproved\n          });\n          // Add Mint Step\n          steps.push({\n            icon:'LooksTwo',\n            completed:claimTokenBalance && claimTokenBalance.gt(0),\n            description:`Buy CLAIM tokens with your ${this.state.selectedToken}`\n          });\n        break;\n        default:\n        break;\n      }\n\n      const transactionSucceeded = false;\n      this.setState({\n        apy,\n        steps,\n        infoBox,\n        swapFee,\n        covTokens,\n        tokenPrice,\n        contractInfo,\n        approveDescription,\n        transactionSucceeded\n      });\n    }\n  }\n\n  async loadData(){\n    const currTime = parseInt(Date.now()/1000);\n    const activeCoverages = this.props.toolProps.coverages.reduce( (output,c,index) => {\n      if (c.expirationTimestamp>currTime){\n        const expirationDate = this.functionsUtil.strToMoment(c.expirationTimestamp*1000).utc().format('YYYY-MM-DD HH:mm:ss')+' UTC';\n        const icon = `images/tokens/${c.collateral}.svg`;\n        const label = `Collateral: ${c.collateral} - Expiration: ${expirationDate}`;\n        output.push({\n          icon,\n          label,\n          data:c,\n          value:expirationDate,\n        });\n      }\n      return output;\n    },[]);\n\n    const portfolio = await this.functionsUtil.getAccountPortfolio();\n    const defaultCoverage = activeCoverages.length ? activeCoverages[0] : null;\n\n    this.setState({\n      portfolio,\n      defaultCoverage,\n      activeCoverages\n    },() => {\n      if (defaultCoverage){\n        this.selectCoverage(defaultCoverage);\n      }\n    });\n  }\n\n  async selectCoverage(coverage){\n    const selectedCoverage = coverage.data;\n    this.setState({\n      selectedCoverage\n    });\n  }\n\n  setAction(selectedAction){\n    this.setState({\n      selectedAction\n    });\n  }\n\n  render() {\n\n    const isMint = this.state.selectedAction === 'Mint';\n    const isBuyClaim = this.state.selectedAction === 'Claim';\n    const isBuyNoClaim = this.state.selectedAction === 'NoClaim';\n    const txAction = isMint ? this.state.selectedAction : `Buy ${this.state.selectedAction}`;\n\n    const CustomOptionValue = props => {\n      const label = props.label;\n      const tokenConfig = {\n        icon:props.data.icon\n      };\n\n      return (\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'row'}\n          justifyContent={'space-between'}\n        >\n          <Flex\n            alignItems={'center'}\n          >\n            <AssetField\n              token={label}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  width:'2em',\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={label}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n        </Flex>\n      );\n    }\n\n    const CustomValueContainer = props => {\n\n      const options = props.selectProps.options;\n      const selectProps = options.indexOf(props.selectProps.value) !== -1 ? props.selectProps.value : null;\n\n      if (!selectProps){\n        return null;\n      }\n\n      const label = selectProps.label;\n      const tokenConfig = {\n        icon:selectProps.icon\n      };\n\n      return (\n        <Flex\n          style={{\n            flex:'1'\n          }}\n          justifyContent={'space-between'}\n          {...props.innerProps}\n        >\n          <Flex\n            p={0}\n            width={1}\n            {...props.innerProps}\n            alignItems={'center'}\n            flexDirection={'row'}\n            style={{cursor:'pointer'}}\n            justifyContent={'flex-start'}\n          >\n            <AssetField\n              token={label}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={label}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n        </Flex>\n      );\n    }\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        {\n          !this.state.activeCoverages ? (\n            <Flex\n              mt={4}\n              flexDirection={'column'}\n            >\n              <FlexLoader\n                flexProps={{\n                  flexDirection:'row'\n                }}\n                loaderProps={{\n                  size:'30px'\n                }}\n                textProps={{\n                  ml:2\n                }}\n                text={'Loading active coverages...'}\n              />\n            </Flex>\n          ) : (\n            <Flex\n              width={1}\n              alignItems={'center'}\n              justifyContent={'center'}\n            >\n              {\n                !this.state.activeCoverages.length ? (\n                  <Text\n                    fontWeight={2}\n                    fontSize={[2,3]}\n                    color={'dark-gray'}\n                    textAlign={'center'}\n                  >\n                    There are no active coverages.\n                  </Text>\n                ) : (\n                  <Flex\n                    width={[1,0.46]}\n                    alignItems={'stretch'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <Box\n                      width={1}\n                    >\n                      <Text mb={1}>\n                        Select Coverage:\n                      </Text>\n                      <GenericSelector\n                        {...this.props}\n                        name={'strategy'}\n                        isSearchable={false}\n                        options={this.state.activeCoverages}\n                        CustomOptionValue={CustomOptionValue}\n                        defaultValue={this.state.defaultCoverage}\n                        onChange={this.selectCoverage.bind(this)}\n                        CustomValueContainer={CustomValueContainer}\n                      />\n                    </Box>\n                    {\n                      this.state.selectedCoverage && (\n                        <Box\n                          mt={3}\n                          width={1}\n                        >\n                          <Text mb={1}>\n                            Select Action:\n                          </Text>\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={['column','row']}\n                            justifyContent={'space-between'}\n                          >\n                            <ImageButton\n                              buttonProps={{\n                                mx:0,\n                                border:isMint ? 2 : 0\n                              }}\n                              width={[1,'32%']}\n                              caption={'Add Liquidity'}\n                              imageSrc={'images/mint.svg'}\n                              isMobile={this.props.isMobile}\n                              subcaption={'mint CLAIM and NOCLAIM\\nand stake in Balancer Pool'}\n                              imageProps={{\n                                mb:2,\n                                height:this.props.isMobile ? '42px' : '52px'\n                              }}\n                              isActive={isMint}\n                              handleClick={ e => this.setAction('Mint') }\n                            />\n                            <ImageButton\n                              buttonProps={{\n                                mx:0,\n                                border:isBuyClaim ? 2 : 0\n                              }}\n                              width={[1,'32%']}\n                              caption={'Buy CLAIM'}\n                              imageSrc={'images/claim.svg'}\n                              isMobile={this.props.isMobile}\n                              subcaption={'protect in case of attacks\\nagainst the Idle protocol'}\n                              imageProps={{\n                                mb:2,\n                                height:this.props.isMobile ? '42px' : '52px'\n                              }}\n                              isActive={isBuyClaim}\n                              handleClick={ e => this.setAction('Claim') }\n                            />\n                            <ImageButton\n                              buttonProps={{\n                                mx:0,\n                                border:isBuyNoClaim ? 2 : 0\n                              }}\n                              width={[1,'32%']}\n                              caption={'Buy NOCLAIM'}\n                              isMobile={this.props.isMobile}\n                              imageSrc={'images/noclaim.svg'}\n                              subcaption={'get rewarded if no attack\\noccurs on the Idle protocol'}\n                              imageProps={{\n                                mb:2,\n                                height:this.props.isMobile ? '42px' : '52px'\n                              }}\n                              isActive={isBuyNoClaim}\n                              handleClick={ e => this.setAction('NoClaim') }\n                            />\n                          </Flex>\n                          {\n                            this.state.tokenConfig && this.state.tokenBalance && this.state.contractInfo &&\n                              <Box\n                                mt={2}\n                                mb={3}\n                                width={1}\n                              >\n                                <SendTxWithBalance\n                                  {...this.props}\n                                  action={txAction}\n                                  error={this.state.error}\n                                  steps={this.state.steps}\n                                  infoBox={this.state.infoBox}\n                                  tokenConfig={this.state.tokenConfig}\n                                  tokenBalance={this.state.tokenBalance}\n                                  contractInfo={this.state.contractInfo}\n                                  callback={this.transactionSucceeded.bind(this)}\n                                  contractApproved={this.contractApproved.bind(this)}\n                                  approveDescription={this.state.approveDescription}\n                                  balanceSelectorInfo={this.state.balanceSelectorInfo}\n                                  changeInputCallback={this.changeInputCallback.bind(this)}\n                                  getTransactionParams={this.getTransactionParams.bind(this)}\n                                >\n                                  <BuyModal\n                                    {...this.props}\n                                    showInline={true}\n                                    availableMethods={[]}\n                                    buyToken={this.state.selectedToken}\n                                  />\n                                </SendTxWithBalance>\n                              </Box>\n                          }\n                        </Box>\n                      )\n                    }\n                  </Flex>\n                )\n              }\n            </Flex>\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default CoverProtocol;\n","import Migrate from '../Migrate/Migrate';\nimport React, { Component } from 'react';\nimport { Flex, Box, Text, Icon } from \"rimble-ui\";\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport AssetSelector from '../AssetSelector/AssetSelector';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass TokenMigration extends Component {\n\n  state = {\n    tokenConfig:null,\n    selectedFromToken:null,\n    selectedDestToken:null,\n    migrationSucceeded:false,\n    availableDestinationTokens:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    await this.loadTokens();\n  }\n\n  async loadTokens(){\n    const selectedFromToken = this.props.urlParams.param2 && this.props.toolProps.availableTokens[this.props.urlParams.param2] ? this.props.urlParams.param2 : Object.keys(this.props.toolProps.availableTokens)[0];\n\n    await this.functionsUtil.asyncForEach(Object.keys(this.props.toolProps.availableTokens),async (token) => {\n      const tokenConfig = this.props.toolProps.availableTokens[token];\n      const tokenContract = this.functionsUtil.getContractByName(tokenConfig.token);\n      if (!tokenContract && tokenConfig.abi){\n        await this.props.initContract(tokenConfig.token,tokenConfig.address,tokenConfig.abi);\n      }\n    });\n\n    if (selectedFromToken && selectedFromToken !== this.props.urlParams.param2){\n      this.changeFromToken(selectedFromToken);\n    }\n\n    this.selectFromToken(selectedFromToken);\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const tokenFromChanged = prevProps.urlParams.param2 !== this.props.urlParams.param2;\n    if (tokenFromChanged){\n      await this.loadTokens();\n    }\n  }\n\n  changeFromToken = (selectedToken) => {\n    const convertTool = this.functionsUtil.getGlobalConfig(['tools','tokenMigration']);\n    this.props.goToSection(`tools/${convertTool.route}/${selectedToken}`);\n  }\n\n  selectFromToken = async (selectedFromToken) => {\n    const tokenInfo = this.props.toolProps.availableTokens[selectedFromToken];\n\n    let selectedDestToken = null;\n    const availableDestinationTokens = {};\n\n    const availableStrategies = typeof this.props.toolProps.availableStrategies !== 'undefined' ? this.props.toolProps.availableStrategies : Object.keys(this.props.availableStrategies);\n\n    availableStrategies.forEach( strategy => {\n      const strategyAvailableTokens =  this.props.availableStrategies[strategy];\n      const baseTokenConfig = strategyAvailableTokens[tokenInfo.baseToken];\n      if (!baseTokenConfig){\n        return false;\n      }\n\n      // Remove icon\n      delete baseTokenConfig.icon;\n\n      if (!selectedDestToken){\n        selectedDestToken = baseTokenConfig.idle.token;\n      }\n      baseTokenConfig.strategy = strategy;\n      baseTokenConfig.baseToken = tokenInfo.baseToken;\n      availableDestinationTokens[baseTokenConfig.idle.token] = baseTokenConfig;\n    });\n\n    this.setState({\n      tokenConfig:null,\n      selectedFromToken,\n      availableDestinationTokens\n    },() => {\n      this.selectDestToken(selectedDestToken);\n    });\n  }\n\n  selectDestToken = async (selectedDestToken) => {\n\n    const destTokenConfig = this.state.availableDestinationTokens[selectedDestToken];\n    const tokenInfo = this.props.toolProps.availableTokens[this.state.selectedFromToken];\n\n    const tokenConfig = {\n      token:destTokenConfig.baseToken,\n      address:destTokenConfig.address,\n      decimals:destTokenConfig.decimals\n    };\n\n    // Add Idle Token config\n    tokenConfig.idle = destTokenConfig.idle;\n\n    // Add migration info\n    const oldContract = {\n      abi:tokenInfo.abi,\n      name:tokenInfo.token,\n      token:tokenInfo.token,\n      address:tokenInfo.address\n    };\n    \n    const migrationContract = this.props.toolProps.migrationContract;\n\n    // Add migration function\n    if (tokenInfo.migrateFunction){\n      migrationContract.functions[0].name = tokenInfo.migrateFunction;\n    }\n\n    tokenConfig.migration = {\n      enabled:true,\n      oldContract,\n      migrationContract,\n      migrationSucceeded:false\n    };\n\n    await this.props.setStrategyToken(destTokenConfig.strategy,tokenInfo.baseToken);\n\n    this.setState({\n      tokenConfig,\n      selectedDestToken\n    });\n  }\n\n  migrationCallback = () => {\n    this.setState({\n      migrationSucceeded:true\n    });\n  }\n\n  render() {\n\n    if (!this.state.selectedFromToken){\n      return null;\n    }\n\n    return (\n      <Flex\n        width={1}\n        mt={[2,3]}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          width={[1,0.36]}\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Box\n            width={1}\n          >\n            <Text mb={1}>\n              Select asset to migrate:\n            </Text>\n            <AssetSelector\n              {...this.props}\n              id={'token-from'}\n              showBalance={true}\n              isSearchable={true}\n              onChange={this.changeFromToken}\n              selectedToken={this.state.selectedFromToken}\n              availableTokens={this.props.toolProps.availableTokens}\n            />\n          </Box>\n          {\n            this.state.availableDestinationTokens && this.state.selectedDestToken && \n              <Box\n                mt={2}\n                width={1}\n              >\n                <Text mb={1}>\n                  Select destination asset:\n                </Text>\n                <AssetSelector\n                  {...this.props}\n                  id={'token-dest'}\n                  showBalance={false}\n                  onChange={this.selectDestToken}\n                  selectedToken={this.state.selectedDestToken}\n                  availableTokens={this.state.availableDestinationTokens}\n                />\n              </Box>\n          }\n          {\n            this.state.selectedFromToken && this.state.selectedDestToken ? (\n              <Migrate\n                {...this.props}\n                showActions={false}\n                getTokenPrice={false}\n                isMigrationTool={true}\n                tokenConfig={this.state.tokenConfig}\n                migrationCallback={this.migrationCallback}\n                selectedToken={this.state.selectedFromToken}\n                selectedStrategy={this.props.selectedStrategy}\n              >\n                {\n                  !this.props.account ? (\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        mt:3\n                      }}\n                    >\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                      >\n                        <Icon\n                          size={'2.3em'}\n                          name={'Input'}\n                          color={'cellText'}\n                        />\n                        <Text\n                          mt={2}\n                          fontSize={2}\n                          color={'cellText'}\n                          textAlign={'center'}\n                        >\n                          Please connect with your wallet interact with Idle.\n                        </Text>\n                        <RoundButton\n                          buttonProps={{\n                            mt:2,\n                            width:[1,1/2]\n                          }}\n                          handleClick={this.props.connectAndValidateAccount}\n                        >\n                          Connect\n                        </RoundButton>\n                      </Flex>\n                    </DashboardCard>\n                  ) : (\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        mt:3\n                      }}\n                    >\n                      {\n                        this.state.migrationSucceeded ? (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              name={'DoneAll'}\n                              color={this.props.theme.colors.transactions.status.completed}\n                            />\n                            <Text\n                              mt={2}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              Your {this.state.selectedFromToken} have been successfully migrated!\n                            </Text>\n                          </Flex>\n                        ) : (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              name={'MoneyOff'}\n                              color={'cellText'}\n                            />\n                            <Text\n                              mt={2}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              You don't have any {this.state.selectedFromToken} in your wallet.\n                            </Text>\n                          </Flex>\n                        )\n                      }\n                    </DashboardCard>\n                  )\n                }\n              </Migrate>\n            ) : null\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default TokenMigration;\n","/*\n// batchDeposits[user][batchId] = amount\nmapping (address => mapping (uint256 => uint256)) public batchDeposits;\nmapping (uint256 => uint256) batchTotals; // in idleToken\nmapping (uint256 => uint256) batchRedeemedTotals; // in newIdleToken\n\nuint256 public currBatch;\naddress public idleToken;\naddress public newIdleToken;\naddress public underlying;\n\nfunction deposit() external\nfunction withdraw(uint256 batchId) external\n*/\n\nimport Migrate from '../Migrate/Migrate';\nimport React, { Component } from 'react';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport { Flex, Box, Text, Icon, Link } from \"rimble-ui\";\nimport AssetSelector from '../AssetSelector/AssetSelector';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\nimport TransactionField from '../TransactionField/TransactionField';\n\nclass BatchMigration extends Component {\n\n  state = {\n    canClaim:false,\n    batchTotals:{},\n    canDeposit:true,\n    action:'deposit',\n    batchDeposits:{},\n    tokenConfig:null,\n    processing:{\n      claim:{\n        txHash:null,\n        loading:false\n      },\n    },\n    hasDeposited:false,\n    selectedToken:null,\n    batchCompleted:false,\n    claimSucceeded:false,\n    migrationSucceeded:false,\n    selectedTokenConfig:null,\n    migrationContractApproved:false,\n    availableDestinationTokens:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    await this.loadTokens();\n  }\n\n  async checkBatchs(){\n\n    const migrationContractInfo = this.state.selectedTokenConfig.migrationContract;\n\n    await Promise.all([\n      this.props.initContract(migrationContractInfo.name,migrationContractInfo.address,migrationContractInfo.abi),\n      this.props.initContract(this.state.selectedTokenConfig.name,this.state.selectedTokenConfig.address,this.state.selectedTokenConfig.abi)\n    ]);\n\n    const [currBatchIndex,migrationContractApproved] = await Promise.all([\n      this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'currBatch'),\n      this.functionsUtil.checkTokenApproved(this.state.selectedTokenConfig.name,migrationContractInfo.address,this.props.account)\n    ]);\n\n    const newState = {};\n    const batchDeposits = {};\n    const batchTotals = {};\n    let batchCompleted = false;\n\n    if (currBatchIndex !== null){\n      for (let batchIndex = 0; batchIndex <= currBatchIndex ; batchIndex++){\n        let [batchTotal,batchDeposit] = await Promise.all([\n          this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'batchTotals',[batchIndex]),\n          this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'batchDeposits',[this.props.account,batchIndex])\n        ]);\n        if (batchTotal && batchTotal !== null){\n          batchTotals[batchIndex] = this.functionsUtil.fixTokenDecimals(batchTotal,this.state.selectedTokenConfig.decimals);\n        }\n        if (batchDeposit !== null){\n          batchDeposit = this.functionsUtil.fixTokenDecimals(batchDeposit,this.state.selectedTokenConfig.decimals);\n          if (batchDeposit.gt(0)){\n\n            batchDeposits[batchIndex] = batchDeposit;\n            // Check claimable\n            if (batchIndex < currBatchIndex){\n              batchCompleted = true;\n            }\n          }\n        }\n      }\n\n      newState.batchDeposits = batchDeposits;\n    }\n\n    const hasDeposited = (batchDeposits && Object.keys(batchDeposits).length>0);\n\n    const batchMigrationInfo = this.functionsUtil.getGlobalConfig(['tools','batchMigration']);\n    const batchMigrationDepositEnabled = batchMigrationInfo.depositEnabled;\n\n    newState.claimSucceeded = false;\n    newState.batchTotals = batchTotals;\n    newState.batchCompleted = batchCompleted;\n    newState.hasDeposited = hasDeposited;\n    newState.canDeposit = !hasDeposited && batchMigrationDepositEnabled;\n    newState.canClaim = batchCompleted || hasDeposited;\n    newState.action = hasDeposited ? 'redeem' : 'deposit';\n    newState.migrationContractApproved = migrationContractApproved;\n\n    this.setState(newState);\n  }\n\n  async loadTokens(){\n    const selectedToken = this.props.urlParams.param2 && this.props.toolProps.availableTokens[this.props.urlParams.param2] ? this.props.urlParams.param2 : Object.keys(this.props.toolProps.availableTokens)[0];\n\n    await this.functionsUtil.asyncForEach(Object.keys(this.props.toolProps.availableTokens),async (token) => {\n      const tokenConfig = this.props.toolProps.availableTokens[token];\n      const tokenContract = this.functionsUtil.getContractByName(tokenConfig.token);\n      if (!tokenContract && tokenConfig.abi){\n        await this.props.initContract(tokenConfig.token,tokenConfig.address,tokenConfig.abi);\n      }\n    });\n\n    this.selectFromToken(selectedToken);\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const tokenFromChanged = prevProps.urlParams.param2 !== this.props.urlParams.param2;\n    if (tokenFromChanged){\n      await this.loadTokens();\n    }\n\n    const selectedTokenChanged = prevState.selectedToken !== this.state.selectedToken;\n    if (selectedTokenChanged){\n      this.checkBatchs();\n    }\n  }\n\n  selectFromToken = async (selectedToken) => {\n\n    const selectedTokenConfig = this.props.toolProps.availableTokens[selectedToken];\n    const strategyAvailableTokens =  this.props.availableStrategies[selectedTokenConfig.strategy];\n\n    const baseTokenConfig = strategyAvailableTokens[selectedTokenConfig.baseToken];\n\n    const tokenConfig = {\n      token:selectedTokenConfig.baseToken,\n      address:selectedTokenConfig.address,\n      decimals:selectedTokenConfig.decimals\n    };\n\n    // Add Idle Token config\n    tokenConfig.idle = baseTokenConfig.idle;\n\n    // Add migration info\n    const oldContract = {\n      abi:selectedTokenConfig.abi,\n      name:selectedTokenConfig.name,\n      token:selectedTokenConfig.token,\n      address:selectedTokenConfig.address\n    };\n    \n    const migrationContract = selectedTokenConfig.migrationContract;\n\n    // Add migration function\n    if (baseTokenConfig.migrateFunction){\n      migrationContract.functions[0].name = baseTokenConfig.migrateFunction;\n    }\n\n    tokenConfig.migration = {\n      enabled:true,\n      oldContract,\n      migrationContract,\n      migrationSucceeded:false\n    };\n\n    await this.props.setStrategyToken(selectedTokenConfig.strategy,baseTokenConfig.baseToken);\n\n    this.setState({\n      tokenConfig,\n      selectedToken,\n      selectedTokenConfig\n    });\n  }\n\n  claim = async () => {\n    if (!this.state.batchCompleted){\n      return null;\n    }\n\n    const loading = true;\n    const claimableValue = 0;\n    const batchId = Object.keys(this.state.batchDeposits)[0];\n\n    const callbackClaim = (tx,error) => {\n      const txSucceeded = tx.status === 'success';\n\n      // Send Google Analytics event\n      const eventData = {\n        eventCategory: `BatchMigration`,\n        eventAction: 'Claim',\n        eventLabel: this.props.selectedToken,\n        eventValue: parseInt(claimableValue)\n      };\n\n      if (error){\n        eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n      }\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n      this.setState((prevState) => ({\n        claimSucceeded:txSucceeded,\n        processing: {\n          ...prevState.processing,\n          claim:{\n            txHash:null,\n            loading:false\n          }\n        }\n      }));\n    };\n\n    const callbackReceiptClaim = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          claim:{\n            ...prevState.processing.claim,\n            txHash\n          }\n        }\n      }));\n    };\n\n    this.props.contractMethodSendWrapper(this.state.selectedTokenConfig.migrationContract.name, 'withdraw', [batchId], null, callbackClaim, callbackReceiptClaim);\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        claim:{\n          ...prevState.processing.claim,\n          loading\n        }\n      }\n    }));\n  }\n\n  setAction = (action) => {\n    if (action !== null && ['deposit','redeem'].includes(action.toLowerCase())){\n      this.setState({\n        action\n      });\n    }\n  }\n\n  migrationCallback = () => {\n    this.checkBatchs();\n    this.setState({\n      migrationSucceeded:true\n    });\n  }\n\n  render() {\n\n    if (!this.state.selectedToken){\n      return null;\n    }\n\n    const batchMigrationInfo = this.functionsUtil.getGlobalConfig(['tools','batchMigration']);\n    const batchMigrationDepositEnabled = batchMigrationInfo.depositEnabled;\n\n    const batchId = this.state.batchDeposits && Object.keys(this.state.batchDeposits).length>0 ? Object.keys(this.state.batchDeposits)[0] : null;\n    const batchDeposit = this.state.batchDeposits && Object.values(this.state.batchDeposits).length>0 ? Object.values(this.state.batchDeposits)[0] : null;\n\n    return (\n      <Flex\n        width={1}\n        mt={[2,3]}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          width={[1,0.36]}\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Box\n            width={1}\n          >\n            <Text mb={1}>\n              Select asset to migrate:\n            </Text>\n            <AssetSelector\n              {...this.props}\n              id={'token-from'}\n              showBalance={true}\n              isSearchable={false}\n              onChange={this.selectFromToken}\n              selectedToken={this.state.selectedToken}\n              availableTokens={this.props.toolProps.availableTokens}\n            />\n          </Box>\n          {\n            (this.state.canDeposit || this.state.canClaim) && \n              <DashboardCard\n                cardProps={{\n                  p:3,\n                  px:4,\n                  mt:3,\n                }}\n              >\n                <Flex\n                  alignItems={'center'}\n                  flexDirection={'column'}\n                > \n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                  >\n                    <Icon\n                      size={'1.5em'}\n                      name={ this.state.migrationContractApproved ? 'CheckBox' : 'LooksOne'}\n                      color={ this.state.migrationContractApproved ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                    />\n                    <Text\n                      ml={2}\n                      fontSize={2}\n                      color={'cellText'}\n                      textAlign={'left'}\n                    >\n                      Approve the batch migration contract\n                    </Text>\n                  </Flex>\n                  <Flex\n                    mt={2}\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                  >\n                    <Icon\n                      size={'1.5em'}\n                      name={ this.state.hasDeposited ? 'CheckBox' : 'LooksTwo'}\n                      color={ this.state.hasDeposited ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                    />\n                    <Text\n                      ml={2}\n                      fontSize={2}\n                      color={'cellText'}\n                      textAlign={'left'}\n                    >\n                      Deposit your {this.state.selectedTokenConfig.token}\n                    </Text>\n                  </Flex>\n                  <Flex\n                    mt={2}\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                  >\n                    <Icon\n                      size={'1.5em'}\n                      name={ this.state.batchCompleted ? 'CheckBox' : 'Looks3'}\n                      color={ this.state.batchCompleted ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                    />\n                    <Text\n                      ml={2}\n                      fontSize={2}\n                      color={'cellText'}\n                      textAlign={'left'}\n                    >\n                      Wait for the batch to be migrated\n                    </Text>\n                  </Flex>\n                  <Flex\n                    mt={2}\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                  >\n                    <Icon\n                      size={'1.5em'}\n                      name={ this.state.claimSucceeded ? 'CheckBox' : 'Looks4'}\n                      color={ this.state.claimSucceeded ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                    />\n                    <Text\n                      ml={2}\n                      fontSize={2}\n                      color={'cellText'}\n                      textAlign={'left'}\n                    >\n                      Claim your {this.state.selectedToken}V4\n                    </Text>\n                  </Flex>\n                </Flex>\n              </DashboardCard>\n          }\n          {\n            this.state.selectedToken ? (\n              <Box width={1}>\n                {\n                  this.state.migrationContractApproved && (this.state.canDeposit || this.state.canClaim) && \n                    <Flex\n                      mt={2}\n                      flexDirection={'column'}\n                    >\n                      <Text mb={2}>\n                        Choose the action:\n                      </Text>\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'space-between'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            width:0.48,\n                            onMouseDown:() => {\n                              return this.state.canDeposit ? this.setAction('deposit') : null;\n                            }\n                          }}\n                          isInteractive={true}\n                          isDisabled={ !this.state.canDeposit }\n                          isActive={ this.state.action === 'deposit' }\n                        >\n                          <Flex\n                            my={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            justifyContent={'center'}\n                          >\n                            <TransactionField\n                              transaction={{\n                                action:'deposit'\n                              }}\n                              fieldInfo={{\n                                name:'icon',\n                                props:{\n                                  mr:3\n                                }\n                              }}\n                            />\n                            <Text\n                              fontSize={3}\n                              fontWeight={3}\n                            >\n                              Deposit\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            width:0.48,\n                            onMouseDown:() => {\n                              return this.state.canClaim ? this.setAction('redeem') : null;\n                            }\n                          }}\n                          isInteractive={true}\n                          isDisabled={ !this.state.canClaim }\n                          isActive={ this.state.action === 'redeem' }\n                        >\n                          <Flex\n                            my={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            justifyContent={'center'}\n                          >\n                            <TransactionField\n                              transaction={{\n                                action:'redeem'\n                              }}\n                              fieldInfo={{\n                                name:'icon',\n                                props:{\n                                  mr:3\n                                }\n                              }}\n                            />\n                            <Text\n                              fontSize={3}\n                              fontWeight={3}\n                            >\n                              Claim\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                    </Flex>\n                }\n                {\n                  this.state.action === 'deposit' ? \n                    batchMigrationDepositEnabled ? (\n                      <Migrate\n                        {...this.props}\n                        showActions={false}\n                        migrationParams={[]}\n                        getTokenPrice={false}\n                        isMigrationTool={true}\n                        migrationIcon={'FileDownload'}\n                        waitText={'Deposit estimated in'}\n                        tokenConfig={this.state.tokenConfig}\n                        selectedToken={this.state.selectedToken}\n                        callbackApprove={this.checkBatchs.bind(this)}\n                        selectedStrategy={this.props.selectedStrategy}\n                        migrationCallback={this.migrationCallback.bind(this)}\n                        migrationText={`Deposit your ${this.state.selectedTokenConfig.token} and wait until it is converted to the new ${this.state.tokenConfig.idle.token}.`}\n                      >\n                        {\n                          !this.props.account ? (\n                            <DashboardCard\n                              cardProps={{\n                                p:3,\n                                mt:3\n                              }}\n                            >\n                              <Flex\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                              >\n                                <Icon\n                                  size={'2.3em'}\n                                  name={'Input'}\n                                  color={'cellText'}\n                                />\n                                <Text\n                                  mt={2}\n                                  fontSize={2}\n                                  color={'cellText'}\n                                  textAlign={'center'}\n                                >\n                                  Please connect with your wallet interact with Idle.\n                                </Text>\n                                <RoundButton\n                                  buttonProps={{\n                                    mt:2,\n                                    width:[1,1/2]\n                                  }}\n                                  handleClick={this.props.connectAndValidateAccount}\n                                >\n                                  Connect\n                                </RoundButton>\n                              </Flex>\n                            </DashboardCard>\n                          ) : (\n                            <DashboardCard\n                              cardProps={{\n                                p:3,\n                                my:3\n                              }}\n                            >\n                              {\n                                batchId ? (\n                                  <Flex\n                                    alignItems={'center'}\n                                    flexDirection={'column'}\n                                  >\n                                    <Icon\n                                      size={'2.3em'}\n                                      color={'cellText'}\n                                      name={'HourglassEmpty'}\n                                    />\n                                    <Text\n                                      mt={2}\n                                      fontSize={2}\n                                      color={'cellText'}\n                                      textAlign={'center'}\n                                    >\n                                      {\n                                        this.state.batchCompleted ? (\n                                          <Text.span\n                                            color={'cellText'}\n                                          >The batch has been migrated, click on the \"Claim\" button to withdraw your tokens.</Text.span>\n                                        ) : (\n                                          <Text.span\n                                            color={'cellText'}\n                                          >\n                                            You have successfully deposited {batchDeposit.toFixed(4)} {this.state.selectedTokenConfig.token}, please wait until the batch is migrated to claim your tokens.\n                                            {\n                                              typeof this.state.batchTotals[batchId] !== 'undefined' && \n                                              <Text.span\n                                                color={'cellText'}\n                                              >\n                                                <br />Batch pool: {this.state.batchTotals[batchId].toFixed(4)} {this.state.selectedTokenConfig.token}\n                                              </Text.span>\n                                            }\n                                          </Text.span>\n                                        )\n                                      }\n                                    </Text>\n                                  </Flex>\n                                ) : this.state.migrationSucceeded ? (\n                                  <Flex\n                                    alignItems={'center'}\n                                    flexDirection={'column'}\n                                  >\n                                    <Icon\n                                      size={'2.3em'}\n                                      name={'DoneAll'}\n                                      color={this.props.theme.colors.transactions.status.completed}\n                                    />\n                                    <Text\n                                      mt={2}\n                                      fontSize={2}\n                                      color={'cellText'}\n                                      textAlign={'center'}\n                                    >\n                                      You have successfully deposited your {this.state.selectedTokenConfig.token} into the batch!\n                                    </Text>\n                                  </Flex>\n                                ) : (\n                                  <Flex\n                                    alignItems={'center'}\n                                    flexDirection={'column'}\n                                  >\n                                    <Icon\n                                      size={'2.3em'}\n                                      name={'MoneyOff'}\n                                      color={'cellText'}\n                                    />\n                                    <Text\n                                      mt={2}\n                                      fontSize={2}\n                                      color={'cellText'}\n                                      textAlign={'center'}\n                                    >\n                                      You don't have any {this.state.selectedTokenConfig.token} in your wallet.\n                                    </Text>\n                                  </Flex>\n                                )\n                              }\n                            </DashboardCard>\n                          )\n                        }\n                      </Migrate>\n                    ) : (\n                      <DashboardCard\n                        cardProps={{\n                          p:3,\n                          my:3\n                        }}\n                      >\n                        <Flex\n                          alignItems={'center'}\n                          flexDirection={'column'}\n                        >\n                          <Text\n                            fontSize={2}\n                            color={'cellText'}\n                            textAlign={'center'}\n                          >\n                            Batch migration is disabled for this asset.\n                          </Text>\n                        </Flex>\n                      </DashboardCard>\n                    )\n                  : (\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        my:3\n                      }}\n                    >\n                      {\n                        this.state.processing.claim.loading ? (\n                          <Flex\n                            flexDirection={'column'}\n                          >\n                            <TxProgressBar {...this.props} waitText={`Claim estimated in`} endMessage={`Finalizing approve request...`} hash={this.state.processing.claim.txHash} />\n                          </Flex>\n                        ) : this.state.claimSucceeded ? (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              name={'DoneAll'}\n                              color={this.props.theme.colors.transactions.status.completed}\n                            />\n                            <Text\n                              mt={2}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              You have successfully withdrawn your {this.state.selectedToken} V4!\n                            </Text>\n                            <Link\n                              mt={2}\n                              textAlign={'center'}\n                              hoverColor={'primary'}\n                              onClick={ e => this.props.goToSection(this.state.selectedTokenConfig.strategy+'/'+this.state.selectedTokenConfig.baseToken) }\n                            >\n                              Go to the Dashboard\n                            </Link>\n                          </Flex>\n                        ) : this.state.batchCompleted ? (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              color={'cellText'}\n                              name={'FileUpload'}\n                            />\n                            <Text\n                              mt={1}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              The batch has been migrated!<br />You can now claim your {this.state.tokenConfig.idle.token} V4.\n                            </Text>\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'space-between'}\n                            >\n                              <RoundButton\n                                buttonProps={{\n                                  mt:3,\n                                  width:[1,0.5],\n                                  mainColor:this.props.theme.colors.redeem\n                                }}\n                                handleClick={ e => this.claim() }\n                              >\n                                Claim\n                              </RoundButton>\n                            </Flex>\n                          </Flex>\n                        ) : (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              color={'cellText'}\n                              name={'HourglassEmpty'}\n                            />\n                            <Text\n                              mt={2}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              <Text.span\n                                color={'cellText'}\n                              >\n                                You have successfully deposited {batchDeposit.toFixed(4)} {this.state.selectedTokenConfig.token}, please wait until the batch is migrated to claim your V4 tokens.\n                                {\n                                  typeof this.state.batchTotals[batchId] !== 'undefined' && \n                                  <Text.span\n                                    color={'cellText'}\n                                  >\n                                    <br />Batch pool: {this.state.batchTotals[batchId].toFixed(4)} {this.state.selectedTokenConfig.token}\n                                  </Text.span>\n                                }\n                              </Text.span>\n                            </Text>\n                          </Flex>\n                        )\n                      }\n                    </DashboardCard>\n                  )\n                }\n              </Box>\n            ) : null\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default BatchMigration;","import ExtLink from '../ExtLink/ExtLink';\nimport React, { Component } from 'react';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\nimport CardIconButton from '../CardIconButton/CardIconButton';\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\nimport ExecuteTransaction from '../ExecuteTransaction/ExecuteTransaction';\nimport { Flex, Text, Heading, Input, Form, Field, Icon, Link, Loader, Button } from \"rimble-ui\";\n\nclass DeployB2BVesting extends Component {\n\n  state = {\n    actions:[],\n    processing: {\n      txHash:null,\n      loading:false,\n      actionIndex:[]\n    },\n    action:'deploy',\n    validated:false,\n    viewAction:null,\n    editAction:null,\n    newAction:false,\n    maxContracts:10,\n    tokenConfig:null,\n    tokenBalance:null,\n    contractInfo:null,\n    actionValid:false,\n    actionInputs:null,\n    claimedTokens:null,\n    deployedContracts:[],\n    contractDeployed:false,\n    inputs:[\n      {\n        name:'owner',\n        type:'address'\n      },\n      {\n        name:'recipient',\n        type:'address'\n      },\n      {\n        name:'vestingPeriod',\n        type:'uint256'\n      }\n    ]\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  setAction(action){\n    this.setState({\n      action,\n      editAction:null,\n      viewAction:null,\n      claimedTokens:null,\n      contractDeployed:null\n    });\n  }\n\n  async cancelTransaction(){\n    this.setState({\n      processing: {\n        txHash:null,\n        loading:false,\n        actionIndex:[]\n      }\n    });\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadContracts();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n    this.validateForm();\n    this.checkInputs();\n\n    const contractDeployed = prevState.contractDeployed !== this.state.contractDeployed && this.state.contractDeployed;\n    if (contractDeployed){\n      this.loadContracts();\n    }\n  }\n\n  async loadContracts(){\n    const tokenConfig = this.functionsUtil.getGlobalConfig(['govTokens','IDLE']);\n    const vesterImplementation = this.props.toolProps.contracts.vesterImplementation;\n    const fromBlock = this.functionsUtil.getGlobalConfig(['network','firstBlockNumber']);\n    const proxyCreated = await this.functionsUtil.getContractPastEvents('ProxyFactory', 'ProxyCreated', {fromBlock, toBlock: 'latest'});\n    const deployedContractsAddresses = proxyCreated.filter( p => p.returnValues.implementation.toLowerCase() === vesterImplementation.address.toLowerCase() ).map( p => p.returnValues.proxy );\n    // console.log('proxyCreated',proxyCreated,'deployedContractsAddresses',deployedContractsAddresses);\n\n    const deployedContracts = [];\n    await this.functionsUtil.asyncForEach(deployedContractsAddresses, async (contractAddress) => {\n      const contractName = `b2bVesting_${contractAddress}`;\n      await this.props.initContract(contractName,contractAddress,vesterImplementation.abi);\n      const [\n        // initialized,\n        owner,\n        recipient,\n        vestingPeriod,\n        availableBalance,\n        depositAmounts,\n      ] = await Promise.all([\n          // this.functionsUtil.genericContractCall(contractName,'initialized'),\n          this.functionsUtil.genericContractCall(contractName,'owner'),\n          this.functionsUtil.genericContractCall(contractName,'recipient'),\n          this.functionsUtil.genericContractCall(contractName,'vestingPeriod'),\n          this.functionsUtil.getTokenBalance(tokenConfig.token,contractAddress),\n          this.functionsUtil.genericContractCall(contractName,'getDepositAmounts')\n      ]);\n\n      let totalDeposited = this.functionsUtil.BNify(0);\n      if (depositAmounts) {\n        totalDeposited = depositAmounts.reduce( (total,amount) => {\n          total = total.plus(amount);\n          return total;\n        },this.functionsUtil.BNify(0));\n\n        totalDeposited = this.functionsUtil.fixTokenDecimals(totalDeposited,tokenConfig.decimals);\n      }\n\n      // console.log(contractName,initialized,owner,recipient,vestingPeriod,depositAmounts,parseFloat(totalDeposited));\n\n      deployedContracts.push({\n        owner,\n        recipient,\n        contractName,\n        vestingPeriod,\n        totalDeposited,\n        contractAddress,\n        availableBalance\n      });\n    });\n    const tokenBalance = await this.functionsUtil.getTokenBalance('IDLE',this.props.account);\n\n    // console.log(deployedContracts);\n\n    this.setState({\n      tokenConfig,\n      tokenBalance,\n      deployedContracts\n    });\n  }\n\n  validateForm(){\n    const validated = Object.values(this.state.actions).length>0;\n    if (validated !== this.state.validated){\n      this.setState({\n        validated\n      });\n    }\n  }\n\n  getTransactionParams(amount){\n    const params = {\n      value:null,\n      methodName:'deposit',\n      methodParams:[amount]\n    };\n    return params;\n  }\n\n  claimCallback(tx){\n    // console.log('claimCallback',tx);\n    if (tx.status === 'success'){\n      this.loadContracts();\n\n      const claimedTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.state.tokenConfig.address.toLowerCase() ) : null;\n      if (claimedTokensLog){\n        const claimedTokens = this.functionsUtil.fixTokenDecimals(parseInt(claimedTokensLog.data,16),this.state.tokenConfig.decimals);\n        this.setState({\n          claimedTokens\n        });\n      }\n    }\n  }\n\n  depositCallback(tx,amount,params){\n    // console.log('depositCallback',tx,amount,params);\n    if (tx.status === 'success'){\n      this.loadContracts();\n    }\n  }\n\n  getPatternByFieldType(type,returnString=false){\n    let fieldPattern = null;\n    switch (type){\n      case 'address':\n        fieldPattern = '^0x[a-fA-F0-9]{40}$';\n      break;\n      case 'address[]':\n        fieldPattern = '^((0x[a-fA-F0-9]{40})[,]?)+$';\n      break;\n      case 'string':\n        fieldPattern = '[\\\\w]+';\n      break;\n      case 'bool':\n        fieldPattern = '(0|1)';\n      break;\n      case 'uint256':\n      case 'uint8':\n        fieldPattern = '[\\\\d]+';\n      break;\n      default:\n        fieldPattern = null;\n      break;\n    }\n\n    if (!returnString && fieldPattern){\n      fieldPattern = new RegExp(fieldPattern);\n    }\n\n    return fieldPattern;\n  }\n\n  checkInputs(){\n\n    if (!this.state.actionInputs){\n      return false;\n    }\n\n    const inputs = this.state.inputs;\n    let actionValid = Object.values(this.state.actionInputs).length === inputs.length;\n\n    if (actionValid){\n      Object.values(this.state.actionInputs).forEach( (inputValue,inputIndex) => {\n        const inputInfo = inputs[inputIndex];\n        const fieldPattern = this.getPatternByFieldType(inputInfo.type);\n        const inputValid = fieldPattern ? inputValue.match(fieldPattern) !== null : true;\n        actionValid = actionValid && inputValid;\n        // console.log('checkInputs',inputInfo.name,inputInfo.type,inputValue,inputValid,actionValid);\n      });\n    }\n\n    if (actionValid !== this.state.actionValid){\n      this.setState({\n        actionValid\n      });\n    }\n  }\n\n  valueChange(e,inputIndex){\n    let actionValue = e.target.value;\n    this.setState({\n      actionValue\n    });\n  }\n\n  inputChange(e,inputIndex){\n    let inputValue = e.target.value;\n\n    this.setState((prevState) => ({\n      actionInputs:{\n        ...prevState.actionInputs,\n        [inputIndex]:inputValue\n      }\n    }));\n  }\n\n  deleteAction(){\n    if (this.state.editAction !== null){\n      let actions = this.state.actions;\n      if (actions[this.state.editAction]){\n        delete actions[this.state.editAction];\n        actions = Object.values(actions);\n        const editAction = null;\n        const actionInputs = null;\n\n        this.setState({\n          actions,\n          editAction,\n          actionInputs\n        });\n      }\n    }\n  }\n\n  addAction(){\n\n    // Check inputs number\n    const inputs = Object\n                    .values(this.state.actionInputs).filter( v => v.length>0 )\n                    .map( (inputValue,inputIndex) => {\n                      const inputInfo = this.state.inputs[inputIndex];\n                      switch (inputInfo.type){\n                        case 'address[]':\n                          inputValue = inputValue.split(',');\n                        break;\n                        case 'uint256[]':\n                          inputValue = inputValue.split(',').map( n => this.functionsUtil.toBN(n) );\n                        break;\n                        case 'uint256':\n                          inputValue = this.functionsUtil.toBN(inputValue);\n                        break;\n                        default:\n                          if (inputInfo.type.substr(-2) === '[]'){\n                            inputValue = inputValue.split(',');\n                          }\n                        break;\n                      }\n\n                      return inputValue;\n                    });\n\n    if (inputs.length<this.state.inputs.length){\n      return false;\n    }\n\n    const action = {\n      txError:null,\n      contractAddress:null,\n      inputs:this.state.actionInputs,\n    };\n\n    const newAction = false;\n    const actions = Object.values(this.state.actions);\n\n    if (this.state.editAction === null){\n      actions.push(action);\n    } else {\n      actions[this.state.editAction] = action;\n    }\n\n    const editAction = null;\n    const actionInputs = null;\n\n    this.setState({\n      actions,\n      newAction,\n      editAction,\n      actionInputs\n    });\n  }\n\n  setEditAction(editAction){\n\n    if (!this.state.actions[editAction]){\n      return false;\n    }\n\n    if (editAction === this.state.editAction){\n      return false;\n    }\n\n    const action = this.state.actions[editAction];\n\n    const newAction = false;\n    const actionInputs = action.inputs;\n\n    this.setState({\n      newAction,\n      editAction,\n      actionInputs\n    });\n  }\n\n  setViewAction(viewAction){\n\n    if (viewAction !== this.state.viewAction){\n      const vesterImplementation = this.props.toolProps.contracts.vesterImplementation;\n      const deployedContract = this.state.deployedContracts[viewAction];\n      const contractInfo = {\n        abi:vesterImplementation.abi,\n        name:deployedContract.contractName,\n        address:deployedContract.contractAddress\n      };\n      this.setState({\n        viewAction,\n        contractInfo,\n        claimedTokens:null\n      });\n    }\n  }\n\n  setNewAction(newAction){\n    if (newAction === this.state.newAction){\n      return false;\n    }\n\n    const editAction = null;\n\n    this.setState({\n      newAction,\n      editAction,\n    });\n  }\n\n  async handleSubmit(e){\n    e.preventDefault();\n\n    const vesterImplementation = this.props.toolProps.contracts.vesterImplementation;\n    const idleAddress = this.functionsUtil.getGlobalConfig(['govTokens','IDLE','address']);\n\n    const callback = (tx,error,actionIndex) => {\n      const txSucceeded = tx.status === 'success';\n      const actions = Object.values(this.state.actions);\n      const isLastAction = parseInt(actionIndex)===parseInt(this.state.actions.length)-1;\n      const contractDeployed = txSucceeded && isLastAction;\n      // console.log('callback_1 -',actionIndex,txSucceeded,contractDeployed,tx);\n      if (txSucceeded){\n        const clonedVesterAddress = tx.txReceipt.events && tx.txReceipt.events.ProxyCreated ? tx.txReceipt.events.ProxyCreated.returnValues[1] : `0x${tx.txReceipt.logs[0].data.substr(-40)}`;\n        actions[actionIndex].contractAddress = clonedVesterAddress;\n        // console.log('callback_2 -',actionIndex,actions[actionIndex].contractAddress);\n      } else {\n        actions[actionIndex].txError = true;\n      }\n\n      // console.log('callback_3 -',actionIndex,actions);\n\n      this.setState({\n        actions,\n        contractDeployed\n      },()=>{\n        if (isLastAction){\n          this.cancelTransaction();\n        }\n      });\n    };\n\n    const callbackReceipt = (tx,actionIndex) => {\n      const txHash = tx.transactionHash;\n      // console.log('callbackReceipt',actionIndex,tx);\n      const processing = Object.assign({},this.state.processing);\n      processing.txHash = txHash;\n      processing.actionIndex.push(actionIndex);\n      this.setState({\n        processing\n      });\n    };\n\n    this.state.actions.forEach((action,actionIndex) => {\n      const ownerAddress = action.inputs[0];\n      const recipientAddress = action.inputs[1];\n      const vestingPeriod = action.inputs[2];\n      const initSig = \"initialize(address,address,address,uint256)\";\n      const initData = this.props.web3.eth.abi.encodeParameters(\n        ['address','address','address','uint256'],\n        [ownerAddress,idleAddress,recipientAddress,vestingPeriod]\n      );\n      const methodParams = [vesterImplementation.address,initSig,initData];\n      this.functionsUtil.contractMethodSendWrapper('ProxyFactory', 'createAndCall', methodParams, (tx,error) => callback(tx,error,actionIndex), (tx) => callbackReceipt(tx,actionIndex) );\n    });\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        loading:true\n      }\n    }));\n\n    return false;\n  }\n\n  render() {\n\n    const depositContracts = this.props.account ? this.state.deployedContracts.filter( c => c.owner.toLowerCase() === this.props.account.toLowerCase() ) : [];\n    const claimContracts = this.props.account ? this.state.deployedContracts.filter( c => c.recipient.toLowerCase() === this.props.account.toLowerCase() ) : [];\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          width={[1,0.42]}\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Flex\n            width={1}\n            flexDirection={'column'}\n          >\n            <Text\n              mb={2}\n            >\n              Choose the action:\n            </Text>\n            <Flex\n              alignItems={'center'}\n              flexDirection={'row'}\n              justifyContent={'space-between'}\n            >\n              <CardIconButton\n                {...this.props}\n                cardProps={{\n                  px:3,\n                  py:3,\n                  width:0.32\n                }}\n                text={'Deploy'}\n                icon={'CloudUpload'}\n                iconColor={'deposit'}\n                iconBgColor={'#ced6ff'}\n                isActive={ this.state.action === 'deploy' }\n                handleClick={ e => this.setAction('deploy') }\n              />\n              <CardIconButton\n                {...this.props}\n                cardProps={{\n                  px:3,\n                  py:3,\n                  width:0.32\n                }}\n                text={'Deposit'}\n                iconColor={'deposit'}\n                icon={'ArrowDownward'}\n                iconBgColor={'#ced6ff'}\n                isActive={ this.state.action === 'deposit' }\n                handleClick={ e => this.setAction('deposit') }\n              />\n              <CardIconButton\n                {...this.props}\n                cardProps={{\n                  px:3,\n                  py:3,\n                  width:0.32\n                }}\n                text={'Claim'}\n                iconColor={'redeem'}\n                icon={'ArrowUpward'}\n                iconBgColor={'#ceeff6'}\n                isActive={ this.state.action === 'claim' }\n                handleClick={ e => this.setAction('claim') }\n              />\n            </Flex>\n          </Flex>\n          <Flex\n            pb={2}\n            width={1}\n            my={[2,3]}\n            borderColor={'divider'}\n            borderBottom={'1px solid transparent'}\n          >\n            <Heading.h4\n              fontSize={[2,3]}\n              fontWeight={[2,3]}\n              style={{\n                textTransform:'capitalize'\n              }}\n            >\n              {this.state.action}\n            </Heading.h4>\n          </Flex>\n          <Flex\n            flexDirection={'column'}\n          >\n            {\n              this.state.action === 'deploy' ? (\n                <Form\n                  width={1}\n                  validated={this.state.validated}\n                  onSubmit={this.handleSubmit.bind(this)}\n                >\n                  {\n                    Object.values(this.state.actions).map( (action,actionIndex) => {\n                      return (\n                        <DashboardCard\n                          cardProps={{\n                            py:2,\n                            px:3,\n                            mb:3,\n                            width:1\n                          }}\n                          titleParentProps={{\n                            ml:0,\n                            my:1,\n                            justifyContent:'center'\n                          }}\n                          titleProps={{\n                            fontSize:2,\n                            fontWeight:3\n                          }}\n                          isInteractive={true}\n                          key={`action_${actionIndex}`}\n                          title={ this.state.editAction === actionIndex ? 'Edit Contract' : null }\n                          handleClick={ e => /*action.contractAddress ? this.functionsUtil.openWindow(this.functionsUtil.getEtherscanAddressUrl(action.contractAddress)) : */this.setEditAction(actionIndex) }\n                        >\n                          {\n                            this.state.editAction === actionIndex ? (\n                              <Flex\n                                width={1}\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                                justifyContent={'center'}\n                              >\n                                {\n                                  this.state.inputs.map( (input,inputIndex) => {\n                                    const fieldType = ['uint256','bool'].includes(input.type) ? 'number' : 'text';\n                                    const fieldPattern = this.getPatternByFieldType(input.type,true);\n                                    return (\n                                      <Field\n                                        style={{\n                                          width:'100%',\n                                          display:'flex',\n                                          alignItems:'stretch',\n                                          flexDirection:'column'\n                                        }}\n                                        key={`input_${inputIndex}`}\n                                        label={`${input.name} (${input.type})`}\n                                      >\n                                        <Input\n                                          required\n                                          width={1}\n                                          type={fieldType}\n                                          pattern={fieldPattern}\n                                          borderColor={'cardBorder'}\n                                          backgroundColor={'cardBg'}\n                                          placeholder={`${input.name} (${input.type})`}\n                                          onChange={ e => this.inputChange(e,inputIndex) }\n                                          value={this.state.actionInputs && this.state.actionInputs[inputIndex] ? this.state.actionInputs[inputIndex] : ''}\n                                        />\n                                      </Field>\n                                    )\n                                  })\n                                }\n                                <Flex\n                                  mb={2}\n                                  width={1}\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                  justifyContent={'center'}\n                                >\n                                  {\n                                    action.contractAddress ? (\n                                      <ExtLink\n                                        fontSize={1}\n                                        color={this.props.theme.colors.transactions.status.completed}\n                                        hoverColor={this.props.theme.colors.transactions.status.completed}\n                                        href={this.functionsUtil.getEtherscanAddressUrl(action.contractAddress)}\n                                      >\n                                        Deployed at {action.contractAddress}\n                                      </ExtLink>\n                                    ) : !this.state.processing.loading && (\n                                      <Flex\n                                        width={1}\n                                        alignItems={'center'}\n                                        flexDirection={'column'}\n                                        justifyContent={'center'}\n                                      >\n                                        <RoundButton\n                                          buttonProps={{\n                                            px:[0,4],\n                                            type:'button',\n                                            width:[1,'auto'],\n                                            disabled:!this.state.actionValid\n                                          }}\n                                          handleClick={this.addAction.bind(this)}\n                                        >\n                                          Save Contract\n                                        </RoundButton>\n                                        <Link\n                                          mt={2}\n                                          color={'red'}\n                                          hoverColor={'red'}\n                                          onClick={this.deleteAction.bind(this)}\n                                        >\n                                          Delete Contract\n                                        </Link>\n                                      </Flex>\n                                    )\n                                  }\n                                </Flex>\n                              </Flex>\n                            ) : (\n                              <Flex\n                                width={1}\n                                alignItems={'center'}\n                                flexDirection={'row'}\n                                justifyContent={'space-between'}\n                              >\n                                <Text>\n                                  {this.functionsUtil.shortenHash(action.inputs[0])} - {this.functionsUtil.shortenHash(action.inputs[1])} - {action.inputs[2]} { action.contractAddress ? '- DEPLOYED' : '' }\n                                </Text>\n                                { \n                                  action.contractAddress ? (\n                                    <Flex\n                                      p={'3px'}\n                                      alignItems={'center'}\n                                      justifyContent={'center'}\n                                    >\n                                      <Icon\n                                        name={'Done'}\n                                        align={'center'}\n                                        size={this.props.isMobile ? '1.2em' : '1.8em'}\n                                        color={this.props.theme.colors.transactions.status.completed}\n                                      />\n                                    </Flex>\n                                  ) : this.state.processing.loading && this.state.processing.actionIndex && this.state.processing.actionIndex.includes(parseInt(actionIndex)) ? (\n                                    <Loader size=\"28px\" />\n                                  ) : action.txError ? (\n                                    <Flex\n                                      p={'3px'}\n                                      alignItems={'center'}\n                                      justifyContent={'center'}\n                                    >\n                                      <Icon\n                                        color={'red'}\n                                        name={'Error'}\n                                        align={'center'}\n                                        size={ this.props.isMobile ? '1.2em' : '1.8em' }\n                                      />\n                                    </Flex>\n                                  ) : (\n                                    <Flex\n                                      p={['4px','7px']}\n                                      borderRadius={'50%'}\n                                      alignItems={'center'}\n                                      justifyContent={'center'}\n                                      backgroundColor={ this.props.theme.colors.transactions.actionBg.redeem }\n                                    >\n                                      <Icon\n                                        name={'Edit'}\n                                        align={'center'}\n                                        color={'redeem'}\n                                        size={ this.props.isMobile ? '1.2em' : '1.4em' }\n                                      />\n                                    </Flex>\n                                  )\n                                }\n                              </Flex>\n                            )\n                          }\n                        </DashboardCard>\n                      );\n                    })\n                  }\n                  {\n                    (!this.state.contractDeployed && !this.state.processing.loading && (!this.state.actions || Object.values(this.state.actions).length<this.state.maxContracts)) && (\n                      <DashboardCard\n                        cardProps={{\n                          py:2,\n                          px:3,\n                          mb:3,\n                          width:1\n                        }}\n                        titleParentProps={{\n                          ml:0,\n                          my:1,\n                          justifyContent:'center'\n                        }}\n                        titleProps={{\n                          fontSize:2,\n                          fontWeight:3\n                        }}\n                        isInteractive={true}\n                        handleClick={ e => this.setNewAction(true) }\n                        title={ this.state.newAction ? 'Add Contract' : null }\n                      >\n                        {\n                          this.state.newAction ? (\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'center'}\n                            >\n                              {\n                                this.state.inputs.map( (input,inputIndex) => {\n                                  const fieldType = ['uint256','bool'].includes(input.type) ? 'number' : 'text';\n                                  const fieldPattern = this.getPatternByFieldType(input.type,true);\n                                  return (\n                                    <Field\n                                      style={{\n                                        width:'100%',\n                                        display:'flex',\n                                        alignItems:'stretch',\n                                        flexDirection:'column'\n                                      }}\n                                      key={`input_${inputIndex}`}\n                                      label={`${input.name} (${input.type})`}\n                                    >\n                                      <Input\n                                        required\n                                        width={1}\n                                        type={fieldType}\n                                        pattern={fieldPattern}\n                                        borderColor={'cardBorder'}\n                                        backgroundColor={'cardBg'}\n                                        placeholder={`${input.name} (${input.type})`}\n                                        onChange={ e => this.inputChange(e,inputIndex) }\n                                        value={this.state.actionInputs && this.state.actionInputs[inputIndex] ? this.state.actionInputs[inputIndex] : ''}\n                                      />\n                                    </Field>\n                                  )\n                                })\n                              }\n                              <Flex\n                                width={1}\n                                alignItems={'center'}\n                                justifyContent={'center'}\n                              >\n                                <RoundButton\n                                  buttonProps={{\n                                    px:[0,4],\n                                    type:'button',\n                                    width:[1,'auto'],\n                                    disabled:!this.state.actionValid\n                                  }}\n                                  handleClick={this.addAction.bind(this)}\n                                >\n                                  Add Contract\n                                </RoundButton>\n                              </Flex>\n                            </Flex>\n                          ) : (\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'space-between'}\n                            >\n                              <Text>\n                                Add Contract\n                              </Text>\n                              <Flex\n                                p={['4px','7px']}\n                                borderRadius={'50%'}\n                                alignItems={'center'}\n                                justifyContent={'center'}\n                                backgroundColor={ this.props.theme.colors.transactions.actionBg.redeem }\n                              >\n                                <Icon\n                                  name={'Add'}\n                                  align={'center'}\n                                  color={'redeem'}\n                                  size={ this.props.isMobile ? '1.2em' : '1.4em' }\n                                />\n                              </Flex>\n                            </Flex>\n                          )\n                        }\n                      </DashboardCard>\n                    )\n                  }\n                  <Flex\n                    mb={3}\n                    width={1}\n                    alignItems={'center'}\n                    justifyContent={'center'}\n                  >\n                    {\n                      this.state.contractDeployed ? (\n                        <DashboardCard\n                          cardProps={{\n                            py:3,\n                            px:4,\n                            width:[1,'100%']\n                          }}\n                        >\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            <Icon\n                              name={'DoneAll'}\n                              align={'center'}\n                              size={ this.props.isMobile ? '1.4em' : '2.2em' }\n                              color={this.props.theme.colors.transactions.status.completed}\n                            />\n                            <Text\n                              mt={1}\n                              fontWeight={3}\n                              fontSize={[2,3]}\n                              color={'dark-gray'}\n                              textAlign={'center'}\n                            >\n                              B2B Vesting contracts have been deployed\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                      ) : this.state.processing && this.state.processing.loading ? (\n                        <TxProgressBar\n                          {...this.props}\n                          hash={this.state.processing.txHash}\n                          waitText={`Deployment estimated in`}\n                          endMessage={`Finalizing deployment request...`}\n                          cancelTransaction={this.cancelTransaction.bind(this)}\n                        />\n                      ) : (\n                        <RoundButton\n                          buttonProps={{\n                            type:'submit',\n                            width:[1,'15em'],\n                            disabled:!this.state.validated\n                          }}\n                        >\n                          Deploy Contracts\n                        </RoundButton>\n                      )\n                    }\n                  </Flex>\n                </Form>\n              ) : this.state.action === 'deposit' ?\n                depositContracts.length>0 ?\n                  depositContracts.map( (contractInfo,actionIndex) => {\n                    return (\n                      <DashboardCard\n                        cardProps={{\n                          py:2,\n                          px:3,\n                          mb:3,\n                          width:1\n                        }}\n                        titleParentProps={{\n                          ml:0,\n                          my:1,\n                          justifyContent:'center'\n                        }}\n                        titleProps={{\n                          fontSize:2,\n                          fontWeight:3\n                        }}\n                        isInteractive={true}\n                        key={`action_${actionIndex}`}\n                        handleClick={ e => this.setViewAction(actionIndex) }\n                        title={ this.state.viewAction === actionIndex ? 'View Contract' : null }\n                      >\n                        {\n                          this.state.viewAction === actionIndex ? (\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'center'}\n                            >\n                              <Field\n                                style={{\n                                  width:'100%',\n                                  display:'flex',\n                                  alignItems:'stretch',\n                                  flexDirection:'column'\n                                }}\n                                label={`Contract Address`}\n                              >\n                                <Input\n                                  required\n                                  readOnly\n                                  width={1}\n                                  type={'address'}\n                                  borderColor={'cardBorder'}\n                                  backgroundColor={'cardBg'}\n                                  value={contractInfo.contractAddress}\n                                />\n                              </Field>\n                              {\n                                this.state.inputs.map( (input,inputIndex) => {\n                                  const fieldType = ['uint256','bool'].includes(input.type) ? 'number' : 'text';\n                                  return (\n                                    <Field\n                                      style={{\n                                        width:'100%',\n                                        display:'flex',\n                                        alignItems:'stretch',\n                                        flexDirection:'column'\n                                      }}\n                                      key={`input_${inputIndex}`}\n                                      label={`${input.name} (${input.type})`}\n                                    >\n                                      <Input\n                                        required\n                                        readOnly\n                                        width={1}\n                                        type={fieldType}\n                                        borderColor={'cardBorder'}\n                                        backgroundColor={'cardBg'}\n                                        value={contractInfo[input.name]}\n                                      />\n                                    </Field>\n                                  )\n                                })\n                              }\n                              <Field\n                                style={{\n                                  width:'100%',\n                                  display:'flex',\n                                  alignItems:'stretch',\n                                  flexDirection:'column'\n                                }}\n                                label={`Total Deposited`}\n                              >\n                                <Input\n                                  required\n                                  readOnly\n                                  width={1}\n                                  type={'address'}\n                                  borderColor={'cardBorder'}\n                                  backgroundColor={'cardBg'}\n                                  value={contractInfo.totalDeposited.toFixed(6)}\n                                />\n                              </Field>\n                              <Field\n                                style={{\n                                  width:'100%',\n                                  display:'flex',\n                                  alignItems:'stretch',\n                                  flexDirection:'column'\n                                }}\n                                label={`Available Balance`}\n                              >\n                                <Input\n                                  required\n                                  readOnly\n                                  width={1}\n                                  type={'address'}\n                                  borderColor={'cardBorder'}\n                                  backgroundColor={'cardBg'}\n                                  value={contractInfo.availableBalance.toFixed(6)}\n                                />\n                              </Field>\n                              <Flex\n                                mb={2}\n                                width={1}\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                                justifyContent={'center'}\n                                borderTop={'1px solid transparent'}\n                              >\n                                <Flex\n                                  width={1}\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                  justifyContent={'center'}\n                                >\n                                  <SendTxWithBalance\n                                    {...this.props}\n                                    action={this.state.action}\n                                    tokenConfig={this.state.tokenConfig}\n                                    tokenBalance={this.state.tokenBalance}\n                                    contractInfo={this.state.contractInfo}\n                                    callback={this.depositCallback.bind(this)}\n                                    getTransactionParams={this.getTransactionParams.bind(this)}\n                                    approveDescription={'You need to approve the Smart-Contract first'}\n                                  >\n                                    <DashboardCard\n                                      cardProps={{\n                                        p:3,\n                                      }}\n                                    >\n                                      <Flex\n                                        alignItems={'center'}\n                                        flexDirection={'column'}\n                                      >\n                                        <Icon\n                                          size={'2.3em'}\n                                          name={'MoneyOff'}\n                                          color={'cellText'}\n                                        />\n                                        <Text\n                                          mt={2}\n                                          fontSize={2}\n                                          color={'cellText'}\n                                          textAlign={'center'}\n                                        >\n                                          You don't have any $IDLE in your wallet.\n                                        </Text>\n                                      </Flex>\n                                    </DashboardCard>\n                                  </SendTxWithBalance>\n                                </Flex>\n                              </Flex>\n                            </Flex>\n                          ) : (\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'space-between'}\n                            >\n                              <Text>\n                                {this.functionsUtil.shortenHash(contractInfo.owner)} - {this.functionsUtil.shortenHash(contractInfo.recipient)} - {contractInfo.vestingPeriod} \n                              </Text>\n                              <Flex\n                                p={['4px','7px']}\n                                borderRadius={'50%'}\n                                alignItems={'center'}\n                                justifyContent={'center'}\n                                backgroundColor={ this.props.theme.colors.transactions.actionBg.redeem }\n                              >\n                                <Icon\n                                  name={'ZoomIn'}\n                                  align={'center'}\n                                  color={'redeem'}\n                                  size={ this.props.isMobile ? '1.2em' : '1.4em' }\n                                />\n                              </Flex>\n                            </Flex>\n                          )\n                        }\n                      </DashboardCard>\n                    );\n                  })\n                : (\n                  <Text\n                    textAlign={'center'}\n                  >\n                    You can't deposit in any contract yet.\n                  </Text>\n                )\n              : this.state.action === 'claim' &&\n                claimContracts.length>0 ?\n                  claimContracts.map( (contractInfo,actionIndex) => {\n                    return (\n                      <DashboardCard\n                        cardProps={{\n                          py:2,\n                          px:3,\n                          mb:3,\n                          width:1\n                        }}\n                        titleParentProps={{\n                          ml:0,\n                          my:1,\n                          justifyContent:'center'\n                        }}\n                        titleProps={{\n                          fontSize:2,\n                          fontWeight:3\n                        }}\n                        isInteractive={true}\n                        key={`action_${actionIndex}`}\n                        handleClick={ e => this.setViewAction(actionIndex) }\n                        title={ this.state.viewAction === actionIndex ? 'View Contract' : null }\n                      >\n                        {\n                          this.state.viewAction === actionIndex ? (\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'center'}\n                            >\n                              <Field\n                                style={{\n                                  width:'100%',\n                                  display:'flex',\n                                  alignItems:'stretch',\n                                  flexDirection:'column'\n                                }}\n                                label={`Contract Address`}\n                              >\n                                <Input\n                                  required\n                                  readOnly\n                                  width={1}\n                                  type={'address'}\n                                  borderColor={'cardBorder'}\n                                  backgroundColor={'cardBg'}\n                                  value={contractInfo.contractAddress}\n                                />\n                              </Field>\n                              {\n                                this.state.inputs.map( (input,inputIndex) => {\n                                  const fieldType = ['uint256','bool'].includes(input.type) ? 'number' : 'text';\n                                  return (\n                                    <Field\n                                      style={{\n                                        width:'100%',\n                                        display:'flex',\n                                        alignItems:'stretch',\n                                        flexDirection:'column'\n                                      }}\n                                      key={`input_${inputIndex}`}\n                                      label={`${input.name} (${input.type})`}\n                                    >\n                                      <Input\n                                        required\n                                        readOnly\n                                        width={1}\n                                        type={fieldType}\n                                        borderColor={'cardBorder'}\n                                        backgroundColor={'cardBg'}\n                                        value={contractInfo[input.name]}\n                                      />\n                                    </Field>\n                                  )\n                                })\n                              }\n                              <Field\n                                style={{\n                                  width:'100%',\n                                  display:'flex',\n                                  alignItems:'stretch',\n                                  flexDirection:'column'\n                                }}\n                                label={`Total Deposited`}\n                              >\n                                <Input\n                                  required\n                                  readOnly\n                                  width={1}\n                                  type={'address'}\n                                  borderColor={'cardBorder'}\n                                  backgroundColor={'cardBg'}\n                                  value={contractInfo.totalDeposited.toFixed(6)}\n                                />\n                              </Field>\n                              <Field\n                                style={{\n                                  width:'100%',\n                                  display:'flex',\n                                  alignItems:'stretch',\n                                  flexDirection:'column'\n                                }}\n                                label={`Available Balance`}\n                              >\n                                <Input\n                                  required\n                                  readOnly\n                                  width={1}\n                                  type={'address'}\n                                  borderColor={'cardBorder'}\n                                  backgroundColor={'cardBg'}\n                                  value={contractInfo.availableBalance.toFixed(6)}\n                                />\n                              </Field>\n                              <Flex\n                                mb={2}\n                                width={1}\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                                justifyContent={'center'}\n                                borderTop={'1px solid transparent'}\n                              >\n                                <Flex\n                                  width={1}\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                  justifyContent={'center'}\n                                >\n                                  {\n                                    this.state.claimedTokens && (\n                                      <Text\n                                        mb={2}\n                                        fontSize={2}\n                                        fontWeight={3}\n                                        color={this.props.theme.colors.transactions.status.completed}\n                                      >\n                                        You have successfully claimed {this.state.claimedTokens.toFixed(4)} {this.state.tokenConfig.token}\n                                      </Text>\n                                    )\n                                  }\n                                  {\n                                    contractInfo.availableBalance && contractInfo.availableBalance.gt(0.00000001) ? (\n                                      <ExecuteTransaction\n                                        params={[]}\n                                        {...this.props}\n                                        Component={Button}\n                                        componentProps={{\n                                          size:'medium',\n                                          value:'Claim',\n                                          mainColor:'redeem',\n                                        }}\n                                        methodName={'claim'}\n                                        action={this.state.action}\n                                        callback={this.claimCallback.bind(this)}\n                                        contractName={contractInfo.contractName}\n                                      />\n                                    ) : (\n                                      <Text\n                                        mb={2}\n                                        fontSize={2}\n                                        fontWeight={3}\n                                        color={'cellText'}\n                                      >\n                                        No balance available.\n                                      </Text>\n                                    )\n                                  }\n                                </Flex>\n                              </Flex>\n                            </Flex>\n                          ) : (\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'space-between'}\n                            >\n                              <Text>\n                                {this.functionsUtil.shortenHash(contractInfo.owner)} - {this.functionsUtil.shortenHash(contractInfo.recipient)} - {contractInfo.vestingPeriod} \n                              </Text>\n                              <Flex\n                                p={['4px','7px']}\n                                borderRadius={'50%'}\n                                alignItems={'center'}\n                                justifyContent={'center'}\n                                backgroundColor={ this.props.theme.colors.transactions.actionBg.redeem }\n                              >\n                                <Icon\n                                  name={'ZoomIn'}\n                                  align={'center'}\n                                  color={'redeem'}\n                                  size={ this.props.isMobile ? '1.2em' : '1.4em' }\n                                />\n                              </Flex>\n                            </Flex>\n                          )\n                        }\n                      </DashboardCard>\n                    );\n                  })\n                : (\n                  <Text\n                    textAlign={'center'}\n                  >\n                    You can't claim from any contract yet.\n                  </Text>\n                )\n            }\n          </Flex>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default DeployB2BVesting;\n","import Staking from \"../Staking/Staking\";\nimport IDLE from \"../contracts/IDLE.json\";\nimport WETH from \"../abis/tokens/WETH.json\";\nimport ERC20 from \"../contracts/ERC20.json\";\nimport Tranches from \"../Tranches/Tranches\";\nimport COMP from \"../abis/compound/COMP.json\";\nimport aToken from \"../abis/aave/AToken.json\";\nimport TokenSwap from \"../TokenSwap/TokenSwap\";\nimport yDAIv3 from \"../abis/iearn/yDAIv3.json\";\nimport LpStaking from \"../LpStaking/LpStaking\";\nimport stkIDLE from \"../contracts/stkIDLE.json\";\nimport yUSDCv3 from \"../abis/iearn/yUSDCv3.json\";\nimport yUSDTv3 from \"../abis/iearn/yUSDTv3.json\";\nimport ySUSDv3 from \"../abis/iearn/ySUSDv3.json\";\nimport yTUSDv3 from \"../abis/iearn/yTUSDv3.json\";\nimport Timelock from \"../contracts/Timelock.json\";\nimport CurveZap from \"../abis/curve/CurveZap.json\";\nimport CovToken from \"../abis/cover/CovToken.json\";\nimport B2BVester from \"../contracts/B2BVester.json\";\nimport IdleStaking from \"../IdleStaking/IdleStaking\";\n// import CurveSwap from '../abis/curve/CurveSwap.json';\nimport CurvePool from \"../abis/curve/CurvePool.json\";\nimport NexusMutual from \"../NexusMutual/NexusMutual\";\nimport CoverMint from \"../abis/cover/CoverMint.json\";\nimport LockedIDLE from \"../contracts/LockedIDLE.json\";\nimport LpStakingAbi from \"../contracts/LpStaking.json\";\nimport FunctionsUtil from \"../utilities/FunctionsUtil\";\nimport TokenWrapper from \"../TokenWrapper/TokenWrapper\";\nimport PriceOracle from \"../contracts/PriceOracle.json\";\nimport FeeTreasury from \"../contracts/FeeTreasury.json\";\nimport IdleTokenV2 from \"../contracts/IdleTokenV2.json\";\nimport StrategyPage from \"../StrategyPage/StrategyPage\";\nimport BuyModal from \"../utilities/components/BuyModal\";\nimport IdleTokenV3 from \"../contracts/IdleTokenV3.json\";\nimport IdleTokenV4 from \"../contracts/IdleTokenV4.json\";\nimport BatchDeposit from \"../BatchDeposit/BatchDeposit\";\nimport EarlyRewards from \"../contracts/EarlyRewards.json\";\nimport CoverProtocol from \"../CoverProtocol/CoverProtocol\";\nimport CurveDeposit from \"../abis/curve/CurveDeposit.json\";\nimport VesterFactory from \"../contracts/VesterFactory.json\";\nimport GovernorAlpha from \"../contracts/GovernorAlpha.json\";\nimport EcosystemFund from \"../contracts/EcosystemFund.json\";\nimport Comptroller from \"../abis/compound/Comptroller.json\";\nimport erc20Forwarder from \"../contracts/erc20Forwarder.json\";\nimport BalancerPool from \"../abis/balancer/BalancerPool.json\";\nimport IdleController from \"../contracts/IdleController.json\";\nimport TokenMigration from \"../TokenMigration/TokenMigration\";\nimport BatchMigration from \"../BatchMigration/BatchMigration\";\nimport IdleBatchedMint from \"../contracts/IdleBatchedMint.json\";\nimport { RampInstantSDK } from \"@ramp-network/ramp-instant-sdk\";\nimport IdleProxyMinter from \"../contracts/IdleProxyMinter.json\";\nimport IdleRebalancerV3 from \"../contracts/IdleRebalancerV3.json\";\nimport LiquidityGaugeV2 from \"../abis/curve/LiquidityGaugeV2.json\";\nimport DeployB2BVesting from \"../DeployB2BVesting/DeployB2BVesting\";\nimport SushiV2Router02 from \"../abis/sushiswap/SushiV2Router02.json\";\nimport IdleBatchConverter from \"../contracts/IdleBatchConverter.json\";\nimport UniswapV2Router02 from \"../abis/uniswap/UniswapV2Router02.json\";\nimport IdleDepositForwarder from \"../contracts/IdleDepositForwarder.json\";\nimport SushiLiquidityPool from \"../abis/sushiswap/SushiLiquidityPool.json\";\nimport NexusMutualIncidents from \"../abis/nexus/NexusMutualIncidents.json\";\nimport StakingFeeDistributor from \"../contracts/StakingFeeDistributor.json\";\nimport NexusMutualDistributor from \"../abis/nexus/NexusMutualDistributor.json\";\nimport BalancerExchangeProxy from \"../abis/balancer/BalancerExchangeProxy.json\";\nimport IdleConverterPersonalSignV4 from \"../contracts/IdleConverterPersonalSignV4.json\";\nimport MinimalInitializableProxyFactory from \"../contracts/MinimalInitializableProxyFactory.json\";\n\nconst env = process.env;\n\nconst globalConfigs = {\n  appName: 'Idle',\n  version: 'v6.0',\n  baseToken: 'ETH',\n  baseURL: 'https://idle.finance',\n  forumURL:'https://gov.idle.finance',\n  theme:{\n    darkModeEnabled:true\n  },\n  betaURL: \"https://beta.idle.finance\",\n  countries: {\n    USA: \"United States of America\",\n    GBR: \"United Kingdom\",\n    AUS: \"Australia\",\n    BRA: \"Brazil\",\n    CHN: \"China\",\n    CAN: \"Canada\",\n    EUR: \"Europe\",\n    HKG: \"Hong Kong\",\n    IND: \"India\",\n    MEX: \"Mexico\",\n    RUS: \"Russia\",\n    ZAF: \"South Africa\",\n    KOR: \"South Korea\"\n  },\n  logs: {\n    // Enable logs levels\n    errorsEnabled: false,\n    messagesEnabled: false\n  },\n  connectors: {\n    // Connectors props\n    metamask: {\n      enabled: true,\n      subcaption: \"Browser extension\"\n    },\n    opera: {\n      enabled: true,\n      subcaption: \"Opera injected wallet\"\n    },\n    dapper: {\n      enabled: true,\n      icon: \"dapper.png\",\n      subcaption: \"Browser extension\"\n    },\n    coinbase: {\n      enabled: true,\n      icon: \"coinbase.png\",\n      subcaption: \"Connect with Coinbase wallet\"\n    },\n    trustwallet: {\n      enabled: true,\n      subcaption: \"Connect with Trust Wallet\"\n    },\n    walletconnect: {\n      enabled: true,\n      iconModal: \"walletconnect.png\",\n      subcaption: \"Connect with QR code\"\n    },\n    walletlink: {\n      enabled: true,\n      icon: \"coinbase.png\",\n      name: \"Coinbase Wallet\",\n      subcaption: \"Connect with QR code\"\n    },\n    gnosis: {\n      enabled: true,\n      // icon:'coinbase.png',\n      name: \"Gnosis Safe App\",\n      subcaption: \"Connect with Gnosis Safe App\"\n    },\n    fortmatic: {\n      enabled: true,\n      subcaption: \"Login with phone-number\"\n    },\n    portis: {\n      enabled: true,\n      subcaption: \"Login with e-mail\"\n    },\n    authereum: {\n      enabled: true,\n      subcaption: \"Cross-device wallet\"\n    },\n    torus: {\n      enabled: true,\n      icon: \"torus.png\",\n      subcaption: \"One-Click login for Web 3.0\"\n    },\n    trezor: {\n      enabled: true,\n      subcaption: \"Hardware wallet\"\n    },\n    ledger: {\n      enabled: true,\n      subcaption: \"Hardware wallet\"\n    },\n    ledgerlive: {\n      enabled: true,\n      subcaption: \"Ledger Live Browser\"\n    },\n    custom: {\n      enabled: true,\n      subcaption: \"Custom address\"\n    }\n  },\n  newsletterSubscription: {\n    endpoint: \"https://dev.lapisgroup.it/idle/newsletter.php\"\n  },\n  messages: {\n    scoreShort: \"Protocol Risk Score\",\n    apyShort: \"Annual Percentage Yield\",\n    tokenPrice: \"The token price is calculated using Uniswap spot prices.\",\n    cheapRedeem: \"Amount of unlent funds available for low gas fees redeem\",\n    curveBonusSlippage:\n      \"Slippage or bonus depending on if the coin is low or high in the Curve Pool\",\n    distributionSpeed:\n      \"The distribution indicates the amount of tokens distributed for the entire pool.\",\n    directMint:\n      \"Pay an additional gas fee to rebalance the pool and help all users gain an additional APR\",\n    performanceFee:\n      \"This fee is charged on positive returns generated by Idle including accrued gov tokens except IDLE\",\n    userDistributionSpeed:\n      \"The distribution indicates the amount of tokens distributed for your account based on your current pool share.\",\n    govTokenApr:\n      \"Governance Token APR is calculated using the spot price from Uniswap and the current distribution speed for the specific pool.\",\n    govTokenRedeemableBalance:\n      \"The redeemable balance is re-calculated on every interaction with the smart-contract so, the shown balance may be lower than the real one.\",\n    riskScoreShort:\n      \"It's a single, consistently, comparable value for measuring protocol risk, based on factors including smart contract risk, collateralization and liquidity.\",\n    redeemSkipGov:\n      \"This feature allows you to save some gas by skipping the redeem of all or some of your accrued governance tokens, the skipped governance tokens will be given away to the entire pool\",\n    batchDepositExecutionSchedule:\n      \"Batches are executed twice a week, usually on Sunday and Wednesday, and only when the pool size reaches at least 20,000$. The time of each execution will vary depending on the gas price of the Ethereum network.\",\n    apyLong:\n      \"APY is based on (I) the current yield advertised by the underlying protocol, (II) the current distribution rate of governance tokens provided by underlying lending protocols (III) the current estimated price of governance tokens from Uniswap spot prices. (IV) IDLE token distribution is referred to the entire pool.\",\n    yieldFarming:\n      'Strategies in Idle now will be able to support and distribute a vast range of yield opportunities across multiple protocols. Users will be able to receive their equivalent share of governance token that the protocol is receiving while allocating liquidity to yield farming opportunities. <a target=\"_blank\" rel=\"nofollow noopener noreferrer\" href=\"https://idlefinance.medium.com/idle-yield-farming-upgrade-18e4bc483c8f\">Read more here</a>.',\n    riskScore: `It's a single, consistently, comparable value for measuring protocol risk, based on factors including smart contract risk, collateralization and liquidity.<br /><br />The model outputs a 0-10 score, where <strong>0 is the most risky and 10 is the most safe.</strong> Visit <a target=\"_blank\" rel=\"nofollow noopener noreferrer\" href=\"https://defiscore.io/overview\">https://defiscore.io/overview</a> for further information.`,\n    curveInstructions: `<strong>Depositing into the pool:</strong><br />By depositing your funds into the Curve Pool you may incur in slippage or bonus depending on if the coin is low or high in the pool.<br /><br /><strong>Withdrawing share from the pool:</strong><br />When you redeem your tokens previously deposited in the Curve Pool you get back an uneven amounts of tokens, that can give slippage or bonus depending on if the coin is low or high in the pool.`\n  },\n  analytics: {\n    google: {\n      events: {\n        enabled: true, // Enable Google Analytics events\n        debugEnabled: false, // Enable sending for test environments\n        addPostfixForTestnet: true // Append testnet to eventCategory\n      },\n      pageView: {\n        enabled: true\n      }\n    }\n  },\n  modals: {\n    // Enable modals\n    first_deposit_referral: false, // Referral share modal\n    first_deposit_share: true, // First deposit share modal\n    migrate: {\n      enabled: true\n    },\n    welcome: {\n      // Welcome modal\n      enabled: true,\n      frequency: 604800 // One week\n    }\n  },\n  dashboard: {\n    baseRoute: \"/dashboard\",\n    theme: {\n      mode: \"light\",\n      darkModeEnabled: true\n    }\n  },\n  governance: {\n    test: false,\n    enabled: true,\n    startBlock: 11333729,\n    baseRoute: \"/governance\",\n    props: {\n      tokenName: \"IDLE\",\n      availableContracts: {\n        IDLE,\n        FeeTreasury,\n        PriceOracle,\n        GovernorAlpha,\n        EcosystemFund,\n        IdleController\n      }\n    },\n    proposals: {\n      7: {\n        description: `Upgrade of IdleTokenGovernance contract to include the following changes:<br />\n        <ul>\n          <li>support for EIP 3165 flashLoans (fee is set to 0.08% of the flash loaned amount redistributed to LP)</li>\n          <li>support for stkAAVE distribution</li>\n          <li>support for new cWBCT distribution</li>\n          <li>other minor updates for gas and redeems</li>\n        </ul>\n        See more in the gov forum post: <a class=\"link\" href=\"https://gov.idle.finance/t/iip-7-idletoken-upgrade-stkaave-distribution/466\">https://gov.idle.finance/t/iip-7-idletoken-upgrade-stkaave-distribution/466</a>`\n      }\n    },\n    contracts: {\n      delegates: \"IDLE\",\n      governance: \"GovernorAlpha\"\n    }\n  },\n  curve: {\n    enabled: false,\n    params: {\n      n_coins: 3,\n      label: \"Curve\",\n      route: \"/dashboard/curve\",\n      image: \"images/protocols/curve.svg\",\n      imageInactive: \"images/protocols/curve-off.svg\"\n    },\n    rates: {\n      path: [\"apy\", \"day\", \"idle\"],\n      endpoint: \"https://www.curve.fi/raw-stats/apys.json\"\n    },\n\n    poolContract: {\n      decimals: 18,\n      abi: CurvePool,\n      name: \"idleDAI+idleUSDC+idleUSDT\",\n      token: \"idleDAI+idleUSDC+idleUSDT\",\n      address: \"0x09f4b84a87fc81fc84220fd7287b613b8a9d4c05\"\n    },\n    depositContract: {\n      abi: CurveDeposit,\n      name: \"idleCurveDeposit\",\n      address: \"0x83f252f036761a1e3d10daca8e16d7b21e3744d7\"\n    },\n    gaugeContract: {\n      abi: LiquidityGaugeV2,\n      name: \"LiquidityGaugeV2\",\n      address: \"0xd69ac8d9D25e99446171B5D0B3E4234dAd294890\"\n    },\n    zapContract: {\n      abi: CurveZap,\n      name: \"idleCurveZap\",\n      address: \"0x456974df1042ba7a46fd49512a8778ac3b840a21\"\n    },\n    migrationContract: {\n      abi: CurveDeposit,\n      name: \"idleCurveDeposit\",\n      address: \"0x83f252f036761a1e3d10daca8e16d7b21e3744d7\",\n      functions: [\n        {\n          label: \"Deposit\",\n          name: \"add_liquidity\"\n        }\n      ]\n    },\n    availableTokens: {\n      idleDAIYield: {\n        decimals: 18,\n        enabled: true,\n        baseToken: \"DAI\",\n        token: \"idleDAIYield\",\n        address: \"0x3fe7940616e5bc47b0775a0dccf6237893353bb4\",\n        migrationParams: {\n          n_coins: 3,\n          coinIndex: 0\n        }\n      },\n      idleUSDCYield: {\n        decimals: 18,\n        enabled: true,\n        baseToken: \"USDC\",\n        token: \"idleUSDCYield\",\n        address: \"0x5274891bEC421B39D23760c04A6755eCB444797C\",\n        migrationParams: {\n          n_coins: 3,\n          coinIndex: 1\n        }\n      },\n      idleUSDTYield: {\n        decimals: 18,\n        enabled: true,\n        baseToken: \"USDT\",\n        token: \"idleUSDTYield\",\n        address: \"0xF34842d05A1c888Ca02769A633DF37177415C2f8\",\n        migrationParams: {\n          n_coins: 3,\n          coinIndex: 2\n        }\n      }\n    }\n  },\n  permit: {\n    DAI: {\n      version: 1,\n      EIPVersion: null,\n      nonceMethod: \"nonces\",\n      name: \"Dai Stablecoin\",\n      type: [\n        { name: \"holder\", type: \"address\" },\n        { name: \"spender\", type: \"address\" },\n        { name: \"nonce\", type: \"uint256\" },\n        { name: \"expiry\", type: \"uint256\" },\n        { name: \"allowed\", type: \"bool\" }\n      ]\n    },\n    USDC: {\n      version: 2,\n      name: \"USD Coin\",\n      EIPVersion: 2612,\n      nonceMethod: \"nonces\",\n      type: [\n        { name: \"owner\", type: \"address\" },\n        { name: \"spender\", type: \"address\" },\n        { name: \"value\", type: \"uint256\" },\n        { name: \"nonce\", type: \"uint256\" },\n        { name: \"deadline\", type: \"uint256\" }\n      ]\n    },\n    SLP: {\n      version: 1,\n      EIPVersion: 2612,\n      nonceMethod: \"nonces\",\n      name: \"SushiSwap LP Token\",\n      type: [\n        { name: \"owner\", type: \"address\" },\n        { name: \"spender\", type: \"address\" },\n        { name: \"value\", type: \"uint256\" },\n        { name: \"nonce\", type: \"uint256\" },\n        { name: \"deadline\", type: \"uint256\" }\n      ]\n    }\n  },\n  govTokens: {\n    IDLE: {\n      abi: IDLE,\n      decimals: 18,\n      token: \"IDLE\",\n      enabled: true,\n      showAUM: false, // Include IDLE balance in AUM\n      showAPR: false, // Include IDLE Apr\n      protocol: \"idle\",\n      showPrice: false, // Show price in Yield Farming section\n      showBalance: false, // Include IDLE balance in Portfolio Donut\n      aprTooltipMode: false,\n      distributionMode: \"block\",\n      distributionFrequency: \"day\", // Multiply distribution per block\n      color: \"hsl(162, 100%, 41%)\",\n      icon: \"images/tokens/IDLE.png\",\n      disabledTokens: [\"idleRAIYield\", \"idleFEIYield\"], // Disable IDLE distribution for idleToken\n      address: \"0x875773784Af8135eA0ef43b5a374AaD105c5D39e\" // MAIN\n      // address:'0xAB6Bdb5CCF38ECDa7A92d04E86f7c53Eb72833dF', // KOVAN\n      // address:'0xa85233C63b9Ee964Add6F2cffe00Fd84eb32338f' // Fork\n    },\n    COMP: {\n      abi: COMP,\n      decimals: 18,\n      token: \"COMP\",\n      enabled: true,\n      showAUM: true, // Include IDLE balance in AUM\n      showAPR: true, // Include COMP Apr\n      showPrice: true,\n      showBalance: true, // Include COMP balance in Portfolio Donut\n      disabledTokens: [],\n      protocol: \"compound\",\n      aprTooltipMode: false,\n      distributionMode: \"block\",\n      distributionFrequency: \"day\",\n      color: \"hsl(162, 100%, 41%)\",\n      address: \"0xc00e94cb662c3520282e6f5717214004a7f26888\" // MAIN\n      // address:'0x61460874a7196d6a22d1ee4922473664b3e95270' // KOVAN\n    },\n    stkAAVE:{\n      abi:aToken,\n      decimals:18,\n      showAUM:true, // Include stkAAVE balance in AUM\n      showAPR:true, // Include stkAAVE Apr\n      enabled:true,\n      showPrice:true,\n      token:'stkAAVE',\n      showBalance:true, // Include stkAAVE balance in Portfolio Donut\n      protocol:'aavev2',\n      aprTooltipMode:false,\n      distributionMode:'second',\n      color:'hsl(314, 41%, 51%)',\n      distributionFrequency:'day',\n      disabledTokens:['idleTUSDYield','idleSUSDYield'],\n      address:'0x4da27a545c0c5b758a6ba100e3a049001de870f5', // MAIN\n      addressForPrice:'0x7Fc66500c84A76Ad7e9c93437bFc5Ac33E2DDaE9', // MAIN\n    }\n  },\n  contracts: {\n    ProxyFactory: {\n      abi: MinimalInitializableProxyFactory,\n      address: \"0x91baced76e3e327ba7850ef82a7a8251f6e43fb8\"\n    },\n    LockedIDLE: {\n      abi: LockedIDLE,\n      address: \"0xF241a0151841AE2E6ea750D50C5794b5EDC31D99\"\n    },\n    FeeTreasury: {\n      abi: FeeTreasury,\n      address: \"0x69a62c24f16d4914a48919613e8ee330641bcb94\" // MAIN\n    },\n    PriceOracle: {\n      abi: PriceOracle,\n      address: \"0x972A64d108e250dF98dbeac8170678501f5EF181\" // MAIN\n      // address:'0xCab5760688db837Bb453FE1DFBC5eDeE6fa8F0FF' // KOVAN\n    },\n    Timelock: {\n      abi: Timelock,\n      address: \"0xD6dABBc2b275114a2366555d6C481EF08FDC2556\" // MAIN\n      // address:'0xfD88D7E737a06Aa9c62B950C1cB5eE63DA379AFd' // KOVAN\n    },\n    EcosystemFund: {\n      abi: EcosystemFund,\n      address: \"0xb0aA1f98523Ec15932dd5fAAC5d86e57115571C7\" // MAIN\n      // address:'0x125d3D6A8e546BD13802c309429CBB4db5737d57' // KOVAN\n    },\n    VesterFactory: {\n      abi: VesterFactory,\n      address: \"0xbF875f2C6e4Cc1688dfe4ECf79583193B6089972\" // MAIN\n      // address:'0x9b52f91578c8AfA8e2DF07d4D7726bB6b73Ec1FE' // KOVAN\n    },\n    IdleController: {\n      abi: IdleController,\n      address: \"0x275DA8e61ea8E02d51EDd8d0DC5c0E62b4CDB0BE\" // MAIN\n      // address:'0x8Ad5F0644b17208c81bA5BDBe689c9bcc7143d87' // KOVAN\n    },\n    EarlyRewards: {\n      abi: EarlyRewards,\n      address: \"0xa1F71ED24ABA6c8Da8ca8C046bBc9804625d88Fc\" // MAIN\n      // address:'0x07A94A60B54c6b2Da19e23D6E9123180Bf92ED40' // KOVAN\n    },\n    GovernorAlpha: {\n      abi: GovernorAlpha,\n      address: \"0x2256b25CFC8E35c3135664FD03E77595042fe31B\" // MAIN\n      // address:'0x782cB1dbd0bD4df95c2497819be3984EeA5c2c25' // KOVAN\n    },\n    Comptroller: {\n      abi: Comptroller,\n      address: \"0x3d9819210a31b4961b30ef54be2aed79b9c9cd3b\" // Main\n      // address:'0x5eae89dc1c671724a672ff0630122ee834098657' // Kovan\n    },\n    SushiswapRouter: {\n      abi: SushiV2Router02,\n      address: \"0xd9e1cE17f2641f24aE83637ab66a2cca9C378B9F\"\n    },\n    UniswapRouter: {\n      abi: UniswapV2Router02,\n      address: \"0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D\"\n    },\n    BalancerExchangeProxy: {\n      abi: BalancerExchangeProxy,\n      address: \"0x3E66B66Fd1d0b02fDa6C811Da9E0547970DB2f21\"\n    }\n  },\n  tokens: {\n    DAI: {\n      zeroExInstant: {\n        orderSource: \"https://api.0x.org/sra/\",\n        assetData:\n          \"0xf47261b00000000000000000000000006b175474e89094c44da98b954eedeac495271d0f\",\n        affiliateInfo: {\n          feeRecipient: \"0x4215606a720477178AdFCd5A59775C63138711e8\",\n          feePercentage: 0.0025\n        }\n      }\n    },\n    USDC: {\n      zeroExInstant: {\n        orderSource: \"https://api.0x.org/sra/\",\n        assetData:\n          \"0xf47261b0000000000000000000000000a0b86991c6218b36c1d19d4a2e9eb0ce3606eb48\",\n        affiliateInfo: {\n          feeRecipient: \"0x4215606a720477178AdFCd5A59775C63138711e8\",\n          feePercentage: 0.0025\n        }\n      }\n    }\n  },\n  tranchflash: {\n    name: \"perpetual yield tranches\",\n    subtitle: \"Make yield your own.\",\n    desc:\n      \"Choose the benefits of high-yield or low-risk, while enjoying the flexibility of Tranches. This comes with auto-compounding for accrued governance tokens and no locking period.\",\n    arrows: \"images/idlearrows.svg\",\n    juniorinfo:\n      \"<b>Junior Tranches</b><br>Higher risk, leveraged for variable rate rewards\",\n    seniorinfo:\n      \"<b>Senior Tranches</b><br>Lower risk, built-in coverage for variable rate rewards\",\n    helpcircle: \"images/help-circle.svg\",\n    questions: [\n      {\n        desc: \"How it Works?\",\n        msg:\n          \"This product aggregates user deposits into underlying markets and allocates the accrued yield on the sum between two different risk profile subsets. You get to choose the strategy according to your risk tolerance. Users are able to deposit funds into either the Junior or Senior Tranches in exchange for a token indicating their claim on their principal and whatever yield is allocated for them. These aggregated holdings are then deposited into the specified originating lending market, in this current version Idle Best-Yield strategy.\"\n      },\n      { desc: \"What happens in a case of a default?\", msg: \"In case of hack, an emergency shutdown can be triggered (by both the guardian, which would be a multi-sig wallet, and the owner which will be the Idle governance) in order to pause both deposits and redeems.<br />The redistribution of remaining funds can happens selectively, by allowing only Senior tranche holders to withdraw first directly in the main contract, or through a separate contract for more complex cases and resolutions (managed by the Idle governance).\" }\n    ]\n  },\n  tranches: {\n    AA: {\n      color: {\n        // hex:'#00ff06',\n        hex: \"#0042F5\",\n        rgb: [0, 66, 245],\n        hsl: [\"224\", \"100%\", \"48%\"]\n      },\n      type: \"AA\",\n      route: \"senior\",\n      icon: \"Security\",\n      image: \"images/SeniorTranche.svg\",\n      bubble: \"images/SeniorBubble.svg\",\n      baseName: \"senior\",\n      name: \"Senior Tranche\",\n      features: [\n        \"Covered by Junior tranches funds\",\n        \"Minimized risk exposure\",\n        \"No locking period or epochs\",\n        \"Auto-Reinvest accrued tokens\",\n        \"Stake to receive $IDLE tokens\"\n      ],\n      description: {\n        long:\n          \"Senior Tranches provide a shielded access to optimized DeFi yields, thanks to an integrated funds' coverage given by Junior Tranches\",\n        deposit:\n          \"By depositing in the Senior Tranche in case of Smart-Contract breach your funds are covered by the funds deposited in the Junior Tranche.\",\n        stake:\n          \"Stake your tranche tokens to earn additional rewards and boost the APY.\",\n        unstake:\n          \"By unstaking your tranche tokens you will no more get additional rewards.\",\n        withdraw: \"You can withdraw your funds at any time from the tranche.\",\n        cantUnstake:\n          \"To unstake your funds you just need to wait 10 blocks after your last stake transaction.\",\n        cantWithdraw:\n          \"To withdraw your funds you just need to wait at least 1 block from the latest harvest transaction.\"\n      }\n    },\n    BB: {\n      color: {\n        hex: \"#FAB325\",\n        rgb: [250, 179, 37],\n        hsl: [\"40\", \"95%\", \"56%\"]\n      },\n      type: \"BB\",\n      route: \"junior\",\n      icon: \"TrendingUp\",\n      image: \"images/JuniorTranche.svg\",\n      bubble: \"images/JuniorBubble.svg\",\n      baseName: \"junior\",\n      name: \"Junior Tranche\",\n      features: [\n        \"Leverage yield using Senior tranches funds\",\n        \"Higher risk exposure by protecting senior tranches\",\n        \"No locking period or epochs\",\n        \"Auto-Reinvest accrued tokens\",\n        \"Stake to receive $IDLE tokens\"\n      ],\n      description: {\n        long:\n          \"The Junior Tranches provide amplified optimized DeFi yields by carrying a higher grade of risks and protecting Senior Tranches\",\n        deposit:\n          \"By depositing in the Junior Tranche in case of Smart-Contract breach your funds will be used to cover eventual losses on the Senior Tranche.\",\n        stake:\n          \"Stake your tranche tokens to earn additional rewards and boost the APY.\",\n        unstake:\n          \"By unstaking your tranche tokens you will no more get additional rewards.\",\n        withdraw: \"You can withdraw your funds at any time from the tranche.\",\n        cantUnstake:\n          \"To unstake your funds you just need to wait 10 blocks after your last stake transaction.\",\n        cantWithdraw:\n          \"To withdraw your funds you just need to wait at least 1 block from the latest harvest transaction.\"\n      }\n    }\n  },\n  strategies: {\n    tranches: {\n      token: \"DAI\",\n      visible: true,\n      type: \"tranche\",\n      protocol: \"idle\",\n      color: \"#f32121\",\n      comingSoon: false,\n      title: \"Tranches\",\n      addGovTokens: true,\n      titlePostfix: null,\n      iconName: \"Whatshot\",\n      component: Tranches,\n      govTokensEnabled: true,\n      chartColor: \"hsl(40,95%,59%)\",\n      icon: \"images/strategies/tranches-on.png\",\n      iconInactive: \"images/strategies/tranches-off.png\",\n      iconInactiveDark: \"images/strategies/tranches-white.png\",\n      desc:\n        \"Diversify your risk profile with dynamic tranched yield derivatives\",\n      descShort:\n        \"Tranches deposit assets (eg DAI) into yield sources (eg Idle Finance) and split the accrued interest between 2 classes of products with different risk profiles.\",\n      descLong:\n        \"Choose the benefits of high-yield or low-risk, while enjoying the flexibility of Tranches. This comes with auto-compounding for accrued governance tokens and no locking period.\"\n    },\n    best: {\n      token: \"DAI\",\n      visible: true,\n      color: \"#f32121\",\n      type: \"strategy\",\n      comingSoon: false,\n      addGovTokens: true,\n      titlePostfix: null,\n      title: \"Best-Yield\",\n      iconName: \"Whatshot\",\n      govTokensEnabled: true,\n      component: StrategyPage,\n      chartColor: \"hsl(40,95%,59%)\",\n      icon: \"images/strategies/best-on.svg\",\n      iconInactive: \"images/strategies/best-off.svg\",\n      iconInactiveDark: \"images/strategies/best-white.svg\",\n      desc: \"Maximize your returns across DeFi protocols\",\n      descLong:\n        \"The Best-Yield allocation strategy allows to maximize the interest rate returns by detecting the interest rate changes on different lending protocols. Idle’s monitoring system automatically triggers a rebalance if it spots a better-performing allocation: this includes taking account of the total liquidity within the pool, incorporating underlying protocol rate functions and levels of supply and demand. As a user, you will end up with an higher return without constantly checking rates and burning gas on every transfer. Unlock your funds from a single protocol performance with this strategy.\",\n      descShort:\n        \"The Best-Yield allocation strategy allows to maximize the interest rate returns by detecting the interest rate changes on different lending protocols.\"\n    },\n    risk: {\n      token: \"DAI\",\n      visible: true,\n      color: \"#2196F3\",\n      type: \"strategy\",\n      comingSoon: false,\n      titlePostfix: null,\n      addGovTokens: true,\n      iconName: \"Security\",\n      title: \"Risk-Adjusted\",\n      govTokensEnabled: true,\n      component: StrategyPage,\n      chartColor: \"hsl(211,67%,47%)\",\n      icon: \"images/strategies/risk-on.svg\",\n      iconInactive: \"images/strategies/risk-off.svg\",\n      iconInactiveDark: \"images/strategies/risk-white.svg\",\n      desc: \"Optimize your risk exposure across DeFi protocols\",\n      descLong:\n        \"The Risk-Adjusted allocation strategy provides a way to earn the best rate at the lowest risk-level. The risk-management algorithm takes account of the total assets within a pool, incorporates underlying protocol rate functions and levels of supply and demand, skimming protocols with a bad score/rate mix, and finally determining an allocation that achieves the highest risk-return score possible after the rebalance happens.\",\n      descShort:\n        \"The Risk-Adjusted allocation strategy provides a way to earn the best rate at the lowest risk-level.\"\n    }\n    /*\n    new:{\n      token:'DAI',\n      color:'#2196F3',\n      comingSoon:true,\n      addGovTokens:true,\n      iconName:'Adjust',\n      title:'Coming Soon',\n      chartColor:'hsl(211,67%,47%)',\n      icon:'images/strategies/solr-on.svg',\n      desc:'More strategies are coming soon!',\n      iconInactive:'images/strategies/solr-off.svg',\n      descLong:'The Risk-Adjusted allocation strategy provides a way to earn the best rate at the lowest risk-level. The risk-management algorithm takes account of the total assets within a pool, incorporates underlying protocol rate functions and levels of supply and demand, skimming protocols with a bad score/rate mix, and finally determining an allocation that achieves the highest risk-return score possible after the rebalance happens.',\n      descShort:'The Risk-Adjusted allocation strategy provides a way to earn the best rate at the lowest risk-level.'\n    }\n    */\n  },\n  stats: {\n    enabled: true, // Enable endpoint\n    rates: {\n      TTL: 300, // 5 minutes\n      endpoint: \"https://api.idle.finance/rates/\"\n    },\n    tvls: {\n      TTL: 120,\n      endpoint: \"https://api.idle.finance/tvls/\"\n    },\n    substack: {\n      TTL: 1800,\n      endpoint: \"https://api.idle.finance/substack/\"\n    },\n    scores: {\n      TTL: 300, // 5 minutes\n      endpoint: \"https://api.idle.finance/scores/\"\n    },\n    config: {\n      headers: env.REACT_APP_IDLE_KEY\n        ? { Authorization: `Bearer ${env.REACT_APP_IDLE_KEY}` }\n        : {}\n    },\n    versions: {\n      /*\n      v2:{\n        label:'Idle V2',\n        startTimestamp:null,\n        additionalProtocols:[],\n        endTimestamp:1589752999,\n        enabledStrategies:['best'],\n        showPerformanceTooltip:false,\n        enabledTokens:['DAI','USDC'],\n      },\n      */\n      v3: {\n        label: \"Idle V3\",\n        additionalProtocols: [],\n        endTimestamp: 1597237542,\n        startTimestamp: 1589801874,\n        showPerformanceTooltip: false,\n        strategiesParams: {\n          risk: {\n            endTimestamp: 1597233922\n          }\n        },\n        enabledStrategies: [\"best\", \"risk\"],\n        enabledTokens: [\"DAI\", \"USDC\", \"USDT\", \"TUSD\", \"SUSD\", \"WBTC\"]\n      },\n      v4: {\n        label: \"Idle V4\",\n        endTimestamp: null,\n        startTimestamp: 1597442400, // 1598220000\n        enabledStrategies: [\"best\", \"risk\"],\n        showPerformanceTooltip: true,\n        strategiesParams: {\n          risk: {\n            startTimestamp: 1599183170\n          }\n        },\n        enabledTokens: [\n          \"DAI\",\n          \"USDC\",\n          \"USDT\",\n          \"TUSD\",\n          \"SUSD\",\n          \"WBTC\",\n          \"WETH\",\n          \"RAI\"\n        ],\n        additionalProtocols: [\n          {\n            decimals: 16,\n            protocol: \"compound\",\n            name: \"compoundWithCOMP\",\n            enabledTokens: [\n              \"DAI\",\n              \"USDC\",\n              \"USDT\",\n              \"TUSD\",\n              \"SUSD\",\n              \"WBTC\",\n              \"WETH\"\n            ]\n          },\n          {\n            decimals: 18,\n            protocol: \"aavev2\",\n            name: \"aavev2WithStkAAVE\",\n            enabledTokens: [\n              \"DAI\",\n              \"USDC\",\n              \"USDT\",\n              \"TUSD\",\n              \"SUSD\",\n              \"WBTC\",\n              \"WETH\"\n            ]\n          }\n        ]\n      }\n    },\n    tokens: {\n      DAI: {\n        decimals: 18,\n        enabled: true,\n        color: {\n          rgb: [250, 184, 51],\n          hex: \"#F7B24A\",\n          hsl: [\"40\", \"95%\", \"59%\"]\n        },\n        chart: {\n          labelTextColorModifiers: [\"darker\", 2]\n        },\n        startTimestamp: \"2020-02-11\",\n        address: \"0x6b175474e89094c44da98b954eedeac495271d0f\",\n        performanceTooltip:\n          \"APR is calculated proportionally to historical allocations of each lending protocol in the selected time period. This pool has 1% unlent reserve to help reduce gas costs.\"\n      },\n      USD: {\n        enabled: true,\n        color: {\n          hex: \"#85bb65\",\n          rgb: [133, 187, 101],\n          hsl: [\"98\", \"39%\", \"56%\"]\n        },\n        chart: {\n          labelTextColorModifiers: [\"brighter\", 2]\n        },\n        address: null,\n        startTimestamp: \"2020-02-04\"\n      },\n      USDC: {\n        decimals: 6,\n        enabled: true,\n        color: {\n          hex: \"#2875C8\",\n          rgb: [40, 117, 200],\n          hsl: [\"211\", \"67%\", \"47%\"]\n        },\n        chart: {\n          labelTextColorModifiers: [\"brighter\", 2]\n        },\n        startTimestamp: \"2020-02-04\",\n        address: \"0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48\",\n        performanceTooltip:\n          \"APR is calculated proportionally to historical allocations of each lending protocol in the selected time period. This pool has 1% unlent reserve to help reduce gas costs.\"\n      },\n      USDT: {\n        decimals: 6,\n        enabled: true,\n        color: {\n          hex: \"#22a079\",\n          rgb: [34, 160, 121],\n          hsl: [\"161\", \"65%\", \"38%\"]\n        },\n        chart: {\n          labelTextColorModifiers: [\"darker\", 4]\n        },\n        startTimestamp: \"2020-02-04\",\n        address: \"0xdac17f958d2ee523a2206206994597c13d831ec7\",\n        performanceTooltip:\n          \"APR is calculated proportionally to historical allocations of each lending protocol in the selected time period. This pool has 1% unlent reserve to help reduce gas costs.\"\n      },\n      TUSD: {\n        decimals: 18,\n        enabled: true,\n        color: {\n          hex: \"0340a1\",\n          rgb: [3, 64, 161],\n          hsl: [\"217\", \"96%\", \"32%\"]\n        },\n        chart: {\n          labelTextColorModifiers: [\"brighter\", 5]\n        },\n        startTimestamp: \"2020-06-22\",\n        address: \"0x0000000000085d4780b73119b644ae5ecd22b376\"\n      },\n      SUSD: {\n        decimals: 18,\n        enabled: true,\n        color: {\n          hex: \"#1e1a31\",\n          rgb: [30, 26, 49],\n          hsl: [\"250\", \"31%\", \"15%\"]\n        },\n        chart: {\n          labelTextColorModifiers: [\"brighter\", 5]\n        },\n        startTimestamp: \"2020-06-22\",\n        address: \"0x57ab1ec28d129707052df4df418d58a2d46d5f51\"\n      },\n      WBTC: {\n        decimals: 8,\n        enabled: true,\n        color: {\n          hex: \"#eb9444\",\n          rgb: [235, 148, 68],\n          hsl: [\"29\", \"81%\", \"59%\"]\n        },\n        startTimestamp: \"2020-06-15\",\n        conversionRateField: \"wbtcDAIPrice\",\n        chart: {\n          labelTextColorModifiers: [\"darker\", 4]\n        },\n        address: \"0x2260fac5e5542a773aa44fbcfedf7c193bc2c599\",\n        performanceTooltip:\n          \"APR is calculated proportionally to historical allocations of each lending protocol in the selected time period. This pool has 1% unlent reserve to help reduce gas costs.\"\n      },\n      WETH: {\n        decimals: 18,\n        enabled: true,\n        color: {\n          hex: \"#ee1f79\",\n          rgb: [238, 31, 121],\n          hsl: [\"334\", \"86%\", \"53%\"]\n        },\n        startTimestamp: \"2021-02-16\",\n        conversionRateField: \"wethDAIPrice\",\n        chart: {\n          labelTextColorModifiers: [\"darker\", 4]\n        },\n        address: \"0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2\",\n        performanceTooltip:\n          \"APR is calculated proportionally to historical allocations of each lending protocol in the selected time period. This pool has 1% unlent reserve to help reduce gas costs.\"\n      },\n      COMP: {\n        decimals: 18,\n        enabled: true,\n        color: {\n          hex: \"#00d395\",\n          rgb: [0, 211, 149],\n          hsl: [\"162\", \"100%\", \"41%\"]\n        },\n        startTimestamp: \"2020-06-15\",\n        conversionRateField: \"compDAIPrice\",\n        chart: {\n          labelTextColorModifiers: [\"darker\", 4]\n        },\n        address: \"0xc00e94cb662c3520282e6f5717214004a7f26888\"\n      },\n      stkAAVE: {\n        decimals: 18,\n        enabled: true,\n        color: {\n          hex: \"#B6509E\",\n          rgb: [182, 80, 158],\n          hsl: [\"314\", \"41%\", \"51%\"]\n        },\n        startTimestamp: \"2021-04-30\",\n        conversionRateField: \"compDAIPrice\",\n        chart: {\n          labelTextColorModifiers: [\"darker\", 4]\n        },\n        address: \"0x4da27a545c0c5b758a6ba100e3a049001de870f5\"\n      },\n      IDLE: {\n        decimals: 18,\n        enabled: true,\n        color: {\n          hex: \"#0d55bb\",\n          rgb: [13, 85, 187],\n          hsl: [\"215\", \"87%\", \"39%\"]\n        },\n        startTimestamp: \"2020-11-10\",\n        icon: \"images/tokens/IDLE.png\",\n        conversionRateField: \"idleDAIPrice\",\n        chart: {\n          labelTextColorModifiers: [\"darker\", 4]\n        },\n        address: \"0x875773784Af8135eA0ef43b5a374AaD105c5D39e\"\n      },\n      RAI: {\n        decimals: 18,\n        enabled: true,\n        color: {\n          hex: \"#378879\",\n          rgb: [55, 136, 121],\n          hsl: [\"169\", \"42%\", \"37%\"]\n        },\n        disabledCharts: [\"score\"],\n        startTimestamp: \"2021-05-25\",\n        icon: \"images/tokens/RAI.png\",\n        conversionRateField: \"raiDAIPrice\",\n        chart: {\n          labelTextColorModifiers: [\"darker\", 4]\n        },\n        address: \"0x03ab458634910aad20ef5f1c8ee96f1d6ac54919\"\n      },\n      FEI: {\n        decimals: 18,\n        enabled: false,\n        color: {\n          hex: \"#229b6e\",\n          rgb: [34, 155, 110],\n          hsl: [\"158\", \"64%\", \"37%\"]\n        },\n        disabledCharts: [\"score\"],\n        startTimestamp: \"2021-07-30\",\n        conversionRateField: \"feiDAIPrice\",\n        chart: {\n          labelTextColorModifiers: [\"darker\", 4]\n        },\n        address: \"0x956f47f50a910163d8bf957cf5846d573e7f87ca\"\n      },\n      \"idleDAI+idleUSDC+idleUSDT\": {\n        decimals: 18,\n        enabled: false,\n        name: \"Curve.fi\",\n        color: {\n          hex: \"#ff0000\",\n          rgb: [255, 0, 0],\n          hsl: [\"0\", \"100%\", \"50%\"]\n        },\n        startTimestamp: \"2020-06-15\"\n      }\n    },\n    protocols: {\n      compound: {\n        legend: true,\n        enabled: true,\n        label: \"Compound\",\n        color: {\n          rgb: [0, 209, 146],\n          hsl: [\"162\", \"100%\", \"41%\"]\n        }\n      },\n      aavev2WithStkAAVE: {\n        enabled: true,\n        label: \"Aave V2 + stkAAVE\",\n        startTimestamp: \"2021-05-08 14:30:00\",\n        // tokensProps:{\n        //   WETH:{\n        //     startTimestamp:'2021-05-19 12:20:00',\n        //   }\n        // },\n        color: {\n          hex: \"#B6509E\",\n          rgb: [182, 80, 158],\n          hsl: [\"314\", \"41%\", \"51%\"]\n        },\n        rateField: [\"rate\", \"aaveAdditionalAPR\"]\n      },\n      compoundWithCOMP: {\n        enabled: true,\n        label: \"Compound + COMP\",\n        color: {\n          rgb: [0, 153, 107],\n          hsl: [\"162\", \"100%\", \"30%\"]\n        },\n        rateField: [\"rate\", \"compoundAdditionalAPR\"]\n      },\n      fulcrum: {\n        legend: false,\n        enabled: false,\n        label: \"Fulcrum\",\n        color: {\n          rgb: [2, 138, 192],\n          hsl: [\"197\", \"98%\", \"38%\"]\n        }\n      },\n      dsr: {\n        label: \"DSR\",\n        enabled: false,\n        icon: \"CHAI.png\",\n        color: {\n          rgb: [222, 52, 67],\n          hsl: [\"355\", \"72%\", \"54%\"]\n        }\n      },\n      dydx: {\n        legend: true,\n        label: \"DyDx\",\n        enabled: true,\n        color: {\n          rgb: [87, 87, 90],\n          hsl: [\"240\", \"2%\", \"35%\"]\n        }\n      },\n      iearn: {\n        label: \"Yearn\",\n        enabled: true\n      },\n      aave: {\n        label: \"Aave V1\",\n        legend: false,\n        enabled: false,\n        color: {\n          rgb: [230, 131, 206],\n          hsl: [\"315\", \"66%\", \"71%\"]\n        }\n      },\n      aavev2: {\n        legend: true,\n        enabled: true,\n        icon: \"aave.svg\",\n        label: \"Aave V2\",\n        color: {\n          rgb: [151, 79, 141],\n          hsl: [\"308\", \"31%\", \"45%\"]\n        }\n      },\n      cream: {\n        legend: true,\n        enabled: true,\n        label: \"Cream\",\n        icon: \"cream.svg\",\n        color: {\n          rgb: [105, 226, 220],\n          hsl: [\"177\", \"68%\", \"65%\"]\n        }\n      },\n      fuse: {\n        legend: true,\n        enabled: true,\n        label: \"Fuse\",\n        icon: \"fuse.png\",\n        color: {\n          rgb: [0, 0, 0],\n          hsl: [\"0\", \"0%\", \"0%\"]\n        }\n      },\n      curve: {\n        label: \"\",\n        enabled: true,\n        color: {\n          rgb: [0, 55, 255],\n          hsl: [\"227\", \"100%\", \"50%\"]\n        }\n      },\n      idle: {\n        label: \"Idle\",\n        enabled: true,\n        color: {\n          rgb: [0, 55, 255],\n          hsl: [\"227\", \"100%\", \"50%\"]\n        }\n      }\n    }\n  },\n  contract: {\n    methods: {\n      redeem: {\n        skipRebalance: true,\n        metaTransactionsEnabled: false\n      },\n      deposit: {\n        skipMint: true,\n        minAmountForMint: 100000,\n        erc20ForwarderEnabled: true,\n        skipMintCheckboxEnabled: true,\n        metaTransactionsEnabled: false,\n        // Proxy contract for Meta Tx or ERC20 Forwarder\n        erc20ForwarderProxyContract: {\n          forwarder: {\n            enabled: true,\n            abi: erc20Forwarder,\n            name: \"erc20Forwarder\",\n            function: \"emitMessage\",\n            address: \"0xfaadbe5f0a19f0ebf92aeb73534cbc96b96e2bda\" // Main\n            // address:'0xCB3F801C91DEcaaE9b08b1eDb915F9677D8fdB4A' // Kovan\n          },\n          tokens: {\n            DAI: {\n              enabled: true,\n              permitType: \"DAI_Permit\",\n              abi: IdleDepositForwarder,\n              function: \"permitAndDeposit\", // foo\n              name: \"IdleDepositForwarderDAI\",\n              address: \"0xDe3c769cCD1878372864375e9f89956806B86daA\" // Main\n              // address:'0x1E32F1E96B9735E5D31a23e12fe8e6D9845a9072', // Kovan\n            },\n            USDC: {\n              enabled: true,\n              abi: IdleDepositForwarder,\n              permitType: \"EIP2612_Permit\",\n              name: \"IdleDepositForwarderUSDC\",\n              function: \"permitEIP2612AndDeposit\", // 'foo'\n              address: \"0x43bD6a78b37b50E3f52CAcec53F1202dbDe6a761\" // Main\n              // address:'0x8f9048CFAa27b1A1b77c32a0b87D2DcF5D016cb5', // Kovan\n            }\n          }\n        },\n        proxyContract: {\n          enabled: false,\n          abi: IdleProxyMinter,\n          name: \"IdleProxyMinter\",\n          function: \"mintIdleTokensProxy\",\n          address: \"0x7C4414aA6B0c6CB1Bc7e5BFb7433138426AC637a\"\n        }\n      },\n      migrate: {\n        skipRebalance: true,\n        minAmountForRebalance: 10000,\n        minAmountForRebalanceMetaTx: 10000\n      },\n      redeemGovTokens: {\n        enabled: true\n      },\n      redeemSkipGov: {\n        enabled: true,\n        disabledTokens: [\"idleDAISafe\", \"idleUSDCSafe\", \"idleUSDTSafe\"]\n      },\n      rebalance: {\n        enabled: true,\n        abi: IdleRebalancerV3\n      }\n    }\n  },\n  network: {\n    // Network configurations\n    availableNetworks: {\n      1: \"Mainnet\",\n      3: \"Ropsten\",\n      4: \"Rinkeby\",\n      42: \"Kovan\",\n      1337: \"Hardhat\"\n    },\n    isForked: false, // If TRUE the tx confirmation callback is fired on the receipt\n    requiredNetwork: 1, // { 1: Mainnet, 3: Ropsten, 42: Kovan }\n    blocksPerYear: 2371428,\n    secondsPerYear: 31536000,\n    firstBlockNumber: 8119247,\n    requiredConfirmations: 1,\n    enabledNetworks: [1, 42, 1337],\n    accountBalanceMinimum: 0, // in ETH for gas fees\n    providers: {\n      infura: {\n        42: \"https://kovan.infura.io/v3/\",\n        1: \"https://mainnet.infura.io/v3/\",\n        1337: \"https://mainnet.infura.io/v3/\"\n      },\n      ens: {\n        enabled: true,\n        supportedNetworks: [1]\n      },\n      nexus: {\n        endpoints: {\n          1: \"https://api.nexusmutual.io/v1/\",\n          42: \"https://api.staging.nexusmutual.io/v1/\"\n        }\n      },\n      etherscan: {\n        enabled: true, // False for empty txs list (try new wallet)\n        keys: [\n          env.REACT_APP_ETHERSCAN_KEY,\n          env.REACT_APP_ETHERSCAN_KEY2,\n          env.REACT_APP_ETHERSCAN_KEY3,\n          env.REACT_APP_ETHERSCAN_KEY4\n        ],\n        endpoints: {\n          1: \"https://api.etherscan.io/api\",\n          1337: \"https://api.etherscan.io/api\",\n          42: \"https://api-kovan.etherscan.io/api\"\n        },\n        baseUrl: {\n          1: \"https://etherscan.io\",\n          1337: \"https://etherscan.io\",\n          42: \"https://kovan.etherscan.io\"\n        }\n      },\n      snapshot: {\n        whitelist: [\n          \"0x9993ADB62085AcB05Fc493f7A1D10C11227A78fa\",\n          \"0xf12ce5807e3d3128B876aa1Cec0632D63547E22E\"\n        ],\n        endpoints: {\n          proposals: \"https://hub.snapshot.page/api/idlefinance.eth/proposals\"\n        },\n        urls: {\n          proposals: \"https://signal.idle.finance/#/idlefinance.eth/proposal/\"\n        }\n      },\n      biconomy: {\n        enabled: true,\n        enableLogin: false,\n        supportedNetworks: [1, 42],\n        disabledWallets: [\"authereum\"],\n        endpoints: {\n          limits: \"https://api.biconomy.io/api/v1/dapp/checkLimits\"\n        },\n        params: {\n          debug: false,\n          apiKey: env.REACT_APP_BICONOMY_KEY, // Mainnet\n          dappId: env.REACT_APP_BICONOMY_APPID,\n          apiId: \"36572ec9-ae5c-4c4a-9530-f3ae7c7ac829\"\n          // apiKey: env.REACT_APP_BICONOMY_KEY_KOVAN, // Kovan\n        }\n      },\n      simpleID: {\n        enabled: false,\n        supportedNetworks: [1],\n        getNetwork: (networkId, availableNetworks) => {\n          let networkName = null;\n          switch (networkId) {\n            case 1:\n              networkName = \"mainnet\";\n              break;\n            default:\n              networkName = availableNetworks[networkId]\n                ? availableNetworks[networkId].toLowerCase()\n                : \"mainnet\";\n              break;\n          }\n          return networkName;\n        },\n        params: {\n          appOrigin: window.location.origin,\n          appName: \"Idle\",\n          appId: \"eb4d1754-a76e-4c58-8422-54b5ca2395e7\",\n          renderNotifications: false,\n          network: \"mainnet\"\n        }\n      }\n    }\n  },\n  events: {\n    DAI: {\n      fields: {\n        to: \"dst\",\n        from: \"src\",\n        value: \"wad\"\n      }\n    }\n  },\n  notifications: [\n    {\n      enabled: false,\n      end: 1612282726374,\n      start: 1611677841027,\n      date: \"Jan 26, 2021 16:18 UTC\",\n      title: \"Cover Protocol Available\",\n      hash: \"/dashboard/tools/cover-protocol\",\n      image: \"/images/protocols/cover-logo.svg\",\n      text: \"Protect your portfolio with Cover Protocol\"\n    }\n  ],\n  tools: {\n    stake: {\n      enabled: true,\n      icon: \"Layers\",\n      label: \"Staking\",\n      route: \"staking\",\n      subComponent: Staking,\n      desc: \"Stake your IDLE / Sushi Swap LP tokens and earn $IDLE rewards\",\n      props: {\n        availableTokens: {\n          IDLE: {\n            component: IdleStaking,\n            contract: {\n              abi: stkIDLE,\n              decimals: 18,\n              name: \"stkIDLE\",\n              fromBlock: 12561464,\n              rewardToken: \"IDLE\",\n              address: \"0xaac13a116ea7016689993193fce4badc8038136f\" // Mainnet\n            },\n            feeDistributor: {\n              fromBlock: 12649361,\n              abi: StakingFeeDistributor,\n              name: \"StakingFeeDistributor\",\n              address: \"0xbabb82456c013fd7e3f25857e0729de8207f80e2\" // Mainnet\n            },\n            abi: IDLE,\n            name: \"IDLE\",\n            token: \"IDLE\",\n            decimals: 18,\n            enabled: true,\n            label: \"IDLE Token\",\n            icon: \"images/tokens/IDLE.png\",\n            address: \"0x875773784Af8135eA0ef43b5a374AaD105c5D39e\", // Mainnet\n            poolLink:\n              \"https://etherscan.com/address/0x875773784Af8135eA0ef43b5a374AaD105c5D39e\"\n          },\n          SLP: {\n            component: LpStaking,\n            contract: {\n              decimals: 24,\n              name: \"LpStaking\",\n              maxMultiplier: 3,\n              abi: LpStakingAbi,\n              maxBonusDays: 120,\n              rewardToken: \"IDLE\",\n              address: \"0xcc0b9f7ed0e6bc7c2e69dbd247e8420f29aeb48d\" // Mainnet\n            },\n            name: \"SLP\",\n            token: \"SLP\",\n            decimals: 18,\n            enabled: true,\n            abi: SushiLiquidityPool,\n            label: \"SushiSwap IDLE/ETH LP Token\",\n            icon: \"images/protocols/sushiswap.png\",\n            address: \"0xa7f11e026a0af768d285360a855f2bded3047530\", // Mainnet\n            poolLink:\n              \"https://analytics.sushi.com/pairs/0xa7f11e026a0af768d285360a855f2bded3047530\"\n          }\n        }\n      }\n    },\n    nexusMutual: {\n      enabled: true,\n      icon: \"Security\",\n      route: \"coverage\",\n      label: \"Coverage\",\n      desc: \"Buy Nexus Mutual coverage without KYC for your deposits\",\n      subComponent: NexusMutual,\n      props: {\n        availableTokens: {\n          idleDAIYield: {\n            decimals: 18,\n            abi: IdleTokenV4,\n            name: \"idleDAIYield\",\n            token: \"idleDAIYield\", // Mainnet\n            // token:'idleDAIYieldMock', // Kovan\n            address: \"0x0000000000000000000000000000000000000011\",\n            realAddress: \"0x3fe7940616e5bc47b0775a0dccf6237893353bb4\", // Mainnet\n            // realAddress:'0xbd0b0205408509544815d377214d8f2cbe3e5381', // Kovan\n            underlying: {\n              DAI: {\n                abi: ERC20,\n                name: \"DAI\", // Mainnet\n                token: \"DAI\",\n                decimals: 18,\n                // name:'DAIMock', // Kovan\n                address: \"0x6b175474e89094c44da98b954eedeac495271d0f\" // Mainnet\n                // address:'0x5C422252C6a47CdacF667521566Bf7bD5b0d769B' // Kovan\n              }\n            }\n          },\n          idleUSDTYield: {\n            decimals: 18,\n            abi: IdleTokenV4,\n            name: \"idleUSDTYield\",\n            token: \"idleUSDTYield\", // Mainnet\n            // token:'idleUSDTYieldMock', // Kovan\n            address: \"0x0000000000000000000000000000000000000012\",\n            realAddress: \"0xF34842d05A1c888Ca02769A633DF37177415C2f8\",\n            underlying: {\n              DAI: {\n                abi: ERC20,\n                name: \"DAI\", // Mainnet\n                token: \"DAI\",\n                decimals: 18,\n                // name:'DAIMock', // Kovan\n                address: \"0x6b175474e89094c44da98b954eedeac495271d0f\" // Mainnet\n                // address:'0x5C422252C6a47CdacF667521566Bf7bD5b0d769B' // Kovan\n              }\n            }\n          }\n        }\n      },\n      directProps: {\n        // startBlock:25858186, // Kovan\n        startBlock: 12783137, // Mainnet\n        // Yield token covers have a 14 days grace period\n        yieldTokenCoverGracePeriod: 14 * 24 * 60 * 60 * 1000,\n        contractInfo: {\n          abi: NexusMutualDistributor,\n          name: \"NexusMutualDistributor\",\n          // address:'0xe2d569dc064b3b91f514e775c6026e04d2c887a9' // Kovan\n          address: \"0xf2b36f823eae36e53a5408d8bd452748b24fbf76\" // Mainnet\n        },\n        incidentsInfo: {\n          abi: NexusMutualIncidents,\n          name: \"NexusMutualIncidents\",\n          // address:'0x322f9a880189E3FFFf59b74644e13e5763C5AdB9' // Kovan\n          address: \"0x8ceba69a8e96a4ce71aa65859dbdb180b489a719\" // Mainnet\n        }\n      }\n    },\n    b2bVesting: {\n      enabled: true,\n      visible: true,\n      icon: \"CloudUpload\",\n      label: \"B2B Vesting\",\n      route: \"b2b-vesting-contract\",\n      subComponent: DeployB2BVesting,\n      desc:\n        'Deploy/Deposit/Claim for B2B Vesting Contracts<br /><small style=\"color:#ff9900\">(only for partners that joined the B2B Affiliate program)</small>',\n      props: {\n        contracts: {\n          vesterImplementation: {\n            abi: B2BVester,\n            address: \"0x3024656ae91d7bf724f613c314bc56030ba2344c\"\n          }\n        }\n      }\n    },\n    ethWrapper: {\n      enabled: true,\n      label: \"ETH Wrapper\",\n      route: \"eth-wrapper\",\n      subComponent: TokenWrapper,\n      image: \"images/tokens/WETH.svg\",\n      desc: \"Wrap your ETH and get WETH. Unwrap your WETH and get back ETH.\",\n      props: {\n        startContract: {\n          name: \"ETH\",\n          token: \"ETH\",\n          decimals: 18,\n          wrapMethod: \"deposit\"\n        },\n        destContract: {\n          abi: WETH,\n          name: \"WETH\",\n          decimals: 18,\n          token: \"WETH\",\n          unwrapMethod: \"withdraw\",\n          address: \"0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2\"\n        }\n      }\n    },\n    coverProtocol: {\n      enabled: false,\n      label: \"Cover Protocol\",\n      route: \"cover-protocol\",\n      subComponent: CoverProtocol,\n      image: \"images/protocols/cover-logo.svg\",\n      desc: \"Get your Idle Portfolio covered against Smart Contract risk\",\n      fileClaimUrl:\n        \"https://app.coverprotocol.com/app/claims/new?protocol=IDLE\",\n      props: {\n        contract: {\n          decimals: 18,\n          abi: CoverMint,\n          name: \"CoverMint\",\n          address: \"0x46f2f34742c1d9b9b220aabf0ff26bf59ec9f8a0\"\n        },\n        coverages: [\n          {\n            collateral: \"DAI\",\n            expirationTimestamp: 1714470400,\n            tokens: {\n              Claim: {\n                abi: CovToken,\n                name: \"COVER_IDLE_2021_02_28_DAI_0_CLAIM\",\n                address: \"0xa7dac6774e5e40f56a0bf06af6cf9b1f3d037bcc\",\n                balancerPool: {\n                  decimals: 18,\n                  abi: BalancerPool,\n                  name: \"BAL_COVER_IDLE_2021_02_28_DAI_0_CLAIM\",\n                  address: \"0xeb2b9959c7943eb3c0bdb69ede25247bab4d1c6c\"\n                }\n              },\n              NoClaim: {\n                abi: CovToken,\n                name: \"COVER_IDLE_2021_02_28_DAI_0_NOCLAIM\",\n                address: \"0x53df0bfa014b7522299c129c5a7b318f02adb469\",\n                balancerPool: {\n                  decimals: 18,\n                  abi: BalancerPool,\n                  name: \"BAL_COVER_IDLE_2021_02_28_DAI_0_NOCLAIM\",\n                  address: \"0xce0e9e7a1163badb7ee79cfe96b5148e178cab73\"\n                }\n              }\n            }\n          }\n        ]\n      }\n    },\n    batchDeposit: {\n      enabled: true,\n      icon: \"Storage\",\n      claimEnabled: true,\n      depositEnabled: true,\n      route: \"batch-deposit\",\n      label: \"Batch Deposit\",\n      subComponent: BatchDeposit,\n      desc:\n        \"Deposit your tokens in the batch and wait until its execution to claim your Idle Tokens V4\",\n      props: {\n        availableTokens: {\n          idleDAIYield: {\n            decimals: 18,\n            strategy: \"best\",\n            baseToken: \"DAI\",\n            minPoolSize: 20000,\n            migrationContract: {\n              abi: IdleBatchedMint,\n              name: \"IdleBatchedMintDAI\",\n              address: \"0x633fb4d38B24dC890b11Db2AE2B248D13F996A79\", // Main\n              // address:'0x1B7bA0361A15CCF62521cF7d2Cbb2Ba90b1521a7', // Kovan\n              functions: [\n                {\n                  name: \"deposit\",\n                  usePermit: true,\n                  label: \"Deposit\",\n                  permitName: \"permitAndDeposit\"\n                }\n              ]\n            }\n          },\n          idleUSDCYield: {\n            decimals: 6,\n            strategy: \"best\",\n            baseToken: \"USDC\",\n            minPoolSize: 20000,\n            migrationContract: {\n              abi: IdleBatchedMint,\n              name: \"IdleBatchedMintUSDC\",\n              address: \"0x562C4fd96F0652F5Fcfa96b0a33088B5a6eAeE9B\", // Main\n              // address:'0x3F35eB839f91b614195a47A593dB46b14cd7EaF8', // Kovan\n              functions: [\n                {\n                  name: \"deposit\",\n                  label: \"Deposit\",\n                  usePermit: true,\n                  permitName: \"permitEIP2612AndDepositUnlimited\"\n                }\n              ]\n            }\n          }\n          /*\n          idleUSDTYield:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'best',\n            baseToken:'USDT',\n            migrationContract:{\n              abi:IdleBatchedMint,\n              name:'IdleBatchedMintUSDT',\n              address:'0xee5c50c7c49dec47dde2f9b0233b9e14a8f00cf2',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleSUSDYield:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'best',\n            baseToken:'SUSD',\n            migrationContract:{\n              abi:IdleBatchedMint,\n              name:'IdleBatchedMintSUSD',\n              address:'0xE2eE519399a49f1A2004a25DA61e82867A69b9b1',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleTUSDYield:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'best',\n            baseToken:'TUSD',\n            migrationContract:{\n              abi:IdleBatchedMint,\n              name:'IdleBatchedMintTUSD',\n              address:'0x174a273f0ea28e55b6dd13259aa43d262b863a86',\n              functions:[\n                {\n                  usePermit:true,\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleWBTCYield:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'best',\n            baseToken:'WBTC',\n            migrationContract:{\n              abi:IdleBatchedMint,\n              name:'IdleBatchedMintWBTC',\n              address:'0xbfDC7d97559173B52EF2A2f1bC9BeCf97B0D401D',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleDAISafe:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'risk',\n            baseToken:'DAI',\n            migrationContract:{\n              abi:IdleBatchedMint,\n              name:'IdleBatchedMintDAISafe',\n              address:'0x08db226d63cE724A6091Ba82D28dFc76ceCa23d8',\n              functions:[\n                {\n                  name:'deposit',\n                  label:'Deposit',\n                  usePermit:true,\n                },\n              ]\n            },\n          },\n          idleUSDCSafe:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'risk',\n            baseToken:'USDC',\n            migrationContract:{\n              abi:IdleBatchedMint,\n              name:'IdleBatchedMintUSDCSafe',\n              address:'0xA6C89A31D59f9C68D9Cba28d690C5E52058fb472',\n              functions:[\n                {\n                  name:'deposit',\n                  label:'Deposit',\n                  usePermit:true,\n                },\n              ]\n            },\n          },\n          idleUSDTSafe:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'risk',\n            baseToken:'USDT',\n            migrationContract:{\n              abi:IdleBatchedMint,\n              name:'IdleBatchedMintUSDTSafe',\n              address:'0xd47B96Fb33b79a4Dd81a2bfa676eBB669166f619',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          }\n          */\n        }\n      }\n    },\n    batchMigration: {\n      enabled: true,\n      claimEnabled: true,\n      depositEnabled: false,\n      icon: \"FileDownload\",\n      route: \"batch-migration\",\n      label: \"Batch Migration\",\n      subComponent: BatchMigration,\n      desc:\n        \"Deposit your Idle Tokens V3 into a batch and wait until its conversion to the Idle Token V4\",\n      props: {\n        availableTokens: {\n          idleDAIYield: {\n            decimals: 18,\n            abi: IdleTokenV3,\n            strategy: \"best\",\n            baseToken: \"DAI\",\n            name: \"idleDAIYieldV3\",\n            token: \"idleDAIYieldV3\",\n            address: \"0x78751b12da02728f467a44eac40f5cbc16bd7934\",\n            migrationContract: {\n              abi: IdleBatchConverter,\n              name: \"IdleBatchConverterDAI\",\n              address: \"0xe0BfD08dA4DAf8f8BA11d1c3802009E75f963497\",\n              functions: [\n                {\n                  label: \"Deposit\",\n                  name: \"deposit\"\n                }\n              ]\n            }\n          },\n          idleUSDCYield: {\n            decimals: 18,\n            abi: IdleTokenV3,\n            strategy: \"best\",\n            baseToken: \"USDC\",\n            name: \"idleUSDCYieldV3\",\n            token: \"idleUSDCYieldV3\",\n            address: \"0x12B98C621E8754Ae70d0fDbBC73D6208bC3e3cA6\",\n            migrationContract: {\n              abi: IdleBatchConverter,\n              name: \"IdleBatchConverterUSDC\",\n              address: \"0x86c8b56d124c2a8e7ea8a9e6a7f8ed99dde5cca8\",\n              functions: [\n                {\n                  label: \"Deposit\",\n                  name: \"deposit\"\n                }\n              ]\n            }\n          },\n          idleUSDTYield: {\n            decimals: 18,\n            abi: IdleTokenV3,\n            strategy: \"best\",\n            baseToken: \"USDT\",\n            name: \"idleUSDTYieldV3\",\n            token: \"idleUSDTYieldV3\",\n            address: \"0x63D27B3DA94A9E871222CB0A32232674B02D2f2D\",\n            migrationContract: {\n              abi: IdleBatchConverter,\n              name: \"IdleBatchConverterUSDT\",\n              address: \"0xee5c50c7c49dec47dde2f9b0233b9e14a8f00cf2\",\n              functions: [\n                {\n                  label: \"Deposit\",\n                  name: \"deposit\"\n                }\n              ]\n            }\n          },\n          idleSUSDYield: {\n            decimals: 18,\n            abi: IdleTokenV3,\n            strategy: \"best\",\n            baseToken: \"SUSD\",\n            name: \"idleSUSDYieldV3\",\n            token: \"idleSUSDYieldV3\",\n            address: \"0xe79e177d2a5c7085027d7c64c8f271c81430fc9b\",\n            migrationContract: {\n              abi: IdleBatchConverter,\n              name: \"IdleBatchConverterSUSD\",\n              address: \"0xE2eE519399a49f1A2004a25DA61e82867A69b9b1\",\n              functions: [\n                {\n                  label: \"Deposit\",\n                  name: \"deposit\"\n                }\n              ]\n            }\n          },\n          idleTUSDYield: {\n            decimals: 18,\n            abi: IdleTokenV3,\n            strategy: \"best\",\n            baseToken: \"TUSD\",\n            name: \"idleTUSDYieldV3\",\n            token: \"idleTUSDYieldV3\",\n            address: \"0x51C77689A9c2e8cCBEcD4eC9770a1fA5fA83EeF1\",\n            migrationContract: {\n              abi: IdleBatchConverter,\n              name: \"IdleBatchConverterTUSD\",\n              address: \"0x174a273f0ea28e55b6dd13259aa43d262b863a86\",\n              functions: [\n                {\n                  label: \"Deposit\",\n                  name: \"deposit\"\n                }\n              ]\n            }\n          },\n          idleWBTCYield: {\n            decimals: 18,\n            abi: IdleTokenV3,\n            strategy: \"best\",\n            baseToken: \"WBTC\",\n            name: \"idleWBTCYieldV3\",\n            token: \"idleWBTCYieldV3\",\n            address: \"0xD6f279B7ccBCD70F8be439d25B9Df93AEb60eC55\",\n            migrationContract: {\n              abi: IdleBatchConverter,\n              name: \"IdleBatchConverterWBTC\",\n              address: \"0xbfDC7d97559173B52EF2A2f1bC9BeCf97B0D401D\",\n              functions: [\n                {\n                  label: \"Deposit\",\n                  name: \"deposit\"\n                }\n              ]\n            }\n          },\n          idleDAISafe: {\n            decimals: 18,\n            abi: IdleTokenV3,\n            strategy: \"risk\",\n            baseToken: \"DAI\",\n            name: \"idleDAISafeV3\",\n            token: \"idleDAISafeV3\",\n            address: \"0x1846bdfDB6A0f5c473dEc610144513bd071999fB\",\n            migrationContract: {\n              abi: IdleBatchConverter,\n              name: \"IdleBatchConverterDAISafe\",\n              address: \"0x08db226d63cE724A6091Ba82D28dFc76ceCa23d8\",\n              functions: [\n                {\n                  label: \"Deposit\",\n                  name: \"deposit\"\n                }\n              ]\n            }\n          },\n          idleUSDCSafe: {\n            decimals: 18,\n            abi: IdleTokenV3,\n            strategy: \"risk\",\n            baseToken: \"USDC\",\n            name: \"idleUSDCSafeV3\",\n            token: \"idleUSDCSafeV3\",\n            address: \"0xcDdB1Bceb7a1979C6caa0229820707429dd3Ec6C\",\n            migrationContract: {\n              abi: IdleBatchConverter,\n              name: \"IdleBatchConverterUSDCSafe\",\n              address: \"0xA6C89A31D59f9C68D9Cba28d690C5E52058fb472\",\n              functions: [\n                {\n                  label: \"Deposit\",\n                  name: \"deposit\"\n                }\n              ]\n            }\n          },\n          idleUSDTSafe: {\n            decimals: 18,\n            abi: IdleTokenV3,\n            strategy: \"risk\",\n            baseToken: \"USDT\",\n            name: \"idleUSDTSafeV3\",\n            token: \"idleUSDTSafeV3\",\n            address: \"0x42740698959761baf1b06baa51efbd88cb1d862b\",\n            migrationContract: {\n              abi: IdleBatchConverter,\n              name: \"IdleBatchConverterUSDTSafe\",\n              address: \"0xd47B96Fb33b79a4Dd81a2bfa676eBB669166f619\",\n              functions: [\n                {\n                  label: \"Deposit\",\n                  name: \"deposit\"\n                }\n              ]\n            }\n          }\n        }\n      }\n    },\n    tokenMigration: {\n      enabled: true,\n      icon: \"SwapHoriz\",\n      route: \"convert\",\n      label: \"Token Migration\",\n      desc:\n        \"Easily convert your Compound, Fulcrum, Aave and iEarn tokens into Idle\",\n      subComponent: TokenMigration,\n      props: {\n        migrationContract: {\n          name: \"IdleConverterV4\",\n          abi: IdleConverterPersonalSignV4,\n          address: \"0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743\",\n          oldAddresses: [],\n          functions: [\n            {\n              label: \"Migrate\",\n              name: \"migrateFromToIdle\"\n            }\n          ]\n        },\n        availableStrategies: [\"best\", \"risk\"],\n        availableTokens: {\n          idleDAIv2: {\n            decimals: 18,\n            enabled: true,\n            protocol: \"idle\",\n            baseToken: \"DAI\",\n            abi: IdleTokenV2,\n            token: \"idleDAIOld\",\n            icon: \"images/tokens/idleDAI.svg\",\n            migrateFunction: \"migrateFromToIdle\",\n            address: \"0x10eC0D497824e342bCB0EDcE00959142aAa766dD\"\n          },\n          cDAI: {\n            decimals: 8,\n            enabled: true,\n            token: \"cDAI\",\n            baseToken: \"DAI\",\n            protocol: \"compound\",\n            migrateFunction: \"migrateFromCompoundToIdle\",\n            address: \"0x5d3a536E4D6DbD6114cc1Ead35777bAB948E3643\"\n          },\n          iDAI: {\n            decimals: 18,\n            enabled: false,\n            token: \"iDAI\",\n            baseToken: \"DAI\",\n            protocol: \"fulcrum\",\n            migrateFunction: \"migrateFromFulcrumToIdle\",\n            address: \"0x493c57c4763932315a328269e1adad09653b9081\"\n          },\n          aDAI: {\n            decimals: 18,\n            enabled: true,\n            token: \"aDAI\",\n            protocol: \"aave\",\n            baseToken: \"DAI\",\n            migrateFunction: \"migrateFromAaveToIdle\",\n            address: \"0xfC1E690f61EFd961294b3e1Ce3313fBD8aa4f85d\"\n          },\n          yDAIv3: {\n            decimals: 18,\n            enabled: true,\n            token: \"yDAIv3\",\n            abi: yDAIv3.abi,\n            baseToken: \"DAI\",\n            protocol: \"iearn\",\n            icon: \"images/tokens/yDAI.png\",\n            migrateFunction: \"migrateFromIearnToIdle\",\n            address: \"0xC2cB1040220768554cf699b0d863A3cd4324ce32\"\n          },\n          yDAIv2: {\n            decimals: 18,\n            enabled: true,\n            token: \"yDAIv2\",\n            baseToken: \"DAI\",\n            abi: yDAIv3.abi,\n            protocol: \"iearn\",\n            icon: \"images/tokens/yDAI.png\",\n            migrateFunction: \"migrateFromIearnToIdle\",\n            address: \"0x16de59092dAE5CcF4A1E6439D611fd0653f0Bd01\"\n          },\n          idleUSDCv2: {\n            decimals: 18,\n            enabled: true,\n            protocol: \"idle\",\n            abi: IdleTokenV2,\n            baseToken: \"USDC\",\n            token: \"idleUSDCOld\",\n            icon: \"images/tokens/idleUSDC.svg\",\n            migrateFunction: \"migrateFromToIdle\",\n            address: \"0xeB66ACc3d011056B00ea521F8203580C2E5d3991\"\n          },\n          cUSDC: {\n            decimals: 8,\n            enabled: true,\n            token: \"cUSDC\",\n            baseToken: \"USDC\",\n            protocol: \"compound\",\n            migrateFunction: \"migrateFromCompoundToIdle\",\n            address: \"0x39aa39c021dfbae8fac545936693ac917d5e7563\"\n          },\n          iUSDC: {\n            decimals: 6,\n            enabled: false,\n            token: \"iUSDC\",\n            baseToken: \"USDC\",\n            protocol: \"fulcrum\",\n            migrateFunction: \"migrateFromFulcrumToIdle\",\n            address: \"0xf013406a0b1d544238083df0b93ad0d2cbe0f65f\"\n          },\n          aUSDC: {\n            decimals: 6,\n            enabled: true,\n            token: \"aUSDC\",\n            protocol: \"aave\",\n            baseToken: \"USDC\",\n            migrateFunction: \"migrateFromAaveToIdle\",\n            address: \"0x9bA00D6856a4eDF4665BcA2C2309936572473B7E\"\n          },\n          yUSDCv3: {\n            decimals: 6,\n            enabled: true,\n            token: \"yUSDCv3\",\n            protocol: \"iearn\",\n            abi: yUSDCv3.abi,\n            baseToken: \"USDC\",\n            icon: \"images/tokens/yUSDC.png\",\n            migrateFunction: \"migrateFromIearnToIdle\",\n            address: \"0x26EA744E5B887E5205727f55dFBE8685e3b21951\"\n          },\n          yUSDCv2: {\n            decimals: 6,\n            enabled: true,\n            token: \"yUSDCv2\",\n            protocol: \"iearn\",\n            abi: yUSDCv3.abi,\n            baseToken: \"USDC\",\n            icon: \"images/tokens/yUSDC.png\",\n            migrateFunction: \"migrateFromIearnToIdle\",\n            address: \"0xd6aD7a6750A7593E092a9B218d66C0A814a3436e\"\n          },\n          cUSDT: {\n            decimals: 8,\n            enabled: true,\n            token: \"cUSDT\",\n            baseToken: \"USDT\",\n            protocol: \"compound\",\n            migrateFunction: \"migrateFromCompoundToIdle\",\n            address: \"0xf650c3d88d12db855b8bf7d11be6c55a4e07dcc9\"\n          },\n          iUSDT: {\n            decimals: 6,\n            enabled: false,\n            token: \"iUSDT\",\n            baseToken: \"USDT\",\n            protocol: \"fulcrum\",\n            migrateFunction: \"migrateFromFulcrumToIdle\",\n            address: \"0x8326645f3aa6de6420102fdb7da9e3a91855045b\"\n          },\n          aUSDT: {\n            decimals: 6,\n            enabled: true,\n            token: \"aUSDT\",\n            protocol: \"aave\",\n            baseToken: \"USDT\",\n            migrateFunction: \"migrateFromAaveToIdle\",\n            address: \"0x71fc860F7D3A592A4a98740e39dB31d25db65ae8\"\n          },\n          yUSDTv3: {\n            decimals: 6,\n            enabled: true,\n            token: \"yUSDTv3\",\n            abi: yUSDTv3.abi,\n            protocol: \"iearn\",\n            baseToken: \"USDT\",\n            icon: \"images/tokens/yUSDT.png\",\n            migrateFunction: \"migrateFromIearnToIdle\",\n            address: \"0xE6354ed5bC4b393a5Aad09f21c46E101e692d447\"\n          },\n          yUSDTv2: {\n            decimals: 6,\n            enabled: true,\n            token: \"yUSDTv2\",\n            abi: yUSDTv3.abi,\n            protocol: \"iearn\",\n            baseToken: \"USDT\",\n            icon: \"images/tokens/yUSDT.png\",\n            migrateFunction: \"migrateFromIearnToIdle\",\n            address: \"0x83f798e925BcD4017Eb265844FDDAbb448f1707D\"\n          },\n          idleSUSDv2: {\n            decimals: 18,\n            enabled: true,\n            abi: IdleTokenV2,\n            protocol: \"idle\",\n            baseToken: \"SUSD\",\n            token: \"idleSUSDYieldOld\",\n            availableStrategies: [\"best\"],\n            migrateFunction: \"migrateFromToIdle\",\n            icon: \"images/tokens/idleSUSDYield.svg\",\n            address: \"0xb39ca0261a1b2986a6a9Fe38d344B56374963dE5\"\n          },\n          aSUSD: {\n            decimals: 6,\n            enabled: true,\n            token: \"aSUSD\",\n            protocol: \"aave\",\n            baseToken: \"SUSD\",\n            migrateFunction: \"migrateFromAaveToIdle\",\n            address: \"0x625aE63000f46200499120B906716420bd059240\"\n          },\n          ySUSDv3: {\n            decimals: 18,\n            enabled: true,\n            token: \"ySUSDv3\",\n            abi: ySUSDv3,\n            baseToken: \"SUSD\",\n            protocol: \"iearn\",\n            availableStrategies: [\"best\"],\n            icon: \"images/tokens/ySUSDv3.png\",\n            migrateFunction: \"migrateFromIearnToIdle\",\n            address: \"0xf61718057901f84c4eec4339ef8f0d86d2b45600\"\n          },\n          idleTUSDv2: {\n            decimals: 18,\n            enabled: true,\n            abi: IdleTokenV2,\n            protocol: \"idle\",\n            baseToken: \"TUSD\",\n            token: \"idleTUSDYieldOld\",\n            availableStrategies: [\"best\"],\n            migrateFunction: \"migrateFromToIdle\",\n            icon: \"images/tokens/idleTUSDYield.svg\",\n            address: \"0x7DB7A4a50b26602E56536189Aa94678C80F8E5b6\"\n          },\n          aTUSD: {\n            decimals: 6,\n            enabled: true,\n            token: \"aTUSD\",\n            protocol: \"aave\",\n            baseToken: \"TUSD\",\n            migrateFunction: \"migrateFromAaveToIdle\",\n            address: \"0x4DA9b813057D04BAef4e5800E36083717b4a0341\"\n          },\n          yTUSDv3: {\n            decimals: 18,\n            enabled: true,\n            abi: yTUSDv3,\n            token: \"yTUSDv3\",\n            baseToken: \"TUSD\",\n            protocol: \"iearn\",\n            icon: \"images/tokens/yTUSDv3.png\",\n            migrateFunction: \"migrateFromIearnToIdle\",\n            address: \"0x73a052500105205d34daf004eab301916da8190f\"\n          },\n          cWBTC: {\n            decimals: 8,\n            enabled: true,\n            token: \"cWBTC\",\n            baseToken: \"WBTC\",\n            protocol: \"compound\",\n            migrateFunction: \"migrateFromCompoundToIdle\",\n            address: \"0xc11b1268c1a384e55c48c2391d8d480264a3a7f4\"\n          },\n          iWBTC: {\n            decimals: 8,\n            enabled: false,\n            token: \"iWBTC\",\n            baseToken: \"WBTC\",\n            protocol: \"fulcrum\",\n            migrateFunction: \"migrateFromFulcrumToIdle\",\n            address: \"0xba9262578efef8b3aff7f60cd629d6cc8859c8b5\"\n          },\n          aWBTC: {\n            decimals: 8,\n            enabled: true,\n            token: \"aWBTC\",\n            protocol: \"aave\",\n            baseToken: \"WBTC\",\n            migrateFunction: \"migrateFromAaveToIdle\",\n            address: \"0xfc4b8ed459e00e5400be803a9bb3954234fd50e3\"\n          }\n        }\n      }\n    },\n    addFunds: {\n      enabled: true,\n      icon: \"AddCircleOutline\",\n      route: \"add-funds\",\n      label: \"Add Funds\",\n      desc: \"Buy tokens with your Bank account, Credit card or Ethereum Wallet\",\n      subComponent: BuyModal,\n      directProps: {\n        showInline: true,\n        showAllTokens: true\n      }\n    },\n    tokenSwap: {\n      enabled: true,\n      icon: \"Sync\",\n      route: \"token-swap\",\n      label: \"Token Swap\",\n      desc: \"Easily swap your tokens using Kyber Swap widget\",\n      subComponent: TokenSwap,\n      props: {\n        availableTokens: {\n          ETH: { token: \"ETH\" },\n          DAI: { token: \"DAI\" },\n          SUSD: { token: \"SUSD\" },\n          TUSD: { token: \"TUSD\" },\n          USDC: { token: \"USDC\" },\n          USDS: { token: \"USDS\" },\n          USDT: { token: \"USDT\" },\n          WBTC: { token: \"WBTC\" },\n          WETH: { token: \"WETH\" },\n          BUSD: { token: \"BUSD\" },\n          EURS: { token: \"EURS\" },\n          \"2KEY\": { token: \"2KEY\" },\n          ABT: { token: \"ABT\" },\n          ABYSS: { token: \"ABYSS\" },\n          AMPL: { token: \"AMPL\" },\n          ANT: { token: \"ANT\" },\n          BAM: { token: \"BAM\" },\n          BAND: { token: \"BAND\" },\n          BAT: { token: \"BAT\" },\n          BLZ: { token: \"BLZ\" },\n          BNT: { token: \"BNT\" },\n          BQX: { token: \"BQX\" },\n          BTU: { token: \"BTU\" },\n          CDT: { token: \"CDT\" },\n          CVC: { token: \"CVC\" },\n          DAT: { token: \"DAT\" },\n          DGX: { token: \"DGX\" },\n          EKG: { token: \"EKG\" },\n          ELF: { token: \"ELF\" },\n          ENJ: { token: \"ENJ\" },\n          EQUAD: { token: \"EQUAD\" },\n          FXC: { token: \"FXC\" },\n          GDC: { token: \"GDC\" },\n          GEN: { token: \"GEN\" },\n          GHT: { token: \"GHT\" },\n          GNO: { token: \"GNO\" },\n          IOST: { token: \"IOST\" },\n          KEY: { token: \"KEY\" },\n          KNC: { token: \"KNC\" },\n          LEND: { token: \"LEND\" },\n          LINK: { token: \"LINK\" },\n          LOOM: { token: \"LOOM\" },\n          LRC: { token: \"LRC\" },\n          MANA: { token: \"MANA\" },\n          MCO: { token: \"MCO\" },\n          MET: { token: \"MET\" },\n          MFG: { token: \"MFG\" },\n          MKR: { token: \"MKR\" },\n          MLN: { token: \"MLN\" },\n          MTL: { token: \"MTL\" },\n          MYB: { token: \"MYB\" },\n          NEXXO: { token: \"NEXXO\" },\n          NPXS: { token: \"NPXS\" },\n          OGN: { token: \"OGN\" },\n          OMG: { token: \"OMG\" },\n          OST: { token: \"OST\" },\n          PAX: { token: \"PAX\" },\n          PBTC: { token: \"PBTC\" },\n          PLR: { token: \"PLR\" },\n          PNK: { token: \"PNK\" },\n          POLY: { token: \"POLY\" },\n          POWR: { token: \"POWR\" },\n          PT: { token: \"PT\" },\n          QKC: { token: \"QKC\" },\n          QNT: { token: \"QNT\" },\n          RAE: { token: \"RAE\" },\n          REN: { token: \"REN\" },\n          REP: { token: \"REP\" },\n          REQ: { token: \"REQ\" },\n          RLC: { token: \"RLC\" },\n          RSR: { token: \"RSR\" },\n          RSV: { token: \"RSV\" },\n          SAN: { token: \"SAN\" },\n          SNT: { token: \"SNT\" },\n          SNX: { token: \"SNX\" },\n          SPIKE: { token: \"SPIKE\" },\n          SPN: { token: \"SPN\" },\n          TKN: { token: \"TKN\" },\n          TKX: { token: \"TKX\" },\n          TRYB: { token: \"TRYB\" },\n          UBT: { token: \"UBT\" },\n          UPP: { token: \"UPP\" },\n          ZRX: { token: \"ZRX\" }\n        }\n      },\n      directProps: {}\n    }\n  },\n  insurance: {\n    nexusMutual: {\n      label: \"Nexus Mutual\",\n      image: \"images/protocols/nexus-mutual.png\",\n      imageDark: \"images/protocols/nexus-mutual-white.png\"\n    },\n    coverProtocol: {\n      label: \"Cover Protocol\",\n      image: \"images/protocols/cover-logo.svg\",\n      imageDark: \"images/protocols/cover-logo.svg\"\n    }\n  },\n  payments: {\n    // Payment methods & providers\n    methods: {\n      bank: {\n        defaultProvider: null,\n        showDefaultOnly: false,\n        props: {\n          imageSrc: \"images/bank.png\",\n          caption: \"Bank Account\"\n        }\n      },\n      card: {\n        defaultProvider: null,\n        showDefaultOnly: false,\n        props: {\n          imageSrc: \"images/debit-card.png\",\n          caption: \"Credit Card\"\n        }\n      },\n      wallet: {\n        defaultProvider: \"zeroExInstant\",\n        showDefaultOnly: false,\n        props: {\n          imageSrc: \"images/ethereum-wallet.svg\",\n          caption: \"Ethereum Wallet\",\n          imageProps: {\n            padding: [\"0\", \"5px\"]\n          }\n        }\n      }\n    },\n    providers: {\n      wyre: {\n        enabled: true,\n        imageSrc: \"images/payments/wyre.svg\",\n        imageProps: {\n          width: [\"100%\", \"auto\"],\n          height: [\"auto\", \"35px\"],\n          my: \"8px\"\n        },\n        caption: \"Buy with\",\n        captionPos: \"top\",\n        subcaption: \"~ 0.75% fee ~\",\n        supportedMethods: [\"card\"],\n        supportedCountries: [\"USA\", \"GBR\", \"AUS\", \"BRA\", \"CHN\", \"MEX\", \"EUR\"],\n        supportedTokens: [\"USDC\", \"DAI\", \"ETH\"],\n        remoteResources: {},\n        env: \"prod\",\n        envParams: {\n          test: {\n            accountId: \"AC_Q2Y4AARC3TP\"\n          },\n          prod: {\n            accountId: \"AC_PQQBX33XVEQ\"\n          }\n        },\n        getInfo: props => {\n          const info = {};\n          if (props.selectedMethod && props.selectedMethod) {\n            switch (props.selectedMethod) {\n              case \"bank\":\n                info.subcaption = `~ 0.75% fee ~\\nKYC REQUIRED`;\n                break;\n              case \"card\":\n                info.subcaption = `~ 3.2% fee ~\\n$250.00/day`;\n                break;\n              default:\n                break;\n            }\n          }\n          return info;\n        },\n        getInitParams: (props, globalConfigs, buyParams) => {\n          const env = globalConfigs.payments.providers.wyre.env;\n          const envParams =\n            globalConfigs.payments.providers.wyre.envParams[env];\n          const referrerAccountId = envParams.accountId;\n          const url = \"https://pay.sendwyre.com/purchase\";\n\n          const params = {\n            dest: `ethereum:${props.account}`,\n            destCurrency: buyParams.selectedToken\n              ? buyParams.selectedToken\n              : props.tokenConfig.wyre && props.tokenConfig.wyre.destCurrency\n              ? props.tokenConfig.wyre.destCurrency\n              : props.selectedToken,\n            referrerAccountId,\n            redirectUrl: globalConfigs.baseURL\n            // failureRedirectUrl:globalConfigs.baseURL\n          };\n\n          return (\n            `${url}?` +\n            Object.keys(params)\n              .map(\n                k => encodeURIComponent(k) + \"=\" + encodeURIComponent(params[k])\n              )\n              .join(\"&\")\n          );\n        },\n        render: (initParams, amount, props, globalConfigs) => {\n          const wyreWidget = document.getElementById(\"wyre-widget\");\n          if (!wyreWidget) {\n            const iframeBox = document.createElement(\"div\");\n            iframeBox.innerHTML = `\n              <div id=\"wyre-widget\" class=\"wyre-widget iframe-container\" style=\"position:fixed;display:flex;justify-content:center;align-items:center;top:0;left:0;width:100%;height:100%;z-index:999\">\n                <div id=\"wyre-widget-overlay\" style=\"position:fixed;top:0;left:0;width:100%;height:100%;background:rgba(0,0,0,0.7);z-index:1\"></div>\n                <a class=\"wyre-close-button\" href=\"javascript:void(0);\" onclick=\"document.getElementById('wyre-widget').remove();\" style=\"position:absolute;width:30px;height:30px;top:10px;right:10px;font-size:22px;line-height:30px;text-align:center;color:#fff;font-weight:bold;z-index:10;text-decoration:none\">✕</a>\n                <div id=\"wyre-widget-container\" style=\"position:relative;z-index:2;width:400px;height:650px\">\n                  <iframe\n                    style=\"position:relative;z-index:2;\"\n                    frameborder=\"0\"\n                    height=\"100%\"\n                    src=\"${initParams}\"\n                    width=\"100%\"\n                  >\n                    <p>Your browser does not support iframes.</p>\n                  </iframe>\n                  <div id=\"wyre-widget-loading-placeholder\" style=\"position:absolute;background:#fff;width:100%;height:100%;z-index:1;top:0;display:flex;justify-content:center;align-items:center;\">\n                    <div style=\"display:flex;flex-direction:row;align-items:center\">\n                      <img src=\"${globalConfigs.payments.providers.wyre.imageSrc}\" style=\"height:50px;\" />\n                      <h3 style=\"font-weight:600;font-style:italic;color:#000;padding-left:10px\">is loading...</h3>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            `;\n            document.body.appendChild(iframeBox);\n\n            // Add wyre Widget style (mobile)\n            if (!document.getElementById(\"wyreWidget_style\")) {\n              const wyreStyle = document.createElement(\"style\");\n              wyreStyle.id = \"wyreWidget_style\";\n              wyreStyle.innerHTML = `\n              @media (max-width: 40em){\n                #wyre-widget {\n                  align-items: flex-start !important;\n                }\n                #wyre-widget-overlay{\n                  background:#fff !important;\n                }\n                #wyre-widget-container{\n                  width:100vw;\n                  min-height: calc( 100vh - 60px ) !important;\n                }\n              }`;\n              document.body.appendChild(wyreStyle);\n            }\n          }\n        }\n      },\n      ramp: {\n        enabled: true,\n        imageSrc: \"images/payments/ramp.png\",\n        imageProps: {\n          width: [\"100%\", \"auto\"],\n          height: [\"auto\", \"35px\"],\n          my: \"8px\"\n        },\n        caption: \"Buy with\",\n        captionPos: \"top\",\n        subcaption: `~ 2.5% fee ~\\nEUR / GBP`,\n        supportedMethods: [\"bank\", \"card\"],\n        badge: {\n          text: \"NO ID REQUIRED\",\n          color: \"#fff\",\n          bgColor: \"#0cade4\"\n        },\n        supportedTokens: [\"ETH\", \"DAI\", \"USDC\"],\n        supportedCountries: [\n          \"USA\",\n          \"GBR\",\n          \"AUS\",\n          \"BRA\",\n          \"CAN\",\n          \"EUR\",\n          \"HKG\",\n          \"IND\",\n          \"MEX\",\n          \"RUS\",\n          \"ZAF\",\n          \"KOR\"\n        ],\n        getInfo: props => {\n          const info = {};\n          switch (props.selectedMethod) {\n            case \"bank\":\n              info.supportedCountries = [\"GBR\", \"EUR\"];\n              info.subcaption = `~ 1.49-1.99% fee ~`;\n              break;\n            case \"card\":\n              info.supportedCountries = [\n                \"USA\",\n                \"GBR\",\n                \"AUS\",\n                \"BRA\",\n                \"CAN\",\n                \"EUR\",\n                \"HKG\",\n                \"IND\",\n                \"MEX\",\n                \"RUS\",\n                \"ZAF\",\n                \"KOR\"\n              ];\n              info.subcaption = `~ 2.90% fee ~`;\n              break;\n            default:\n              break;\n          }\n          return info;\n        },\n        getInitParams: (props, globalConfigs, buyParams) => {\n          return {\n            hostAppName: \"Idle\",\n            userAddress: props.account,\n            hostApiKey: env.REACT_APP_RAMP_KEY,\n            variant: props.isMobile ? \"mobile\" : \"desktop\",\n            hostLogoUrl: `${globalConfigs.baseURL}/images/idle-round.png`,\n            swapAsset: buyParams.selectedToken\n              ? buyParams.selectedToken\n              : props.tokenConfig.ramp && props.tokenConfig.ramp.swapAsset\n              ? props.tokenConfig.ramp.swapAsset\n              : props.selectedToken\n          };\n        },\n        render: (initParams, amount, props, globalConfigs) => {\n          new RampInstantSDK(initParams)\n            .on(\"*\", async event => {\n              const functionsUtil = new FunctionsUtil(props);\n              let tokenDecimals = null;\n              let tokenAmount = null;\n\n              switch (event.type) {\n                case \"PURCHASE_SUCCESSFUL\":\n                  // Update balance\n                  props.getAccountBalance();\n\n                  tokenDecimals = await props.getTokenDecimals();\n\n                  tokenAmount = event.payload.purchase.tokenAmount;\n                  tokenAmount = functionsUtil\n                    .BNify(tokenAmount.toString())\n                    .div(\n                      functionsUtil.BNify(\n                        Math.pow(10, parseInt(tokenDecimals)).toString()\n                      )\n                    )\n                    .toString();\n\n                  // Toast message\n                  window.toastProvider.addMessage(`Payment completed`, {\n                    secondaryMessage: `${tokenAmount} ${props.selectedToken} are now in your wallet`,\n                    colorTheme: \"light\",\n                    actionHref: \"\",\n                    actionText: \"\",\n                    variant: \"success\"\n                  });\n\n                  break;\n                default:\n                  break;\n              }\n            })\n            .show();\n        }\n      },\n      transak: {\n        enabled: true,\n        imageSrc: \"images/payments/transak.png\",\n        imageProps: {\n          width: [\"100%\", \"auto\"],\n          height: [\"auto\", \"35px\"],\n          my: \"8px\"\n        },\n        caption: \"Buy with\",\n        captionPos: \"top\",\n        subcaption: `~ 1.5% fee ~\\nALL CURRENCIES`,\n        supportedMethods: [\"bank\", \"card\"],\n        supportedCountries: [\n          \"USA\",\n          \"GBR\",\n          \"AUS\",\n          \"BRA\",\n          \"CHN\",\n          \"MEX\",\n          \"EUR\",\n          \"IND\"\n        ],\n        supportedTokens: [\"ETH\", \"DAI\", \"USDC\", \"USDT\", \"TUSD\", \"SUSD\", \"WBTC\"],\n        remoteResources: { \"https://global.transak.com/v1/widget.js\": {} },\n        env: \"prod\",\n        badge: {\n          text: \"INSTANT\",\n          bgColor: \"#0069ee\"\n        },\n        envParams: {\n          test: {\n            apiKey: env.REACT_APP_TRANSAK_KEY_TEST,\n            url: \"https://global.transak.com\"\n          },\n          prod: {\n            apiKey: env.REACT_APP_TRANSAK_KEY_PROD,\n            url: \"https://global.transak.com\"\n          }\n        },\n        getInfo: props => {\n          const info = {};\n\n          const selectedMethod = props.selectedMethod && props.selectedMethod;\n          let fee = selectedMethod === \"bank\" ? \"1.5%\" : \"4.5%\";\n\n          if (props.selectedCountry && props.selectedCountry.value) {\n            switch (props.selectedCountry.value.toUpperCase()) {\n              case \"GBR\":\n                info.badge = {\n                  text: \"INSTANT\",\n                  bgColor: \"#0069ee\"\n                };\n                info.subcaption = `~ ${fee} fee ~\\nGBP ONLY`;\n                break;\n              case \"IND\":\n                fee = \"1.0%\";\n                info.badge = {\n                  text: \"INSTANT\",\n                  bgColor: \"#0069ee\"\n                };\n                info.subcaption = `~ ${fee} fee ~\\nINR ONLY`;\n                break;\n              case \"EUR\":\n                if (selectedMethod === \"bank\") {\n                  info.badge = {\n                    text: \"SEPA\",\n                    color: \"#f7cb05 \",\n                    bgColor: \"#10288a\"\n                  };\n                } else {\n                  info.badge = {\n                    text: \"INSTANT\",\n                    bgColor: \"#0069ee\"\n                  };\n                }\n                info.subcaption = `~ ${fee} fee ~\\nEUR ONLY`;\n                break;\n              default:\n                break;\n            }\n          }\n          return info;\n        },\n        getInitParams: (props, globalConfigs, buyParams) => {\n          const env = globalConfigs.payments.providers.transak.env;\n          const envParams =\n            globalConfigs.payments.providers.transak.envParams[env];\n\n          let fiatCurrency = null;\n\n          if (buyParams.selectedCountry && buyParams.selectedCountry.value) {\n            switch (buyParams.selectedCountry.value.toUpperCase()) {\n              case \"IND\":\n                fiatCurrency = \"INR\";\n                break;\n              case \"GBR\":\n                fiatCurrency = \"GBP\";\n                break;\n              case \"EUR\":\n                fiatCurrency = \"EUR\";\n                break;\n              case \"USA\":\n                fiatCurrency = \"USD\";\n                break;\n              default:\n                fiatCurrency = \"GBP\";\n                break;\n            }\n          }\n\n          let cryptoCurrencyCode = buyParams.selectedToken\n            ? buyParams.selectedToken.toLowerCase()\n            : props.tokenConfig.transak &&\n              props.tokenConfig.transak.currencyCode\n            ? props.tokenConfig.transak.currencyCode\n            : props.selectedToken;\n          cryptoCurrencyCode = cryptoCurrencyCode.toUpperCase();\n\n          const apiKey = envParams.apiKey;\n          const walletAddress = props.account;\n          const partnerCustomerId = props.account;\n          const disableWalletAddressForm = false;\n\n          return {\n            apiKey,\n            cryptoCurrencyCode,\n            walletAddress,\n            fiatCurrency,\n            partnerCustomerId,\n            disableWalletAddressForm,\n            width: \"100%\",\n            height: \"100%\"\n            // email,\n          };\n        },\n        render: (initParams, amount, props, globalConfigs) => {\n          if (window.transakGlobal) {\n            const transakWidget = document.getElementById(\"transak-widget\");\n            if (!transakWidget) {\n              const iframeBox = document.createElement(\"div\");\n              iframeBox.innerHTML = `\n                <div id=\"transak-widget\" class=\"transak-widget iframe-container\" style=\"position:fixed;display:flex;justify-content:center;align-items:center;top:0;left:0;width:100%;height:100%;z-index:999\">\n                  <div id=\"transak-widget-overlay\" style=\"position:fixed;top:0;left:0;width:100%;height:100%;background:rgba(0,0,0,0.7);z-index:1\" onclick=\"document.getElementById('transak-widget').remove();\"></div>\n                  <a class=\"transak-close-button\" href=\"javascript:void(0);\" onclick=\"document.getElementById('transak-widget').remove();\" style=\"position:absolute;width:30px;height:30px;top:10px;right:10px;font-size:22px;line-height:30px;text-align:center;color:#fff;font-weight:bold;z-index:10;text-decoration:none\">✕</a>\n                  <div class=\"transak-widget-container\" style=\"position:relative;z-index:2;width:500px;height:550px\">\n                    <div id=\"transak-widget-container\" style=\"position:relative;z-index:2;width:500px;height:550px\"></div>\n                    <div id=\"transak-widget-loading-placeholder\" style=\"position:absolute;background:#fff;width:100%;height:100%;z-index:1;top:0;display:flex;justify-content:center;align-items:center;\">\n                      <div style=\"display:flex;flex-direction:row;align-items:center\">\n                        <img src=\"${globalConfigs.payments.providers.transak.imageSrc}\" style=\"height:50px;\" />\n                        <h3 style=\"font-weight:600;font-style:italic;color:#0040ca\">is loading...</h3>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              `;\n              document.body.appendChild(iframeBox);\n\n              // Add transak Widget style (mobile)\n              if (!document.getElementById(\"transakWidget_style\")) {\n                const transakStyle = document.createElement(\"style\");\n                transakStyle.id = \"transakWidget_style\";\n                transakStyle.innerHTML = `\n                @media (max-width: 40em){\n                  #transak-widget {\n                    align-items: flex-start !important;\n                  }\n                  #transak-widget-overlay{\n                    background:#fff !important;\n                  }\n                  #transak-widget-container{\n                    width:100vw;\n                    min-height: calc( 100vh - 60px ) !important;\n                  }\n                }`;\n                document.body.appendChild(transakStyle);\n              }\n            }\n\n            window.transakGlobal.render(initParams, \"transak-widget-container\");\n          }\n        }\n      },\n      moonpay: {\n        enabled: true,\n        imageSrc: \"images/payments/moonpay.svg\",\n        imageProps: {\n          width: [\"100%\", \"auto\"],\n          height: [\"auto\", \"35px\"],\n          my: \"8px\"\n        },\n        caption: \"Buy with\",\n        captionPos: \"top\",\n        subcaption: \"~ 4.5% fee ~\",\n        supportedMethods: [\"card\", \"bank\"],\n        supportedCountries: [\n          \"GBR\",\n          \"EUR\",\n          \"AUS\",\n          \"BRA\",\n          \"CHN\",\n          \"MEX\",\n          \"CAN\",\n          \"HKG\",\n          \"RUS\",\n          \"ZAF\",\n          \"KOR\"\n        ],\n        supportedTokens: [\"USDC\", \"DAI\", \"ETH\"],\n        env: \"prod\",\n        envParams: {\n          test: {\n            url: \"https://buy-staging.moonpay.io\",\n            apiKey: env.REACT_APP_MOONPAY_KEY_TEST\n          },\n          prod: {\n            url: \"https://buy.moonpay.io\",\n            apiKey: env.REACT_APP_MOONPAY_KEY_PROD\n          }\n        },\n        getInfo: props => {\n          const info = {};\n          if (props.selectedMethod && props.selectedMethod) {\n            switch (props.selectedMethod) {\n              case \"bank\":\n                if (props.selectedCountry && props.selectedCountry.value) {\n                  switch (props.selectedCountry.value.toUpperCase()) {\n                    case \"EUR\":\n                      info.badge = {\n                        text: \"SEPA\",\n                        color: \"#f7cb05 \",\n                        bgColor: \"#10288a\"\n                      };\n                      info.subcaption = `~ 1.5% fee ~\\nEUR ONLY`;\n                      break;\n                    case \"GBR\":\n                      info.badge = {\n                        text: \"GBP\"\n                      };\n                      info.subcaption = `~ 1.5% fee ~\\nGBP ONLY`;\n                      break;\n                    default:\n                      info.badge = null;\n                      info.subcaption = `~ 1.5% fee ~\\nEUR/GBP ONLY`;\n                      break;\n                  }\n                }\n                break;\n              case \"card\":\n                info.badge = null;\n                info.subcaption = `~ 5% fee ~`;\n                break;\n              default:\n                break;\n            }\n          }\n          return info;\n        },\n        getInitParams: (props, globalConfigs, buyParams) => {\n          const env = globalConfigs.payments.providers.moonpay.env;\n          const envParams =\n            globalConfigs.payments.providers.moonpay.envParams[env];\n          const apiKey = envParams.apiKey;\n          const params = {\n            apiKey,\n            currencyCode: buyParams.selectedToken\n              ? buyParams.selectedToken.toLowerCase()\n              : props.tokenConfig.moonpay &&\n                props.tokenConfig.moonpay.currencyCode\n              ? props.tokenConfig.moonpay.currencyCode\n              : props.selectedToken.toLowerCase(),\n            walletAddress: props.account,\n            baseCurrencyCode: \"USD\",\n            showWalletAddressForm: true\n          };\n\n          const methods = {\n            bank: {\n              GBR: \"gbp_bank_transfer\",\n              EUR: \"sepa_bank_transfer\"\n            },\n            card: \"credit_debit_card\"\n          };\n\n          const selectedCountry =\n            buyParams.selectedCountry && buyParams.selectedCountry.value\n              ? buyParams.selectedCountry.value.toUpperCase()\n              : null;\n\n          // Set payment method\n          if (buyParams.selectedMethod) {\n            switch (buyParams.selectedMethod) {\n              case \"bank\":\n                params.enabledPaymentMethods =\n                  methods[buyParams.selectedMethod][\"EUR\"];\n                switch (selectedCountry) {\n                  case \"GBR\":\n                  case \"EUR\":\n                    params.enabledPaymentMethods =\n                      methods[buyParams.selectedMethod][selectedCountry];\n                    break;\n                  default:\n                    params.enabledPaymentMethods = Object.values(\n                      methods[buyParams.selectedMethod]\n                    ).join(\",\");\n                    break;\n                }\n                break;\n              case \"card\":\n              default:\n                params.enabledPaymentMethods =\n                  methods[buyParams.selectedMethod];\n                break;\n            }\n          }\n\n          // Set baseCurrencyCode\n          switch (selectedCountry) {\n            case \"GBR\":\n              params.baseCurrencyCode = \"GBP\";\n              break;\n            case \"EUR\":\n              params.baseCurrencyCode = \"EUR\";\n              break;\n            default:\n              params.baseCurrencyCode = \"USD\";\n              break;\n          }\n\n          let url = envParams.url;\n\n          // Safari Fix\n          var isSafari = navigator.userAgent.indexOf(\"Safari\") > -1;\n          if (isSafari) {\n            if (\n              !document.cookie.match(\n                /^(.*;)?\\s*moonpay-fixed\\s*=\\s*[^;]+(.*)?$/\n              )\n            ) {\n              document.cookie =\n                \"moonpay-fixed=fixed; expires=Tue, 19 Jan 2038 03:14:07 UTC; path=/\";\n              url += \"/safari_fix\";\n            }\n          }\n\n          return (\n            `${url}?` +\n            Object.keys(params)\n              .map(\n                k => encodeURIComponent(k) + \"=\" + encodeURIComponent(params[k])\n              )\n              .join(\"&\")\n          );\n        },\n        render: (initParams, amount, props, globalConfigs) => {\n          const moonpayWidget = document.getElementById(\"moonpay-widget\");\n          if (!moonpayWidget) {\n            const iframeBox = document.createElement(\"div\");\n            iframeBox.innerHTML = `\n              <div id=\"moonpay-widget\" class=\"moonpay-widget iframe-container\" style=\"position:fixed;display:flex;justify-content:center;align-items:center;top:0;left:0;width:100%;height:100%;z-index:999\">\n                <div id=\"moonpay-widget-overlay\" style=\"position:fixed;top:0;left:0;width:100%;height:100%;background:rgba(0,0,0,0.7);z-index:1\"></div>\n                  <div id=\"moonpay-widget-container\" style=\"position:relative;z-index:2;width:500px;height:490px\">\n                    <iframe\n                      style=\"position:relative;z-index:2;\"\n                      frameborder=\"0\"\n                      height=\"100%\"\n                      src=\"${initParams}\"\n                      width=\"100%\"\n                    >\n                      <p>Your browser does not support iframes.</p>\n                    </iframe>\n                    <div id=\"moonpay-widget-loading-placeholder\" style=\"position:absolute;background:#fff;width:100%;height:100%;z-index:1;top:0;display:flex;justify-content:center;align-items:center;\">\n                      <div style=\"display:flex;flex-direction:row;align-items:end\">\n                        <img src=\"${globalConfigs.payments.providers.moonpay.imageSrc}\" style=\"height:50px;\" />\n                        <h3 style=\"padding-left:5px;font-weight:600;font-style:italic;\">is loading...</h3>\n                      </div>\n                    </div>\n                    <div id=\"moonpay-widget-footer\" style=\"position:relative;display:flex;justify-content:center;align-items:center;padding:8px 16px;width:100%;background:#fff;top:-20px;z-index:3\">\n                      <button style=\"background:#000;color:#fff;text-align:center;border-radius:5px;width:100%;height:51px;line-height:51px;font-weight:500;border:0;cursor:pointer\" onclick=\"document.getElementById('moonpay-widget').remove();\">Close</button>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            `;\n            document.body.appendChild(iframeBox);\n\n            // Add Moonpay Widget style (mobile)\n            if (!document.getElementById(\"moonpayWidget_style\")) {\n              const moonpayStyle = document.createElement(\"style\");\n              moonpayStyle.id = \"moonpayWidget_style\";\n              moonpayStyle.innerHTML = `\n              @media (max-width: 40em){\n                #moonpay-widget {\n                  align-items: flex-start !important;\n                }\n                #moonpay-widget-overlay{\n                  background:#fff !important;\n                }\n                #moonpay-widget-container{\n                  width:100vw;\n                  min-height: calc( 100vh - 60px ) !important;\n                }\n              }`;\n              document.body.appendChild(moonpayStyle);\n            }\n          }\n        }\n      },\n      zeroExInstant: {\n        enabled: true,\n        imageSrc: \"images/payments/zeroexinstant.svg\",\n        imageProps: {\n          width: [\"100%\", \"auto\"],\n          height: [\"auto\", \"35px\"],\n          my: \"8px\"\n        },\n        caption: \"Buy with\",\n        captionPos: \"top\",\n        subcaption: \"~ 0.25% fee ~\",\n        supportedMethods: [\"wallet\"],\n        supportedTokens: [\"USDC\", \"DAI\"],\n        remoteResources: { \"https://instant.0x.org/v3/instant.js\": {} },\n        getInitParams: (\n          props,\n          globalConfigs,\n          buyParams,\n          onSuccess,\n          onClose\n        ) => {\n          const tokenParams = globalConfigs.tokens[buyParams.selectedToken];\n          const connectorName = window.RimbleWeb3_context\n            ? window.RimbleWeb3_context.connectorName\n            : null;\n\n          if (!tokenParams.zeroExInstant) {\n            return null;\n          }\n\n          return {\n            networkId: globalConfigs.network.requiredNetwork,\n            chainId: globalConfigs.network.requiredNetwork,\n            provider:\n              connectorName &&\n              connectorName !== \"Injected\" &&\n              window.RimbleWeb3_context.connector[connectorName.toLowerCase()]\n                ? window.RimbleWeb3_context.connector[\n                    window.RimbleWeb3_context.connectorName.toLowerCase()\n                  ].provider\n                : window.ethereum,\n            orderSource: tokenParams.zeroExInstant.orderSource,\n            affiliateInfo: tokenParams.zeroExInstant.affiliateInfo,\n            defaultSelectedAssetData: tokenParams.zeroExInstant.assetData,\n            availableAssetDatas: [tokenParams.zeroExInstant.assetData],\n            shouldDisableAnalyticsTracking: true,\n            onSuccess: onSuccess ? onSuccess : () => {},\n            onClose: onClose ? onClose : () => {}\n          };\n        },\n        render: (initParams, amount) => {\n          if (window.zeroExInstant && initParams) {\n            if (amount) {\n              initParams.defaultAssetBuyAmount = parseFloat(amount);\n            }\n            window.zeroExInstant.render(initParams, \"body\");\n          }\n        }\n      },\n      kyberSwap: {\n        enabled: true,\n        imageSrc: \"images/payments/kyber.svg\",\n        imageProps: {\n          width: [\"100%\", \"auto\"],\n          height: [\"auto\", \"35px\"],\n          my: \"8px\"\n        },\n        caption: \"Swap with\",\n        captionPos: \"top\",\n        subcaption: \"~ 0.25% fee ~\",\n        supportedMethods: [\"wallet\"],\n        supportedTokens: [\n          \"WETH\",\n          \"USDC\",\n          \"DAI\",\n          \"USDT\",\n          \"TUSD\",\n          \"SUSD\",\n          \"WBTC\",\n          \"RAI\",\n          \"FEI\"\n        ],\n        web3Subscription: {\n          // Data for web3 subscription\n          enabled: true,\n          contractAddress: \"0x818e6fecd516ecc3849daf6845e3ec868087b755\",\n          decodeLogsData: [\n            {\n              internalType: \"address\",\n              name: \"_startAddress\",\n              type: \"address\"\n            },\n            {\n              internalType: \"address\",\n              name: \"_tokenAddress\",\n              type: \"address\"\n            },\n            {\n              internalType: \"uint256\",\n              name: \"_startAmount\",\n              type: \"uint256\"\n            },\n            {\n              internalType: \"uint256\",\n              name: \"_tokenAmount\",\n              type: \"uint256\"\n            }\n          ]\n        },\n        remoteResources: {\n          \"https://widget.kyber.network/v0.7.5/widget.css\": {},\n          \"https://widget.kyber.network/v0.7.5/widget.js\": {\n            parentElement: document.body,\n            precall: (props, globalConfigs, providerInfo) => {\n              // Remove previous elements\n              const buttons = document.querySelectorAll(\".kyber-widget-button\");\n              for (let i = 0; i < buttons.length; i++) {\n                buttons[i].remove();\n              }\n\n              // const kyberWidgetScript = document.getElementById('kyber-widget-script');\n              // if (kyberWidgetScript){\n              //   kyberWidgetScript.remove();\n              // }\n\n              const scripts = document.querySelectorAll(\".script_kyberSwap\");\n              for (let i = 0; i < scripts.length; i++) {\n                scripts[i].remove();\n              }\n\n              const buttonId = props.buttonId\n                ? props.buttonId\n                : `kyber-swapper-${props.selectedToken}`;\n              if (!document.getElementById(buttonId)) {\n                const a = document.createElement(\"a\");\n                a.id = buttonId;\n                a.href = providerInfo.getInitParams(props, globalConfigs);\n                a.target = \"_blank\";\n                a.rel = \"nofollow noopener noreferrer\";\n                a.className = \"kyber-widget-button theme-ocean theme-supported\";\n                a.title = \"Swap with Kyber\";\n                a.style = \"display:none;\";\n                document.body.appendChild(a);\n              }\n            }\n          }\n        },\n        getInitParams: (props, globalConfigs, buyParams = null) => {\n          const baseToken = props.baseToken ? props.baseToken : \"ETH\";\n          const params = {\n            lang: \"en\",\n            type: \"swap\",\n            mode: \"iframe\",\n            theme: \"theme-ocean\",\n            paramForwarding: true,\n            // callback:globalConfigs.baseURL,\n            pinnedTokens: `${baseToken}_${props.selectedToken}`,\n            title: `Swap ${baseToken} for ${props.selectedToken}`,\n            defaultPair: `${baseToken}_${props.selectedToken}`,\n            commissionId: \"0x4215606a720477178AdFCd5A59775C63138711e8\",\n            network:\n              globalConfigs.network.requiredNetwork === 1 ? \"mainnet\" : \"test\"\n          };\n\n          const url = \"https://widget.kyber.network/v0.7.5/\";\n\n          return (\n            `${url}?` +\n            Object.keys(params)\n              .map(\n                k => encodeURIComponent(k) + \"=\" + encodeURIComponent(params[k])\n              )\n              .join(\"&\")\n          );\n        },\n        render: (initParams, amount, props) => {\n          const buttonId = props.buttonId\n            ? props.buttonId\n            : `kyber-swapper-${props.selectedToken}`;\n          const a = document.getElementById(buttonId);\n          if (a) {\n            a.click();\n\n            // Observe for pending transaction\n            /*\n            if (window.MutationObserver){\n              setTimeout(() => {\n\n                const observer = new window.MutationObserver(function(mutations) {\n                  mutations.forEach((m,i) => {\n                    if (m.addedNodes.length && m.target.className === 'kyber_widget-broadcast'){\n\n                      // Show persistent toast message\n                      window.showToastMessage({\n                        variant:'processing',\n                        message:'Pending deposit',\n                        secondaryMessage:'kyberSwap is processing your request'\n                      });\n\n                      observer.disconnect();\n                    } else if (m.target.id === 'kyber-widget' && m.removedNodes.length && m.removedNodes[0].firstChild.className.includes('kyber_widget-widget-container')) {\n                      observer.disconnect();\n                    }\n                  });\n                });\n                const target = document.querySelector('#kyber-widget');\n                observer.observe(target, { childList: true, subtree: true });\n              },1000);\n            }\n            */\n          }\n        }\n      },\n      airSwap: {\n        enabled: false,\n        imageSrc: \"images/payments/airswap.svg\",\n        imageProps: {\n          width: [\"100%\", \"auto\"],\n          height: [\"auto\", \"35px\"],\n          my: \"8px\"\n        },\n        caption: \"Buy with\",\n        captionPos: \"top\",\n        subcaption: \"~ 0% fee ~\",\n        supportedMethods: [\"wallet\"],\n        supportedTokens: [\"USDC\", \"DAI\"],\n        env: \"production\",\n        remoteResources: {\n          \"https://cdn.airswap.io/airswap-instant-widget.js\": {}\n        },\n        getInitParams: (\n          props,\n          globalConfigs,\n          buyParams,\n          onComplete,\n          onClose\n        ) => {\n          return {\n            env: \"production\",\n            mode: \"buy\",\n            token: props.tokenConfig.address,\n            baseToken: \"ETH\",\n            onComplete: onComplete ? onComplete : () => {},\n            onClose: onClose ? onClose : () => {}\n          };\n        },\n        render: (initParams, amount, props) => {\n          if (window.AirSwapInstant) {\n            if (amount) {\n              initParams.amount = amount.toString();\n            }\n            window.AirSwapInstant.render(initParams, \"body\");\n          }\n        }\n      },\n      totle: {\n        enabled: false,\n        imageSrc: \"images/payments/totle.svg\",\n        imageProps: {\n          width: [\"100%\", \"auto\"],\n          height: [\"auto\", \"35px\"],\n          my: \"8px\"\n        },\n        caption: \"Buy with\",\n        captionPos: \"top\",\n        subcaption: \"~ 0% fee ~\",\n        supportedMethods: [\"wallet\"],\n        supportedTokens: [\"USDC\", \"DAI\"],\n        env: \"production\",\n        remoteResources: { \"https://widget.totle.com/latest/dist.js\": {} },\n        getInitParams: (\n          props,\n          globalConfigs,\n          buyParams,\n          onComplete,\n          onClose\n        ) => {\n          return {\n            sourceAssetAddress: null,\n            sourceAmountDecimal: null,\n            destinationAssetAddress: null,\n            destinationAmountDecimal: null,\n            apiKey: null,\n            partnerContractAddress: null\n          };\n        },\n        render: (initParams, amount, props) => {\n          if (window.TotleWidget) {\n            const nodeId = \"totle-widget\";\n            if (!document.getElementById(nodeId)) {\n              const totleWidgetContainer = document.createElement(\"div\");\n              totleWidgetContainer.id = nodeId;\n              document.body.appendChild(totleWidgetContainer);\n            }\n\n            window.TotleWidget.default.run(\n              initParams,\n              document.getElementById(nodeId)\n            );\n          }\n        }\n      }\n    }\n  }\n};\n\nexport default globalConfigs;\n","import Footer from '../Footer/Footer';\nimport styles from './Tos.module.scss';\nimport React, { Component } from 'react';\nimport { Box, Flex, Text, Heading } from 'rimble-ui'\n\nclass Tos extends Component {\n  state = {};\n\n  render() {\n    return (\n      <Box>\n        <Box className={styles.headerContainer} pb={[3,5]} px={[3,6]} pt={['2em', '3em']}>\n          <Box className={styles.headerBgFiller}></Box>\n          <Box position={'relative'} zIndex={10}>\n            <Flex flexDirection={'column'} alignItems={'center'} maxWidth={[\"50em\", \"60em\"]} mx={'auto'} pb={3} textAlign={'center'} pt={['8vh', '8vh']}>\n              <Heading.h1 fontFamily={'sansSerif'} lineHeight={'1.1em'} mb={'0.2em'} fontSize={['2.5em',7]} textAlign={'center'} color={'white'}>\n                Terms of Service\n              </Heading.h1>\n              <Heading.h2 fontWeight={'400'} lineHeight={['1.4em', '2em']} fontSize={[2,3]} textAlign={'center'} color={'white'}>\n                Updated: November 28, 2019\n              </Heading.h2>\n            </Flex>\n            <Flex flexDirection={'column'} alignItems={'center'} maxWidth={[\"50em\", \"70em\"]} mx={'auto'} textAlign={'center'}>\n              <Box className={styles.textContainer} alignItems={'center'} width={'100%'} minHeight={['auto','20em']} backgroundColor={'white'} color={'dark-gray'} p={[3,4]} boxShadow={'0 0 25px 5px rgba(102, 139, 255, 0.7)'} borderRadius={'15px'} style={{position:'relative'}}>\n                <Box id={'first-paragraph'} pb={3}>\n                  <Text pb={3}>\n                    These terms of service, together with any documents and additional terms they expressly incorporate by reference (collectively, these “Terms”), are entered into between Idle Labs Inc. (“Idle,” “we,” “us” and “our”) and you or the company or other legal entity you represent (“you” or “your”), and constitute a binding legal agreement.\n                  </Text>\n                  <Text pb={3}>\n                    Please read these Terms carefully, as these Terms govern your use of our Portal and our Services, and expressly cover your rights and obligations, and our disclaimers and limitations of legal liability, relating to such use. By accessing or using the Interface, you signify that you have read, understand, and agree to be bound by and to comply with these Terms, including the mandatory arbitration provision in Section 12. If you do not agree to these Terms, you must not access or use our Portal or the Services.\n                  </Text>\n                  <Text pb={3}>\n                    You must be able to form a legally binding contract online either on behalf of a company or as an individual. Accordingly, you represent that: (a) if you are agreeing to these Terms on behalf of a company or other legal entity, you have the legal authority to bind the company or other legal entity to these Terms; and (b) you are at least 18 years old (or the age of majority where you reside, whichever is older), can form a legally binding contract online, and have the full, right, power and authority to enter into and to comply with the obligations under these Terms.\n                  </Text>\n                  <Text pb={3}>\n                    In addition to the foregoing, you also represent and warrant that you are not a citizen or resident of a state, country, territory or other jurisdiction that is embargoed by the United States or where your use of the Portal or the Services would be illegal or otherwise violate any applicable law.  Specifically, you represent that you are not located in, organized in, or a resident of New York, Cuba, Iran, Syria, North Korea, the Crimea region, Venezuela, or any other jurisdiction where Applicable law prohibits you from accessing or using the Services; and you represent that you are not be named on the Office of Foreign Asset Control of the U.S. Department of the Treasury’s Specially Designated and Blocked Persons List.\n                   </Text>\n                  <Text>\n                    Please carefully review the disclosures and disclaimers set forth in Section 9 in their entirety before using any software developed by Idle. The information in Section 9 provides important details about the legal obligations associated with your use of the Idle open-source software. By accessing or using our Portal or our Services, you agree that Idle is a provider of open-source software that optimizes the allocation of your digital assets to third-party decentralized web protocols.  Idle is not affiliated with and has no control over these third-party protocols and is not responsible for any losses that occur as a result of interconnection with these third-party protocols. The Protocol is open-source software deployed on the Ethereum Blockchain.  While Idle developed and deployed the Protocol, the software operates in an autonomous fashion on a decentralized network and, as a result, Idle has no control over user transactions. You accordingly acknowledge that you use the Services at your own risk and agree that Idle will not be responsible for any losses that occur as a result of your use of the Services.\n                  </Text>\n                </Box>\n\n                <Box id={'key-definitions'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    1. KEY DEFINITIONS\n                  </Heading.h3>\n\n                  <Text py={2}>\n                    For the purpose of these Terms, the following capitalized terms shall have the following meanings:\n                  </Text>\n\n                  <ul className={styles.list}>\n                    <li>\n                      <strong>1.1. “Affiliate”</strong> means, with respect to a party to these Terms, any legal entity that, directly or indirectly controls, is controlled by, or is under common control with such party.\n                    </li>\n                    <li>\n                      <strong>1.2. “Applicable Law”</strong> means any domestic or foreign law, rule, statute, regulation, by-law, order, protocol, code, decree, or other directive, requirement or guideline, published or in force which applies to or is otherwise intended to govern or regulate any person, property, transaction, activity, event or other matter, including any rule, order, judgment, directive or other requirement or guideline issued by any Governmental Authority having jurisdiction over Idle, you, the Portal or the Services, or as otherwise duly enacted, enforceable by law, the common law or equity.\n                    </li>\n                    <li>\n                      <strong>1.3. “Ether”</strong> means the Ethereum Blockchain utility token that may be used to purchase computational resources to run decentralized applications or perform actions on the Ethereum Blockchain.\n                    </li>\n                    <li>\n                      <strong>1.4. “Ethereum Address”</strong> means the unique public key digital asset identifier that points to an Ethereum-compatible wallet to which Ether may be sent or stored.\n                    </li>\n                    <li>\n                      <strong>1.5. “Ethereum Blockchain”</strong> means the underlying blockchain infrastructure which the Portal leverages to perform portions of the Services.\n                    </li>\n                    <li>\n                      <strong>1.6. “Governmental Authority”</strong> includes any domestic or foreign federal, provincial or state, municipal, local or other governmental, regulatory, judicial or administrative authority.\n                    </li>\n                    <li>\n                      <strong>1.7. “Portal”</strong> means the Idle site located at https://idle.finance and all associated sites linked thereto by Idle and its Affiliates, which includes, for certainty, Idle’s decentralized application layer on the Ethereum Blockchain.\n                    </li>\n                    <li>\n                      <strong>1.8. “Protocol”</strong> means the Idle decentralized web protocol, which optimizes the allocation of users’ digital assets to third-party decentralized web protocols.\n                    </li>\n                    <li>\n                      <strong>1.9. “Token”</strong> means an “ERC-20” digital asset issued on the Ethereum Blockchain.\n                    </li>\n                    <li>\n                      <strong>1.10. “Services”</strong> has the meaning set out in Section 3.1.\n                    </li>\n                    <li>\n                      <strong>1.11. “Third-Parties Services”</strong> means other services (such as fiat-to-token gateway, or token-to-token swap) provided by third parties services running on Ethereum Blockchain.\n                    </li>\n                  </ul>\n                </Box>\n\n                <Box id={'modifications-terms'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    2. MODIFICATIONS TO THESE TERMS\n                  </Heading.h3>\n\n                  <Text py={2}>\n                    We reserve the right, in our sole discretion, to modify these Terms from time to time. If we make changes, we will provide you with notice of such changes, such as by sending an email, providing a notice through our Services or updating the date at the top of these Terms. Unless we say otherwise in our notice, any and all such modifications are effective immediately, and your continued use of our Services after we provide such notice will confirm your acceptance of the changes. If you do not agree to the amended Terms, you must stop using our Services.\n                  </Text>\n                </Box>\n\n                <Box id={'services'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    3. SERVICES\n                  </Heading.h3>\n                </Box>\n\n                <ul className={styles.list}>\n                  <li>\n                    <strong>3.1. Services</strong><br />\n                    The primary purpose of the Portal and Protocol is to enable users to interact with smart contracts that allocate their digital assets to third-party decentralized web protocols and enable users to receive an optimized allocation of digital assets from these protocols in return (the “Services”).\n                  </li>\n                  <li>\n                    <strong>3.2. Fees</strong><br />\n                    Use of the Services is provided to you at no charge. Fees are charged on-top of Third-Parties.\n                  </li>\n                  <li>\n                    <strong>3.3. Ethereum Gas Charges</strong><br />\n                    Some Services involve the use of the Ethereum Blockchain, which may require that you pay a fee, commonly known as “Ethereum Gas Charges,” for the computational resources required to perform a transaction on the Ethereum Blockchain. You acknowledge and agree that Idle has no control over: (a) any Ethereum Blockchain transactions; (b) the method of payment of any Ethereum Gas Charges; or (c) any actual payments of Ethereum Gas Charges. Accordingly, you must ensure that you have a sufficient balance of Ether stored at your Ethereum Address to complete any transaction on the Ethereum Blockchain before initiating such Ethereum Blockchain transaction. We will make reasonable efforts to notify you of any Ethereum Gas Charges before initiating any Services that require the use of the Ethereum Blockchain.\n                  </li>\n                  <li>\n                    <strong>3.4. Conditions and Restrictions</strong><br />\n                    We may, at any time and in our sole discretion, restrict your access to, or otherwise impose conditions or restrictions upon your use of, the Services or the Portal, with or without prior notice.\n                  </li>\n                  <li>\n                    <strong>3.5. No Broker, Legal or Fiduciary Relationship</strong><br />\n                    Idle is not your broker, lawyer, intermediary, agent, or advisor and has no fiduciary relationship or obligation to you regarding any other decisions or activities that you effect when using the Portal or the Services. Neither our communications nor any information that we provide to you is intended as, or shall be considered or construed as, advice.\n                  </li>\n                  <li>\n                    <strong>3.6. Your Responsibilities</strong><br />\n                    As a condition to accessing or using the Services or the Portal, you shall:\n                    <ul className={styles.list} style={{listStyle:'lower-alpha'}}>\n                      <li>only use the Services and the Portal for lawful purposes and in accordance with these Terms;</li>\n                      <li>ensure that, at all times, all information that you provide on the Portal is current, complete and accurate; and maintain the security and confidentiality of your Ethereum Address.</li>\n                      <li>shall be responsible for payment of all applicable taxes, if any, to which the Services might be subject and any and all other taxes which may apply to you.</li>\n                    </ul>\n                  </li>\n                  <li>\n                    <strong>3.7. Unacceptable Use or Conduct</strong><br />\n                    As a condition to accessing or using the Portal or the Services, you will not:\n                    <ul className={styles.list} style={{listStyle:'lower-alpha'}}>\n                      <li>violate any Applicable Law, including, without limitation, any relevant and applicable anti-money laundering and anti-terrorist financing laws, such as the Bank Secrecy Act, each as may be amended;</li>\n                      <li>infringe on or misappropriate any contract, intellectual property or other third-party right, or commit a tort while using the Portal or the Services;</li>\n                      <li>use the Services in any manner that could interfere with, disrupt, negatively affect, or inhibit other users from fully enjoying the Services, or that could damage, disable, overburden, or impair the functioning of the Services in any manner;</li>\n                      <li>attempt to circumvent any content filtering techniques or security measures that Idle employs on the Portal, or attempt to access any service or area of the Portal or the Services that you are not authorized to access;</li>\n                      <li>use the Services to pay for, support, or otherwise engage in any illegal gambling activities, fraud, money-laundering, or terrorist activities, or other illegal activities;</li>\n                      <li>use any robot, spider, crawler, scraper, or other automated means or interface not provided by us, to access the Services or to extract data;</li>\n                      <li>introduce any malware, virus, Trojan horse, worm, logic bomb, drop-dead device, backdoor, shutdown mechanism or other harmful material into the Portal or the Services;</li>\n                      <li>provide false, inaccurate, or misleading information;</li>\n                      <li>post content or communications on the Portal that are, in our sole discretion, libelous, defamatory, profane, obscene, pornographic, sexually explicit, indecent, lewd, vulgar, suggestive, harassing, hateful, threatening, offensive, discriminatory, bigoted, abusive, inflammatory, fraudulent, deceptive or otherwise objectionable;</li>\n                      <li>post content on the Portal containing unsolicited promotions, political campaigning, or commercial messages or any chain messages or user content designed to deceive or trick the user of the Service;</li>\n                      <li>use the Portal or the Services from a jurisdiction that we have, in our sole discretion, or a relevant Governmental Authority has determined is a jurisdiction where the use of the Portal or the Services is prohibited; or</li>\n                      <li>encourage or induce any third party to engage in any of the activities prohibited under this Section 3.7.</li>\n                    </ul>\n                  </li>\n\n                  <li>\n                    <strong>3.8. Your Assumption of Risks</strong><br />\n                    You represent and warrant that you:\n                    <ul className={styles.list} style={{listStyle:'lower-alpha'}}>\n                      <li>have the necessary technical expertise and ability to review and evaluate the security, integrity and operation of any transactions that you engage in through the Protocol;</li>\n                      <li>have the knowledge, experience, understanding, professional advice and information to make your own evaluation of the merits, risks and applicable compliance requirements under Applicable Law of engaging in transactions through the Protocol;</li>\n                      <li>acknowledge and understand that the Protocol allocates your digital assets to third-party decentralized web protocols to facilitate your lending and borrowing through these third-party protocols and that Idle is not responsible or liable for these transactions or the operation of these third-party protocols;</li>\n                      <li>know, understand and accept the risks associated with your Ethereum Address, the Ethereum Blockchain, Ether and Tokens; and</li>\n                      <li>accept the risks associated with lending, borrowing and trading Ether and Tokens, and are responsible for conducting your own independent analysis of the risks specific to any Ether and Tokens lent, borrowed or traded by you and your use of the Services.</li>\n                    </ul>\n                    You hereby assume, and agree that Idle will have no responsibility or liability for, such risks. You hereby irrevocably waive, release and discharge all claims, whether known or unknown to you, against Idle, its affiliates and their respective shareholders, members, directors, officers, employees, agents and representatives related to any of the risks set forth herein.\n                  </li>\n                  <li>\n                    <strong>3.9. Additional Representations</strong><br />\n                    You represent and warrant that you:\n                    <ul className={styles.list} style={{listStyle:'lower-alpha'}}>\n                      <li>are not using the Protocol to engage in the leveraged, margined, or financed purchase of digital assets; and</li>\n                      <li>are using the Protocol for the purpose of accessing third-party decentralized web protocols.</li>\n                    </ul>\n                  </li>\n                  <li>\n                    <strong>3.10. Your Content</strong><br />\n                    You hereby grant to us a royalty-free, fully paid-up, sublicensable, transferable, perpetual, irrevocable, non-exclusive, worldwide license to use, copy, modify, create derivative works of, display, perform, publish and distribute, in any form, medium or manner, any content that is available to other users via the Idle Platform as a result of your use of the Portal (collectively, “Your Content”) through your use of the Services or the Portal, including, without limitation, for promoting Idle (or its Affiliates), the Services or the Portal. You represent and warrant that: (a) you own Your Content or have the right to grant the rights and licenses in these Terms; and (b) Your Content and our use of Your Content, as licensed herein, does not and will not violate, misappropriate or infringe on any third party’s rights.\n                  </li>\n                </ul>\n\n                <Box id={'privacy-policy'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    4. PRIVACY POLICY\n                  </Heading.h3>\n                  <Text py={2}>\n                    Please refer to our privacy policy available at https://idle.finance/privacy-policy for information about how we collect, use, share and otherwise process information about you.\n                  </Text>\n                </Box>\n\n                <Box id={'proprietary-rights'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    5. PROPRIETARY RIGHTS\n                  </Heading.h3>\n                  <ul className={styles.list}>\n                    <li>\n                      <strong>5.1. Ownership of Services; License to Services</strong><br />\n                      Excluding any open source software (as further described in Section 5.2) or third-party software that the Portal or the Services incorporates, as between you and Idle, Idle owns the Portal and the Services, including all technology, content and other materials used, displayed or provided on the Portal or in connection with the Services (including all intellectual property rights subsisting therein), and hereby grants you a limited, revocable, transferable, license to access and use those portions of the Portal and the Services that are proprietary to Idle.\n                    </li>\n                    <li>\n                      <strong>5.2. Idle License; Open Source Software License; Limitations</strong><br />\n                      The Portal and the Services are governed by the most recent version of the open source license commonly known as the Apache 2.0 a copy of which (as it applies to the Portal and the Services) can be found at:  https://apache.org/licenses/LICENSE-2.0 (as of the date these Terms were last updated) and any other applicable licensing terms for the Portal and the Services in these Terms (collectively, the “Idle License”). You acknowledge that the Portal or the Services may use, incorporate or link to certain open-source components and that your use of the Portal or Services is subject to, and you will comply with any, applicable open-source licenses that govern any such open-source components (collectively, “Open-Source Licenses”). Without limiting the generality of the foregoing, you may not: (a) resell, lease, lend, share, distribute or otherwise permit any third party to use the Portal or the Services; (b) use the Portal or the Services for time-sharing or service bureau purposes; or (c) otherwise use the Portal or the Services in a manner that violates the Idle License or any other Open-Source Licenses.\n                    </li>\n                    <li>\n                      <strong>5.3. Trademarks</strong><br />\n                      Any of Idle’s product or service names, logos, and other marks used in the Portal or as a part of the Services, including Idle's name and logo are trademarks owned by Idle, its Affiliates or its applicable licensors. You may not copy, imitate or use them without Idle’s (or the applicable licensor’s) prior written consent.\n                    </li>\n                  </ul>\n                </Box>\n\n                <Box id={'changes-suspension-termination'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    6. CHANGES; SUSPENSION; TERMINATION\n                  </Heading.h3>\n                  <ul className={styles.list}>\n                    <li>\n                      <strong>6.1. Changes to Services</strong><br />\n                      We may, at our sole discretion, from time to time and with or without prior notice to you, modify, suspend or disable, temporarily or permanently, the Services, in whole or in part, for any reason whatsoever, including, but not limited to, as a result of a security incident.\n                    </li>\n                    <li>\n                      <strong>6.2. No Liability</strong><br />\n                      We will not be liable for any losses suffered by you resulting from any modification to any Services or from any suspension or termination, for any reason, of your access to all or any portion of the Portal or the Services.\n                    </li>\n                    <li>\n                      <strong>6.3. Survival</strong><br />\n                      The following sections will survive any termination of your access to the Portal or the Services, regardless of the reasons for its expiration or termination, in addition to any other provision which by law or by its nature should survive: Sections 1, 4, 5, 6.3, and 7-14.\n                    </li>\n                  </ul>\n                </Box>\n\n                <Box id={'electronic-notices'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    7. ELECTRONIC NOTICES\n                  </Heading.h3>\n                  <Text py={2}>\n                    You consent to receive all communications, agreements, documents, receipts, notices, and disclosures electronically (collectively, our “Communications”) that we provide in connection with these Terms or any Services. You agree that we may provide our Communications to you by posting them on the Portal or by emailing them to you at the email address you provide in connection with using the Services, if any. You should maintain copies of our Communications by printing a paper copy or saving an electronic copy. You may also contact our support team to request additional electronic copies of our Communications by filing a support request at info@idle.finance.\n                  </Text>\n                </Box>\n\n                <Box id={'indemnification'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    8. INDEMNIFICATION\n                  </Heading.h3>\n                  <Text py={2}>\n                    You will defend, indemnify, and hold harmless us, our Affiliates, and our and our Affiliates’ respective shareholders, members, directors, officers, employees, attorneys, agents, representatives, suppliers and contractors (collectively, “Indemnified Parties”) from any claim, demand, lawsuit, action, proceeding, investigation, liability, damage, loss, cost or expense, including without limitation reasonable attorneys’ fees, arising out of or relating to (a) your use of, or conduct in connection with, the Portal, Services or Margin Tokens; (b) Ethereum Blockchain assets associated with your Ethereum Address; (c) any feedback or user content you provide to the Portal, if any; (d) your violation of these Terms; or (e) your infringement or misappropriation of the rights of any other person or entity. If you are obligated to indemnify any Indemnified Party, Idle (or, at its discretion, the applicable Indemnified Party) will have the right, in its sole discretion, to control any action or proceeding and to determine whether Idle wishes to settle, and if so, on what terms.\n                  </Text>\n                </Box>\n\n                <Box id={'disclosures-disclaimers'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    9. Disclosures; DISCLAIMERS\n                  </Heading.h3>\n                  <Text py={2}>\n                    Idle is a developer of open-source software. Idle does not operate a digital asset exchange platform or execute peer-to-peer transactions through its Protocol and therefore has no oversight, involvement, or control with respect to your transactions, which are executed through third-party protocols and the Ethereum Blockchain.  The Protocol is an autonomous decentralized web protocol deployed to the Ethereum Blockchain that operates in a disintermediated fashion, and, as such, Idle does not participate in any of these transactions.  In each instance, when you interact with the Protocol, you are interacting with a smart contract that transfers your digital assets to a third-party protocol.\n                  </Text>\n                  <Text py={2}>\n                    [Under U.S. federal law, unless you are an “eligible contract participant” as defined in 7 U.S.C. § 1a(18), your transaction must settle within 28 days. Individuals who do not have more than $10 million invested on a discretionary basis (or $5 million if the transaction is for the purpose of managing risk associated with an asset owned or liability incurred, or reasonably likely to be owned or incurred) are not eligible contract participants and may not enter into transactions using the Idle open-source software that do not result in actual delivery of digital assets within 28 days.]\n                  </Text>\n                  <Text py={2}>\n                    You are responsible for complying with all laws and regulations applicable to your transactions, including, but not limited to, the Commodity Exchange Act and the regulations promulgated thereunder by the U.S. Commodity Futures Trading Commission (“CFTC”), and the federal securities laws and the regulations promulgated thereunder by the U.S. Securities and Exchange Commission (“SEC”).\n                  </Text>\n                  <Text py={2}>\n                    You understand that Idle is not registered or licensed by the CFTC, SEC, the Financial Crimes Enforcement Network or any financial regulatory authority. No financial regulatory authority has reviewed or approved the use of the Idle open-source software. This website and the Idle open-source software do not constitute advice or a recommendation concerning any commodity, security or other asset. Idle is not acting as an investment adviser or commodity trading adviser to any person.\n                  </Text>\n                  <Text py={2}>\n                    Idle does not own or control the underlying software protocols that enable the Protocol to function. In general, the underlying protocols are open-source and anyone can use, copy, modify, and distribute them. Idle is not responsible for operation of the underlying protocols, and Idle makes no guarantee of their functionality, security, or availability.\n                  </Text>\n                  <Text py={2}>\n                    To the maximum extent permitted under Applicable Law, the Portal and the Services (and any of their content or functionality) provided by or on behalf of us are provided on an “AS IS” and “AS AVAILABLE” basis, and we expressly disclaim, and you hereby waive, any representations, conditions or warranties of any kind, whether express or implied, legal, statutory or otherwise, or arising from statute, otherwise in law, course of dealing, or usage of trade, including, without limitation, the implied or legal warranties and conditions of merchantability, merchantable quality, quality or fitness for a particular purpose, title, security, availability, reliability, accuracy, quiet enjoyment and non-infringement of third party rights. Without limiting the foregoing, we do not represent or warrant that the Portal or the Services (including any data relating thereto) will be uninterrupted, available at any particular time or error-free. Further, we do not warrant that errors in the Portal or the Service are correctable or will be correctable.\n                  </Text>\n                  <Text py={2}>\n                    You acknowledge that your data on the Portal may become irretrievably lost or corrupted or temporarily unavailable due to a variety of causes, and agree that, to the maximum extent permitted under Applicable Law, we will not be liable for any loss or damage caused by denial-of-service attacks, software failures, viruses or other technologically harmful materials (including those which may infect your computer equipment), protocol changes by third party providers, Internet outages, force majeure events or other disasters, scheduled or unscheduled maintenance, or other causes either within or outside our control.\n                  </Text>\n                  <Text py={2}>\n                    The disclaimer of implied warranties contained herein may not apply if and to the extent such warranties cannot be excluded or limited under the Applicable Law of the jurisdiction in which you reside.\n                  </Text>\n                </Box>\n\n                <Box id={'exclusion-consequential-related-damages'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    10. EXCLUSION OF CONSEQUENTIAL AND RELATED DAMAGES\n                  </Heading.h3>\n                  <Text py={2}>\n                    In no event shall we (together with our Affiliates, including our and our Affiliates’ respective shareholders, members, directors, officers, employees, attorneys, agents, representatives, suppliers or contractors) be liable for any incidental, indirect, special, punitive, consequential or similar damages or liabilities whatsoever (including, without limitation, damages for loss of data, information, revenue, goodwill, profits or other business or financial benefit) arising out of or in connection with the Portal and the Services (and any of their content and functionality), any execution or settlement of a transaction, any performance or non-performance of the Services, your Ether, Margin Tokens or any other product, service or other item provided by or on behalf of us, whether under contract, tort (including negligence), civil liability, statute, strict liability, breach of warranties, or under any other theory of liability, and whether or not we have been advised of, knew of or should have known of the possibility of such damages and notwithstanding any failure of the essential purpose of these Terms or any limited remedy hereunder nor is Idle in any way responsible for the execution or settlement of transactions between users of Idle open-source software.\n                  </Text>\n                </Box>\n\n                <Box id={'exclusion-consequential-related-damages'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    11. LIMITATION OF LIABILITY\n                  </Heading.h3>\n                  <Text py={2}>\n                    In no event shall our aggregate liability (together with our Affiliates, including our and our Affiliates’ respective shareholders, members, directors, officers, employees, attorneys, agents, representatives, suppliers or contractors) arising out of or in connection with the Portal and the Services (and any of their content and functionality), any performance or non-performance of the Services, your Ether, Margin Tokens or any other product, service or other item provided by or on behalf of us, whether under contract, tort (including negligence), civil liability, statute, strict liability or other theory of liability exceed the amount of fees paid by you to us under these Terms, if any, in the twelve (12) month period immediately preceding the event giving rise to the claim for liability.\n                  </Text>\n                </Box>\n\n                <Box id={'dispute-resolution-arbitration'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    12. DISPUTE RESOLUTION AND ARBITRATION\n                  </Heading.h3>\n                  <Text py={2}>\n                    Please read the following section carefully because it requires you to arbitrate certain disputes and claims with Idle and limits the manner in which you can seek relief from us, unless you opt out of arbitration by following the instructions set forth below. In addition, arbitration precludes you from suing in court or having a jury trial.\n                    You and Idle agree that any dispute arising out of or related to these Terms or our Services is personal to you and Idle and that any dispute will be resolved solely through individual action, and will not be brought as a class arbitration, class action or any other type of representative proceeding.\n                  </Text>\n                  <Text py={2}>\n                    Except for small claims disputes in which you or Idle seeks to bring an individual action in small claims court located in the county of your billing address or disputes in which you or Idle seeks injunctive or other equitable relief for the alleged unlawful use of intellectual property, you and Idle waive your rights to a jury trial and to have any dispute arising out of or related to these Terms or our Services resolved in court. Instead, for any dispute or claim that you have against Idle or relating in any way to the Services, you agree to first contact Idle and attempt to resolve the claim informally by sending a written notice of your claim (“Notice”) to Idle by email at info@idle.finance or by certified mail addressed to info@idle.finance. The Notice must (a) include your name, residence address, email address, and telephone number; (b) describe the nature and basis of the claim; (c) set forth the specific relief sought. Our notice to you will be similar in form to that described above. If you and Idle cannot reach an agreement to resolve the claim within thirty (30) days after such Notice is received, then either party may submit the dispute to binding arbitration administered by JAMS or, under the limited circumstances set forth above, in court. All disputes submitted to JAMS will be resolved through confidential, binding arbitration before one arbitrator. Arbitration proceedings will be held in New York City, New York, in accordance with the JAMS Streamlined Arbitration Rules and Procedures (“JAMS Rules”). The most recent version of the JAMS Rules are available on the JAMS website and are hereby incorporated by reference. You either acknowledge and agree that you have read and understand the JAMS Rules or waive your opportunity to read the JAMS Rules and waive any claim that the JAMS Rules are unfair or should not apply for any reason.\n                  </Text>\n                  <Text py={2}>\n                    You and Idle agree that these Terms affect interstate commerce and that the enforceability of this Section 12 will be substantively and procedurally governed by the Federal Arbitration Act, 9 U.S.C. § 1, et seq. (the “FAA”), to the maximum extent permitted by applicable law. As limited by the FAA, these Terms and the JAMS Rules, the arbitrator will have exclusive authority to make all procedural and substantive decisions regarding any dispute and to grant any remedy that would otherwise be available in court, including the power to determine the question of arbitrability. The arbitrator may conduct only an individual arbitration and may not consolidate more than one individual’s claims, preside over any type of class or representative proceeding or preside over any proceeding involving more than one individual.\n                  </Text>\n                  <Text py={2}>\n                    The arbitrator, Idle, and you will maintain the confidentiality of any arbitration proceedings, judgments and awards, including, but not limited to, all information gathered, prepared and presented for purposes of the arbitration or related to the dispute(s) therein. The arbitrator will have the authority to make appropriate rulings to safeguard confidentiality, unless the law provides to the contrary. The duty of confidentiality does not apply to the extent that disclosure is necessary to prepare for or conduct the arbitration hearing on the merits, in connection with a court application for a preliminary remedy or in connection with a judicial challenge to an arbitration award or its enforcement, or to the extent that disclosure is otherwise required by law or judicial decision.\n                  </Text>\n                  <Text py={2}>\n                    You and Idle agree that for any arbitration you initiate, you will pay the filing fee and Idle will pay the remaining JAMS fees and costs. For any arbitration initiated by Idle, Idle will pay all JAMS fees and costs. You and Idle agree that the state or federal courts of the State of New York and the United States sitting in New York City, New York have exclusive jurisdiction over any appeals and the enforcement of an arbitration award.\n                  </Text>\n                  <Text py={2}>\n                    Any claim arising out of or related to these Terms or our Services must be filed within one year after such claim arose; otherwise, the claim is permanently barred, which means that you and Idle will not have the right to assert the claim.\n                  </Text>\n                  <Text py={2}>\n                    You have the right to opt out of binding arbitration within 30 days of the date you first accepted the terms of this Section 12 by emailing us at info@idle.finance. In order to be effective, the opt-out notice must include your full name and address and clearly indicate your intent to opt out of binding arbitration. By opting out of binding arbitration, you are agreeing to resolve disputes in accordance with Section 13.\n                  </Text>\n                  <Text py={2}>\n                    If any portion of this Section 12 is found to be unenforceable or unlawful for any reason, (a) the unenforceable or unlawful provision shall be severed from these Terms; (b) severance of the unenforceable or unlawful provision shall have no impact whatsoever on the remainder of this Section 12 or the parties’ ability to compel arbitration of any remaining claims on an individual basis pursuant to this Section 12; and (c) to the extent that any claims must therefore proceed on a class, collective, consolidated, or representative basis, such claims must be litigated in a civil court of competent jurisdiction and not in arbitration, and the parties agree that litigation of those claims shall be stayed pending the outcome of any individual claims in arbitration. Further, if any part of this Section 12 is found to prohibit an individual claim seeking public injunctive relief, that provision will have no effect to the extent such relief is allowed to be sought out of arbitration, and the remainder of this Section 12 will be enforceable.\n                  </Text>\n                </Box>\n\n                <Box id={'governing-law'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    13. GOVERNING LAW\n                  </Heading.h3>\n                  <Text py={2}>\n                    The interpretation and enforcement of these Terms, and any dispute related to these Terms, the Portal or the Services, will be governed by and construed and enforced in accordance with the laws of the State of Delaware, as applicable, without regard to conflict of law rules or principles (whether of the State of Delaware or any other jurisdiction) that would cause the application of the laws of any other jurisdiction. You agree that we may initiate a proceeding related to the enforcement or validity of our intellectual property rights in any court having jurisdiction. With respect to any other proceeding that is not subject to arbitration under these Terms, the state and federal courts located in Wilmington, Delaware, will have exclusive jurisdiction. You waive any objection to venue in any such courts.\n                  </Text>\n                </Box>\n\n                <Box id={'miscellaneous'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    14. MISCELLANEOUS\n                  </Heading.h3>\n                  <Text py={2}>\n                    Any right or remedy of Idle set forth in these Terms is in addition to, and not in lieu of, any other right or remedy whether described in these Terms, under Applicable Law, at law or in equity. Our failure or delay in exercising any right, power, or privilege under these Terms shall not operate as a waiver thereof. The invalidity or unenforceability of any of these Terms shall not affect the validity or enforceability of any other of these Terms, all of which shall remain in full force and effect. We will have no responsibility or liability for any failure or delay in performance of the Portal or any of the Services, or any loss or damage that you may incur, due to any circumstance or event beyond our control, including without limitation any flood, extraordinary weather conditions, earthquake, or other act of God, fire, war, insurrection, riot, labor dispute, accident, action of government, communications, power failure, or equipment or software malfunction. You may not assign or transfer any right to use the Portal or the Services, or any of your rights or obligations under these Terms, without our express prior written consent, including by operation of law or in connection with any change of control. We may assign or transfer any or all of our rights or obligations under these Terms, in whole or in part, without notice or obtaining your consent or approval. Headings of sections are for convenience only and shall not be used to limit or construe such sections. These Terms contain the entire agreement and supersede all prior and contemporaneous understandings between the parties regarding the Portal and the Services. In the event of any conflict between these Terms and any other agreement you may have with us, these Terms will control unless the other agreement specifically identifies these Terms and declares that the other agreement supersedes these Terms.\n                  </Text>\n                </Box>\n\n              </Box>\n            </Flex>\n          </Box>\n        </Box>\n        <Footer />\n      </Box>\n    );\n  }\n}\n\nexport default Tos;\n","import baseColors, { blue, green, yellow, red } from \"./colors\";\nimport { tint, shade } from 'polished';\n\n// theme.js\nexport default {\n  breakpoints: ['52em', '64em'],\n  // breakpoints: ['40em', '52em', '64em', '80em'],\n  fontSizes: [12, 14, 16, 18, 21, 32, 38, 48, 54, 64, 72, 84],\n  fontWeights: [0, 300, 400, 600, 700, 800],\n  letterSpacings: [0, 1, 2, 4, 8],\n  lineHeights: {\n    solid: 1,\n    title: 1.25,\n    copy: 1.5,\n  },\n  fonts: {\n    serif: '\"georgia regular\", athelas, times, serif',\n    sansSerif: '\"Inter\", -apple-system, sans-serif',\n    counter: '\"Roboto Mono\", Arial, -apple-system, sans-serif'\n  },\n  space: [0, 4, 8, 16, 32, 64, 128, 256],\n  radii: ['0', '4px', '8px', '16px', '2rem'],\n  width: [0, 16, 32, 64, 128, 256],\n  minWidths: [0, 16, 32, 64, 128, 256],\n  maxWidths: [0, 16, 32, 64, 128, 256, 512, 768, 1024, 1536],\n  heights: [0, 16, 32, 64, 128, 256],\n  minHeights: [0, 16, 32, 64, 128, 256],\n  maxHeights: [0, 16, 32, 64, 128, 256],\n  borders: [0, '1px solid #0d2034','1px solid #475d7c'],\n  borderWidths: ['0', '1px', '2px', '4px'],\n  shadows: [\n    '0',\n    '0px 2px 4px rgba(0, 0, 0, 0.1)',\n    '0 7px 14px rgba(50,50,93,.1)',\n    '1px 1px 0px rgba(0,0,0,0.2)',\n    '0px 0px 16px 2px rgb(71,93,123,0.6)'\n  ],\n  opacity: {\n    disabled: 0.4,\n  },\n  colors: {\n    primary: '#fcfcfc',\n    'gradient-bg': 'linear-gradient(120deg, #f6d365 0%, #ea0d73 100%)',\n    'primary-light': blue.light[1],\n    'primary-dark': blue.dark[1],\n    bgBlue: '#0030e0',\n    blue: '#0036ff',\n    tick: \"#00b84a\",\n    'dark-blue': '#00219a',\n    skyBlue: '#00abfe',\n    lightBlue: '#79f4e1',\n    copyColor: '#fcfcfc',\n    subColor: '#a7a7a7',\n    black: baseColors.black,\n    'near-black': '#1e3657',\n    'dark-gray': '#fcfcfc',\n    'mid-gray': '#999',\n    gray: ' #e0e0e0',\n    grey: '#CCC',\n    silver: '#999',\n    'light-silver': '#aaa',\n    'moon-gray': '#ccc',\n    'light-gray': '#eee',\n    'near-white': '#a4aec6',\n    white: '#fff',\n    transparent: 'transparent',\n    /*\n    NEW COLORS\n    */\n    newblue: \"#2B65D9\",\n    alert:'#ff9900',\n    arrowActive:'#d8d8d8',\n    arrowInactive:'#4f4f4f',\n    selectBgFocused:'#1e3657',\n    selectBg:'#162e4d',\n    backButtonBg:'#162e4d',\n    lineChartStroke:'#a4aec6',\n    wrongNetworkBannerBg:'#0e2133',\n    dashboardBg: '#13273f',\n    statValue: '#a4aec6',\n    boxBorder: '#eeeeee',\n    cellTitle: '#a4aec6',\n    cellText: '#a4aec6',\n    divider: '#a4aec6',\n    counter: '#a4aec6',\n    redeem: '#00a9fe',\n    link:'#00a9fe',\n    deposit: '#0239ff',\n    migrate: '#00a9fe',\n    legend: '#c9c9c9',\n    cardBg:'#162e4d',\n    menuBg:'#162e4d',\n    menuHover:'#1e3657',\n    flashColor:'#bac5ff',\n    cardBgHover:'#1e3657',\n    cardBorder:'#0d2034',\n    pageActive:'#d8d8d8',\n    pageInactive:'#4f4f4f',\n    cardBgContrast:\"#1e3657\",\n    menuRightBorder:'#0d2034',\n    cardHoverShadow:'0px 0px 0px 1px rgb(45 74 114)',\n    transactions:{\n      action:{\n        send:'#10a0dd',\n        swap:'#3d53c0',\n        boost:'#ffff00',\n        redeem:'#10a0dd',\n        swapout:'#10a0dd',\n        deposit:'#3d53c0',\n        curvein:'#10a0dd',\n        receive:'#3d53c0',\n        migrate:'#3d53c0',\n        default:'#4f4f4f',\n        curveout:'#3d53c0',\n        withdraw:'#10a0dd',\n        curvedepositin:'#10a0dd',\n        curvedepositout:'#3d53c0'\n      },\n      actionBg:{\n        send:'#ceeff6',\n        swap:'#ced6ff',\n        boost:'#ff7979',\n        redeem:'#ceeff6',\n        swapout:'#ceeff6',\n        deposit:'#ced6ff',\n        curvein:'#ceeff6',\n        default:'#dadada',\n        receive:'#ced6ff',\n        migrate:'#ced6ff',\n        withdraw:'#ceeff6',\n        curveout:'#ced6ff',\n        curvedepositin:'#ceeff6',\n        curvedepositout:'#ced6ff'\n      },\n      status:{\n        completed:'#00b84a',\n        pending:'#a5a5a5',\n        failed:'#fa0000'\n      }\n    },\n    blacks: [\n      'rgba(0,0,0,.0125)',\n      'rgba(0,0,0,.025)',\n      'rgba(0,0,0,.05)',\n      'rgba(0,0,0,.1)',\n      'rgba(0,0,0,.2)',\n      'rgba(0,0,0,.3)',\n      'rgba(0,0,0,.4)',\n      'rgba(0,0,0,.5)',\n      'rgba(0,0,0,.6)',\n      'rgba(0,0,0,.7)',\n      'rgba(0,0,0,.8)',\n      'rgba(0,0,0,.9)',\n    ],\n    whites: [\n      'rgba(255,255,255,.0125)',\n      'rgba(255,255,255,.025)',\n      'rgba(255,255,255,.05)',\n      'rgba(255,255,255,.1)',\n      'rgba(255,255,255,.2)',\n      'rgba(255,255,255,.3)',\n      'rgba(255,255,255,.4)',\n      'rgba(255,255,255,.5)',\n      'rgba(255,255,255,.6)',\n      'rgba(255,255,255,.7)',\n      'rgba(255,255,255,.8)',\n      'rgba(255,255,255,.9)',\n    ],\n  },\n  zIndices: [0, 9, 99, 999, 9999],\n  messageStyle: {\n    base: {\n      color: '#fcfcfc',\n      borderColor: '#0d2034',\n      backgroundColor: '#162e4d',\n    },\n    success: {\n      color: shade(0.4, green.base),\n      backgroundColor: tint(0.9, green.base),\n      borderColor: green.base,\n    },\n    warning: {\n      color: shade(0.4, yellow.base),\n      backgroundColor: tint(0.9, yellow.base),\n      borderColor: yellow.base,\n    },\n    danger: {\n      color: shade(0.4, red.base),\n      backgroundColor: tint(0.9, red.base),\n      borderColor: red.base,\n    },\n    info: {\n      color: '#fcfcfc',\n      borderColor: '#0d2034',\n      backgroundColor: '#162e4d',\n    },\n  },\n  buttons: {\n    primary: {\n      color: blue.text,\n      backgroundColor: blue.base,\n      // use css custom props\n      '--main-color': blue.base,\n      '--contrast-color': blue.text,\n    },\n    normal: {\n      color: baseColors.black,\n      '--contrast-color': baseColors.black,\n    },\n    success: {\n      '--main-color': green.base,\n      '--contrast-color': green.text,\n    },\n    danger: {\n      '--main-color': red.base,\n      '--contrast-color': red.text,\n    },\n  },\n  buttonSizes: {\n    small: {\n      fontSize: '0.75rem',\n      height: '2rem',\n      minWidth: '2rem',\n      padding: '0 1rem',\n    },\n    medium: {\n      fontSize: '1rem',\n      height: '3rem',\n      minWidth: '3rem',\n    },\n    large: {\n      fontSize: '1.5rem',\n      height: '4rem',\n      minWidth: '4rem',\n      borderRadius: '2rem'\n    },\n  },\n};\n","import Connector from 'web3-react/dist/connectors/connector';\n\nexport default class TorusConnector extends Connector {\n\n  constructor(kwargs) {\n    const { api: Torus, initParams, ...rest } = kwargs;\n    super(rest);\n\n    this.torus = null;\n    this.Torus = Torus;\n    this.initParams = initParams;\n  }\n\n  async onActivation() {\n    if (!this.torus) {\n      this.torus = new this.Torus({\n        buttonPosition: \"bottom-right\" // default: bottom-left\n      });\n    }\n    await this.torus.init();\n    await this.torus.login();\n  }\n\n  async getProvider(){\n    return new Promise( async (resolve, reject) => {\n      resolve(this.torus.provider);\n    });\n  }\n\n  async getAccount(provider) {\n    const userInfo = await this.torus.getUserInfo();\n    if (userInfo){\n      return await this.torus.getPublicAddress({\n        verifier:userInfo.verifier,\n        verifierId:userInfo.verifierId\n      });\n    }\n    return null;\n  }\n\n  async onDeactivation() {\n    await this.torus.logout();\n  }\n\n  changeNetwork(network) {\n    super._web3ReactUpdateHandler({ updateNetworkId: true })\n  }\n}\n","import Connector from 'web3-react/dist/connectors/connector';\n\nexport default class AuthereumConnector extends Connector {\n\n  constructor(kwargs) {\n    const { api: Authereum, network, ...rest } = kwargs;\n    super(rest);\n\n    this.authereum = null;\n    this.Authereum = Authereum;\n    this.network = network;\n  }\n\n  async onActivation() {\n    if (!this.authereum) {\n      this.authereum = new this.Authereum(this.network);\n    }\n    const provider = await this.getProvider();\n    if (provider){\n      await provider.enable();\n      return provider;\n    }\n  }\n\n  async getProvider(){\n    return new Promise( async (resolve, reject) => {\n      resolve(this.authereum.getProvider());\n    });\n  }\n\n  async getAccount(provider) {\n    if (provider){\n      const accounts = await provider.getAccounts();\n      if (accounts && accounts.length){\n        return accounts[0];\n      }\n    }\n    return null;\n  }\n\n  async disable() {\n    const provider = await this.getProvider();\n    if (provider){\n      await provider.disable();\n      return provider;\n    }\n  }\n\n  changeNetwork(network) {\n    this.constructor({\n      api: this.Authereum,\n      network\n    })\n    super._web3ReactUpdateHandler({ updateNetworkId: true })\n  }\n}\n","import Connector from 'web3-react/dist/connectors/connector';\n\nexport default class GnosisSafeConnector extends Connector {\n\n  constructor(SafeAppConnector) {\n    super(...arguments);\n    this.safeLoaded = false;\n    this.SafeAppConnector = SafeAppConnector;\n    this.provider = new this.SafeAppConnector();\n    this.checkSafeApp();\n  }\n\n  async onActivation() {\n    if (!this.provider) {\n      this.provider = new this.SafeAppConnector();\n    }\n\n    if (this.provider){\n      await this.provider.activate();\n      return this.provider;\n    }\n  }\n\n  async getAccount() {\n    if (this.provider){\n      return await this.provider.getAccount();\n    }\n  }\n\n  async getProvider(){\n    if (this.provider){\n      return await this.provider.getProvider();\n    }\n  }\n\n  async getSafeInfo() {\n    if (this.provider){\n      return await this.provider.getSafeInfo();\n    }\n  }\n\n  async getChainId() {\n    if (this.provider){\n      return await this.provider.getChainId();\n    }\n  }\n\n  async checkSafeApp() {\n    if (this.provider){\n      const isSafeApp = await this.provider.isSafeApp();\n      this.safeLoaded = true;\n      return isSafeApp;\n    }\n  }\n\n  async disable() {\n    if (this.provider){\n      this.provider.deactivate();\n      return this.provider;\n    }\n  }\n}\n","import Connector from 'web3-react/dist/connectors/connector';\n\nexport default class WalletLinkConnector extends Connector {\n\n  constructor(kwargs) {\n    const { api: WalletLink, appName, infuraUrl, chainId, appLogoUrl, ...rest } = kwargs;\n    super(rest);\n\n    this.provider = null;\n    this.walletLink = null;\n    this.appName = appName;\n    this.chainId = chainId;\n    this.infuraUrl = infuraUrl;\n    this.appLogoUrl = appLogoUrl;\n    this.WalletLink = WalletLink;\n  }\n\n  async onActivation() {\n    if (!this.walletLink){\n      this.walletLink = new this.WalletLink({\n        darkMode: false,\n        appName: this.appName,\n        infuraUrl: this.infuraUrl,\n        appLogoUrl: this.appLogoUrl,\n      });\n    }\n\n    const provider = this.getProvider();\n    if (provider){\n      await provider.enable();\n      return provider;\n    }\n  }\n\n  getProvider(){\n    if (!this.provider){\n      this.provider = this.walletLink.makeWeb3Provider(this.infuraUrl, this.chainId);\n    }\n    return this.provider;\n  }\n\n  async getAccount(provider) {\n    if (provider){\n      // Use eth_RequestAccounts\n      const accounts = await provider.send('eth_requestAccounts');\n      if (accounts && accounts.length){\n        return accounts[0];\n      }\n    }\n    return null;\n  }\n\n  async disable() {\n    const provider = this.getProvider();\n    if (provider){\n      this.walletLink.disconnect();\n      await provider.close();\n      return provider;\n    }\n  }\n\n  changeNetwork(network) {\n    this.constructor({\n      network,\n      api: this.WalletLink,\n      appName: this.appName,\n      chainId: this.chainId,\n      infuraUrl: this.infuraUrl,\n      appLogoUrl: this.appLogoUrl,\n    })\n    super._web3ReactUpdateHandler({ updateNetworkId: true })\n  }\n}\n","import Connector from 'web3-react/dist/connectors/connector';\n\nexport default class WalletConnectConnector extends Connector {\n\n  constructor(kwargs) {\n    const { api: WalletConnectProvider, defaultNetwork, infuraId, ...rest } = kwargs;\n    super(rest);\n\n    this.provider = null;\n    this.WalletConnectProvider = WalletConnectProvider;\n    this.infuraId = infuraId;\n  }\n\n  async onActivation() {\n    if (!this.provider) {\n      this.provider = new this.WalletConnectProvider({\n        infuraId:this.infuraId\n      });\n    }\n\n    if (this.provider){\n      await this.provider.enable();\n      return this.provider;\n    }\n  }\n\n  async getProvider(){\n    return this.provider;\n  }\n\n  async disable() {\n    if (this.provider){\n      this.provider.close();\n      return this.provider;\n    }\n  }\n}\n","import WalletLink from 'walletlink';\nimport AuthereumApi from 'authereum';\nimport PortisApi from \"@portis/web3\";\nimport FortmaticApi from \"fortmatic\";\nimport TrezorApi from \"trezor-connect\";\nimport { Connectors } from \"web3-react\";\nimport TorusApi from '@toruslabs/torus-embed';\nimport globalConfigs from '../configs/globalConfigs';\nimport TorusConnector from './connectors/TorusConnector';\nimport AuthereumConnector from './connectors/AuthereumConnector';\nimport WalletConnectProvider from \"@walletconnect/web3-provider\";\nimport GnosisSafeConnector from './connectors/GnosisSafeConnector';\nimport WalletLinkConnector from './connectors/WalletLinkConnector';\nimport { SafeAppConnector } from '@gnosis.pm/safe-apps-web3-react';\nimport WalletConnectConnector from './connectors/WalletConnectConnector';\n\nconst {\n  InjectedConnector,\n  NetworkOnlyConnector,\n  TrezorConnector,\n  LedgerConnector,\n  FortmaticConnector,\n  PortisConnector\n} = Connectors;\n\nconst env = process.env;\n\nconst manifestEmail = env.REACT_APP_TREZOR_MANIFEST_EMAIL; // trezor\nconst manifestAppUrl = env.REACT_APP_TREZOR_MANIFEST_URL; // trezor\nconst defaultNetwork = globalConfigs.network.requiredNetwork;\nconst fortmaticApiKey = env.REACT_APP_FORTMATIC_KEY_MAINNET;\nconst portisDAppId = env.REACT_APP_PORTIS_DAPP_ID;\nconst portisNetwork = env.REACT_APP_PORTIS_NETWORK;\n\nconst supportedNetworkURLs = {};\n  \nObject.keys(globalConfigs.network.providers.infura).forEach((networkId,index) => {\n  supportedNetworkURLs[networkId] = globalConfigs.network.providers.infura[networkId]+env.REACT_APP_INFURA_KEY;\n});\n\nconst Injected = new InjectedConnector({\n  supportedNetworks: globalConfigs.network.enabledNetworks\n});\n\nconst Infura = new NetworkOnlyConnector({\n  providerURL: globalConfigs.network.providers.infura[defaultNetwork]+env.REACT_APP_INFURA_KEY\n});\n\n\nconst Trezor = new TrezorConnector({\n  api: TrezorApi,\n  supportedNetworkURLs,\n  defaultNetwork,\n  manifestEmail,\n  manifestAppUrl\n});\n\nconst Ledger = new LedgerConnector({\n  supportedNetworkURLs,\n  defaultNetwork\n});\n\nconst WalletConnect = new WalletConnectConnector({\n  defaultNetwork,\n  supportedNetworkURLs,\n  api: WalletConnectProvider,\n  infuraId:env.REACT_APP_INFURA_KEY,\n  bridge: \"https://bridge.walletconnect.org\",\n});\n\nconst Fortmatic = new FortmaticConnector({\n  api: FortmaticApi,\n  apiKey: fortmaticApiKey,\n  logoutOnDeactivation: false\n});\n\nconst Portis = new PortisConnector({\n  api: PortisApi,\n  dAppId: portisDAppId,\n  network: portisNetwork\n});\n\nconst Authereum = new AuthereumConnector({\n  api: AuthereumApi,\n  network: globalConfigs.network.availableNetworks[defaultNetwork].toLowerCase()\n});\n\nconst walletLink = new WalletLinkConnector({\n  api: WalletLink,\n  darkMode: false,\n  chainId: defaultNetwork,\n  appName: globalConfigs.appName,\n  infuraUrl: supportedNetworkURLs[defaultNetwork],\n  appLogoUrl: 'https://idle.finance/images/idle-mark.png',\n});\n\nconst Torus = new TorusConnector({\n  api: TorusApi,\n  initParams:{\n    buildEnv: 'production', // default: production\n    enableLogging: false, // default: false\n    network: {\n      host: globalConfigs.network.availableNetworks[defaultNetwork].toLowerCase(), // default: mainnet\n      chainId: defaultNetwork, // default: 1\n      networkName: globalConfigs.network.availableNetworks[defaultNetwork].toLowerCase() // default: Main Ethereum Network\n    },\n    showTorusButton: false // default: true\n  }\n});\n\nconst gnosis = new GnosisSafeConnector(SafeAppConnector);\n\nexport default {\n  Injected,\n  Infura,\n  WalletConnect,\n  gnosis,\n  walletLink,\n  Fortmatic,\n  Portis,\n  Authereum,\n  Torus,\n  Trezor,\n  Ledger,\n};","import React from \"react\";\nimport { Box, Flex, Text, Icon } from \"rimble-ui\";\n\nclass WrongNetworkBanner extends React.Component {\n  render() {\n    const bannerStyle = {\n      position: \"fixed\",\n      bottom: 0,\n      left: 0,\n      right: 0,\n      width: \"100%\",\n      zIndex: 9999\n    };\n\n    return (\n      <Box style={bannerStyle} backgroundColor={'wrongNetworkBannerBg'} p={3}>\n        <Flex alignItems={\"center\"}>\n          <Box p={4}>\n            <Icon name=\"Warning\" color=\"gold\" size=\"30\" />\n          </Box>\n          <Flex flexDirection={\"column\"}>\n            <Text fontWeight={\"bold\"}>\n              Looks like you're on the wrong network\n            </Text>\n            <Text>\n              You should be on the {this.props.network.required.name} Ethereum\n              network. You are currently connected to the{\" \"}\n              <Text.span style={{ textTransform: \"capitalize\" }}>\n                {this.props.network.current.name}\n              </Text.span>{\" \"}\n              Network - please switch to the correct network.\n            </Text>\n          </Flex>\n        </Flex>\n      </Box>\n    );\n  }\n}\n\nexport default WrongNetworkBanner;\n","import React from \"react\";\n\nimport WrongNetworkBanner from \"./components/WrongNetworkBanner\";\n\nclass NetworkUtil extends React.Component {\n  render() {\n    return (\n      <div>\n        { this.props.network.isCorrectNetwork === false && this.props.web3\n          ?\n            <WrongNetworkBanner\n              network={this.props.network}\n            />\n          :\n            null\n        }\n      </div>\n    );\n  }\n}\n\nexport default NetworkUtil;\n","import React from \"react\";\nimport { Box, Heading, Text, Modal, Link } from \"rimble-ui\";\nimport ModalCard from './ModalCard';\nimport RimbleUtil from \"@rimble/utils\";\n\nclass NoWeb3BrowserModal extends React.Component {\n  renderContent = () => {\n    return (\n      <React.Fragment>\n        <Heading.h2\n          fontSize={4}\n          fontWeight={3}\n          lineHeight={\"1.375em\"}\n          my={3}\n        >\n          Switch browsers to use the Idle App\n        </Heading.h2>\n\n        {RimbleUtil.isMobileDevice() ? (\n          <Text my={4}>\n            You can't use our blockchain features, like increasing the count\n            value, in this browser. We recommend using{\" \"}\n            <Link\n              href=\"https://status.im/\"\n              title=\"status.im website\"\n              target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n            >\n              Status\n            </Link>\n            ,{\" \"}\n            <Link\n              href=\"https://www.cipherbrowser.com/\"\n              title=\"Cipher Wallet\"\n              target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n            >\n              Cipher\n            </Link>{\" \"}\n            or{\" \"}\n            <Link\n              href=\"https://wallet.coinbase.com/\"\n              title=\"Coinbase Wallet\"\n              target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n            >\n              Coinbase wallet\n            </Link>{\" \"}\n            browsers.\n          </Text>\n        ) : (\n          <Box>\n            <Text my={4}>\n              You can't use our blockchain features, like increasing the\n              count value, in this browser. Switch to{\" \"}\n              <Link\n                href=\"https://brave.com/download/\"\n                title=\"Download Brave browser\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Brave\n              </Link>\n              ,{\" \"}\n              <Link\n                href=\"https://www.mozilla.org/\"\n                title=\"Download FireFox browser\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                FireFox\n              </Link>\n              ,{\" \"}\n              <Link\n                href=\"https://www.opera.com/download\"\n                title=\"Download Opera Browser\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Opera\n              </Link>\n              , or{\" \"}\n              <Link\n                href=\"https://www.google.com/chrome/\"\n                title=\"Download Chrome browser\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Chrome\n              </Link>{\" \"}\n              to continue.\n            </Text>\n\n            <Text>\n              <Text.span bold>Rather use your phone?</Text.span> You can use\n              the Idle App in mobile browser wallets like{\" \"}\n              <Link\n                href=\"https://status.im/\"\n                title=\"status.im website\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Status\n              </Link>\n              ,{\" \"}\n              <Link\n                href=\"https://www.cipherbrowser.com/\"\n                title=\"Cipher Wallet\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Cipher\n              </Link>{\" \"}\n              or{\" \"}\n              <Link\n                href=\"https://wallet.coinbase.com/\"\n                title=\"Coinbase Wallet\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Coinbase wallet\n              </Link>\n              .\n            </Text>\n          </Box>\n        )}\n      </React.Fragment>\n    );\n  }\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.props.closeModal}>\n          <ModalCard.Body>\n            {this.renderContent()}\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default NoWeb3BrowserModal;\n","import React from \"react\";\nimport {\n  Card,\n  Heading,\n  Text,\n  Flex,\n  Icon,\n  Modal,\n  Link,\n  Button\n} from \"rimble-ui\";\n\nclass NoWalletModal extends React.Component {\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <Card p={5} maxWidth={\"600px\"}>\n          <Button.Text\n            icononly\n            icon={\"Close\"}\n            color={\"moon-gray\"}\n            position={\"absolute\"}\n            top={0}\n            right={0}\n            mt={3}\n            mr={3}\n            onClick={this.props.closeModal}\n          />\n\n          <Flex flexDirection={\"column\"} justifyContent={\"space-between\"}>\n            <Flex justifyContent={\"center\"} my={4}>\n              <Icon name=\"Warning\" color=\"gold\" size=\"40\" />\n            </Flex>\n\n            <Heading.h2 my={3}>No Wallet Available</Heading.h2>\n\n            <Text my={4}>\n              Your current browser does not have a blockchain connected wallet.\n              Try using MetaMask, Fortmatic, Portis.\n            </Text>\n\n            <Link\n              href=\"https://chrome.google.com/webstore/detail/metamask/nkbihfbeogaeaoehlefnkodbefgpgknn?hl=en\"\n              target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n            >\n              <Button.Outline size=\"small\">Get MetaMask Extension</Button.Outline>\n            </Link>\n          </Flex>\n        </Card>\n      </Modal>\n    );\n  }\n}\n\nexport default NoWalletModal;\n","// Checks for MetaMask\nconst GeneralUtil = {\n  hasMetaMask: () => {\n    let hasMetaMask = false;\n\n    if (typeof window.ethereum !== \"undefined\") {\n      hasMetaMask = typeof window.ethereum.isMetaMask !== \"undefined\";\n    } else if (typeof window.web3 !== 'undefined') {\n      hasMetaMask = typeof window.web3.currentProvider.isMetaMask !== 'undefined' && window.web3.currentProvider.isMetaMask;\n    }\n\n    return hasMetaMask;\n  },\n  isTrustWallet: () => {\n    if (typeof window.web3 !== \"undefined\" && typeof window.web3.currentProvider !== 'undefined'){\n      return typeof window.web3.currentProvider.isTrust !== 'undefined' && window.web3.currentProvider.isTrust;\n    }\n    return false;\n  },\n  isCoinbaseWallet: () => {\n    if (typeof window.web3 !== \"undefined\" && typeof window.web3.currentProvider !== 'undefined'){\n      return typeof window.web3.currentProvider.isCoinbaseWallet !== 'undefined' && window.web3.currentProvider.isCoinbaseWallet;\n    }\n    return false;\n  },\n  hasDapper: () => {\n    let hasDapper = typeof window.DapperEthereum !== 'undefined';\n\n    if (typeof window.ethereum !== \"undefined\") {\n      hasDapper = typeof window.ethereum.isDapper !== \"undefined\" && window.ethereum.isDapper;\n    }\n\n    return hasDapper;\n  },\n  isOpera: () => {\n    return /Opera|OPR\\//.test(navigator.userAgent);\n  },\n  // Current device is Android\n  isAndroid: () => {\n    const isAndroid = /android/i.test(navigator.userAgent) ? true : false;\n\n    return isAndroid;\n  },\n  // Current device is iOS\n  isIos() {\n    const isIos =\n      /iPad|iPhone|iPod/.test(navigator.userAgent) && !window.MSStream\n        ? true\n        : false;\n\n    return isIos;\n  }\n};\n\nexport default GeneralUtil;\n","import React from \"react\";\nimport {\n  Heading,\n  Text,\n  Flex,\n  Modal,\n  Button,\n  Box,\n  Loader\n} from \"rimble-ui\";\nimport ModalCard from './ModalCard';\nimport GeneralUtil from \"../GeneralUtil\";\nimport RimbleUtils from \"@rimble/utils\";\n\nclass WrongNetworkModal extends React.Component {\n  renderContent = () => {\n    return (\n      <ModalCard.Body>\n        <Heading.h2 my={3}>\n          Switch to the {this.props.network.required.name} network in{\" \"}\n          {GeneralUtil.hasMetaMask() ? `MetaMask` : `Settings`}\n        </Heading.h2>\n\n        <Text my={4}>\n          The Idle App only works on the{\" \"}\n          <Text.span style={{ textTransform: \"capitalize\" }}>\n            {this.props.network.required.name}\n          </Text.span>{\" \"}\n          network. You’re currently on the{\" \"}\n          <Text.span style={{ textTransform: \"capitalize\" }}>\n            {\" \"}\n            {this.props.network.current.name}\n          </Text.span>{\" \"}\n          network.\n        </Text>\n\n        {GeneralUtil.hasMetaMask() && !RimbleUtils.isMobileDevice() ? (\n          <Box bg={\"#f6f6fc\"} p={3} display={[\"none\", \"block\"]}>\n            <Flex alignItems={\"center\"}>\n              <Box position={\"relative\"} width={\"4em\"}>\n                <Box>\n                  <Loader size={\"3em\"} />\n                </Box>\n              </Box>\n              <Box>\n                <Text fontWeight={4}>Waiting for the right network...</Text>\n                <Text fontWeight={2}>\n                  Go to your Wallet and to switch\n                </Text>\n              </Box>\n            </Flex>\n          </Box>\n        ) : null}\n\n        <Box display={[\"block\", \"none\"]}>\n          <Button onClick={this.props.closeModal} width={1}>\n            OK\n          </Button>\n        </Box>\n      </ModalCard.Body>\n    )\n  }\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.props.closeModal}>\n          <React.Fragment>\n            {this.renderContent()}\n          </React.Fragment>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default WrongNetworkModal;\n","import React from \"react\";\nimport { Heading, Text, Box, Flex, Icon } from \"rimble-ui\";\nimport ModalCard from './ModalCard';\n\nfunction TransactionFeeModal(props) {\n  return (\n    <Box>\n      <ModalCard.Header title={'Transaction fees, what are you paying for?'} subtitle={'You need to pay a fee to use the Ethereum blockchain.'} subtitle2={'This pays for someone to process your transaction and store the data.'}></ModalCard.Header>\n      <ModalCard.Body>\n        <Flex flexDirection={['column', 'row']}\n          justifyContent={\"space-between\"}\n          my={[0, 4]}>\n          <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]} mr={4}>\n            <Flex justifyContent={\"center\"} mb={3}>\n              <Icon\n                name=\"Fingerprint\"\n                color=\"skyBlue\"\n                size=\"4em\"\n              />\n            </Flex>\n            <Heading fontSize={2} textAlign={'center'}>Undeniable proof</Heading>\n            <Text fontSize={1} textAlign={'center'}>\n              You get a public record of any funds you send or receive, a bit like\n              a deed for a house.\n            </Text>\n          </Box>\n          <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]} mr={4}>\n            <Flex justifyContent={\"center\"} mb={3}>\n              <Icon\n                name=\"EnhancedEncryption\"\n                color=\"skyBlue\"\n                size=\"4em\"\n              />\n            </Flex>\n            <Heading fontSize={2} textAlign={'center'}>Unbreakable encryption</Heading>\n            <Text fontSize={1} textAlign={'center'}>\n              Your funds can only ever go to your intended recipients.\n            </Text>\n          </Box>\n          <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]} mr={4}>\n            <Flex justifyContent={\"center\"} mb={3}>\n              <Icon\n                name=\"AccountBalance\"\n                color=\"skyBlue\"\n                size=\"4em\"\n              />\n              <Icon\n                name=\"NotInterested\"\n                color=\"skyBlue\"\n                size=\"4em\"\n              />\n            </Flex>\n            <Heading fontSize={2} textAlign={'center'}>Unparalleled control</Heading>\n            <Text fontSize={1} textAlign={'center'}>\n              You can pay or get paid without using any banks or companies.\n            </Text>\n          </Box>\n        </Flex>\n      </ModalCard.Body>\n    </Box>\n  );\n}\n\nexport default TransactionFeeModal;\n","import React from 'react'\nimport moment from 'moment';\nimport connectors from '../App/connectors';\nimport { useWeb3Context } from 'web3-react';\nimport GeneralUtil from \"../utilities/GeneralUtil\";\nimport ImageButton from '../ImageButton/ImageButton';\nimport globalConfigs from '../configs/globalConfigs';\nimport styles from './Web3ConnectionButtons.module.scss';\nimport { Button, Box, Text, Flex, Link } from 'rimble-ui';\n\nconst LOG_ENABLED = false;\nconst customLog = (...props) => { if (LOG_ENABLED) console.log(moment().format('HH:mm:ss'),...props); };\n\nexport default function Web3ConnectionButtons(props) {\n  const context = useWeb3Context();\n\n  if (!context.active && !context.error) {\n    customLog('context loading', context);\n  } else if (context.error) {\n    customLog('context error', context);\n  } else {\n    customLog('context success', context);\n  }\n\n  const setConnector = async (connectorName,name) => {\n    let walletProvider = connectorName === 'Injected' ? name : connectorName;\n    if (localStorage) {\n      localStorage.setItem('walletProvider', walletProvider);\n      localStorage.setItem('connectorName', connectorName);\n    }\n\n    if (props.setConnector && typeof props.setConnector === 'function'){\n      props.setConnector(connectorName,walletProvider);\n    }\n    \n    // Close modal\n    if (typeof props.connectionCallback === 'function'){\n      props.connectionCallback();\n    }\n\n    return connectorName;\n    // return await context.setConnector(connectorName);\n  };\n\n  const unsetConnector = async () => {\n    context.unsetConnector();\n    if (props.setConnector && typeof props.setConnector === 'function'){\n      props.setConnector('Infura','Infura');\n    }\n  };\n\n  // Show provider fields to detect in-app browser\n  // alert(JSON.stringify(Object.keys(window.web3.currentProvider)));\n    \n  const isOpera = GeneralUtil.isOpera();\n  const isDapper = GeneralUtil.hasDapper();\n  const isMetamask = GeneralUtil.hasMetaMask();\n  const isTrustWallet = GeneralUtil.isTrustWallet();\n  const isGnosisSafe = !!connectors.gnosis.provider.safe;\n  const isCoinbaseWallet = GeneralUtil.isCoinbaseWallet();\n  const browserWalletDetected = isMetamask || isOpera || isDapper || isCoinbaseWallet || isTrustWallet;\n  \n  const allowedConnectors = props.allowedConnectors;\n  const registerPage = props.registerPage;\n\n  if (connectors.Portis) {\n    if (registerPage) {\n      connectors.Portis.options = connectors.Portis.options || {};\n      connectors.Portis.options.registerPageByDefault = true;\n    } else {\n      connectors.Portis.options = connectors.Portis.options || {};\n      connectors.Portis.options.registerPageByDefault = false;\n    }\n  }\n\n  let basicConnectorsName = Object.keys(connectors).filter(c => c !== 'Infura');\n\n  if (allowedConnectors) {\n    basicConnectorsName = basicConnectorsName.filter(n => allowedConnectors.map((v) => { return v.toLowerCase(); }).indexOf(n.toLowerCase()) !== -1 );\n  }\n\n  // Handle Gnosis Safe connector\n  if (isGnosisSafe){\n    const injectedIndex = basicConnectorsName.indexOf('Injected');\n    // Remove Injected\n    basicConnectorsName.splice(injectedIndex,1);\n    // Remove Gnosis\n    const gnosisIndex = basicConnectorsName.indexOf('gnosis');\n    basicConnectorsName.splice(gnosisIndex,1);\n    // Insert Gnosis in first place\n    basicConnectorsName.unshift('gnosis');\n  } else {\n    const gnosisIndex = basicConnectorsName.indexOf('gnosis');\n    // Remove Gnosis\n    basicConnectorsName.splice(gnosisIndex,1);\n  }\n\n  const buttons = basicConnectorsName.map( (connectorName,index) => {\n    switch (connectorName) {\n      case 'Injected':\n        if (browserWalletDetected) {\n          let name = null;\n          if (isMetamask) {\n            name = 'Metamask';\n          } else if (isOpera) {\n            name = 'Opera';\n          } else if (isDapper){\n            name = 'Dapper';\n          } else if (isCoinbaseWallet){\n            name = 'Coinbase';\n          } else if (isTrustWallet){\n            name = 'TrustWallet';\n          }\n\n          const connectorInfo = globalConfigs.connectors[name.toLowerCase()];\n          if (connectorInfo && connectorInfo.enabled){\n            const walletIcon = connectorInfo.icon ? connectorInfo.icon : `${name.toLowerCase()}.svg`;\n            return (\n              <Flex\n                width={1}\n                key={`wallet_${name}`}\n                justifyContent={'space-between'}\n                style={{\n                  flex:'0 100%',\n                }}\n                flexDirection={['column','row']}\n              >\n                <ImageButton\n                  buttonProps={{\n                    border:2\n                  }}\n                  caption={name}\n                  isMobile={true}\n                  width={[1,0.48]}\n                  imageProps={{width:'auto',height:'42px'}}\n                  imageSrc={`images/connectors/${walletIcon}`}\n                  handleClick={ async () => await setConnector(connectorName,name)}\n                  subcaption={ connectorInfo && connectorInfo.subcaption ? connectorInfo.subcaption : `Connect using ${name}` }\n                />\n                <ImageButton\n                  buttonProps={{\n                    border:2\n                  }}\n                  isMobile={true}\n                  width={[1,0.48]}\n                  caption={'Watch Address'}\n                  imageSrc={`images/tokens/ETH.svg`}\n                  subcaption={'Watch an Ethereum address'}\n                  imageProps={{width:'auto',height:'42px'}}\n                  handleClick={ e => props.setCustomAddress(true) }\n                />\n              </Flex>\n            )\n          }\n          return null;\n        } else {\n          const connectorInfo = globalConfigs.connectors[connectorName.toLowerCase()];\n          return (\n            <ImageButton\n              buttonProps={{\n                border:2\n              }}\n              isMobile={true}\n              caption={'Browser Wallet'}\n              key={`wallet_${connectorName}`}\n              imageProps={{width:'auto',height:'42px'}}\n              imageSrc={`images/connectors/browser-wallet.png`}\n              handleClick={ async () => await setConnector(connectorName) }\n              subcaption={ connectorInfo && connectorInfo.subcaption ? connectorInfo.subcaption : `Connect using a browser wallet`}\n              buttonStyle={ props.isMobile ? {justifyContent:'flex-start',flex:'0 100%'} : {justifyContent:'flex-start',flex:'0 48%'} }\n            />\n          );\n        }\n      default:\n        const connectorInfo = globalConfigs.connectors[connectorName.toLowerCase()];\n        if (connectorInfo && connectorInfo.enabled){\n          const walletIcon = connectorInfo.iconModal ? connectorInfo.iconModal : (connectorInfo.icon ? connectorInfo.icon : `${connectorName.toLowerCase()}.svg`);\n\n          let caption = connectorInfo.name ? connectorInfo.name : connectorName;\n          return (\n            <ImageButton\n              buttonProps={{\n                border:2\n              }}\n              isMobile={true}\n              caption={caption}\n              key={`wallet_${connectorName}`}\n              imageSrc={`images/connectors/${walletIcon}`}\n              imageProps={{width:'auto',height:'42px'}}\n              handleClick={ async () => await setConnector(connectorName) }\n              subcaption={ connectorInfo && connectorInfo.subcaption ? connectorInfo.subcaption : `Connect using ${connectorName}`}\n              buttonStyle={ props.isMobile ? {justifyContent:'flex-start',flex:'0 100%'} : {justifyContent:'flex-start',flex:'0 48%'} }\n            />\n          );\n        }\n        return null;\n    }\n  });\n\n  return (\n    <Box width={[1]}>\n      <Flex flexDirection={'column'} alignItems={\"center\"}>\n        {context.error && (\n          <Text.p textAlign=\"center\">\n            An error occurred, are you using an Ethereum browser such as\n            <Link href=\"https://metamask.io/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">\n              &nbsp; Metamask &nbsp;\n            </Link>\n             or\n            <Link href=\"https://www.meetdapper.com/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">\n              &nbsp; Dapper\n            </Link>\n            ?\n            If you do not have an Ethereum wallet follow the\n            \"I'm new to Ethereum\" flow when connecting.\n            If you do have a wallet, click Reset and retry one of the wallet listed below,\n            Generic wallet option is used for Ethereum browsers only.\n          </Text.p>\n        )}\n        {(context.active || (context.error && context.connectorName)) && context.connectorName !== 'Infura' && (\n          <Button.Outline\n            width={[1/2]}\n            className={[styles.button]}\n            mb={[1, 3]}\n            size={'large'}\n            key={'reset'}\n            onClick={async () => await unsetConnector()}\n          >\n            {context.active ? \"Deactivate Connector\" : \"Reset\"}\n          </Button.Outline>\n        )}\n      </Flex>\n      <Flex\n        flexWrap={'wrap'}\n        flexDirection={'row'}\n        justifyContent={'space-between'}\n      >\n        {buttons}\n      </Flex>\n    </Box>\n  );\n}\n","import React from \"react\";\nimport {\n  Box,\n  Text,\n  Link,\n  Icon,\n  Flex,\n  Field,\n  Modal,\n  Input,\n  Loader,\n  Button,\n  Heading\n} from \"rimble-ui\";\nimport ModalCard from './ModalCard.js';\nimport styles from './Header.module.scss';\nimport FunctionsUtil from '../FunctionsUtil.js';\nimport ImageButton from '../../ImageButton/ImageButton.js';\nimport TransactionFeeModal from \"./TransactionFeeModal.js\";\nimport Web3ConnectionButtons from \"../../Web3ConnectionButtons/Web3ConnectionButtons.js\";\n\nimport {\n  Link as RouterLink\n} from \"react-router-dom\";\n\nclass ConnectionModal extends React.Component {\n  // TODO save pref in localstorage and do not show 'Before connecting' info every time\n  state = {\n    validated:false,\n    showTxFees:false,\n    customAddress:'',\n    currentSection:null,\n    showInstructions:false,\n    askCustomAddress:false,\n    closeRemainingTime:null,\n    customAddressError:false,\n    newToEthereumChoice:null\n  };\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  toggleShowTxFees = e => {\n    e.preventDefault();\n\n    this.setState({\n      showTxFees: !this.state.showTxFees\n    });\n  }\n\n  setStoredSection = () => {\n    let currentSection = null;\n    if (localStorage){\n      currentSection = localStorage.getItem('currentSection');\n      if (currentSection){\n        this.setState({\n          currentSection\n        });\n      }\n    }\n    return currentSection;\n  }\n\n  componentDidMount = () => {\n    this.loadUtils();\n    this.setStoredSection();\n  }\n\n  componentDidUpdate = () => {\n    this.loadUtils();\n  }\n\n  resetModal = e => {\n    this.setState({\n      showTxFees: false,\n      currentSection:null,\n      askCustomAddress:false,\n      showInstructions: false,\n      newToEthereumChoice:null,\n    });\n  }\n\n  setConnector = async (connectorName,name) => {\n    let walletProvider = connectorName === 'Injected' ? name : connectorName;\n\n    // Send Google Analytics event\n    this.functionsUtil.sendGoogleAnalyticsEvent({\n      eventCategory:'Connect',\n      eventLabel:walletProvider,\n      eventAction:'select_wallet'\n    });\n\n    if (this.props.setConnector && typeof this.props.setConnector === 'function'){\n      this.props.setConnector(connectorName,walletProvider);\n    }\n\n    // Set Wallet choice\n    this.setState({\n      newToEthereumChoice: connectorName\n    });\n\n    this.closeCountdown();\n\n    return connectorName;\n\n    // return await window.RimbleWeb3_context.setConnector(connectorName);\n  }\n\n  closeCountdown = () => {\n    const closeRemainingTime = this.state.closeRemainingTime ? this.state.closeRemainingTime-1 : 5;\n    if (!closeRemainingTime){\n      this.closeModal();\n    } else {\n      setTimeout(() => { this.closeCountdown() },1000);\n    }\n    this.setState({\n      closeRemainingTime\n    });\n  }\n\n  setWalletChoice = (e,choice) => {\n    e.preventDefault();\n    this.setState({\n      newToEthereumChoice: choice\n    });\n  }\n\n  closeModal = () => {\n    // Reset modal\n    this.resetModal();\n    // Set latest stored sections\n    this.setStoredSection();\n    // Close modal\n    this.props.closeModal();\n  }\n\n  setCurrentSection = (e,currentSection) => {\n    e.preventDefault();\n    this.setState({\n      currentSection\n    });\n\n    if (currentSection!=='instructions'){\n      // Send Google Analytics event\n      this.functionsUtil.sendGoogleAnalyticsEvent({\n        eventCategory: 'Connect',\n        eventAction: 'select_mode',\n        eventLabel: currentSection\n      });\n\n      this.functionsUtil.setLocalStorage('currentSection',currentSection);\n    }\n  }\n\n  connectCustomAddress = () => {\n    const addressValid = this.functionsUtil.checkAddress(this.state.customAddress);\n    if (addressValid){\n      this.setCustomAddress(false);\n      this.functionsUtil.setCustomAddress(this.state.customAddress);\n      this.setConnector('custom','custom');\n      setTimeout(() => { this.closeModal() },1000);\n      return true;\n    } else {\n      return this.setState({\n        customAddressError:true\n      });\n    }\n  }\n\n  updateCustomAddress = (e) => {\n    const customAddressError = false;\n    const customAddress = e.target.value;\n    const validated = this.functionsUtil.checkAddress(customAddress);\n    this.setState({\n      validated,\n      customAddress,\n      customAddressError\n    });\n  }\n\n  setCustomAddress = (askCustomAddress) => {\n    this.setState({\n      askCustomAddress\n    });\n  }\n\n  renderModalContent = () => {\n\n    const TOSacceptance = (\n      <Box>\n        <Text textAlign={'center'} fontSize={1} py={[2,3]}>By connecting, I accept Idle's <RouterLink to=\"/terms-of-service\" color={'primary'} style={{color:this.props.theme.colors.primary,textDecoration:'underline'}} target={'_blank'} rel=\"nofollow noopener noreferrer\">Terms of Service</RouterLink></Text>\n      </Box>\n    );\n\n    const newToEthereum = this.state.currentSection === 'new';\n    const showConnectionButtons = this.state.currentSection === 'wallet';\n    const showInstructions = this.state.currentSection === 'instructions';\n\n    if (showInstructions){\n      return (\n        <React.Fragment>\n          <ModalCard.Header title={'Before you connect'} subtitle={'Connecting lets you use Idle via your Ethereum account.'}></ModalCard.Header>\n          <ModalCard.Body>\n            <Flex\n              flexDirection={['column', 'row']}\n              justifyContent={\"space-between\"}\n              my={[0, 3]}\n            >\n              <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]} mr={4}>\n                <Flex justifyContent={\"center\"} mb={3}>\n                  <Icon\n                    name=\"Public\"\n                    color=\"skyBlue\"\n                    size=\"4em\"\n                  />\n                </Flex>\n                <Heading fontSize={2} textAlign={'center'}>The blockchain is public</Heading>\n                <Text fontSize={1} textAlign={'center'}>\n                  Your Ethereum account activity is public on the\n                  blockchain. Choose an account you don’t mind being\n                  linked with your activity here.\n                </Text>\n              </Box>\n              <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]} mr={4}>\n                <Flex justifyContent={\"center\"} mb={3}>\n                  <Icon\n                    name=\"AccountBalanceWallet\"\n                    color=\"skyBlue\"\n                    size=\"4em\"\n                  />\n                </Flex>\n                <Heading fontSize={2} textAlign={'center'}>Have some Ether for fees</Heading>\n                <Text fontSize={1} mb={3} textAlign={'center'}>\n                  You’ll need Ether to pay transaction fees. Buy Ether\n                  from exchanges like Coinbase or directly via enabled wallet\n                  such as Portis or Dapper.<br />\n                  <Link\n                    title=\"Learn about Ethereum transaction fees\"\n                    fontWeight={'0'}\n                    color={'blue'}\n                    textAlign={'center'}\n                    hoverColor={'blue'}\n                    href=\"#\"\n                    onClick={this.toggleShowTxFees}\n                  >\n                    What are transaction fees?\n                  </Link>\n                </Text>\n              </Box>\n              <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]}>\n                <Flex justifyContent={\"center\"} mb={3}>\n                  <Icon\n                    name=\"People\"\n                    color=\"skyBlue\"\n                    size=\"4em\"\n                  />\n                </Flex>\n                <Heading fontSize={2} textAlign={'center'}>Have the right account ready</Heading>\n                <Text fontSize={1} textAlign={'center'}>\n                  If you have multiple Ethereum accounts, check that the\n                  one you want to use is active in your browser.\n                </Text>\n              </Box>\n            </Flex>\n          </ModalCard.Body>\n        </React.Fragment>\n      );\n    }\n\n    if (this.state.askCustomAddress){\n      return (\n        <Box>\n          <ModalCard.Header\n            title={'Connect ETH wallet'}\n            icon={'images/idle-mark.png'}\n            subtitle={'And get started with Idle.'}\n          >\n          </ModalCard.Header>\n          <ModalCard.Body>\n            <Flex\n              width={1}\n              minWidth={[1,'30em']}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              <Field\n                width={1}\n                label={'Ethereum address'}\n              >\n                <Input\n                  required\n                  width={1}\n                  type={'text'}\n                  className={styles.input}\n                  borderColor={'cardBorder'}\n                  backgroundColor={'cardBg'}\n                  pattern={'^0x[a-fA-F0-9]{40}$'}\n                  value={this.state.customAddress}\n                  onChange={ e => this.updateCustomAddress(e) }\n                  placeholder={'Insert a valid Ethereum address'}\n                />\n              </Field>\n              {\n                this.state.customAddressError && (\n                  <Text\n                    mb={2}\n                    fontSize={2}\n                    color={'red'}\n                    fontWeight={3}\n                    textAlign={'center'}\n                  >\n                    Insert a valid Ethereum Address\n                  </Text>\n                )\n              }\n              <Button\n                px={[3,4]}\n                mx={'auto'}\n                fontWeight={3}\n                size={'medium'}\n                fontSize={[2,2]}\n                borderRadius={4}\n                contrastColor={'primary'}\n                className={[styles.gradientButton]}\n                onClick={ e => this.connectCustomAddress() }\n              >\n                CONNECT\n              </Button>\n            </Flex>\n            <Flex\n              pt={3}\n              alignItems={'center'}\n              justifyContent={'center'}\n            >\n              <Link\n                hoverColor={'blue'}\n                textAlign={'center'}\n                onClick={ e => this.setCustomAddress(false) }\n              >\n                Select another Wallet\n              </Link>\n            </Flex>\n            { TOSacceptance }\n          </ModalCard.Body>\n        </Box>\n      );\n    }\n\n    if (showConnectionButtons) {\n      return (\n        <Box>\n          <ModalCard.Header title={'Select your Wallet'} subtitle={'And get started with Idle.'} icon={'images/idle-mark.png'}></ModalCard.Header>\n          <ModalCard.Body>\n            <Flex width={1} px={[0,5]} flexDirection={'column'} justifyContent={'center'}>\n              <Web3ConnectionButtons\n                width={1/2}\n                isMobile={this.props.isMobile}\n                setConnector={this.setConnector}\n                connectionCallback={this.closeModal}\n                size={this.props.isMobile ? 'medium' : 'large'}\n                setCustomAddress={this.setCustomAddress.bind(this)}\n              />\n            </Flex>\n            <Flex pt={3} alignItems={'center'} justifyContent={'center'}>\n              <Link textAlign={'center'} hoverColor={'blue'} onClick={ e => this.setCurrentSection(e,'new') }>I don't have a wallet</Link>\n            </Flex>\n            { TOSacceptance }\n          </ModalCard.Body>\n        </Box>\n      );\n    }\n\n    if (newToEthereum) {\n      return (\n        <React.Fragment>\n          <ModalCard.Header title={'Let\\'s create your first Ethereum wallet'} icon={'images/idle-mark.png'}></ModalCard.Header>\n          <ModalCard.Body>\n            {\n              !this.state.newToEthereumChoice ? (\n                <Flex width={1} px={[0,4]} flexDirection={'column'} justifyContent={'center'}>\n                  <Box mb={3}>\n                    <Text fontSize={[2,3]} textAlign={'center'} fontWeight={2} lineHeight={1.5}>\n                      Connect with e-mail or phone number?\n                    </Text>\n                  </Box>\n                  <Flex mb={3} flexDirection={['column','row']} alignItems={'center'} justifyContent={'center'}>\n                    <ImageButton\n                      buttonProps={{\n                        border:2\n                      }}\n                      caption={'Use e-mail'}\n                      imageSrc={'images/email.svg'}\n                      isMobile={this.props.isMobile}\n                      subcaption={'Powered by Portis'}\n                      handleClick={ e => this.setConnector('Portis','Portis') }\n                      imageProps={ this.props.isMobile ? {width:'auto',height:'42px'} : {mb:'3px',width:'auto',height:'55px'}}\n                    />\n                    <ImageButton\n                      buttonProps={{\n                        border:2\n                      }}\n                      caption={'Use phone number'}\n                      isMobile={this.props.isMobile}\n                      imageSrc={'images/mobile.svg'}\n                      subcaption={'Powered by Fortmatic'}\n                      handleClick={ e => this.setConnector('Fortmatic','Fortmatic') }\n                      imageProps={ this.props.isMobile ? {width:'auto',height:'42px'} : {mb:'3px',width:'auto',height:'55px'}}\n                    />\n                  </Flex>\n                  <Flex alignItems={'center'} justifyContent={'center'}>\n                    <Link textAlign={'center'} hoverColor={'blue'} onClick={ e => this.setCurrentSection(e,'wallet') }>I already have a wallet</Link>\n                  </Flex>\n                </Flex>\n              ) : (\n                <Box>\n                  <Text fontSize={3} textAlign={'center'} fontWeight={2} lineHeight={1.5}>\n                    We are connecting you to {this.state.newToEthereumChoice} wallet provider...\n                  </Text>\n                  <Flex\n                    mt={2}\n                    justifyContent={'center'}\n                    alignItems={'center'}\n                    textAlign={'center'}>\n                    <Loader size=\"40px\" /> <Text ml={2} color={'dark-gray'}>Closing in {this.state.closeRemainingTime} seconds...</Text>\n                  </Flex>\n                </Box>\n              )\n            }\n            { TOSacceptance }\n          </ModalCard.Body>\n        </React.Fragment>\n      );\n    }\n\n    return (\n      <React.Fragment>\n        <ModalCard.Header title={'Connect to Idle'} icon={'images/idle-mark.png'}></ModalCard.Header>\n        <ModalCard.Body>\n          {\n            <Flex\n              width={1}\n              px={[0,4]}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              <Box mb={3}>\n                <Text\n                  fontWeight={2}\n                  fontSize={[2,3]}\n                  lineHeight={1.5}\n                  textAlign={'center'}\n                >\n                  How do you want to connect to Idle?\n                </Text>\n              </Box>\n              <Flex\n                mb={[2,3]}\n                alignItems={'center'}\n                justifyContent={'center'}\n                flexDirection={['column','row']}\n              >\n                <ImageButton\n                  buttonProps={{\n                    border:2\n                  }}\n                  caption={`Ethereum wallet`}\n                  isMobile={this.props.isMobile}\n                  subcaption={'Choose your favourite'}\n                  imageSrc={'images/ethereum-wallet.svg'}\n                  handleClick={ e => this.setCurrentSection(e,'wallet') }\n                  imageProps={this.props.isMobile ? {width:'auto',height:'42px'} : {width:'auto',height:'55px',marginBottom:'5px'}}\n                />\n                <ImageButton\n                  buttonProps={{\n                    border:2\n                  }}\n                  caption={`New wallet`}\n                  isMobile={this.props.isMobile}\n                  subcaption={'Use email / phone'}\n                  imageSrc={'images/new-wallet.png'}\n                  handleClick={ e => this.setCurrentSection(e,'new') }\n                  imageProps={this.props.isMobile ? {width:'auto',height:'42px'} : {width:'auto',height:'55px',marginBottom:'5px'}}\n                />\n              </Flex>\n              <Flex\n                alignItems={'center'}\n                justifyContent={'center'}\n              >\n                <Link\n                  color={'primary'}\n                  hoverColor={'primary'}\n                  onClick={ e => this.setCustomAddress(true) }\n                >\n                  Watch Ethereum Address\n                </Link>\n              </Flex>\n            </Flex>\n          }\n          { TOSacceptance }\n        </ModalCard.Body>\n      </React.Fragment>\n    );\n  }\n\n  renderFooter = () => {\n\n    if (this.state.newToEthereumChoice || (this.state.currentSection && this.state.askCustomAddress)){\n      return null;\n    }\n\n    return (\n      <ModalCard.Footer>\n        { !this.state.currentSection ? (\n            <Button\n              className={[styles.gradientButton,styles.empty]}\n              onClick={ e => this.setCurrentSection(e,'instructions') }\n              size={'medium'}\n              borderRadius={4}\n              contrastColor={'blue'}\n              fontWeight={3}\n              fontSize={[2,2]}\n              mx={'auto'}\n              px={[4,5]}\n            >\n              READ INSTRUCTIONS\n            </Button>\n          ) : (!this.state.askCustomAddress || this.state.currentSection==='instructions') && (\n            <Button\n              className={[styles.gradientButton,styles.empty]}\n              onClick={this.resetModal}\n              size={'medium'}\n              borderRadius={4}\n              contrastColor={'blue'}\n              fontWeight={3}\n              fontSize={[2,2]}\n              mx={'auto'}\n              px={[4,5]}\n            >\n              BACK\n            </Button>\n          )\n        }\n      </ModalCard.Footer>\n    );\n  }\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.closeModal}>\n          {this.state.showTxFees === false ? (\n            <React.Fragment>\n              {this.renderModalContent()}\n              {this.renderFooter()}\n            </React.Fragment>\n          ) : (\n            <Box>\n              <TransactionFeeModal />\n              {this.renderFooter()}\n            </Box>\n          )}\n\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default ConnectionModal;\n","import React from \"react\";\nimport {\n  Heading,\n  Text,\n  Modal,\n  Flex,\n  Box,\n  Loader\n} from \"rimble-ui\";\nimport ModalCard from './ModalCard';\nimport GeneralUtil from \"../GeneralUtil\";\n\nclass ConnectionPendingModal extends React.Component {\n  renderContent = () => {\n    return (\n      <React.Fragment>\n        <Heading.h2 my={3}>Connect Ethereum account</Heading.h2>\n\n        <Text my={4}>\n          Confirm the request that's just appeared. If you can't see a\n          request, open your{\" \"}\n          {GeneralUtil.hasMetaMask()\n            ? `MetaMask extension`\n            : `eth wallet settings`}\n          .\n        </Text>\n\n        <Box bg={\"#f6f6fc\"} p={3} display={[\"none\", \"block\"]}>\n          <Flex alignItems={\"center\"}>\n            <Box position={\"relative\"} width={\"4em\"}>\n              <Box>\n                <Loader size={\"3em\"} />\n              </Box>\n            </Box>\n            <Box>\n              <Text fontWeight={4}>\n                Waiting for connection confirmation...\n              </Text>\n              <Text fontWeight={2}>This won’t cost you any Ether</Text>\n            </Box>\n          </Flex>\n        </Box>\n      </React.Fragment>\n    );\n  }\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.props.closeModal}>\n          <ModalCard.Body>\n            {this.renderContent()}\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default ConnectionPendingModal;\n","import React from \"react\";\nimport { Heading, Text, Flex, Button, Modal } from \"rimble-ui\";\nimport ModalCard from './ModalCard';\n\nclass UserRejectedConnectionModal extends React.Component {\n  sendMessageAgain = event => {\n    this.props.closeModal();\n    this.props.initAccount();\n  };\n\n  renderContent = () => {\n    return (\n      <React.Fragment>\n        <Heading.h2 my={3}>\n          You can't continue without connecting your account\n        </Heading.h2>\n\n        <Text my={4}>\n          To use our blockchain features you need to confirm the connection\n          request.\n        </Text>\n\n        <Flex flexDirection={['column', 'row']} justifyContent={\"flex-end\"} mt={4}>\n          <Button.Outline onClick={this.props.closeModal} mr={[0, 3]} mb={[3, 0]}>\n            Cancel connection\n          </Button.Outline>\n          <Button onClick={this.sendMessageAgain}>\n            Try again\n          </Button>\n        </Flex>\n      </React.Fragment>\n    );\n  }\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.props.closeModal}>\n          <ModalCard.Body>\n            {this.renderContent()}\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default UserRejectedConnectionModal;\n","import React from \"react\";\nimport {\n  Card,\n  Heading,\n  Text,\n  Icon,\n  Modal,\n  Flex,\n  Box,\n  Button,\n  EthAddress,\n  QR,\n  Link\n} from \"rimble-ui\";\nimport TransactionFeeModal from \"./TransactionFeeModal\";\n\nclass LowFundsModal extends React.Component {\n  state = {\n    showSecondary: false,\n    showTxFees: false\n  };\n\n  toggleQRVisible = () => {\n    this.setState({\n      showSecondary: !this.state.showSecondary\n    });\n  };\n\n  toggleShowTxFees = e => {\n    console.log(\"showTxFees\", this.state.showTxFees);\n    e.preventDefault();\n\n    this.setState({\n      showTxFees: !this.state.showTxFees\n    });\n  };\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <Card\n          pr={[0, 5]}\n          pl={[0, 5]}\n          pt={[\"48px\", 5]}\n          pb={[\"97px\", 4]}\n          maxWidth={\"960px\"}\n          overflow={\"hidden\"}\n          position={\"relative\"}\n        >\n          <Box position={\"relative\"}>\n            <Flex\n              justifyContent={\"flex-end\"}\n              mr={[0, -5]}\n              mt={[\"-48px\", -5]}\n              position={\"absolute\"}\n              top={\"0\"}\n              left={\"0\"}\n              right={\"0\"}\n              bg={\"white\"}\n              zIndex={\"1\"}\n            >\n              <Button.Text\n                icononly\n                icon={\"Close\"}\n                color={\"moon-gray\"}\n                onClick={this.props.closeModal}\n              />\n            </Flex>\n          </Box>\n\n          {this.state.showSecondary === false &&\n          this.state.showTxFees === false ? (\n            <Box>\n              <Box\n                style={{ overflow: \"auto\" }}\n                maxHeight={\"calc(100vh - 195px)\"}\n              >\n                <Box px={[4, 0]} pt={[0, 0]} pb={[4, 5]}>\n                  {/* Start primary content */}\n\n                  <Box alignContent=\"center\" py={3}>\n                    <Heading.h2>\n                      Not enough Ether for transaction fees\n                    </Heading.h2>\n                  </Box>\n                  <Text mb={4}>\n                    This is a blockchain action so you’ll have to pay a\n                    transaction fee. A few dollars worth of Ether should be\n                    enough but fees do change based on how busy the network is.{\" \"}\n                    <strong>Fund your account and try again.</strong>{\" \"}\n                    <Link\n                      title=\"Learn about Ethereum transaction fees\"\n                      as={\"a\"}\n                      href=\"#\"\n                      onClick={this.toggleShowTxFees}\n                    >\n                      What are transaction fees?\n                    </Link>\n                  </Text>\n\n                  <Heading.h3>How to add funds</Heading.h3>\n\n                  <Flex\n                    alignItems={\"stretch\"}\n                    mx={0}\n                    mb={[4, 5]}\n                    mt={[3, 4]}\n                    flexWrap={[\"wrap\", \"no-wrap\"]}\n                  >\n                    <Box p={[1, 2]} width={[1, 1 / 2]}>\n                      <Flex\n                        flexDirection={\"column\"}\n                        justifyContent={\"space-between\"}\n                        height={\"100%\"}\n                      >\n                        <Box>\n                          <Heading.h5>Buy ETH from an exchange</Heading.h5>\n                          <Text fontSize=\"1\">\n                            You can buy ETH from exchanges like Coinbase and\n                            send it to your account. If you don’t already have\n                            a Coinbase account, it can take a while to get set\n                            up.\n                          </Text>\n                        </Box>\n\n                        <Button.Outline my={3}>\n                          <Flex alignItems={\"center\"}>\n                            <Icon name=\"OpenInNew\" mr={2} />\n                            Go to CoinBase\n                          </Flex>\n                        </Button.Outline>\n                      </Flex>\n                    </Box>\n                    <Box p={[1, 2]} width={[1, 1 / 2]}>\n                      <Flex\n                        flexDirection={\"column\"}\n                        justifyContent={\"space-between\"}\n                        height={\"100%\"}\n                      >\n                        <Box>\n                          <Heading.h5>\n                            Send ETH from another account\n                          </Heading.h5>\n                          <Text fontSize=\"1\">\n                            If you have ETH in another Ethereum account, you\n                            can send it to this account using your public\n                            Ethereum address or QR code.\n                          </Text>\n                        </Box>\n                        <Button.Outline my={3} onClick={this.toggleQRVisible}>\n                          <Flex alignItems={\"center\"}>\n                            <Icon name=\"FilterCenterFocus\" mr={2} />\n                            Show account QR code\n                          </Flex>\n                        </Button.Outline>\n                      </Flex>\n                    </Box>\n                  </Flex>\n                  {/* End primary content */}\n                </Box>\n              </Box>\n              <Box\n                position={\"absolute\"}\n                bottom={\"0\"}\n                left={\"0\"}\n                right={\"0\"}\n                px={[4, 5]}\n                pt={0}\n                pb={4}\n                bg={\"white\"}\n              >\n                {/* Start primary footer */}\n                <Flex borderTop={1} borderColor={\"#eee\"} />\n                <Flex pt={4} justifyContent={[\"center\", \"flex-end\"]}>\n                  <Button onClick={this.props.closeModal} width={[1, \"auto\"]}>\n                    Back to Idle\n                  </Button>\n                </Flex>\n                {/* End primary footer */}\n              </Box>\n            </Box>\n          ) : null}\n\n          {this.state.showSecondary ? (\n            <Box mb={3}>\n              <Box\n                style={{ overflow: \"auto\" }}\n                maxHeight={\"calc(100vh - 195px)\"}\n              >\n                <Box px={[4, 0]} pt={[0, 0]} pb={[4, 5]}>\n                  {/* Start secondary content */}\n                  <Flex my={3} justifyContent={\"center\"}>\n                    <QR\n                      size={130}\n                      value={\n                        this.props.account ? this.props.account : \"1234512345\"\n                      }\n                    />\n                  </Flex>\n\n                  <EthAddress my={4} address={this.props.account} />\n                  <Flex mb={3} />\n                  {/* End secondary content */}\n                </Box>\n              </Box>\n\n              <Box\n                position={\"absolute\"}\n                bottom={\"0\"}\n                left={\"0\"}\n                right={\"0\"}\n                px={[4, 5]}\n                pt={0}\n                pb={4}\n                bg={\"white\"}\n              >\n                {/* Start secondary footer */}\n                <Flex borderTop={1} borderColor={\"#eee\"} />\n                <Flex mt={4} justifyContent={[\"center\", \"flex-end\"]}>\n                  <Button.Outline\n                    width={[1, \"auto\"]}\n                    onClick={this.toggleQRVisible}\n                  >\n                    Go back\n                  </Button.Outline>\n                </Flex>\n                {/* End secondary footer */}\n              </Box>\n            </Box>\n          ) : null}\n\n          {this.state.showTxFees ? (\n            <Box mb={3}>\n              <Box\n                style={{ overflow: \"auto\" }}\n                maxHeight={\"calc(100vh - 195px)\"}\n              >\n                <Box px={[4, 0]} pt={[0, 0]} pb={[4, 5]}>\n                  {/* Start tx fee content */}\n                  <TransactionFeeModal />\n                  {/* End tx fee content */}\n                </Box>\n              </Box>\n              <Box\n                position={\"absolute\"}\n                bottom={\"0\"}\n                left={\"0\"}\n                right={\"0\"}\n                px={[4, 5]}\n                pt={0}\n                pb={4}\n                bg={\"white\"}\n              >\n                {/* Start primary footer */}\n                <Flex\n                  pt={4}\n                  justifyContent={[\"center\", \"flex-end\"]}\n                  borderTop={1}\n                  borderColor={\"#eee\"}\n                >\n                  <Button.Outline\n                    width={[1, \"auto\"]}\n                    onClick={this.toggleShowTxFees}\n                  >\n                    Go Back\n                  </Button.Outline>\n                </Flex>\n                {/* End primary footer */}\n              </Box>\n            </Box>\n          ) : null}\n        </Card>\n      </Modal>\n    );\n  }\n}\n\nexport default LowFundsModal;\n","import React from \"react\";\n\nimport NoWeb3BrowserModal from \"./components/NoWeb3BrowserModal\";\nimport NoWalletModal from \"./components/NoWalletModal\";\nimport WrongNetworkModal from \"./components/WrongNetworkModal\";\n\nimport ConnectionModal from \"./components/ConnectionModal\";\nimport ConnectionPendingModal from \"./components/ConnectionPendingModal\";\nimport UserRejectedConnectionModal from \"./components/UserRejectedConnectionModal\";\n\nimport LowFundsModal from \"./components/LowFundsModal\";\n\nclass ConnectionModalUtil extends React.Component {\n  render() {\n    return (\n      <div>\n        <NoWeb3BrowserModal\n          closeModal={this.props.modals.methods.closeNoWeb3BrowserModal}\n          isOpen={this.props.modals.data.noWeb3BrowserModalIsOpen}\n          transaction={this.props.transaction}\n        />\n\n        <NoWalletModal\n          closeModal={this.props.modals.methods.closeNoWalletModal}\n          isOpen={this.props.modals.data.noWalletModalIsOpen}\n          transaction={this.props.transaction}\n        />\n\n        <WrongNetworkModal\n          closeModal={this.props.modals.methods.closeWrongNetworkModal}\n          isOpen={this.props.modals.data.wrongNetworkModalIsOpen}\n          network={this.props.network}\n        />\n\n        <ConnectionModal\n          {...this.props}\n          isMobile={this.props.isMobile}\n          setConnector={this.props.setConnector}\n          currentNetwork={this.props.network.current}\n          validateAccount={this.props.validateAccount}\n          closeModal={this.props.modals.methods.closeConnectionModal}\n          isOpen={ this.props.modals.data.connectionModalIsOpen && !this.props.accountValidated }\n        />\n\n        <ConnectionPendingModal\n          closeModal={this.props.modals.methods.closeConnectionPendingModal}\n          isOpen={this.props.modals.data.accountConnectionPending}\n          currentNetwork={this.props.network.current}\n        />\n        <UserRejectedConnectionModal\n          closeModal={\n            this.props.modals.methods.closeUserRejectedConnectionModal\n          }\n          isOpen={this.props.modals.data.userRejectedConnect}\n          initAccount={this.props.initAccount}\n        />\n\n        <LowFundsModal\n          closeModal={this.props.modals.methods.closeLowFundsModal}\n          isOpen={this.props.modals.data.lowFundsModalIsOpen}\n          currentNetwork={this.props.network.current}\n          account={this.props.account}\n        />\n      </div>\n    );\n  }\n}\n\nexport default ConnectionModalUtil;\n","import React from \"react\";\nimport {\n  Text,\n  Modal,\n  Flex,\n  Button\n} from \"rimble-ui\";\nimport ModalCard from './ModalCard';\nimport FunctionsUtil from '../FunctionsUtil';\n\nclass ConnectionErrorModal extends React.Component {\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n  }\n\n  componentDidMount() {\n    this.loadUtils();\n  }\n\n  componentDidUpdate() {\n    this.loadUtils();\n  }\n\n  async closeModal(e){\n    e.preventDefault();\n    // Disconnect to Infura only if the wallet is not logged\n    if (!this.props.account){\n      this.props.setConnector('Infura',null);\n      await this.props.context.setFirstValidConnector(['Infura']);\n    }\n    this.props.modals.methods.closeConnectionErrorModal();\n  }\n\n  render() {\n\n    const walletProvider = this.functionsUtil.getWalletProvider();\n    const isLedger = (walletProvider && walletProvider.toLowerCase() === 'ledger') || (typeof this.props.modals.data.connectionError === 'string' && this.props.modals.data.connectionError.toLowerCase().includes('ledger'));\n\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={ e => this.closeModal(e) }>\n          <ModalCard.Header title={ isLedger ? 'Ledger Error' : `Connection Error` } icon={'images/warning.svg'}></ModalCard.Header>\n          <ModalCard.Body>\n            <Flex my={1} width={1} flexDirection={'column'} mx={'auto'}>\n              <Text.p color={'dark-gray'} textAlign={'center'}>\n                The following error occured while trying to connect with your { isLedger ? 'Ledger' : 'account' }:<br />\n                <Text.span color={'red'} fontWeight={3}>\"{this.props.modals.data.connectionError}\"</Text.span><br />\n                {\n                  isLedger ? (\n                    <Text.span>\n                      Make sure that your Ledger is <strong>connected</strong> and <strong>unlocked</strong>. Also check that both <strong>Contract data</strong> and <strong>Browser support</strong> are enabled in the Ledger settings.<br />\n\n                    </Text.span>\n                  ) : 'Make sure that your wallet is unlocked and try again.'\n                }\n              </Text.p>\n            </Flex>\n            <Flex mb={3} flexDirection={'column'} alignItems={'center'} justifyContent={'center'}>\n              <Button\n                my={2}\n                mx={[0, 2]}\n                borderRadius={4}\n                mainColor={'blue'}\n                size={this.props.isMobile ? 'small' : 'medium'}\n                onClick={ async (e) => { await this.closeModal(e); } }\n              >\n              GOT IT\n              </Button>\n            </Flex>\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default ConnectionErrorModal;","import React from \"react\";\nimport {\n  Text,\n  Link,\n  Flex,\n  Modal,\n  Button\n} from \"rimble-ui\";\nimport ModalCard from './ModalCard';\nimport FunctionsUtil from '../FunctionsUtil';\n\nclass TransactionErrorModal extends React.Component {\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n  }\n\n  componentDidMount() {\n    this.loadUtils();\n  }\n\n  componentDidUpdate() {\n    this.loadUtils();\n  }\n\n  async closeModal(e){\n    e.preventDefault();\n    this.props.modals.methods.closeTransactionErrorModal();\n  }\n\n  render() {\n\n    const isLedgerError = typeof this.props.modals.data.transactionError === 'string' && this.props.modals.data.transactionError.toLowerCase().includes('ledger');\n    const isSlowTxError = typeof this.props.modals.data.transactionError === 'string' && this.props.modals.data.transactionError.toLowerCase().includes('not mined within 50 blocks');\n\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={ e => this.closeModal(e) }>\n          <ModalCard.Header title={ 'Transaction Error' } icon={'images/warning.svg'}></ModalCard.Header>\n          <ModalCard.Body>\n            <Flex my={1} width={1} flexDirection={'column'} mx={'auto'}>\n              <Text.p color={'dark-gray'} textAlign={'center'}>\n                The following error occured while trying to send a transaction:<br />\n                <Text.span color={'red'} fontWeight={3}>\"{this.props.modals.data.transactionError}\"</Text.span><br />\n                {\n                  isLedgerError ? (\n                    <Text.span\n                      fontSize={1}\n                    >\n                      <br />Make sure that your Ledger is <strong>connected</strong> and <strong>unlocked</strong>. Also check that both <strong>Contract data</strong> and <strong>Browser support</strong> are enabled in the Ledger settings.<br />\n                      We also suggest you to connect your Ledger with Metamask, read the <Link fontSize={1} color={'blue'} hoverColor={'blue'} target={'_blank'} rel={\"nofollow noopener noreferrer\"} href={'https://metamask.zendesk.com/hc/en-us/articles/360020394612-How-to-connect-a-Trezor-or-Ledger-Hardware-Wallet'}>instructions here</Link>.\n                    </Text.span>\n                  ) : isSlowTxError ? 'This could happen when the gas price is low, check the transaction status with your Wallet.' : 'Make sure that your have enough funds in your wallet.'\n                }\n              </Text.p>\n            </Flex>\n            <Flex mb={3} flexDirection={'column'} alignItems={'center'} justifyContent={'center'}>\n              <Button\n                my={2}\n                mx={[0, 2]}\n                borderRadius={4}\n                mainColor={'blue'}\n                size={this.props.isMobile ? 'small' : 'medium'}\n                onClick={ async (e) => { await this.closeModal(e); } }\n              >\n              GOT IT\n              </Button>\n            </Flex>\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default TransactionErrorModal;","import Web3 from \"web3\";\nimport React from 'react';\nimport BigNumber from 'bignumber.js';\nimport SimpleID from 'simpleid-js-sdk';\nimport NetworkUtil from \"./NetworkUtil\";\nimport { Biconomy } from \"@biconomy/mexa\";\nimport * as Sentry from '@sentry/browser';\nimport FunctionsUtil from './FunctionsUtil';\nimport globalConfigs from '../configs/globalConfigs';\nimport ConnectionModalUtil from \"./ConnectionModalsUtil\";\nimport detectEthereumProvider from '@metamask/detect-provider';\nimport { IFrameEthereumProvider } from '@ledgerhq/iframe-provider';\nimport ConnectionErrorModal from './components/ConnectionErrorModal';\nimport TransactionErrorModal from './components/TransactionErrorModal';\n\nrequire('dotenv').config();\nconst INFURA_KEY = process.env[\"REACT_APP_INFURA_KEY\"];\n\nconst RimbleTransactionContext = React.createContext({\n  web3: {},\n  account: {},\n  biconomy: {},\n  simpleID: {},\n  contracts: [],\n  web3Infura: {},\n  tokenConfig: {},\n  transactions: {},\n  permitClient: {},\n  accountBalance: {},\n  initWeb3: () => {},\n  accountValidated: {},\n  initAccount: () => {},\n  accountBalanceLow: {},\n  initSimpleID: () => {},\n  initContract: () => {},\n  erc20ForwarderClient: {},\n  accountBalanceToken: {},\n  checkPreflight: () => {},\n  validateAccount: () => {},\n  network: {\n    current: {},\n    required: {},\n    checkNetwork: () => {},\n    isCorrectNetwork: null,\n  },\n  accountInizialized: false,\n  getTokenDecimals: () => {},\n  rejectValidation: () => {},\n  getAccountBalance: () => {},\n  contractsInitialized: false,\n  accountValidationPending: {},\n  initializeContracts: () => {},\n  rejectAccountConnect: () => {},\n  enableUnderlyingWithdraw: false,\n  connectAndValidateAccount: () => {},\n  modals: {\n    data: {\n      connectionError: {},\n      lowFundsModalIsOpen: {},\n      noWalletModalIsOpen: {},\n      userRejectedConnect: {},\n      connectionModalIsOpen: {},\n      userRejectedValidation: {},\n      wrongNetworkModalIsOpen: {},\n      accountValidationPending: {},\n      accountConnectionPending: {},\n      noWeb3BrowserModalIsOpen: {},\n      transactionConnectionModalIsOpen: {},\n    },\n    methods: {\n      openLowFundsModal: () => {},\n      closeLowFundsModal: () => {},\n      openWrongNetworkModal: () => {},\n      closeWrongNetworkModal: () => {},\n      openNoWeb3BrowserModal: () => {},\n      closeNoWeb3BrowserModal: () => {},\n      openConnectionErrorModal: () => {},\n      closeConnectionErrorModal: () => {},\n      openTransactionErrorModal: () => {},\n      closeTransactionErrorModal: () => {},\n      openConnectionPendingModal: () => {},\n      closeConnectionPendingModal: () => {},\n      openUserRejectedConnectionModal: () => {},\n      openUserRejectedValidationModal: () => {},\n      closeUserRejectedConnectionModal: () => {},\n      closeUserRejectedValidationModal: () => {},\n    }\n  },\n  transaction: {\n    data: {\n      transactions: {}\n    },\n    meta: {},\n    methods: {}\n  }\n});\n\nlet setConnectorName = null;\nlet biconomyLoginProcessing = false;\n\nclass RimbleTransaction extends React.Component {\n  static Consumer = RimbleTransactionContext.Consumer;\n\n  componentUnmounted = false;\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    const props = Object.assign({},this.props);\n    props.contracts = this.state.contracts;\n    if (this.functionsUtil){\n      props.account = this.state.account;\n      this.functionsUtil.setProps(props);\n    } else {\n      props.account = this.state.account;\n      this.functionsUtil = new FunctionsUtil(props);\n    }\n  }\n\n  componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  componentWillMount(){\n    this.loadUtils();\n    this.checkNetwork();\n\n    // detect Network account change\n    if (window.ethereum){\n      window.ethereum.on('networkChanged', async (networkId) => {\n        await this.props.clearCachedData(() => {\n          this.checkNetwork();\n        });\n      });\n    }\n\n    window.initWeb3 = this.initWeb3;\n  }\n\n  componentDidMount = async () => {\n    this.initSimpleID();\n\n    // this.functionsUtil.customLog('RimbleWeb3 componentDidMount');\n    this.initWeb3();\n\n    this.connectGnosisSafe();\n\n    // TEST - Manually triggers transaction error\n    // this.openTransactionErrorModal(null,'Your Ledger device is Ineligible');\n\n    window.testTransaction = (method) => {\n      const transaction = this.createTransaction();\n      transaction.method = method;\n      this.addTransaction(transaction);\n      return transaction;\n    }\n\n    window.updateTransaction = (transaction,hash,status,params) => {\n      // Add meta data to transaction\n      transaction.status = status;\n      transaction.params = params;\n      transaction.type = \"contract\";\n      transaction.created = Date.now();\n      transaction.transactionHash = hash;\n\n      // console.log('window.updateTransaction',transaction);\n\n      this.updateTransaction(transaction);\n      return transaction;\n    }\n  }\n\n  connectGnosisSafe = () => {\n    const gnosisSafeLoaded = this.props.connectors.gnosis.safeLoaded;\n    if (gnosisSafeLoaded){\n      const walletProvider = this.functionsUtil.getWalletProvider();\n      const isGnosisSafe = this.props.connectors.gnosis.safeLoaded && !!this.props.connectors.gnosis.provider.safe;\n      // console.log('isGnosisSafe',this.props.connectors.gnosis.provider.safe,isGnosisSafe);\n      if (isGnosisSafe){\n        this.props.setConnector('gnosis','gnosis');\n      } else if (walletProvider === 'gnosis') {\n        this.props.setConnector('Infura',null);\n      }\n    }\n  }\n\n  componentDidUpdate = async (prevProps, prevState) => {\n\n    this.loadUtils();\n\n    // this.functionsUtil.customLog('componentDidUpdate',prevProps.connectorName,this.props.connectorName,this.props.context.connectorName,this.props.context.active,(this.props.context.error ? this.props.context.error.message : null));\n\n    const gnosisSafeLoaded = !this.state.gnosisSafeLoaded && this.props.connectors.gnosis.safeLoaded;\n    // console.log('gnosisSafeLoaded',this.state.gnosisSafeLoaded,this.props.connectors.gnosis.safeLoaded,gnosisSafeLoaded);\n    if (gnosisSafeLoaded){\n      this.setState({\n        gnosisSafeLoaded:true\n      },() => {\n        this.connectGnosisSafe();\n      });\n    }\n\n    if (prevProps.connectorName !== this.props.connectorName && this.props.connectorName){\n      this.initWeb3();\n    } else if ( prevProps.context !== this.props.context ){\n      if (this.props.context.error instanceof Error && this.props.context.error.message.length){\n        const errorMessage = this.props.context.error.message;\n        const isWalletConnectClosedModalError = (errorMessage === 'User closed WalletConnect modal' || errorMessage === 'User closed modal');\n        // this.functionsUtil.customLog('componentDidUpdate',setConnectorName,errorMessage);\n        if (setConnectorName === 'WalletConnect' && isWalletConnectClosedModalError){\n          // this.functionsUtil.customLog('WalletConnect disconnected! Set Infura connector');\n          this.props.setConnector('Infura',null);\n          // this.functionsUtil.removeStoredItem('walletProvider');\n          // this.functionsUtil.removeStoredItem('connectorName');\n          // this.functionsUtil.setLocalStorage('context',JSON.stringify({active:this.props.context.active,connectorName:'Infura'}));\n          setConnectorName = null;\n          // await this.props.context.setConnector('Infura');\n        } else if (!isWalletConnectClosedModalError) {\n          this.openConnectionErrorModal(null,errorMessage);\n        } else {\n          this.initWeb3();\n        }\n      // WalletConnect double trigger initWeb3\n      } else if (this.props.context.active && this.props.context.connectorName!=='WalletConnect' && this.props.connectorName==='WalletConnect') {\n        this.initWeb3();\n      }\n    } else if ( (this.props.context.connectorName && this.props.context.connectorName !== this.props.connectorName) || prevProps.customAddress !== this.props.customAddress){\n      this.initWeb3();\n    }\n\n    const customAddressChanged = prevProps.customAddress !== this.props.customAddress;\n    if (customAddressChanged){\n      this.initAccount();\n    }\n\n    const tokenChanged = prevProps.selectedToken !== this.props.selectedToken;\n    // const availableTokensChanged = prevProps.availableTokens && this.props.availableTokens && JSON.stringify(Object.keys(prevProps.availableTokens)) !== JSON.stringify(Object.keys(this.props.availableTokens));\n    const availableStrategiesChanged = prevProps.availableStrategies && this.props.availableStrategies && JSON.stringify(Object.keys(prevProps.availableStrategies)) !== JSON.stringify(Object.keys(this.props.availableStrategies));\n\n    // Reset tokenDecimals if token is changed\n    if (tokenChanged){\n      this.setState({\n        tokenDecimals: null\n      });\n    }\n\n    // this.functionsUtil.customLog(prevProps.enableUnderlyingWithdraw,this.props.enableUnderlyingWithdraw,this.state.enableUnderlyingWithdraw);\n    if (prevProps.enableUnderlyingWithdraw !== this.props.enableUnderlyingWithdraw){\n      this.setState({\n        enableUnderlyingWithdraw:this.props.enableUnderlyingWithdraw\n      });\n    }\n\n    if (localStorage){\n      const context = JSON.parse(localStorage.getItem('context'));\n      if (!context || (this.props.context.active !== context.active || this.props.context.connectorName !== context.connectorName)){\n        this.functionsUtil.setLocalStorage('context',JSON.stringify({active:this.props.context.active,connectorName:this.props.context.connectorName}));\n      }\n    }\n\n    if (tokenChanged || availableStrategiesChanged){\n      await this.initializeContracts();\n    }\n\n    const networkChanged = JSON.stringify(prevState.network) !== JSON.stringify(this.state.network);\n    // console.log('networkChanged',JSON.stringify(prevState.network),JSON.stringify(this.state.network),networkChanged);\n    if (networkChanged){\n      this.setState({\n        contracts:[],\n        contractsInitialized:false\n      }, () => {\n        this.initWeb3();\n        if (typeof this.props.setNetwork === 'function'){\n          this.props.setNetwork(this.state.network);\n        }\n      });\n    }\n  }\n\n  // Initialize a web3 provider\n  initWeb3 = async (connectorName=null) => {\n\n    // Detect ethereum provider\n    const metamaskProvider = await detectEthereumProvider();\n    if (metamaskProvider && (!window.ethereum || window.ethereum !== metamaskProvider)){\n      window.ethereum = metamaskProvider;\n    }\n\n    const context = this.props.context;\n    const networkId = this.state.network.current.id || this.state.network.required.id;\n\n    if (!networkId){\n      return false;\n    }\n\n    // console.log('initWeb3',this.state.network.current.id,this.state.network.required.id,networkId);\n\n    const web3Infura = new Web3(new Web3.providers.HttpProvider(globalConfigs.network.providers.infura[networkId]+INFURA_KEY));\n\n    let web3 = context.library;\n\n    // 0x Instant Wallet Provider Injection\n    if (!window.RimbleWeb3_context || context.connectorName !== window.RimbleWeb3_context.connectorName){\n      window.RimbleWeb3_context = context;\n    }\n\n    // Reset setConnectorName if force connectorName\n    if (connectorName){\n      setConnectorName = null;\n    } else {\n      connectorName = this.props.connectorName;\n    }\n\n    // const last_context = localStorage ? JSON.parse(localStorage.getItem('context')) : null;\n\n    // this.functionsUtil.customLog('initWeb3',context.active,connectorName,context.connectorName,context.connector,(web3 && web3.currentProvider ? web3.currentProvider.disable : null),(context.connector ? context.connector.disable : null));\n    if (context && connectorName === 'Infura' && connectorName !== context.connectorName){\n      if (web3 && typeof web3.currentProvider.disable === 'function'){\n        web3.currentProvider.disable();\n      } else if (context.connector && typeof context.connector.disable === 'function'){\n        context.connector.disable();\n      }\n      web3 = null;\n      setConnectorName = null;\n    }\n\n    const connectorNameChanged = (context.connectorName && context.connectorName !== connectorName) || (connectorName !== 'Infura' && connectorName !== setConnectorName);\n\n    // this.functionsUtil.customLog('initWeb3',context.active,connectorNameChanged,context.connectorName,connectorName,setConnectorName);\n\n    if (connectorName !== 'ledgerLive'){\n      if (!context.active || connectorNameChanged) {\n        // Select preferred web3 provider\n        if (connectorName && connectorNameChanged){\n\n          if (connectorName === 'gnosis' && !this.state.gnosisSafeLoaded){\n            return false;\n          }\n\n          // this.functionsUtil.customLog('initWeb3 set connector',connectorName);\n          setConnectorName = connectorName;\n          await context.setConnector(connectorName);\n          // await context.setFirstValidConnector([connectorName, 'Infura']);\n          return web3;\n        }\n      }\n    }\n\n    let web3Host = null;\n    let web3Provider = null;\n\n    if (!web3) { // safety web3 implementation\n      if (window.ethereum) {\n        this.functionsUtil.customLog(\"Using modern web3 provider.\");\n        web3Provider = window.ethereum;\n      } else if (window.web3) {\n        this.functionsUtil.customLog(\"Legacy web3 provider. Try updating.\");\n        web3Provider = window.web3;\n      } else {\n        this.functionsUtil.customLog(\"Non-Ethereum browser detected. Using Infura fallback.\");\n        web3Host = globalConfigs.network.providers.infura[networkId]+INFURA_KEY;\n      }\n    } else {\n      web3Provider = web3.currentProvider;\n    }\n\n    let forceCallback = false;\n\n    if ((!connectorName || connectorName === 'Infura') && web3Provider && typeof web3Provider.enable === 'function'){\n      try {\n        await web3Provider.enable();\n      } catch (connectionError){\n        web3Provider = null;\n        web3Host = globalConfigs.network.providers.infura[networkId]+INFURA_KEY;\n        forceCallback = true;\n      }\n    }\n\n    // Ledger Live\n    if (connectorName === 'ledgerLive'){\n      web3Provider = new IFrameEthereumProvider();\n    }\n\n    // Injected web3 provider\n    if (web3Provider){\n      web3 = new Web3(web3Provider);\n    // Infura\n    } else if (web3Host) {\n      web3 = new Web3(new Web3.providers.HttpProvider(web3Host));\n      if (connectorName !== 'Infura'){\n        this.props.setConnector('Infura',null);\n      }\n    }\n\n    const web3Callback = async () => {\n\n      window.web3Injected = this.state.web3;\n      // window.web3InfuraInjected = this.state.web3Infura;\n\n      if (typeof this.props.callbackAfterLogin === 'function'){\n        this.props.callbackAfterLogin();\n        this.props.setCallbackAfterLogin(null);\n      }\n\n      // After setting the web3 provider, check network\n      try {\n        await this.checkNetwork();\n        if (this.state.network.isCorrectNetwork){\n\n          if (!this.state.contractsInitialized){\n            await this.initializeContracts();\n          }\n\n          if (context.account){\n            // Login with biconomy\n            if (this.state.biconomy){\n              const biconomy = this.state.biconomy;\n              const biconomyInfo = globalConfigs.network.providers.biconomy;\n              if (biconomyInfo.enableLogin && !biconomy.isLogin && !biconomyLoginProcessing){\n                biconomyLoginProcessing = true;\n                biconomy.login(context.account, (error, response) => {\n                  // this.functionsUtil.customLog('biconomy login',error,response);\n                  // Failed to login with Biconomy\n                  if (error) {\n                    return this.setState({\n                      biconomy:false,\n                    },() => {\n                      this.initAccount(context.account);\n                    });\n                  }\n\n                  biconomyLoginProcessing = false;\n\n                  if (response.transactionHash) {\n                    this.initAccount(context.account);\n                  } else if(response.userContract) {\n                    this.initAccount(context.account);\n                  }\n                });\n                return false;\n              }\n            }\n\n            await this.initAccount(context.account);\n          } else {\n\n            await this.initAccount();\n            // await this.setState({\n            //   accountInizialized: true,\n            //   account: this.props.customAddress\n            // });\n          }\n        }\n      // Initialize Infura Web3 and display error\n      } catch (error) {\n        this.openConnectionErrorModal(null,error.message);\n      }\n    }\n\n    // Save original web3 connector in case Mexa initialization fails\n    const originalWeb3 = web3;\n    const biconomyInfo = globalConfigs.network.providers.biconomy;\n    const walletProvider = this.functionsUtil.getWalletProvider();\n\n    if (connectorName !== 'Infura' && biconomyInfo && biconomyInfo.enabled && biconomyInfo.supportedNetworks.includes(networkId) && (!walletProvider || !biconomyInfo.disabledWallets.includes(walletProvider.toLowerCase()))){\n\n      if (this.state.biconomy === null){\n        const biconomyWeb3Provider = web3Provider ? web3Provider : web3Host;\n\n        const biconomy = new Biconomy(biconomyWeb3Provider,biconomyInfo.params);\n\n        if (biconomy && typeof biconomy.onEvent === 'function'){\n          web3 = new Web3(biconomy);\n          biconomy.onEvent(biconomy.READY, () => {\n            if (this.componentUnmounted || this.state.biconomy === false || this.state.biconomy === biconomy){\n              return false;\n            }\n            \n            const permitClient = biconomy.permitClient;\n            const erc20ForwarderClient = biconomy.erc20ForwarderClient;\n\n            const newState = {\n              web3,\n              biconomy,\n              web3Infura,\n              permitClient,\n              erc20ForwarderClient\n            };\n            // console.log('biconomy',newState);\n\n            if (web3 !== this.state.web3){\n              this.setState(newState, web3Callback);\n            }\n          }).onEvent(biconomy.ERROR, (error, message) => {\n            // console.error('Biconomy error',error,message,this.state.biconomy);\n            web3 = originalWeb3;\n            // Handle error while initializing mexa\n            if (this.state.biconomy !== false){\n              this.setState({\n                web3,\n                web3Infura,\n                biconomy:false\n              }, web3Callback);\n            }\n          });\n        } else {\n          this.setState({\n            web3,\n            web3Infura,\n            biconomy:false\n          }, web3Callback);\n        }\n      }\n    } else {\n      if (web3 !== this.state.web3){\n        this.setState({\n          web3,\n          web3Infura,\n        }, web3Callback);\n      } else if (context.account || forceCallback){\n        web3Callback();\n      }\n    }\n\n    return web3;\n  }\n\n  initContract = async (name, address, abi, useInfuraProvider=false) => {\n    this.functionsUtil.customLog(`Init contract: ${name}`);\n    return await this.createContract(name, address, abi, useInfuraProvider);\n  }\n\n  createContract = async (name, address, abi, useInfuraProvider=false) => {\n    this.functionsUtil.customLog(`creating contract ${name} - addr: ${address}`);\n\n    const web3Provider = useInfuraProvider && this.state.web3Infura ? this.state.web3Infura : this.state.web3;\n\n    if (!web3Provider){\n      return null;\n    }\n\n    // Create contract on initialized web3 provider with given abi and address\n    try {\n      const contract = new web3Provider.eth.Contract(abi, address);\n      this.setState(state => ({\n        ...state,\n        contracts: [...state.contracts, {name, contract}]\n      }));\n      return {name, contract};\n    } catch (error) {\n      this.functionsUtil.customLogError(\"Could not create contract.\",name,address,error);\n    }\n\n    return null;\n  }\n\n  initSimpleID = () => {\n\n    if (this.state.simpleID){\n      return this.state.simpleID;\n    }\n\n    const simpleIDInfo = globalConfigs.network.providers.simpleID;\n    let simpleID = null;\n    const networkId = this.state.network.current.id || this.state.network.required.id;\n\n    if (simpleIDInfo && simpleIDInfo.enabled && simpleIDInfo.supportedNetworks.indexOf(networkId) !== -1 ){\n      const simpleIDParams = simpleIDInfo.params;\n      simpleIDParams.network = simpleIDInfo.getNetwork(this.state.network.current.id,globalConfigs.network.availableNetworks);\n      simpleID = new SimpleID(simpleIDParams);\n    }\n\n    window.simpleID = simpleID;\n\n    this.setState({\n      simpleID\n    });\n\n    return simpleID;\n  }\n\n  initAccount = async (account=false) => {\n    \n    const customAddress = this.props.customAddress;\n    const walletProvider = this.functionsUtil.getWalletProvider('Infura');\n\n    if (customAddress){\n      // Set custom account\n      this.setState({\n        account:customAddress,\n        accountInizialized:true,\n      });\n\n      // After account is complete, get the balance\n      this.getAccountBalance();\n\n      return false;\n    }\n\n    try {\n      if (!account){\n        const wallets = await Promise.race([\n            this.state.web3.eth.getAccounts(),\n            new Promise((resolve) => setTimeout(resolve, 300))\n        ]);\n        if (wallets && wallets.length){\n          account = wallets[0];\n        }\n      }\n\n      if (!account || this.state.account === account){\n        return this.setState({\n          accountInizialized: true\n        });\n      }\n\n      // Request account access if needed\n      if (account && walletProvider !== 'Infura'){\n\n        if (walletProvider === 'Infura'){\n          this.setState({\n            accountInizialized: true,\n            account:this.props.customAddress\n          });\n          return false;\n        }\n\n        // Send address info to SimpleID\n        const simpleID = this.initSimpleID();\n\n        if (simpleID){\n\n          const notifications = await simpleID.notifications();\n\n          if (notifications && notifications.length && window.$crisp){\n\n            let shownNotifications = [];\n            if (localStorage){\n              shownNotifications = localStorage.getItem('shownNotifications') && JSON.parse(localStorage.getItem('shownNotifications')) ? JSON.parse(localStorage.getItem('shownNotifications')) : [];\n            }\n\n            notifications.forEach((n,i) => {\n\n              const notificationId = n.name;\n\n              // Show notification if not shown already\n              if (shownNotifications.indexOf(notificationId) === -1){\n                window.$crisp.push([\"do\", \"message:show\", [\"text\", this.functionsUtil.normalizeSimpleIDNotification(n.content) ]]);\n\n                // Save notification id\n                shownNotifications.push(notificationId);\n              }\n            });\n\n            // Store shown notification\n            if (localStorage){\n              this.functionsUtil.setLocalStorage('shownNotifications',JSON.stringify(shownNotifications));\n            }\n          }\n        }\n\n        // Send Google Analytics connection event\n        this.functionsUtil.sendGoogleAnalyticsEvent({\n          eventCategory: 'Connect',\n          eventAction: 'connected',\n          eventLabel: walletProvider\n        });\n\n        // this.functionsUtil.customLog('initAccount',account);\n\n        // Set custom account\n        this.setState({\n          account,\n          // web3SocketProvider,\n          accountInizialized: true\n        });\n\n        // After account is complete, get the balance\n        this.getAccountBalance();\n\n        // TODO subscribe for account changes, no polling\n        // set a state flag which indicates if the subscribe handler has been\n        // called at least once\n      } else {\n        return this.setState({\n          accountInizialized: true\n        });\n      }\n    } catch (error) {\n\n      this.setState({\n        accountInizialized: true\n      });\n\n      // User denied account access...\n      this.functionsUtil.customLog(\"User cancelled connect request. Error:\", error);\n\n      // this.functionsUtil.customLog(error);\n\n      // Catch ledger error\n      if (error && error.message && error.message.includes('MULTIPLE_OPEN_CONNECTIONS_DISALLOWED')) {\n        return;\n      }\n\n      // Send Sentry connection error\n      const isError = error instanceof Error;\n      if (this.functionsUtil.checkUrlOrigin() && isError){\n        Sentry.captureException(error);\n      }\n\n      // Reject Connect\n      // this.rejectAccountConnect(error);\n    }\n  }\n\n  // TODO: Can this be moved/combined?\n  rejectAccountConnect = error => {\n    let modals = { ...this.state.modals };\n    modals.data.accountConnectionPending = false;\n    modals.data.userRejectedConnect = true;\n    this.setState({ modals });\n  }\n\n  getAccountBalance = async (increaseAmount) => {\n\n    increaseAmount = increaseAmount ? this.functionsUtil.BNify(increaseAmount) : null;\n\n    try {\n\n      let [accountBalance,accountBalanceToken,tokenDecimals] = await Promise.all([\n        this.state.web3.eth.getBalance(this.state.account), // Get ETH balance\n        this.getTokenBalance(this.state.account), // Get token balance\n        this.getTokenDecimals()\n      ]);\n\n      if (accountBalance) {\n\n        // Convert to wei if decimals found\n        if (accountBalance.toString().includes('.')){\n          accountBalance = this.state.web3.utils.toWei(accountBalance);\n        }\n\n        // Convert to Eth amount\n        accountBalance = this.state.web3.utils.fromWei(\n          accountBalance,\n          'ether'\n        );\n\n        accountBalance = this.functionsUtil.BNify(accountBalance).toString();\n\n        this.setState({\n          accountBalance\n        });\n\n        this.functionsUtil.customLog(\"account balance: \", accountBalance);\n      }\n\n      // this.functionsUtil.customLog('accountBalance',res,(accountBalanceToken ? accountBalanceToken.toString() : null),tokenDecimals,increaseAmount);\n\n      if (accountBalanceToken) {\n\n        accountBalanceToken = this.functionsUtil.BNify(accountBalanceToken);\n\n        // Increase balance amount if passed and balance didn't change\n        if (increaseAmount && this.state.accountBalanceToken && this.functionsUtil.normalizeTokenAmount(this.state.accountBalanceToken,tokenDecimals).toString() === accountBalanceToken.toString()){\n          accountBalanceToken = accountBalanceToken.plus(increaseAmount);\n        }\n        \n        accountBalanceToken = this.functionsUtil.fixTokenDecimals(accountBalanceToken,tokenDecimals).toString();\n\n        // this.functionsUtil.customLog('increaseAmount',(increaseAmount ? increaseAmount.toString() : '0'),(this.state.accountBalanceToken ? this.state.accountBalanceToken.toString() : '0'),(accountBalanceToken ? accountBalanceToken.toString() : 'ERROR'));\n        // this.functionsUtil.customLog(`account balance ${this.props.selectedToken}: `, accountBalanceToken);\n\n        this.setState({\n          accountBalanceToken,\n          [`accountBalance${this.props.selectedToken}`]:accountBalanceToken\n        });\n\n      } else {\n        this.functionsUtil.customLog('accountBalanceToken is not set:',accountBalanceToken);\n      }\n    } catch (error) {\n      this.functionsUtil.customLogError(\"Failed to get account balance.\", error);\n    }\n  }\n\n  initializeContracts = async () => {\n\n    const contracts = this.functionsUtil.getGlobalConfig(['contracts']);\n    await this.functionsUtil.asyncForEach(Object.keys(contracts),async (contractName) => {\n      const contractInfo = contracts[contractName];\n      if (contractInfo.address !== null && contractInfo.abi !== null){\n        this.functionsUtil.customLog('initializeContracts, init contract', contractName, contractInfo.address);\n        await this.initContract(contractName, contractInfo.address, contractInfo.abi);\n      }\n    });\n\n    const govTokens = this.functionsUtil.getGlobalConfig(['govTokens']);\n    await this.functionsUtil.asyncForEach(Object.keys(govTokens),async (token) => {\n      const govTokenConfig = govTokens[token];\n      if (!govTokenConfig.enabled){\n        return;\n      }\n      // Initialize govToken contracts\n      let foundGovTokenContract = this.state.contracts.find(c => c.name === token);\n      if (!foundGovTokenContract) {\n        this.functionsUtil.customLog('initializeContracts, init contract', token, govTokenConfig.address);\n        await this.initContract(token, govTokenConfig.address, govTokenConfig.abi);\n      }\n    });\n\n    if (this.props.availableStrategies){\n      // Initialize Tokens Contracts\n      await this.functionsUtil.asyncForEach(Object.keys(this.props.availableStrategies),async (strategy) => {\n        \n        const availableTokens = this.props.availableStrategies[strategy];\n\n        await this.functionsUtil.asyncForEach(Object.keys(availableTokens),async (token) => {\n          const tokenConfig = availableTokens[token];\n\n          let foundTokenContract = this.state.contracts.find(c => c.name === token);\n          if (!foundTokenContract) {\n            this.functionsUtil.customLog('initializeContracts, init contract',token, tokenConfig.address);\n            await this.initContract(token, tokenConfig.address, tokenConfig.abi);\n          }\n\n          // Initialize idleTokens contracts\n          let foundIdleTokenContract = this.state.contracts.find(c => c.name === tokenConfig.idle.token);\n          if (!foundIdleTokenContract) {\n            this.functionsUtil.customLog('initializeContracts, init contract',tokenConfig.idle.token, tokenConfig.idle.address);\n            await this.initContract(tokenConfig.idle.token, tokenConfig.idle.address, tokenConfig.idle.abi);\n          }\n\n          // Initialize protocols contracts\n          tokenConfig.protocols.forEach(async (p,i) => {\n            let foundProtocolContract = this.state.contracts.find(c => c.name === p.token);\n            if (!foundProtocolContract) {\n              this.functionsUtil.customLog('initializeContracts, init '+p.token+' contract',p);\n              await this.initContract(p.token, p.address, p.abi);\n            }\n          });\n\n          // Check migration contract\n          if (tokenConfig.migration){\n\n            if (tokenConfig.migration.oldContract){\n              const oldContract = tokenConfig.migration.oldContract;\n              this.functionsUtil.customLog('initializeContracts, init '+oldContract.name+' contract',oldContract);\n              await this.initContract(oldContract.name, oldContract.address, oldContract.abi);\n            }\n\n            // Initialize protocols contracts\n            if (tokenConfig.migration.oldProtocols){\n              tokenConfig.migration.oldProtocols.forEach(async (p,i) => {\n                let foundProtocolContract = this.state.contracts.find(c => c.name === p.token);\n                if (!foundProtocolContract) {\n                  this.functionsUtil.customLog('initializeContracts, init '+p.token+' contract',p);\n                  await this.initContract(p.token, p.address, p.abi);\n                }\n              });\n            }\n\n            if (tokenConfig.migration.migrationContract){\n              const migrationContract = tokenConfig.migration.migrationContract;\n              this.functionsUtil.customLog('initializeContracts, init '+migrationContract.name+' contract',migrationContract);\n              await this.initContract(migrationContract.name, migrationContract.address, migrationContract.abi);\n            }\n          }\n        })\n      });\n    }\n\n    await this.functionsUtil.asyncForEach(Object.keys(this.props.availableTranches),async (protocol) => {\n      const tokens = this.props.availableTranches[protocol];\n      await this.functionsUtil.asyncForEach(Object.keys(tokens),async (token) => {\n        const tokenConfig = tokens[token];\n        await Promise.all([\n          this.initContract(tokenConfig.name,tokenConfig.address,tokenConfig.abi),\n          this.initContract(tokenConfig.AA.name,tokenConfig.AA.address,tokenConfig.AA.abi),\n          this.initContract(tokenConfig.BB.name,tokenConfig.BB.address,tokenConfig.BB.abi),\n          this.initContract(tokenConfig.CDO.name,tokenConfig.CDO.address,tokenConfig.CDO.abi),\n          this.initContract(tokenConfig.AA.CDORewards.name,tokenConfig.AA.CDORewards.address,tokenConfig.AA.CDORewards.abi),\n          this.initContract(tokenConfig.BB.CDORewards.name,tokenConfig.BB.CDORewards.address,tokenConfig.BB.CDORewards.abi)\n        ]);\n      });\n    });\n\n    return this.setState({\n      contractsInitialized:true\n    });\n  }\n\n  getContractByName = async (contractName) => {\n    let contract = this.state.contracts.find(c => c.name === contractName);\n\n    if (!contract && this.props.tokenConfig) {\n      const tokenConfig = this.props.tokenConfig;\n      contract = await this.initContract(contractName, tokenConfig.address, tokenConfig.abi);\n    }\n\n    return contract ? contract.contract : null;\n  }\n\n  getTokenDecimals = async () => {\n    let tokenDecimals = null;\n\n    if (!this.state.tokenDecimals){\n\n      tokenDecimals = await this.functionsUtil.getTokenDecimals(this.props.selectedToken);\n\n      this.setState({\n        tokenDecimals\n      });\n    } else {\n      tokenDecimals = await (new Promise( async (resolve, reject) => {\n        resolve(this.state.tokenDecimals);\n      }));\n    }\n\n    return tokenDecimals;\n  }\n\n  getTokenBalance = async (account) => {\n    const contract = await this.getContractByName(this.props.selectedToken);\n\n    if (!contract) {\n      this.functionsUtil.customLogError('Wrong contract name', this.props.selectedToken);\n      return null;\n    }\n\n    if (!contract.methods['balanceOf']){\n      this.customLogError('Wrong method name balanceOf');\n      return null;\n    }\n\n    return await contract.methods.balanceOf(account).call().catch(error => {\n      this.functionsUtil.customLog(`Failed to get ${this.props.selectedToken} balance`, error);\n    });\n  }\n\n  determineAccountLowBalance = () => {\n    // If provided a minimum from config then use it, else default to 1\n    const accountBalanceMinimum =\n      typeof this.props.config !== \"undefined\" &&\n      typeof this.props.config.accountBalanceMinimum !== \"undefined\"\n        ? this.props.config.accountBalanceMinimum\n        : 1;\n    // Determine if the account balance is low\n    const accountBalanceLow =\n      this.state.accountBalance < accountBalanceMinimum;\n\n    this.setState({\n      accountBalanceLow\n    });\n  }\n\n  connectAndValidateAccount = async (callbackAfterLogin) => {\n    // Check for account\n    if (!this.state.account) {\n      this.props.setCallbackAfterLogin(callbackAfterLogin);\n      // Show modal to connect account\n      this.openConnectionModal();\n    }\n  }\n\n  getRequiredNetwork = () => {\n\n    const networkId =\n      typeof this.props.config !== \"undefined\" &&\n      typeof this.props.config.requiredNetwork !== \"undefined\"\n        ? this.props.config.requiredNetwork\n        : globalConfigs.network.requiredNetwork;\n\n    let networkName = globalConfigs.network.availableNetworks[networkId] ? globalConfigs.network.availableNetworks[networkId] : 'unknown';\n\n    let requiredNetwork = {\n      name: networkName,\n      id: networkId\n    };\n\n    let network = Object.assign({},this.state.network);\n    network.required = requiredNetwork;\n\n    this.setState({ network });\n  }\n\n  getNetworkId = async () => {\n    try {\n      return this.state.web3.eth.net.getId((error, networkId) => {\n        let current = { ...this.state.network.current };\n        current.id = networkId;\n        let network = Object.assign({},this.state.network);\n        network.current = current;\n        network.isCorrectNetwork = globalConfigs.network.enabledNetworks.includes(networkId);\n        this.setState({ network });\n      });\n    } catch (error) {\n      this.functionsUtil.customLog(\"Could not get network ID: \", error);\n    }\n  }\n\n  getNetworkName = async () => {\n    try {\n      return this.state.web3.eth.net.getNetworkType((error, networkName) => {\n        let current = { ...this.state.network.current };\n        current.name = networkName;\n        let network = Object.assign({},this.state.network);\n        network.current = current;\n        this.setState({ network });\n      });\n    } catch (error) {\n      this.functionsUtil.customLog(\"Could not get network Name: \", error);\n    }\n  }\n\n  checkNetwork = async () => {\n    this.getRequiredNetwork();\n\n    await Promise.all([\n      this.getNetworkId(),\n      this.getNetworkName()\n    ]);\n\n    let network = Object.assign({},this.state.network);\n    network.isCorrectNetwork = !this.state.network.current.id || globalConfigs.network.enabledNetworks.includes(this.state.network.current.id);\n    // console.log('checkNetwork',this.state.network.current.id,network.isCorrectNetwork);\n\n    this.setState({ network });\n  }\n\n  contractMethodSendWrapper = async (contractName, contractMethod, params = [], value = null, callback = null, callback_receipt = null, gasLimit = null, txData = null) => {\n    // Is it on the correct network?\n    if (!this.state.network.isCorrectNetwork) {\n      // wrong network modal\n      this.state.modals.methods.openWrongNetworkModal();\n      return false;\n    }\n\n    // Is a wallet connected and verified?\n    if (!this.state.account) {\n      this.openConnectionModal();\n      if (typeof callback === 'function') {\n        callback(null,'account_not_connected');\n      }\n      return false;\n    }\n\n    // Are there a minimum amount of funds?\n    if (this.state.accountBalanceLow) {\n      this.openLowFundsModal();\n      if (typeof callback === 'function') {\n        callback(null,'account_balance_low');\n      }\n      return false;\n    }\n\n    // Is the contract loaded?\n\n    // Create new tx and add to collection\n    // Maybe this needs to get moved out of the wrapper?\n    let transaction = this.createTransaction(txData);\n    transaction.method = contractMethod;\n\n    this.addTransaction(transaction);\n\n    // Add meta data to transaction\n    transaction.type = \"contract\";\n    transaction.status = \"started\";\n    transaction.params = params;\n\n    // Show toast for starting transaction\n    this.updateTransaction(transaction);\n\n    const { account, contracts } = this.state;\n    let contract = contracts.find(c => c.name === contractName);\n    if (!contract) {\n      if (typeof callback === 'function') {\n        callback(null,'contract_not_found');\n      }\n      return this.functionsUtil.customLog(`No contract with name ${contractName}`);\n    }\n\n    contract = contract.contract;\n\n    // Does the method exists?\n    // if (typeof contract.methods[contractMethod] === 'undefined'){\n    //   return false;\n    // }\n\n    let manualConfirmationTimeoutId = null;\n\n    try {\n\n      if (!value){\n        value = this.functionsUtil.BNify(0);\n      }\n\n      this.functionsUtil.customLog('contractMethodSendWrapper',contractName,contract._address,account,contractMethod,params,(value ? { from: account, value } : { from: account }));\n\n      // estimate gas price\n      let gas = await contract.methods[contractMethod](...params)\n        .estimateGas(value ? { from: account, value } : { from: account })\n        .catch(e => console.error(e));\n\n      if (gas) {\n\n        gas = this.functionsUtil.BNify(gas);\n        gas = gas.plus(gas.times(this.functionsUtil.BNify('0.2'))); // Increase 20% of enstimation\n\n        // Check if gas is under the gasLimit param\n        if (gasLimit && gas.lt(this.functionsUtil.BNify(gasLimit))){\n          gas = this.functionsUtil.BNify(gasLimit);\n        }\n\n        // Convert gasLimit toBN with web3 utils\n        gas = this.state.web3.utils.toBN(gas.integerValue(BigNumber.ROUND_FLOOR));\n      }\n\n      const confirmationCallback = (confirmationNumber, receipt) => {\n\n        // this.functionsUtil.customLog('confirmationCallback', confirmationNumber, receipt);\n\n        if (manualConfirmationTimeoutId){\n          window.clearTimeout(manualConfirmationTimeoutId);\n        }\n\n        // this.functionsUtil.customLog('txOnConfirmation', receipt);\n        // Update confirmation count on each subsequent confirmation that's received\n        transaction.confirmationCount += 1;\n\n        const call_callback = !globalConfigs.network.isForked && typeof callback === 'function' && transaction.confirmationCount===1;\n\n        // How many confirmations should be received before informing the user\n        const confidenceThreshold = this.props.config.requiredConfirmations || 1;\n\n        if (transaction.confirmationCount === 1) {\n          // Initial confirmation receipt\n          transaction.status = \"confirmed\";\n        } else if (transaction.confirmationCount < confidenceThreshold) {\n          // Not enough confirmations to match threshold\n        }\n\n        if (transaction.confirmationCount === confidenceThreshold) {\n          // Confirmations match threshold\n          // Check the status from result since we are confident in the result\n          if (receipt.status) {\n            transaction.status = \"success\";\n          } else if (!receipt.status) {\n            transaction.status = \"error\";\n          }\n        } else if (transaction.confirmationCount > confidenceThreshold) {\n          // Confidence threshold met\n        }\n\n\n        if (call_callback){\n          // Update transaction with receipt details\n          if (receipt){\n            transaction.txReceipt = receipt;\n          }\n          transaction.recentEvent = \"confirmation\";\n          this.updateTransaction(transaction);\n          \n          callback(transaction);\n\n          this.functionsUtil.customLog('Confirmed', confirmationNumber, receipt, transaction);\n        }\n      };\n\n      const manualConfirmation = (transactionHash,timeout) => {\n        if (!transactionHash){\n          return false;\n        }\n        this.state.web3.eth.getTransactionReceipt(transactionHash,(err,txReceipt) => {\n          if (txReceipt && txReceipt.status){\n            this.functionsUtil.customLog('Tx manualConfirmation', txReceipt);\n            confirmationCallback(1,txReceipt);\n          } else {\n            manualConfirmationTimeoutId = window.setTimeout( () => manualConfirmation(transactionHash,timeout) , timeout);\n          }\n        });\n      };\n\n      const receiptCallback = receipt => {\n\n        // this.functionsUtil.customLog('txOnReceipt', receipt);\n\n        if (manualConfirmationTimeoutId){\n          window.clearTimeout(manualConfirmationTimeoutId);\n        }\n\n        // Received receipt, met total number of confirmations\n        if (receipt){\n          transaction.txReceipt = receipt;\n        }\n        transaction.recentEvent = \"receipt\";\n\n        // If the network is forked use the receipt for confirmation\n        if (globalConfigs.network.isForked){\n          transaction.status = \"success\";\n          if (typeof callback === 'function') {\n            callback(transaction);\n          }\n        } else {\n          this.updateTransaction(transaction);\n\n          // Transaction mined, wait for manual confirmation\n          if (receipt.status){\n            manualConfirmationTimeoutId = window.setTimeout( () => manualConfirmation(receipt.transactionHash,4000), 2000);\n          }\n        }\n      };\n\n      // const networkId = this.functionsUtil.getGlobalConfig(['network','requiredNetwork']);\n      // const common = { customChain:{ chainId: 1337, networkId: 1337 } };\n\n      return contract.methods[contractMethod](...params)\n        .send(value ? { from: account, value, gas/*, common*/ } : { from: account, gas/*, common*/ })\n        .on(\"transactionHash\", hash => {\n          this.functionsUtil.customLog('txOnTransactionHash', hash);\n\n          if (!hash){\n            this.functionsUtil.customLog('Skip transactionHash due to hash empty', hash);\n            return false;\n          }\n\n          transaction.transactionHash = hash;\n          transaction.status = \"pending\";\n          transaction.recentEvent = \"transactionHash\";\n          this.updateTransaction(transaction);\n\n          if (callback_receipt){\n            callback_receipt(transaction);\n          }\n\n          // Wait for manual confirmation only for mobile\n          if (this.props.isMobile){\n            if (manualConfirmationTimeoutId){\n              window.clearTimeout(manualConfirmationTimeoutId);\n            }\n            manualConfirmationTimeoutId = window.setTimeout( () => manualConfirmation(hash,60000), 20000);\n          }\n        })\n        .on(\"receipt\", receiptCallback)\n        .on(\"confirmation\", confirmationCallback)\n        .on(\"error\", error => {\n\n          console.log('Tx error',error);\n          \n          const isDeniedTx = error && error.message && typeof error.message.includes === 'function' ? error.message.includes('User denied transaction signature') : false;\n          \n          // Set error on transaction\n          transaction.status = \"error\";\n          transaction.recentEvent = \"error\";\n          this.updateTransaction(transaction);\n\n\n          // Show ToastProvider\n          if (!isDeniedTx){\n            window.toastProvider.addMessage(\"Something went wrong\", {\n              icon: 'Block',\n              actionHref: \"\",\n              actionText: \"\",\n              variant: \"failure\",\n              colorTheme: 'light',\n              secondaryMessage: \"Please retry\",\n            });\n\n            const isError = error instanceof Error;\n\n            if (typeof error.message !== 'undefined'){\n              this.openTransactionErrorModal(null,error.message);\n            } else if (this.functionsUtil.checkUrlOrigin() && isError){\n              Sentry.captureException(error);\n            }\n          }\n\n          if (typeof callback === 'function') {\n            callback(transaction,error);\n          }\n        });\n    } catch (error) {\n\n      console.log('Tx catch error',error);\n\n      transaction.status = \"error\";\n      this.updateTransaction(transaction);\n\n      // TODO: should this be a custom error? What is the error here?\n      // TODO: determine how to handle error messages globally\n      window.toastProvider.addMessage(\"Something went really wrong, we are sorry\", {\n        icon: 'Block',\n        actionHref: \"\",\n        actionText: \"\",\n        variant: \"failure\",\n        colorTheme: 'light',\n        secondaryMessage: \"Try refreshing the page :(\",\n      });\n\n      const isDeniedTx = error && error.message ? error.message.includes('User denied transaction signature') : false;\n\n      const isError = error instanceof Error;\n      if ( this.functionsUtil.checkUrlOrigin() && isError && !isDeniedTx){\n        Sentry.captureException(error);\n      }\n\n      if (typeof callback === 'function') {\n        // this.functionsUtil.customLog('Tx Failed',error,transaction,typeof callback);\n        callback(transaction,error);\n      }\n\n      return false;\n    }\n  }\n\n  // Create tx\n  createTransaction = (txData=null) => {\n    let transaction = {\n      ...txData\n    };\n    transaction.txReceipt = {};\n    transaction.created = Date.now();\n    transaction.confirmationCount = 0;\n    transaction.status = \"initialized\";\n    transaction.lastUpdated = Date.now();\n    transaction.token = this.props.selectedToken;\n    transaction.strategy = this.props.selectedStrategy;\n    transaction.networkId = this.functionsUtil.getGlobalConfig(['network','requiredNetwork']);\n    return transaction;\n  }\n\n  addTransaction = transaction => {\n    const transactions = { ...this.state.transactions };\n    transactions[`tx${transaction.created}`] = transaction;\n    this.setState({ transactions });\n  }\n\n  // Add/update transaction in state\n  updateTransaction = updatedTransaction => {\n    const transactions = { ...this.state.transactions };\n    const transaction = { ...updatedTransaction };\n    transaction.lastUpdated = Date.now();\n    transactions[`tx${updatedTransaction.created}`] = transaction;\n    this.setState({ transactions });\n\n    // Save transactions in localStorage only if pending or succeeded\n    // console.log('updateTransaction',transaction);\n    if (transaction.transactionHash){\n      // Clear cached data\n      this.functionsUtil.clearCachedData();\n\n      // Store transaction\n      this.functionsUtil.addStoredTransaction(`tx${transaction.created}`,transaction);\n    }\n\n    return transaction;\n  }\n\n  // CONNECTION MODAL METHODS\n  closeConnectionModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.connectionModalIsOpen = false;\n    // this.functionsUtil.customLog(\"this.state\", this.state);\n    this.setState({ modals });\n  }\n\n  openConnectionModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.connectionModalIsOpen = true;\n    this.setState({ modals: modals });\n  }\n\n  closeConnectionPendingModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.accountConnectionPending = false;\n    this.setState({ modals });\n  }\n\n  openConnectionPendingModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.accountConnectionPending = true;\n    modals.data.transactionConnectionModalIsOpen = false;\n    modals.data.connectionModalIsOpen = false;\n\n    this.setState({ modals });\n  }\n\n  closeTransactionErrorModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.transactionError = false;\n    this.setState({ modals });\n  }\n\n  openTransactionErrorModal = (e,error) => {\n    if (typeof e !== \"undefined\" && e) {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.transactionError = error;\n\n    this.setState({ modals });\n  }\n\n  closeConnectionErrorModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n\n    if (!this.state.modals.data.connectionError){\n      return false;\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.connectionError = false;\n    this.setState({ modals });\n  }\n\n  openConnectionErrorModal = (e,error) => {\n    if (typeof e !== \"undefined\" && e) {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n\n    // Handle generic error\n    if (error==='[object Object]'){\n      error = 'Unable to access to the wallet.'\n    }\n    \n    if (this.state.modals.data.connectionError !== error){\n      // console.log('openConnectionErrorModal',typeof error,typeof error === 'object' ? JSON.stringify(error) : error);\n      modals.data.connectionError = error;\n      this.setState({ modals });\n    }\n  }\n\n  closeUserRejectedConnectionModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.userRejectedConnect = false;\n    this.setState({ modals });\n  }\n\n  openUserRejectedConnectionModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.userRejectedConnect = true;\n    this.setState({ modals });\n  }\n\n  closeNoWeb3BrowserModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.noWeb3BrowserModalIsOpen = false;\n    this.setState({ modals });\n  }\n\n  openNoWeb3BrowserModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.noWeb3BrowserModalIsOpen = true;\n    this.setState({ modals });\n  }\n\n  closeNoWalletModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.noWalletModalIsOpen = false;\n    this.setState({ modals });\n  }\n\n  openNoWalletModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.noWalletModalIsOpen = true;\n    this.setState({ modals });\n  }\n\n  closeWrongNetworkModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.wrongNetworkModalIsOpen = false;\n    this.setState({ modals });\n  }\n\n  openWrongNetworkModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.wrongNetworkModalIsOpen = true;\n    this.setState({ modals });\n  }\n\n  closeLowFundsModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.lowFundsModalIsOpen = false;\n    this.setState({ modals });\n  }\n\n  openLowFundsModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.lowFundsModalIsOpen = true;\n    this.setState({ modals });\n  }\n\n  state = {\n    web3: null,\n    context:null,\n    account: null,\n    contracts: [],\n    biconomy: null,\n    simpleID: null,\n    web3Infura:null,\n    transactions: {},\n    CrispClient: null,\n    permitClient:null,\n    tokenDecimals:null,\n    accountBalance: null,\n    web3Subscription: null,\n    accountValidated: null,\n    gnosisSafeLoaded:false,\n    accountBalanceDAI: null,\n    initWeb3: this.initWeb3,\n    accountBalanceLow: null,\n    accountInizialized:false,\n    erc20ForwarderClient:null,\n    subscribedTransactions:{},\n    contractsInitialized:false,\n    initAccount: this.initAccount,\n    accountValidationPending: null,\n    initSimpleID: this.initSimpleID,\n    initContract: this.initContract,\n    checkPreflight: this.checkPreflight,\n    validateAccount: this.validateAccount,\n    rejectValidation: this.rejectValidation,\n    getTokenDecimals: this.getTokenDecimals,\n    getAccountBalance: this.getAccountBalance,\n    initializeContracts: this.initializeContracts,\n    rejectAccountConnect: this.rejectAccountConnect,\n    contractMethodSendWrapper: this.contractMethodSendWrapper,\n    connectAndValidateAccount: this.connectAndValidateAccount,\n    enableUnderlyingWithdraw: this.props.enableUnderlyingWithdraw,\n    network: {\n      current: {},\n      required: {},\n      isCorrectNetwork: null,\n      checkNetwork: this.checkNetwork\n    },\n    modals: {\n      data: {\n        connectionError: null,\n        lowFundsModalIsOpen: null,\n        userRejectedConnect: null,\n        connectionModalIsOpen: null,\n        userRejectedValidation: null,\n        wrongNetworkModalIsOpen: null,\n        accountConnectionPending: null,\n        accountValidationPending: null,\n        transactionConnectionModalIsOpen: null,\n        noWalletModalIsOpen: this.noWalletModalIsOpen,\n        noWeb3BrowserModalIsOpen: this.noWeb3BrowserModalIsOpen,\n      },\n      methods: {\n        openLowFundsModal: this.openLowFundsModal,\n        openNoWalletModal: this.openNoWalletModal,\n        closeNoWalletModal: this.closeNoWalletModal,\n        closeLowFundsModal: this.closeLowFundsModal,\n        openConnectionModal: this.openConnectionModal,\n        closeConnectionModal: this.closeConnectionModal,\n        openWrongNetworkModal: this.openWrongNetworkModal,\n        closeWrongNetworkModal: this.closeWrongNetworkModal,\n        openNoWeb3BrowserModal: this.openNoWeb3BrowserModal,\n        closeNoWeb3BrowserModal: this.closeNoWeb3BrowserModal,\n        openConnectionErrorModal: this.openConnectionErrorModal,\n        closeConnectionErrorModal: this.closeConnectionErrorModal,\n        openTransactionErrorModal: this.openTransactionErrorModal,\n        closeTransactionErrorModal: this.closeTransactionErrorModal,\n        openConnectionPendingModal: this.openConnectionPendingModal,\n        closeConnectionPendingModal: this.closeConnectionPendingModal,\n        openUserRejectedValidationModal: this.openUserRejectedValidationModal,\n        openUserRejectedConnectionModal: this.openUserRejectedConnectionModal,\n        closeUserRejectedValidationModal: this.closeUserRejectedValidationModal,\n        closeUserRejectedConnectionModal: this.closeUserRejectedConnectionModal,\n      }\n    },\n    transaction: {\n      data: {\n        transactions: null\n      },\n      meta: {},\n      methods: {}\n    }\n  }\n\n  render() {\n    const connectionErrorModalOpened = typeof this.state.modals.data.connectionError === 'string' && this.state.modals.data.connectionError.length>0;\n    const transactionErrorModalOpened = typeof this.state.modals.data.transactionError === 'string' && this.state.modals.data.transactionError.length>0;\n    return (\n      <div>\n        <RimbleTransactionContext.Provider\n          {...this.props}\n          value={this.state}\n        />\n        <ConnectionModalUtil\n          {...this.props}\n          modals={this.state.modals}\n          network={this.state.network}\n          account={this.state.account}\n          isMobile={this.props.isMobile}\n          initAccount={this.state.initAccount}\n          setConnector={this.props.setConnector}\n          validateAccount={this.state.validateAccount}\n          accountValidated={this.state.accountValidated}\n          accountConnectionPending={this.state.accountConnectionPending}\n          accountValidationPending={this.state.accountValidationPending}\n        />\n        <TransactionErrorModal\n          modals={this.state.modals}\n          account={this.state.account}\n          context={this.props.context}\n          isOpen={transactionErrorModalOpened}\n        />\n        <ConnectionErrorModal\n          modals={this.state.modals}\n          account={this.state.account}\n          context={this.props.context}\n          isOpen={connectionErrorModalOpened}\n          setConnector={this.props.setConnector}\n        />\n        <NetworkUtil\n          web3={this.state.web3}\n          theme={this.props.theme}\n          network={this.state.network}\n        />\n      </div>\n    );\n  }\n}\n\nexport default RimbleTransaction;\n","import React from \"react\";\nimport ExtLink from '../../ExtLink/ExtLink';\nimport FunctionsUtil from '../FunctionsUtil';\nimport { Box, Flex, Image, Text, Link, Icon } from \"rimble-ui\";\n\nimport {\n  Link as RouterLink\n} from \"react-router-dom\";\n\nclass Header extends React.Component {\n  state = {\n\n  };\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount() {\n    this.loadUtils();\n  }\n\n  async componentDidMount() {\n\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n\n    this.loadUtils();\n\n    if (this.props.network && !this.props.network.isCorrectNetwork){\n      return false;\n    }\n  }\n\n  render() {\n\n    const governanceEnabled = this.functionsUtil.getGlobalConfig(['governance','enabled']);\n\n    return (\n      <Box\n        style={{\n          left: '0',\n          right: '0',\n          zIndex: 99,\n          position: 'absolute',\n        }}\n      >\n        <Flex\n          p={2}\n          alignItems={'center'}\n          justifyContent={'center'}\n          backgroundColor={'dark-blue'}\n          flexDirection={['column','row']}\n        >\n          <Text\n            color={'white'}\n            textAlign={'center'}\n          >\n            IDLE Governance Token is now live!\n          </Text>\n          <ExtLink\n            pr={2}\n            py={1}\n            mt={[1,0]}\n            ml={[0,2]}\n            pl={'12px'}\n            color={'white'}\n            style={{\n              display:'flex',\n              borderRadius:'8px',\n              flexDirection:'row',\n              alignItems:'flex-end'\n            }}\n            backgroundColor={'#0037ff'}\n            href={'https://idlefinance.medium.com/idle-governance-is-live-9b55e8f407d7'}\n          >\n            Read More\n            <Icon\n              ml={1}\n              size={'1.3em'}\n              color={'white'}\n              name={'KeyboardArrowRight'}\n            >\n            </Icon>\n          </ExtLink>\n        </Flex>\n        <Flex\n          pt={[3,4]}\n          mx={'auto'}\n          bg={\"transparent\"}\n          width={['98%','100%']}\n          maxWidth={['100%','100em']}\n          alignItems={['center','flex-start']}\n        >\n          <Flex\n            ml={[3, 5]}\n            width={[0.5, 3/12]}\n          >\n            <RouterLink\n              to=\"/\"\n            >\n              <Image\n                position={'relative'}\n                src={'images/logo.svg'}\n                height={['35px','48px']}\n              />\n            </RouterLink>\n          </Flex>\n            <Flex\n              width={[0.5,8/12]}\n              alignItems={'center'}\n              flexDirection={'row'}\n              justifyContent={\"flex-end\"}\n            >\n              {\n                governanceEnabled && \n                  <Link\n                    mr={4}\n                    fontSize={3}\n                    color={'white'}\n                    hoverColor={'white'}\n                    fontFamily={'sansSerif'}\n                    textAlign={['center','left']}\n                    onClick={ (e) => window.location.hash='#/governance' }\n                  >\n                    Governance\n                  </Link>\n              }\n              {\n                !this.props.isMobile &&\n                  <>\n                    <Link\n                      mr={4}\n                      fontSize={3}\n                      color={'white'}\n                      hoverColor={'white'}\n                      fontFamily={'sansSerif'}\n                      textAlign={['center','left']}\n                      onClick={(e) => {this.functionsUtil.scrollTo(document.getElementById('contacts').offsetTop,300)}}\n                    >\n                      Contact Us\n                    </Link>\n                    <Link\n                      fontSize={3}\n                      color={'white'}\n                      hoverColor={'white'}\n                      fontFamily={'sansSerif'}\n                      textAlign={['center','left']}\n                      onClick={(e) => {this.functionsUtil.scrollTo(document.getElementById('faq').offsetTop,300)}}\n                    >\n                      FAQs\n                    </Link>\n                  </>\n              }\n            </Flex>\n        </Flex>\n      </Box>\n    );\n  }\n}\n\nexport default Header;\n","import { useEffect } from \"react\";\nimport { useLocation } from \"react-router-dom\";\n\nexport default function ScrollToTop() {\n  const { pathname } = useLocation();\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, [pathname]);\n\n  return null;\n}","import Footer from '../Footer/Footer';\nimport React, { Component } from 'react';\nimport styles from './PageNotFound.module.scss';\nimport { Box, Flex, Heading, Button } from 'rimble-ui'\nimport Header_styles from '../utilities/components/Header.module.scss';\nimport {\n  Link as RouterLink,\n} from \"react-router-dom\";\n\nclass PageNotFound extends Component {\n  state = {};\n\n  render() {\n    return (\n      <Box>\n        <Box className={styles.headerContainer} px={[3,6]} pt={['2em', '3em']}>\n          <Box className={styles.headerBgFiller}></Box>\n          <Box position={'relative'} zIndex={10}>\n            <Flex flexDirection={'column'} alignItems={'center'} maxWidth={[\"50em\", \"60em\"]} mx={'auto'} textAlign={'center'} pt={['8vh', '8vh']}>\n              <Heading.h1 fontFamily={'sansSerif'} lineHeight={'1.1em'} mb={'0.3em'} fontSize={['2.5em',7]} textAlign={'center'} color={'white'}>\n                This page doesn't exist!\n              </Heading.h1>\n              <Heading.h3 fontFamily={'sansSerif'} lineHeight={'1.1em'} mb={'0.6em'} fontWeight={2} fontSize={['1.5em',4]} textAlign={'center'} color={'white'}>\n                Sorry, the page you are looking for cannot be found.\n              </Heading.h3>\n              <RouterLink to=\"/\" style={{textDecoration:'none'}}>\n                <Button\n                  className={Header_styles.gradientButton}\n                  borderRadius={4}\n                  size={this.props.isMobile ? 'medium' : 'medium'}\n                  mainColor={'blue'}\n                  contrastColor={'white'}\n                  fontWeight={3}\n                  fontSize={[2,2]}\n                  mx={'auto'}\n                  px={[4,5]}\n                  mt={2}\n                >\n                  GO TO HOMEPAGE\n                </Button>\n              </RouterLink>\n            </Flex>\n          </Box>\n        </Box>\n        <Footer />\n      </Box>\n    );\n  }\n}\n\nexport default PageNotFound;\n","import React from \"react\";\nimport { Box, Flex, Text } from \"rimble-ui\";\n\nclass NetworkOverview extends React.Component {\n  getNetworkCircleColor = () => {\n    let circleColor = \"#333\";\n    if (this.props.network) {\n      switch (this.props.network.id) {\n        case 1:\n          circleColor = \"#56b3ae\";\n          break;\n        case 2:\n          circleColor = \"#000\";\n          break;\n        case 3:\n          circleColor = \"#ed5a8d\";\n          break;\n        case 4:\n          circleColor = \"#efc35c\";\n          break;\n        case 42:\n          circleColor = \"#6a5ff6\";\n          break;\n        default:\n          circleColor = \"#ccc\";\n      }\n    }\n\n    return circleColor;\n  };\n\n  render() {\n    const networkCircle = {\n      borderRadius: \"50%\",\n      backgroundColor: this.getNetworkCircleColor(),\n      height: \"1em\",\n      width: \"1em\"\n    };\n\n    return (\n      <Flex alignItems={\"center\"}>\n        <Box style={networkCircle} mr={2} />\n        <Text style={{ textTransform: \"capitalize\" }}>\n          {this.props.network.name}\n        </Text>\n      </Flex>\n    );\n  }\n}\n\nexport default NetworkOverview;\n","import React from \"react\";\nimport {\n  Card,\n  Heading,\n  Text,\n  Icon,\n  Flex,\n  ToastMessage,\n  Box,\n  Button,\n  Link\n} from \"rimble-ui\";\nimport NetworkOverview from \"../utilities/components/NetworkOverview\";\n\nconst DebuggerButtons = props => (\n  <Box mt={4} borderTop={1} borderColor=\"#E8E8E8\" pt={3}>\n    <Heading.h4 textAlign={\"center\"}>Show Modal</Heading.h4>\n    <Button\n      onClick={props.modals.methods.openWrongNetworkModal}\n      size=\"small\"\n      mr={2}\n      mb={2}\n    >\n      Blocking Wrong Network\n    </Button>\n\n    <Button\n      onClick={props.modals.methods.openConnectionModal}\n      size=\"small\"\n      mr={2}\n      mb={2}\n    >\n      Connection\n    </Button>\n    <Button\n      size=\"small\"\n      onClick={props.modals.methods.openConnectionPendingModal}\n      mr={2}\n      mb={2}\n    >\n      Connection Pending\n    </Button>\n    <Button\n      size=\"small\"\n      onClick={props.modals.methods.openUserRejectedConnectionModal}\n      mr={2}\n      mb={2}\n    >\n      Connection Rejected\n    </Button>\n    <Button\n      size=\"small\"\n      onClick={event => {\n        props.modals.methods.openLowFundsModal(event);\n      }}\n      mr={2}\n      mb={2}\n    >\n      Low Funds\n    </Button>\n    <Button\n      size=\"small\"\n      onClick={props.modals.methods.openNoWeb3BrowserModal}\n      mr={2}\n      mb={2}\n    >\n      Not Web3 Browser\n    </Button>\n    <Button\n      size=\"small\"\n      onClick={props.modals.methods.openNoWalletModal}\n      mr={2}\n      mb={2}\n    >\n      No Wallet\n    </Button>\n  </Box>\n);\n\nclass Web3Debugger extends React.Component {\n  render() {\n    return (\n      <Card width={\"600px\"} mx={\"auto\"} px={4}>\n        <Heading.h3 textAlign={\"center\"}>Get Connected</Heading.h3>\n\n        <Box>\n          <Flex alignItems={\"center\"}>\n            <Icon name=\"Check\" color={\"green\"} mr={2} />\n            <Text>Modern & Web3 Capable Browser</Text>\n          </Flex>\n        </Box>\n\n        <Box>\n          <Flex alignItems={\"center\"}>\n            {this.props.web3 ? (\n              <Icon name=\"Check\" color={\"green\"} mr={2} />\n            ) : (\n              <Icon name=\"Close\" color={\"red\"} mr={2} />\n            )}\n            <Text>Browser-connected Wallet</Text>\n          </Flex>\n\n          {!this.props.web3 ? (\n            <Flex ml={4} alignItems={\"center\"} justifyContent={\"space-between\"}>\n              <Flex alignItems={\"center\"}>\n                <Icon name=\"Info\" mr={2} color=\"#999\" />\n                <Text color=\"#999\">You do not have a wallet.</Text>\n              </Flex>\n\n              <Link\n                href=\"https://chrome.google.com/webstore/detail/metamask/nkbihfbeogaeaoehlefnkodbefgpgknn?hl=en\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                <Button.Outline size=\"small\">\n                  Get MetaMask Extension\n                </Button.Outline>\n              </Link>\n            </Flex>\n          ) : null}\n        </Box>\n\n        {this.props.web3 ? (\n          <Flex\n            py={3}\n            my={3}\n            borderTop={1}\n            borderBottom={1}\n            borderColor={\"#E8E8E8\"}\n            textAlign={\"center\"}\n            justifyContent={\"space-around\"}\n            alignItems={\"center\"}\n          >\n            <Button\n              size=\"small\"\n              onClick={this.props.connectAndValidateAccount}\n              disabled={!this.props.web3}\n            >\n              Connect and verify\n            </Button>\n            <Text>- or -</Text>\n            <Button size=\"small\" disabled>\n              Initiate On-Chain Action\n            </Button>\n          </Flex>\n        ) : null}\n\n        <Box>\n          <Flex alignItems={\"center\"}>\n            {this.props.network.isCorrectNetwork ? (\n              <Icon name=\"Check\" color={\"green\"} mr={2} />\n            ) : (\n              <Icon name=\"Close\" color={\"red\"} mr={2} />\n            )}\n            <Text>Correct Network</Text>\n          </Flex>\n\n          {this.props.web3 && !this.props.network.isCorrectNetwork ? (\n            <Flex ml={4} alignItems={\"center\"} justifyContent={\"space-between\"}>\n              <Flex alignItems={\"center\"}>\n                <Icon name=\"Info\" mr={2} color=\"#999\" />\n                <Box>\n                  <Flex alignItems={\"center\"}>\n                    <Text\n                      mr={2}\n                      color=\"#999\"\n                      style={{ textTransform: \"capitalize\" }}\n                    >\n                      Current network:\n                    </Text>\n                    <NetworkOverview network={this.props.network.current} />\n                  </Flex>\n                  <Flex alignItems={\"center\"}>\n                    <Text\n                      mr={2}\n                      color=\"#999\"\n                      style={{ textTransform: \"capitalize\" }}\n                    >\n                      Required network:\n                    </Text>\n                    <NetworkOverview network={this.props.network.required} />\n                  </Flex>\n                </Box>\n              </Flex>\n\n              <Button.Outline size=\"small\" onClick={this.props.checkNetwork}>\n                Check Network\n              </Button.Outline>\n            </Flex>\n          ) : null}\n          {this.props.web3 && this.props.isCorrectNetwork ? (\n            <Flex ml={4} alignItems={\"center\"}>\n              <NetworkOverview network={this.props.network.current} />\n            </Flex>\n          ) : null}\n        </Box>\n\n        <Box>\n          <Flex alignItems={\"center\"}>\n            {this.props.account && this.props.accountValidated ? (\n              <Icon name=\"Check\" color={\"green\"} mr={2} />\n            ) : (\n              <Icon name=\"Close\" color={\"red\"} mr={2} />\n            )}\n            <Text>Wallet connected and verified</Text>\n          </Flex>\n\n          {!this.props.account &&\n          this.props.web3 &&\n          !this.props.userRejectedConnect ? (\n            <Flex ml={4} alignItems={\"center\"} justifyContent={\"space-between\"}>\n              <Flex alignItems={\"center\"}>\n                <Icon name=\"Info\" mr={2} color=\"#999\" />\n                <Text color=\"#999\">Not connected to this dApp.</Text>\n              </Flex>\n\n              <Button.Outline size=\"small\" onClick={this.props.initAccount}>\n                Connect\n              </Button.Outline>\n            </Flex>\n          ) : null}\n          {this.props.account && this.props.web3 ? (\n            <Flex ml={4} alignItems={\"center\"}>\n              <Icon name=\"Check\" color={\"green\"} mr={2} />\n              <Box>\n                <Text color=\"#999\">Connected wallet {this.props.account}</Text>\n                <Text color={this.props.accountBalanceLow ? \"red\" : \"#999\"}>\n                  Account balance {this.props.accountBalance}\n                </Text>\n              </Box>\n            </Flex>\n          ) : null}\n\n          {this.props.userRejectedConnect ? (\n            <Flex ml={4} justifyContent={\"space-between\"}>\n              <Flex alignItems={\"center\"}>\n                <Icon name=\"Error\" mr={2} color=\"red\" />\n                <Text color=\"red\">User rejected Connect request</Text>\n              </Flex>\n\n              <Button.Outline size=\"small\" onClick={this.props.initAccount}>\n                Connect\n              </Button.Outline>\n            </Flex>\n          ) : null}\n\n          {(this.props.accountValidated === null ||\n            this.props.accountValidated === false) &&\n          this.props.web3 ? (\n            <Flex\n              ml={4}\n              my={1}\n              alignItems={\"center\"}\n              justifyContent={\"space-between\"}\n            >\n              <Flex alignItems={\"center\"}>\n                <Icon name=\"Info\" mr={2} color=\"#999\" />\n                <Text color=\"#999\">Account not verified</Text>\n              </Flex>\n\n              <Button.Outline size=\"small\" onClick={this.props.validateAccount}>\n                Validate\n              </Button.Outline>\n            </Flex>\n          ) : null}\n\n          {this.props.accountValidated === false ? (\n            <Flex\n              ml={4}\n              my={1}\n              alignItems={\"center\"}\n              justifyContent={\"space-between\"}\n            >\n              <Flex alignItems={\"center\"}>\n                <Icon name=\"Error\" mr={2} color=\"red\" />\n                <Text color=\"red\">Account not verified</Text>\n              </Flex>\n\n              <Button.Outline size=\"small\" onClick={this.props.validateAccount}>\n                Validate\n              </Button.Outline>\n            </Flex>\n          ) : null}\n\n          {this.props.userRejectedValidation === false ? (\n            <Flex ml={4}>\n              <Icon name=\"Error\" mr={2} color=\"red\" />\n              <Text color=\"red\">Account not verified</Text>\n            </Flex>\n          ) : null}\n        </Box>\n\n        <DebuggerButtons {...this.props} />\n\n        <ToastMessage.Provider ref={node => (window.toastProvider = node)} />\n      </Card>\n    );\n  }\n}\n\nexport default Web3Debugger;\n","const address = '0xf5dce57282a584d2746faf1593d3121fcac444dc'; // mainnet\nconst abi = [\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"name\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"string\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x06fdde03\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"spender\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"amount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"approve\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bool\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x095ea7b3\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"reserveFactorMantissa\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x173b9904\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"account\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"borrowBalanceCurrent\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x17bfdfbc\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"totalSupply\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x18160ddd\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"exchangeRateStored\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x182df0f5\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"src\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"dst\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"amount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"transferFrom\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bool\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x23b872dd\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"pendingAdmin\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x26782247\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"decimals\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x313ce567\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"owner\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"balanceOfUnderlying\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x3af9e669\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"getCash\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x3b1d21a2\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"newComptroller\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"_setComptroller\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x4576b5db\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"totalBorrows\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x47bd3718\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"comptroller\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x5fe3b567\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"reduceAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"_reduceReserves\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x601a0bf1\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"initialExchangeRateMantissa\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x675d972c\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"accrualBlockNumber\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x6c540baf\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"underlying\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x6f307dc3\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [\n      {\n        \"name\": \"owner\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"balanceOf\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x70a08231\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [],\n    \"name\": \"totalBorrowsCurrent\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x73acee98\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"totalReserves\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x8f840ddd\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"symbol\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"string\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x95d89b41\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [\n      {\n        \"name\": \"account\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"borrowBalanceStored\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x95dd9193\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [],\n    \"name\": \"accrueInterest\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xa6afed95\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"dst\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"amount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"transfer\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bool\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xa9059cbb\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"borrowIndex\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xaa5af0fd\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"supplyRatePerBlock\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xae9d70b0\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"liquidator\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"seizeTokens\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"seize\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xb2a02ff1\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"newPendingAdmin\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"_setPendingAdmin\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xb71d1a0c\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [],\n    \"name\": \"exchangeRateCurrent\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xbd6d894d\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [\n      {\n        \"name\": \"account\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"getAccountSnapshot\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xc37f68e2\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [\n      {\n        \"name\": \"owner\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"spender\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"allowance\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xdd62ed3e\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [],\n    \"name\": \"_acceptAdmin\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xe9c714f2\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"newInterestRateModel\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"_setInterestRateModel\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xf2b3abbd\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"interestRateModel\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xf3fdb15a\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"admin\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xf851a440\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"borrowRatePerBlock\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xf8f9da28\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"newReserveFactorMantissa\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"_setReserveFactor\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xfca7820b\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"isCToken\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bool\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xfe9c44ae\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"name\": \"underlying_\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"comptroller_\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"interestRateModel_\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"initialExchangeRateMantissa_\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"name\": \"name_\",\n        \"type\": \"string\"\n      },\n      {\n        \"name\": \"symbol_\",\n        \"type\": \"string\"\n      },\n      {\n        \"name\": \"decimals_\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"constructor\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"constructor\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"interestAccumulated\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"borrowIndex\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"totalBorrows\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"AccrueInterest\",\n    \"signature\": \"0x875352fb3fadeb8c0be7cbbe8ff761b308fa7033470cd0287f02f3436fd76cb9\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"minter\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"mintAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"mintTokens\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Mint\",\n    \"signature\": \"0x4c209b5fc8ad50758f13e2e1088ba56a560dff690a1c6fef26394f4c03821c4f\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"redeemer\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"redeemAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"redeemTokens\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Redeem\",\n    \"signature\": \"0xe5b754fb1abb7f01b499791d0b820ae3b6af3424ac1c59768edb53f4ec31a929\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"borrowAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"accountBorrows\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"totalBorrows\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Borrow\",\n    \"signature\": \"0x13ed6866d4e1ee6da46f845c46d7e54120883d75c5ea9a2dacc1c4ca8984ab80\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"payer\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"repayAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"accountBorrows\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"totalBorrows\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"RepayBorrow\",\n    \"signature\": \"0x1a2a22cb034d26d1854bdc6666a5b91fe25efbbb5dcad3b0355478d6f5c362a1\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"liquidator\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"repayAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"cTokenCollateral\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"seizeTokens\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"LiquidateBorrow\",\n    \"signature\": \"0x298637f684da70674f26509b10f07ec2fbc77a335ab1e7d6215a4b2484d8bb52\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"oldPendingAdmin\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newPendingAdmin\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"NewPendingAdmin\",\n    \"signature\": \"0xca4f2f25d0898edd99413412fb94012f9e54ec8142f9b093e7720646a95b16a9\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"oldAdmin\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newAdmin\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"NewAdmin\",\n    \"signature\": \"0xf9ffabca9c8276e99321725bcb43fb076a6c66a54b7f21c4e8146d8519b417dc\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"oldComptroller\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newComptroller\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"NewComptroller\",\n    \"signature\": \"0x7ac369dbd14fa5ea3f473ed67cc9d598964a77501540ba6751eb0b3decf5870d\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"oldInterestRateModel\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newInterestRateModel\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"NewMarketInterestRateModel\",\n    \"signature\": \"0xedffc32e068c7c95dfd4bdfd5c4d939a084d6b11c4199eac8436ed234d72f926\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"oldReserveFactorMantissa\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newReserveFactorMantissa\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"NewReserveFactor\",\n    \"signature\": \"0xaaa68312e2ea9d50e16af5068410ab56e1a1fd06037b1a35664812c30f821460\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"admin\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"reduceAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newTotalReserves\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"ReservesReduced\",\n    \"signature\": \"0x3bad0c59cf2f06e7314077049f48a93578cd16f5ef92329f1dab1420a99c177e\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"error\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"info\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"detail\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Failure\",\n    \"signature\": \"0x45b96fe442630264581b197e84bbada861235052c5a1aadfff9ea4e40a969aa0\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": true,\n        \"name\": \"from\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": true,\n        \"name\": \"to\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"amount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Transfer\",\n    \"signature\": \"0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": true,\n        \"name\": \"owner\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": true,\n        \"name\": \"spender\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"amount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Approval\",\n    \"signature\": \"0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\",\n    \"type\": \"event\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"mintAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"mint\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xa0712d68\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"redeemTokens\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"redeem\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xdb006a75\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"redeemAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"redeemUnderlying\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x852a12e3\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"borrowAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"borrow\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xc5ebeaec\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"repayAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"repayBorrow\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x0e752702\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"repayAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"repayBorrowBehalf\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x2608f818\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"repayAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"name\": \"cTokenCollateral\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"liquidateBorrow\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xf5e3c462\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  }\n];\nexport default { address, abi };\n","const address = '0x5592EC0cfb4dbc12D3aB100b257153436a1f0FEa'; // rinkeby\nconst abi = [{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"stop\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"guy\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"owner_\",\"type\":\"address\"}],\"name\":\"setOwner\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"src\",\"type\":\"address\"},{\"name\":\"dst\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"guy\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"name_\",\"type\":\"bytes32\"}],\"name\":\"setName\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"src\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"stopped\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"authority_\",\"type\":\"address\"}],\"name\":\"setAuthority\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"guy\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"dst\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"dst\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"push\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"src\",\"type\":\"address\"},{\"name\":\"dst\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"move\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"start\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"authority\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"guy\",\"type\":\"address\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"src\",\"type\":\"address\"},{\"name\":\"guy\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"src\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"pull\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"symbol_\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"guy\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"Mint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"guy\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"Burn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"authority\",\"type\":\"address\"}],\"name\":\"LogSetAuthority\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"LogSetOwner\",\"type\":\"event\"},{\"anonymous\":true,\"inputs\":[{\"indexed\":true,\"name\":\"sig\",\"type\":\"bytes4\"},{\"indexed\":true,\"name\":\"guy\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"foo\",\"type\":\"bytes32\"},{\"indexed\":true,\"name\":\"bar\",\"type\":\"bytes32\"},{\"indexed\":false,\"name\":\"wad\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"fax\",\"type\":\"bytes\"}],\"name\":\"LogNote\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"src\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"guy\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"src\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"dst\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"}];\nexport default { address, abi };\n","import DAI from '../abis/tokens/DAI.json';\nimport CHAI from '../abis/chai/CHAI.json';\nimport cToken from '../abis/compound/cDAI';\nimport WETH from '../abis/tokens/WETH.json';\nimport USDC from '../abis/tokens/USDC.json';\nimport ERC20 from '../abis/tokens/ERC20.js';\nimport fToken from '../abis/fuse/fToken.json';\nimport aToken from '../abis/aave/AToken.json';\nimport yToken from '../abis/dydx/yToken.json';\nimport iToken from '../abis/fulcrum/iToken.json';\nimport crToken from '../abis/cream/crToken.json';\nimport IdleTokenV3 from '../contracts/IdleTokenV3.json';\nimport IdleTokenV4 from '../contracts/IdleTokenV4.json';\nimport IdleConverterPersonalSignV4 from '../contracts/IdleConverterPersonalSignV4.json';\n\nconst availableTokens = {\n  42:{\n    best:{\n      DAI:{\n        abi:DAI,\n        token:'DAI',\n        decimals:18,\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0x4f96fe3b7a6cf9725f59d353f723c1bdb64ca6aa',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'DAI'\n        },\n        ramp:{\n          swapAsset:'DAI'\n        },\n        defiPrime:{\n          token:'dai'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleDAIYield',\n          address:'0x295CA5bC5153698162dDbcE5dF50E436a58BA21e',\n        },\n        protocols:[\n          {\n            decimals:28,\n            token:'cDAI',\n            enabled:true,\n            abi:cToken.abi,\n            name:'compound',\n            address:'0xf0d0eb522cfa50b716b3b1604c4f0fa6f04376ad',\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          }\n        ]\n      },\n      USDC:{\n        abi:USDC,\n        token:'USDC',\n        decimals:6,\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0xb7a4f3e9097c08da09517b5ab877f7a917224ede',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'USDC'\n        },\n        ramp:{\n          swapAsset:'USDC'\n        },\n        defiPrime:{\n          token:'usdc'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleUSDCYield',\n          address:'0x0de23D3bc385a74E2196cfE827C8a640B8774B9f',\n        },\n        protocols:[\n          {\n            decimals:16,\n            enabled:true,\n            token:'cUSDC',\n            abi:cToken.abi,\n            name:'compound',\n            address:'0x4a92e71227d294f041bd82dd8f78591b75140d63',\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          }\n        ]\n      },\n    },\n    risk:{\n      \n    }\n  },\n  1337:{\n    best:{\n      DAI:{\n        abi:DAI,\n        token:'DAI',\n        decimals:18,\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0x6b175474e89094c44da98b954eedeac495271d0f',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'DAI'\n        },\n        ramp:{\n          swapAsset:'DAI'\n        },\n        defiPrime:{\n          token:'dai'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleDAIYield',\n          address:'0x3fe7940616e5bc47b0775a0dccf6237893353bb4',\n        },\n        migration:{\n          enabled:true,\n          message:'Idle now supports yield farming and governance tokens distribution. Migrate now your DAI with just one click!',\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleDAI',\n            name:'idleDAIYieldV3',\n            address:'0x78751b12da02728f467a44eac40f5cbc16bd7934',\n          },\n          oldProtocols:[\n            {\n              name:'dydx',\n              enabled:true,\n              abi:yToken,\n              address:'0xf424b10e1e9691ae5fb530fe4c3e6b9971013d49',\n              token:'yxDAIOld',\n              decimals:18,\n              functions:{\n                exchangeRate:{\n                  name:'price',\n                  params:[]\n                }\n              }\n            }\n          ],\n          migrationContract:{\n            token:'idleDAI',\n            abi:IdleConverterPersonalSignV4,\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            enabled:true,\n            abi:cToken.abi,\n            name:'compound',\n            address:'0x5d3a536E4D6DbD6114cc1Ead35777bAB948E3643',\n            token:'cDAI',\n            decimals:28,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            abi:iToken,\n            enabled:false,\n            name:'fulcrum',\n            address:'0x493c57c4763932315a328269e1adad09653b9081',\n            token:'iDAI',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            abi:aToken,\n            name:'aave',\n            enabled:true,\n            address:'0xfC1E690f61EFd961294b3e1Ce3313fBD8aa4f85d',\n            token:'aDAI',\n            decimals:18,\n            functions:{\n\n            }\n          },\n          {\n            abi:aToken,\n            name:'aavev2',\n            enabled:true,\n            address:'0x028171bCA77440897B824Ca71D1c56caC55b68A3',\n            token:'aDAIv2',\n            decimals:18,\n            functions:{\n\n            }\n          },\n          {\n            abi:CHAI,\n            name:'dsr',\n            enabled:true,\n            address:'0x06AF07097C9Eeb7fD685c692751D5C66dB49c215',\n            token:'CHAI',\n            decimals:18,\n            functions:{\n\n            }\n          },\n          {\n            abi:yToken,\n            name:'dydx',\n            enabled:true,\n            address:'0xb299BCDF056d17Bd1A46185eCA8bCE458B00DC4a',\n            token:'yxDAI',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'price',\n                params:[]\n              }\n            }\n          }\n        ]\n      },\n      USDC:{\n        abi:USDC,\n        decimals:6,\n        token:'USDC',\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(211, 67%, 47%)',\n        address:'0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'USDC'\n        },\n        defiPrime:{\n          token:'usdc'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleUSDCYield',\n          address:'0x5274891bEC421B39D23760c04A6755eCB444797C',\n        },\n        migration:{\n          enabled:true,\n          message:'Idle now supports yield farming and governance tokens distribution. Migrate now your USDC with just one click!',\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleUSDC',\n            name:'idleUSDCYieldV3',\n            address:'0x12B98C621E8754Ae70d0fDbBC73D6208bC3e3cA6'\n          },\n          oldProtocols:[\n            {\n              abi:yToken,\n              name:'dydx',\n              enabled:true,\n              address:'0x0d81b042bb9939b4d32cdf7861774c442a2685ce',\n              token:'yxUSDCOld',\n              decimals:18,\n              functions:{\n                exchangeRate:{\n                  name:'price',\n                  params:[]\n                }\n              }\n            }\n          ],\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleUSDC',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            name:'compound',\n            enabled:true,\n            abi:cToken.abi,\n            address:'0x39aa39c021dfbae8fac545936693ac917d5e7563',\n            token:'cUSDC',\n            decimals:16,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'fulcrum',\n            enabled:false,\n            abi:iToken,\n            address:'0xf013406a0b1d544238083df0b93ad0d2cbe0f65f',\n            token:'iUSDC',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0x9bA00D6856a4eDF4665BcA2C2309936572473B7E',\n            token:'aUSDC',\n            decimals:18,\n            functions:{\n              \n            }\n          },\n          {\n            abi:aToken,\n            decimals:18,\n            enabled:true,\n            name:'aavev2',\n            token:'aUSDCv2',\n            address:'0xBcca60bB61934080951369a648Fb03DF4F96263C',\n            functions:{\n              \n            }\n          },\n          {\n            name:'dydx',\n            enabled:true,\n            abi:yToken,\n            address:'0xd2F45883627f26EC34825486ca4c25235A0da0C3',\n            token:'yxUSDC',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'price',\n                params:[]\n              }\n            }\n          }\n        ]\n      },\n      USDT:{\n        decimals:6,\n        token:'USDT',\n        enabled:true,\n        abi:ERC20.abi,\n        govTokensDisabled:false,\n        color:'hsl(211, 67%, 47%)',\n        address:'0xdac17f958d2ee523a2206206994597c13d831ec7',\n        wyre:{\n          destCurrency:'USDT'\n        },\n        defiPrime:{\n          token:'usdt'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleUSDTYield',\n          address:'0xF34842d05A1c888Ca02769A633DF37177415C2f8',\n        },\n        migration:{\n          enabled:true,\n          message:'Idle now supports yield farming and governance tokens distribution. Migrate now your USDT with just one click!',\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleUSDT',\n            name:'idleUSDTYieldV3',\n            address:'0x63D27B3DA94A9E871222CB0A32232674B02D2f2D'\n          },\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleUSDT',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            name:'compound',\n            enabled:true,\n            abi:cToken.abi,\n            address:'0xf650c3d88d12db855b8bf7d11be6c55a4e07dcc9',\n            token:'cUSDT',\n            decimals:16,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'fulcrum',\n            enabled:false,\n            abi:iToken,\n            address:'0x8326645f3aa6de6420102fdb7da9e3a91855045b',\n            token:'iUSDT',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0x71fc860F7D3A592A4a98740e39dB31d25db65ae8',\n            token:'aUSDT',\n            decimals:18,\n            functions:{\n              \n            }\n          },\n          {\n            abi:aToken,\n            decimals:18,\n            name:'aavev2',\n            enabled:true,\n            token:'aUSDTv2',\n            address:'0x3ed3b47dd13ec9a98b44e6204a523e766b225811',\n            functions:{\n              \n            }\n          }\n        ]\n      },\n      SUSD:{\n        decimals:18,\n        token:'SUSD',\n        enabled:true,\n        abi:ERC20.abi,\n        govTokensDisabled:false,\n        skipMintForDeposit:false,\n        color:'hsl(250, 31%, 15%)',\n        // icon:'images/tokens/SUSD.svg',\n        address:'0x57ab1ec28d129707052df4df418d58a2d46d5f51',\n        wyre:{\n          destCurrency:'SUSD'\n        },\n        defiPrime:{\n          token:'susd'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleSUSDYield',\n          address:'0xf52cdcd458bf455aed77751743180ec4a595fd3f',\n        },\n        migration:{\n          enabled:true,\n          message:'Idle now supports yield farming and governance tokens distribution. Migrate now your SUSD with just one click!',\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleSUSD',\n            name:'idleSUSDYieldV3',\n            address:'0xe79e177d2a5c7085027d7c64c8f271c81430fc9b',\n          },\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleSUSD',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0x625aE63000f46200499120B906716420bd059240',\n            token:'aSUSD',\n            decimals:18,\n            functions:{\n              \n            }\n          },\n          {\n            name:'aavev2',\n            enabled:true,\n            abi:aToken,\n            address:'0x6c5024cd4f8a59110119c56f8933403a539555eb',\n            token:'aSUSDv2',\n            decimals:18,\n            functions:{\n              \n            }\n          }\n        ]\n      },\n      TUSD:{\n        decimals:18,\n        token:'TUSD',\n        enabled:true,\n        abi:ERC20.abi,\n        govTokensDisabled:false,\n        skipMintForDeposit:false,\n        color:'hsl(217, 100%, 20%)',\n        address:'0x0000000000085d4780b73119b644ae5ecd22b376',\n        wyre:{\n          destCurrency:'TUSD'\n        },\n        defiPrime:{\n          token:'tusd'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleTUSDYield',\n          address:'0xc278041fDD8249FE4c1Aad1193876857EEa3D68c',\n        },\n        migration:{\n          enabled:true,\n          message:'Idle now supports yield farming and governance tokens distribution. Migrate now your TUSD with just one click!',\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleTUSD',\n            name:'idleTUSDYieldV3',\n            address:'0x51C77689A9c2e8cCBEcD4eC9770a1fA5fA83EeF1',\n          },\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleTUSD',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0x4da9b813057d04baef4e5800e36083717b4a0341',\n            token:'aTUSD',\n            decimals:18,\n            functions:{\n              \n            }\n          },\n          {\n            abi:aToken,\n            enabled:true,\n            name:'aavev2',\n            token:'aTUSDv2',\n            address:'0x101cc05f4A51C0319f570d5E146a8C625198e636',\n            decimals:18,\n            functions:{\n              \n            }\n          }\n        ]\n      },\n      WETH:{\n        abi:WETH,\n        token:'WETH',\n        decimals:18,\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2',\n        deposit:{\n          minAmountForMint:5000,\n        },\n        wyre:{\n          destCurrency:'WETH'\n        },\n        ramp:{\n          swapAsset:'WETH'\n        },\n        defiPrime:{\n          token:'weth'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleWETHYield',\n          address:'0xC8E6CA6E96a326dC448307A5fDE90a0b21fd7f80',\n        },\n        protocols:[\n          {\n            enabled:true,\n            abi:cToken.abi,\n            name:'compound',\n            address:'0x4Ddc2D193948926D02f9B1fE9e1daa0718270ED5',\n            token:'cETH',\n            decimals:28,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            abi:aToken,\n            name:'aavev2',\n            enabled:true,\n            address:'0x030bA81f1c18d280636F32af80b9AAd02Cf0854e',\n            token:'aWETH',\n            decimals:18,\n            functions:{\n\n            }\n          },\n        ]\n      },\n      WBTC:{\n        decimals:8,\n        token:'WBTC',\n        enabled:true,\n        abi:ERC20.abi,\n        govTokensDisabled:false,\n        color:'hsl(29, 81%, 59%)',\n        address:'0x2260fac5e5542a773aa44fbcfedf7c193bc2c599',\n        deposit:{\n          minAmountForMint:5000,\n        },\n        wyre:{\n          destCurrency:'WBTC'\n        },\n        defiPrime:{\n          token:'wbtc'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleWBTCYield',\n          address:'0x8C81121B15197fA0eEaEE1DC75533419DcfD3151',\n        },\n        migration:{\n          enabled:true,\n          message:'Idle now supports yield farming and governance tokens distribution. Migrate now your WBTC with just one click!',\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleWBTC',\n            name:'idleWBTCYieldV3',\n            address:'0xD6f279B7ccBCD70F8be439d25B9Df93AEb60eC55'\n          },\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleWBTC',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            enabled:true,\n            token:'cWBTC',\n            abi:cToken.abi,\n            name:'compound',\n            address:'0xccF4429DB6322D5C611ee964527D42E5d685DD6a',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            abi:iToken,\n            decimals:18,\n            token:'iWBTC',\n            enabled:false,\n            name:'fulcrum',\n            address:'0xba9262578efef8b3aff7f60cd629d6cc8859c8b5',\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            abi:aToken,\n            name:'aave',\n            enabled:true,\n            token:'aWBTC',\n            address:'0xfc4b8ed459e00e5400be803a9bb3954234fd50e3',\n            decimals:18,\n            functions:{\n              \n            }\n          },\n          {\n            abi:aToken,\n            enabled:true,\n            name:'aavev2',\n            token:'aWBTCv2',\n            address:'0x9ff58f4fFB29fA2266Ab25e75e2A8b3503311656',\n            decimals:18,\n            functions:{\n              \n            }\n          }\n        ]\n      },\n      RAI:{\n        deposit:{},\n        token:'RAI',\n        decimals:18,\n        enabled:true,\n        abi:ERC20.abi,\n        enabledEnvs:[],\n        govTokensDisabled:false,\n        color:'hsl(169,42%,37%)',\n        icon:'images/tokens/RAI.png',\n        address:'0x03ab458634910aad20ef5f1c8ee96f1d6ac54919',\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleRAIYield',\n          address:'0x5C960a3DCC01BE8a0f49c02A8ceBCAcf5D07fABe',\n        },\n        protocols:[\n          {\n            abi:crToken,\n            decimals:28,\n            enabled:true,\n            name:'cream',\n            token:'crRAI',\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n            address:'0xf8445c529d363ce114148662387eba5e62016e20',\n          },\n          {\n            abi:fToken,\n            decimals:28,\n            name:'fuse',\n            token:'fRAI',\n            enabled:true,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n            address:'0x752F119bD4Ee2342CE35E2351648d21962c7CAfE',\n          }\n        ]\n      },\n      FEI:{\n        deposit:{},\n        token:'FEI',\n        decimals:18,\n        enabled:true,\n        abi:ERC20.abi,\n        enabledEnvs:[],\n        govTokensDisabled:false,\n        color:'hsl(158, 64%, 37%)',\n        address:'0x956f47f50a910163d8bf957cf5846d573e7f87ca',\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleFEIYield',\n          address:'0xb2d5CB72A621493fe83C6885E4A776279be595bC',\n        },\n        protocols:[\n          {\n            abi:crToken,\n            decimals:28,\n            enabled:true,\n            name:'cream',\n            token:'crFEI',\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n            address:'0x8C3B7a4320ba70f8239F83770c4015B5bc4e6F91',\n          },\n          {\n            abi:fToken,\n            decimals:28,\n            name:'fuse',\n            token:'fFEI',\n            enabled:true,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n            address:'0xd8553552f8868C1Ef160eEdf031cF0BCf9686945',\n          }\n        ]\n      },\n    },\n    risk:{\n      DAI:{\n        abi:DAI,\n        decimals:18,\n        token:'DAI',\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0x6b175474e89094c44da98b954eedeac495271d0f',\n        wyre:{\n          destCurrency:'DAI'\n        },\n        ramp:{\n          swapAsset:'DAI'\n        },\n        defiPrime:{\n          token:'dai'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleDAISafe',\n          address:'0xa14ea0e11121e6e951e87c66afe460a00bcd6a16'\n        },\n        migration:{\n          enabled:true,\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleDAI',\n            name:'idleDAISafeV3',\n            address:'0x1846bdfDB6A0f5c473dEc610144513bd071999fB'\n          },\n          oldProtocols:[\n            {\n              name:'dydx',\n              enabled:true,\n              abi:yToken,\n              address:'0xf424b10e1e9691ae5fb530fe4c3e6b9971013d49',\n              token:'yxDAIOld',\n              decimals:18,\n              functions:{\n                exchangeRate:{\n                  name:'price',\n                  params:[]\n                }\n              }\n            }\n          ],\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleDAI',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            name:'compound',\n            enabled:true,\n            abi:cToken.abi,\n            address:'0x5d3a536E4D6DbD6114cc1Ead35777bAB948E3643',\n            token:'cDAI',\n            decimals:28,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'fulcrum',\n            enabled:false,\n            abi:iToken,\n            address:'0x493c57c4763932315a328269e1adad09653b9081',\n            token:'iDAI',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0xfC1E690f61EFd961294b3e1Ce3313fBD8aa4f85d',\n            token:'aDAI',\n            decimals:18,\n            functions:{\n\n            }\n          },\n          {\n            name:'dsr',\n            enabled:true,\n            abi:CHAI,\n            address:'0x06AF07097C9Eeb7fD685c692751D5C66dB49c215',\n            token:'CHAI',\n            decimals:18,\n            functions:{\n\n            }\n          },\n          {\n            name:'dydx',\n            enabled:true,\n            abi:yToken,\n            address:'0xb299BCDF056d17Bd1A46185eCA8bCE458B00DC4a',\n            token:'yxDAI',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'price',\n                params:[]\n              }\n            }\n          }\n        ]\n      },\n      USDC:{\n        decimals:6,\n        token:'USDC',\n        enabled:true,\n        abi:ERC20.abi,\n        govTokensDisabled:false,\n        color:'hsl(211, 67%, 47%)',\n        address:'0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'USDC'\n        },\n        defiPrime:{\n          token:'usdc'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleUSDCSafe',\n          address:'0x3391bc034f2935ef0e1e41619445f998b2680d35'\n        },\n        migration:{\n          enabled:true,\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleUSDC',\n            name:'idleUSDCSafeV3',\n            address:'0xcDdB1Bceb7a1979C6caa0229820707429dd3Ec6C',\n          },\n          oldProtocols:[\n            {\n              name:'dydx',\n              enabled:true,\n              abi:yToken,\n              address:'0x0d81b042bb9939b4d32cdf7861774c442a2685ce',\n              token:'yxUSDCOld',\n              decimals:18,\n              functions:{\n                exchangeRate:{\n                  name:'price',\n                  params:[]\n                }\n              }\n            }\n          ],\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleUSDC',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            name:'compound',\n            enabled:true,\n            abi:cToken.abi,\n            address:'0x39aa39c021dfbae8fac545936693ac917d5e7563',\n            token:'cUSDC',\n            decimals:16,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'fulcrum',\n            enabled:false,\n            abi:iToken,\n            address:'0xf013406a0b1d544238083df0b93ad0d2cbe0f65f',\n            token:'iUSDC',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0x9bA00D6856a4eDF4665BcA2C2309936572473B7E',\n            token:'aUSDC',\n            decimals:18,\n            functions:{\n              \n            }\n          },\n          {\n            name:'dydx',\n            enabled:true,\n            abi:yToken,\n            address:'0xd2F45883627f26EC34825486ca4c25235A0da0C3',\n            token:'yxUSDC',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'price',\n                params:[]\n              }\n            }\n          }\n        ]\n      },\n      USDT:{\n        decimals:6,\n        token:'USDT',\n        enabled:true,\n        abi:ERC20.abi,\n        govTokensDisabled:false,\n        color:'hsl(211, 67%, 47%)',\n        address:'0xdac17f958d2ee523a2206206994597c13d831ec7',\n        wyre:{\n          destCurrency:'USDT'\n        },\n        defiPrime:{\n          token:'usdt'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleUSDTSafe',\n          address:'0x28fAc5334C9f7262b3A3Fe707e250E01053e07b5'\n        },\n        migration:{\n          enabled:true,\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleUSDT',\n            name:'idleUSDTSafeV3',\n            address:'0x42740698959761baf1b06baa51efbd88cb1d862b'\n          },\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleDAI',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            name:'compound',\n            enabled:true,\n            abi:cToken.abi,\n            address:'0xf650c3d88d12db855b8bf7d11be6c55a4e07dcc9',\n            token:'cUSDT',\n            decimals:16,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'fulcrum',\n            enabled:false,\n            abi:iToken,\n            address:'0x8326645f3aa6de6420102fdb7da9e3a91855045b',\n            token:'iUSDT',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0x71fc860F7D3A592A4a98740e39dB31d25db65ae8',\n            token:'aUSDT',\n            decimals:18,\n            functions:{\n              \n            }\n          }\n        ]\n      }\n    }\n  },\n  1:{ // Mainnet\n    best:{\n      DAI:{\n        abi:DAI,\n        token:'DAI',\n        decimals:18,\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0x6b175474e89094c44da98b954eedeac495271d0f',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'DAI'\n        },\n        ramp:{\n          swapAsset:'DAI'\n        },\n        defiPrime:{\n          token:'dai'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleDAIYield',\n          address:'0x3fe7940616e5bc47b0775a0dccf6237893353bb4',\n        },\n        migration:{\n          enabled:true,\n          message:'Idle now supports yield farming and governance tokens distribution. Migrate now your DAI with just one click!',\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleDAI',\n            name:'idleDAIYieldV3',\n            address:'0x78751b12da02728f467a44eac40f5cbc16bd7934',\n          },\n          oldProtocols:[\n            {\n              name:'dydx',\n              enabled:true,\n              abi:yToken,\n              address:'0xf424b10e1e9691ae5fb530fe4c3e6b9971013d49',\n              token:'yxDAIOld',\n              decimals:18,\n              functions:{\n                exchangeRate:{\n                  name:'price',\n                  params:[]\n                }\n              }\n            }\n          ],\n          migrationContract:{\n            token:'idleDAI',\n            abi:IdleConverterPersonalSignV4,\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            defiScore:7.9,\n            enabled:true,\n            abi:cToken.abi,\n            name:'compound',\n            address:'0x5d3a536E4D6DbD6114cc1Ead35777bAB948E3643',\n            token:'cDAI',\n            decimals:28,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            abi:iToken,\n            enabled:false,\n            name:'fulcrum',\n            address:'0x493c57c4763932315a328269e1adad09653b9081',\n            token:'iDAI',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            defiScore:7.4,\n            abi:aToken,\n            name:'aave',\n            enabled:true,\n            address:'0xfC1E690f61EFd961294b3e1Ce3313fBD8aa4f85d',\n            token:'aDAI',\n            decimals:18,\n            functions:{\n\n            }\n          },\n          {\n            defiScore:7.4,\n            abi:aToken,\n            name:'aavev2',\n            enabled:true,\n            address:'0x028171bCA77440897B824Ca71D1c56caC55b68A3',\n            token:'aDAIv2',\n            decimals:18,\n            functions:{\n\n            }\n          },\n          {\n            abi:CHAI,\n            name:'dsr',\n            enabled:true,\n            address:'0x06AF07097C9Eeb7fD685c692751D5C66dB49c215',\n            token:'CHAI',\n            decimals:18,\n            functions:{\n\n            }\n          },\n          {\n            defiScore:7.7,\n            abi:yToken,\n            name:'dydx',\n            enabled:true,\n            address:'0xb299BCDF056d17Bd1A46185eCA8bCE458B00DC4a',\n            token:'yxDAI',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'price',\n                params:[]\n              }\n            }\n          }\n        ]\n      },\n      USDC:{\n        abi:USDC,\n        decimals:6,\n        token:'USDC',\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(211, 67%, 47%)',\n        address:'0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'USDC'\n        },\n        defiPrime:{\n          token:'usdc'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleUSDCYield',\n          address:'0x5274891bEC421B39D23760c04A6755eCB444797C',\n        },\n        migration:{\n          enabled:true,\n          message:'Idle now supports yield farming and governance tokens distribution. Migrate now your USDC with just one click!',\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleUSDC',\n            name:'idleUSDCYieldV3',\n            address:'0x12B98C621E8754Ae70d0fDbBC73D6208bC3e3cA6'\n          },\n          oldProtocols:[\n            {\n              abi:yToken,\n              name:'dydx',\n              enabled:true,\n              address:'0x0d81b042bb9939b4d32cdf7861774c442a2685ce',\n              token:'yxUSDCOld',\n              decimals:18,\n              functions:{\n                exchangeRate:{\n                  name:'price',\n                  params:[]\n                }\n              }\n            }\n          ],\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleUSDC',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            defiScore:8.0,\n            enabled:true,\n            abi:cToken.abi,\n            name:'compound',\n            address:'0x39aa39c021dfbae8fac545936693ac917d5e7563',\n            token:'cUSDC',\n            decimals:16,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'fulcrum',\n            enabled:false,\n            abi:iToken,\n            address:'0xf013406a0b1d544238083df0b93ad0d2cbe0f65f',\n            token:'iUSDC',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            defiScore:7.4,\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0x9bA00D6856a4eDF4665BcA2C2309936572473B7E',\n            token:'aUSDC',\n            decimals:18,\n            functions:{\n              \n            }\n          },\n          {\n            defiScore:7.4,\n            abi:aToken,\n            decimals:18,\n            enabled:true,\n            name:'aavev2',\n            token:'aUSDCv2',\n            address:'0xBcca60bB61934080951369a648Fb03DF4F96263C',\n            functions:{\n              \n            }\n          },\n          {\n            defiScore:7.8,\n            name:'dydx',\n            enabled:true,\n            abi:yToken,\n            address:'0xd2F45883627f26EC34825486ca4c25235A0da0C3',\n            token:'yxUSDC',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'price',\n                params:[]\n              }\n            }\n          }\n        ]\n      },\n      USDT:{\n        decimals:6,\n        token:'USDT',\n        enabled:true,\n        abi:ERC20.abi,\n        govTokensDisabled:false,\n        color:'hsl(211, 67%, 47%)',\n        address:'0xdac17f958d2ee523a2206206994597c13d831ec7',\n        wyre:{\n          destCurrency:'USDT'\n        },\n        defiPrime:{\n          token:'usdt'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleUSDTYield',\n          address:'0xF34842d05A1c888Ca02769A633DF37177415C2f8',\n        },\n        migration:{\n          enabled:true,\n          message:'Idle now supports yield farming and governance tokens distribution. Migrate now your USDT with just one click!',\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleUSDT',\n            name:'idleUSDTYieldV3',\n            address:'0x63D27B3DA94A9E871222CB0A32232674B02D2f2D'\n          },\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleUSDT',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            defiScore:7.9,\n            name:'compound',\n            enabled:true,\n            abi:cToken.abi,\n            address:'0xf650c3d88d12db855b8bf7d11be6c55a4e07dcc9',\n            token:'cUSDT',\n            decimals:16,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'fulcrum',\n            enabled:false,\n            abi:iToken,\n            address:'0x8326645f3aa6de6420102fdb7da9e3a91855045b',\n            token:'iUSDT',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            defiScore:7.2,\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0x71fc860F7D3A592A4a98740e39dB31d25db65ae8',\n            token:'aUSDT',\n            decimals:18,\n            functions:{\n              \n            }\n          },\n          {\n            defiScore:7.2,\n            abi:aToken,\n            decimals:18,\n            name:'aavev2',\n            enabled:true,\n            token:'aUSDTv2',\n            address:'0x3ed3b47dd13ec9a98b44e6204a523e766b225811',\n            functions:{\n              \n            }\n          }\n        ]\n      },\n      SUSD:{\n        decimals:18,\n        token:'SUSD',\n        enabled:true,\n        abi:ERC20.abi,\n        govTokensDisabled:false,\n        skipMintForDeposit:false,\n        color:'hsl(250, 31%, 15%)',\n        // icon:'images/tokens/SUSD.svg',\n        address:'0x57ab1ec28d129707052df4df418d58a2d46d5f51',\n        wyre:{\n          destCurrency:'SUSD'\n        },\n        defiPrime:{\n          token:'susd'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleSUSDYield',\n          address:'0xf52cdcd458bf455aed77751743180ec4a595fd3f',\n        },\n        migration:{\n          enabled:true,\n          message:'Idle now supports yield farming and governance tokens distribution. Migrate now your SUSD with just one click!',\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleSUSD',\n            name:'idleSUSDYieldV3',\n            address:'0xe79e177d2a5c7085027d7c64c8f271c81430fc9b',\n          },\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleSUSD',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            defiScore:7.2,\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0x625aE63000f46200499120B906716420bd059240',\n            token:'aSUSD',\n            decimals:18,\n            functions:{\n              \n            }\n          },\n          {\n            defiScore:7.2,\n            name:'aavev2',\n            enabled:true,\n            abi:aToken,\n            address:'0x6c5024cd4f8a59110119c56f8933403a539555eb',\n            token:'aSUSDv2',\n            decimals:18,\n            functions:{\n              \n            }\n          }\n        ]\n      },\n      TUSD:{\n        decimals:18,\n        token:'TUSD',\n        enabled:true,\n        abi:ERC20.abi,\n        govTokensDisabled:false,\n        skipMintForDeposit:false,\n        color:'hsl(217, 100%, 20%)',\n        address:'0x0000000000085d4780b73119b644ae5ecd22b376',\n        wyre:{\n          destCurrency:'TUSD'\n        },\n        defiPrime:{\n          token:'tusd'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleTUSDYield',\n          address:'0xc278041fDD8249FE4c1Aad1193876857EEa3D68c',\n        },\n        migration:{\n          enabled:true,\n          message:'Idle now supports yield farming and governance tokens distribution. Migrate now your TUSD with just one click!',\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleTUSD',\n            name:'idleTUSDYieldV3',\n            address:'0x51C77689A9c2e8cCBEcD4eC9770a1fA5fA83EeF1',\n          },\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleTUSD',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            defiScore:7.8,\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0x4da9b813057d04baef4e5800e36083717b4a0341',\n            token:'aTUSD',\n            decimals:18,\n            functions:{\n              \n            }\n          },\n          {\n            defiScore:7.8,\n            abi:aToken,\n            enabled:true,\n            name:'aavev2',\n            token:'aTUSDv2',\n            address:'0x101cc05f4A51C0319f570d5E146a8C625198e636',\n            decimals:18,\n            functions:{\n              \n            }\n          }\n        ]\n      },\n      WETH:{\n        abi:WETH,\n        token:'WETH',\n        decimals:18,\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2',\n        deposit:{\n          minAmountForMint:5000,\n        },\n        wyre:{\n          destCurrency:'WETH'\n        },\n        ramp:{\n          swapAsset:'WETH'\n        },\n        defiPrime:{\n          token:'weth'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleWETHYield',\n          address:'0xC8E6CA6E96a326dC448307A5fDE90a0b21fd7f80',\n        },\n        protocols:[\n          {\n            defiScore:8.8,\n            enabled:true,\n            abi:cToken.abi,\n            name:'compound',\n            address:'0x4Ddc2D193948926D02f9B1fE9e1daa0718270ED5',\n            token:'cETH',\n            decimals:28,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            defiScore:8.3,\n            abi:aToken,\n            name:'aavev2',\n            enabled:true,\n            address:'0x030bA81f1c18d280636F32af80b9AAd02Cf0854e',\n            token:'aWETH',\n            decimals:18,\n            functions:{\n\n            }\n          },\n        ]\n      },\n      WBTC:{\n        decimals:8,\n        token:'WBTC',\n        enabled:true,\n        abi:ERC20.abi,\n        govTokensDisabled:false,\n        color:'hsl(29, 81%, 59%)',\n        address:'0x2260fac5e5542a773aa44fbcfedf7c193bc2c599',\n        deposit:{\n          minAmountForMint:5000,\n        },\n        wyre:{\n          destCurrency:'WBTC'\n        },\n        defiPrime:{\n          token:'wbtc'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleWBTCYield',\n          address:'0x8C81121B15197fA0eEaEE1DC75533419DcfD3151',\n        },\n        migration:{\n          enabled:true,\n          message:'Idle now supports yield farming and governance tokens distribution. Migrate now your WBTC with just one click!',\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleWBTC',\n            name:'idleWBTCYieldV3',\n            address:'0xD6f279B7ccBCD70F8be439d25B9Df93AEb60eC55'\n          },\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleWBTC',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            defiScore:8.9,\n            enabled:true,\n            token:'cWBTC',\n            abi:cToken.abi,\n            name:'compound',\n            address:'0xccF4429DB6322D5C611ee964527D42E5d685DD6a',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            abi:iToken,\n            decimals:18,\n            token:'iWBTC',\n            enabled:false,\n            name:'fulcrum',\n            address:'0xba9262578efef8b3aff7f60cd629d6cc8859c8b5',\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            defiScore:8.3,\n            abi:aToken,\n            name:'aave',\n            enabled:true,\n            token:'aWBTC',\n            address:'0xfc4b8ed459e00e5400be803a9bb3954234fd50e3',\n            decimals:18,\n            functions:{\n              \n            }\n          },\n          {\n            defiScore:8.3,\n            abi:aToken,\n            enabled:true,\n            name:'aavev2',\n            token:'aWBTCv2',\n            address:'0x9ff58f4fFB29fA2266Ab25e75e2A8b3503311656',\n            decimals:18,\n            functions:{\n              \n            }\n          }\n        ]\n      },\n      RAI:{\n        deposit:{},\n        token:'RAI',\n        decimals:18,\n        enabled:true,\n        abi:ERC20.abi,\n        enabledEnvs:[],\n        defiScoreDisabled:true,\n        govTokensDisabled:false,\n        color:'hsl(169,42%,37%)',\n        icon:'images/tokens/RAI.png',\n        address:'0x03ab458634910aad20ef5f1c8ee96f1d6ac54919',\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleRAIYield',\n          address:'0x5C960a3DCC01BE8a0f49c02A8ceBCAcf5D07fABe',\n        },\n        protocols:[\n          {\n            abi:crToken,\n            decimals:28,\n            enabled:true,\n            name:'cream',\n            token:'crRAI',\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n            address:'0xf8445c529d363ce114148662387eba5e62016e20',\n          },\n          {\n            abi:fToken,\n            decimals:28,\n            name:'fuse',\n            token:'fRAI',\n            enabled:true,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n            address:'0x752F119bD4Ee2342CE35E2351648d21962c7CAfE',\n          },\n          {\n            abi:aToken,\n            decimals:18,\n            token:'aRAI',\n            enabled:true,\n            name:'aavev2',\n            functions:{\n            },\n            address:'0xc9bc48c72154ef3e5425641a3c747242112a46af',\n          }\n        ]\n      },\n      FEI:{\n        deposit:{},\n        token:'FEI',\n        decimals:18,\n        enabled:true,\n        abi:ERC20.abi,\n        enabledEnvs:['beta'],\n        defiScoreDisabled:true,\n        govTokensDisabled:false,\n        color:'hsl(158, 64%, 37%)',\n        address:'0x956f47f50a910163d8bf957cf5846d573e7f87ca',\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleFEIYield',\n          address:'0xb2d5CB72A621493fe83C6885E4A776279be595bC',\n        },\n        protocols:[\n          {\n            abi:crToken,\n            decimals:28,\n            enabled:true,\n            name:'cream',\n            token:'crFEI',\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n            address:'0x8C3B7a4320ba70f8239F83770c4015B5bc4e6F91',\n          },\n          {\n            abi:fToken,\n            decimals:28,\n            name:'fuse',\n            token:'fFEI',\n            enabled:true,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n            address:'0xd8553552f8868C1Ef160eEdf031cF0BCf9686945',\n          }\n        ]\n      },\n    },\n    risk:{\n      DAI:{\n        abi:DAI,\n        decimals:18,\n        token:'DAI',\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0x6b175474e89094c44da98b954eedeac495271d0f',\n        wyre:{\n          destCurrency:'DAI'\n        },\n        ramp:{\n          swapAsset:'DAI'\n        },\n        defiPrime:{\n          token:'dai'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleDAISafe',\n          address:'0xa14ea0e11121e6e951e87c66afe460a00bcd6a16'\n        },\n        migration:{\n          enabled:true,\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleDAI',\n            name:'idleDAISafeV3',\n            address:'0x1846bdfDB6A0f5c473dEc610144513bd071999fB'\n          },\n          oldProtocols:[\n            {\n              name:'dydx',\n              enabled:true,\n              abi:yToken,\n              address:'0xf424b10e1e9691ae5fb530fe4c3e6b9971013d49',\n              token:'yxDAIOld',\n              decimals:18,\n              functions:{\n                exchangeRate:{\n                  name:'price',\n                  params:[]\n                }\n              }\n            }\n          ],\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleDAI',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            defiScore:7.9,\n            enabled:true,\n            abi:cToken.abi,\n            name:'compound',\n            address:'0x5d3a536E4D6DbD6114cc1Ead35777bAB948E3643',\n            token:'cDAI',\n            decimals:28,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'fulcrum',\n            enabled:false,\n            abi:iToken,\n            address:'0x493c57c4763932315a328269e1adad09653b9081',\n            token:'iDAI',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            defiScore:7.4,\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0xfC1E690f61EFd961294b3e1Ce3313fBD8aa4f85d',\n            token:'aDAI',\n            decimals:18,\n            functions:{\n\n            }\n          },\n          {\n            name:'dsr',\n            enabled:true,\n            abi:CHAI,\n            address:'0x06AF07097C9Eeb7fD685c692751D5C66dB49c215',\n            token:'CHAI',\n            decimals:18,\n            functions:{\n\n            }\n          },\n          {\n            defiScore:7.7,\n            name:'dydx',\n            enabled:true,\n            abi:yToken,\n            address:'0xb299BCDF056d17Bd1A46185eCA8bCE458B00DC4a',\n            token:'yxDAI',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'price',\n                params:[]\n              }\n            }\n          }\n        ]\n      },\n      USDC:{\n        decimals:6,\n        token:'USDC',\n        enabled:true,\n        abi:ERC20.abi,\n        govTokensDisabled:false,\n        color:'hsl(211, 67%, 47%)',\n        address:'0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'USDC'\n        },\n        defiPrime:{\n          token:'usdc'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleUSDCSafe',\n          address:'0x3391bc034f2935ef0e1e41619445f998b2680d35'\n        },\n        migration:{\n          enabled:true,\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleUSDC',\n            name:'idleUSDCSafeV3',\n            address:'0xcDdB1Bceb7a1979C6caa0229820707429dd3Ec6C',\n          },\n          oldProtocols:[\n            {\n              name:'dydx',\n              enabled:true,\n              abi:yToken,\n              address:'0x0d81b042bb9939b4d32cdf7861774c442a2685ce',\n              token:'yxUSDCOld',\n              decimals:18,\n              functions:{\n                exchangeRate:{\n                  name:'price',\n                  params:[]\n                }\n              }\n            }\n          ],\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleUSDC',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            defiScore:8.0,\n            name:'compound',\n            enabled:true,\n            abi:cToken.abi,\n            address:'0x39aa39c021dfbae8fac545936693ac917d5e7563',\n            token:'cUSDC',\n            decimals:16,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'fulcrum',\n            enabled:false,\n            abi:iToken,\n            address:'0xf013406a0b1d544238083df0b93ad0d2cbe0f65f',\n            token:'iUSDC',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            defiScore:7.4,\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0x9bA00D6856a4eDF4665BcA2C2309936572473B7E',\n            token:'aUSDC',\n            decimals:18,\n            functions:{\n              \n            }\n          },\n          {\n            defiScore:7.8,\n            name:'dydx',\n            enabled:true,\n            abi:yToken,\n            address:'0xd2F45883627f26EC34825486ca4c25235A0da0C3',\n            token:'yxUSDC',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'price',\n                params:[]\n              }\n            }\n          }\n        ]\n      },\n      USDT:{\n        decimals:6,\n        token:'USDT',\n        enabled:true,\n        abi:ERC20.abi,\n        govTokensDisabled:false,\n        color:'hsl(211, 67%, 47%)',\n        address:'0xdac17f958d2ee523a2206206994597c13d831ec7',\n        wyre:{\n          destCurrency:'USDT'\n        },\n        defiPrime:{\n          token:'usdt'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleUSDTSafe',\n          address:'0x28fAc5334C9f7262b3A3Fe707e250E01053e07b5'\n        },\n        migration:{\n          enabled:true,\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleUSDT',\n            name:'idleUSDTSafeV3',\n            address:'0x42740698959761baf1b06baa51efbd88cb1d862b'\n          },\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleDAI',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            defiScore:7.9,\n            name:'compound',\n            enabled:true,\n            abi:cToken.abi,\n            address:'0xf650c3d88d12db855b8bf7d11be6c55a4e07dcc9',\n            token:'cUSDT',\n            decimals:16,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'fulcrum',\n            enabled:false,\n            abi:iToken,\n            address:'0x8326645f3aa6de6420102fdb7da9e3a91855045b',\n            token:'iUSDT',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            defiScore:7.2,\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0x71fc860F7D3A592A4a98740e39dB31d25db65ae8',\n            token:'aUSDT',\n            decimals:18,\n            functions:{\n              \n            }\n          }\n        ]\n      }\n    }\n  }\n};\n\nexport default availableTokens;","import ERC20 from '../contracts/ERC20.json';\nimport IdleCDO from '../contracts/IdleCDO.json';\nimport IdleStrategy from '../contracts/IdleStrategy.json';\nimport IdleCDOTrancheRewards from '../contracts/IdleCDOTrancheRewards.json';\nconst availableTranches = {\n  idle:{\n    DAI:{\n      token:'DAI',\n      decimals:18,\n      limit:500000,\n      protocol:'idle',\n      blockNumber:13054628,\n      address:'0x6b175474e89094c44da98b954eedeac495271d0f',\n      CDO:{\n        abi:IdleCDO,\n        decimals:18,\n        name:'IdleCDO_idleDAIYield',\n        address:'0xd0DbcD556cA22d3f3c142e9a3220053FD7a247BC'\n      },\n      Strategy:{\n        abi:IdleStrategy,\n        name:'IdleStrategy_idleDAIYield'\n      },\n      AA:{\n        abi:ERC20,\n        decimals:18,\n        tranche:'AA',\n        functions:{\n          stake:'stake',\n          unstake:'unstake',\n          deposit:'depositAA',\n          withdraw:'withdrawAA'\n        },\n        CDORewards:{\n          decimals:18,\n          abi:IdleCDOTrancheRewards,\n          name:'IdleCDOTrancheRewards_idleDAIYield_AA',\n          address:'0x9c3bC87693c65E740d8B2d5F0820E04A61D8375B',\n          stakingRewards:[\n            {\n              token:'IDLE',\n              address:'0x875773784Af8135eA0ef43b5a374AaD105c5D39e'\n            }\n          ]\n        },\n        label:'idleDAI AA',\n        blockNumber:13054628,\n        name:'AA_idleDAIYield',\n        token:'AA_idleDAIYield',\n        address:'0xE9ada97bDB86d827ecbaACCa63eBcD8201D8b12E'\n      },\n      BB:{\n        abi:ERC20,\n        decimals:18,\n        tranche:'BB',\n        functions:{\n          stake:'stake',\n          unstake:'unstake',\n          deposit:'depositBB',\n          withdraw:'withdrawBB'\n        },\n        CDORewards:{\n          decimals:18,\n          abi:IdleCDOTrancheRewards,\n          name:'IdleCDOTrancheRewards_idleDAIYield_BB',\n          address:'0x4473bc90118b18be890af42d793b5252c4dc382d',\n          stakingRewards:[\n            {\n              token:'IDLE',\n              address:'0x875773784Af8135eA0ef43b5a374AaD105c5D39e'\n            }\n          ]\n        },\n        label:'idleDAI BB',\n        blockNumber:13054628,\n        name:'BB_idleDAIYield',\n        token:'BB_idleDAIYield',\n        address:'0x730348a54bA58F64295154F0662A08Cbde1225c2'\n      }\n    }\n  }\n  /*\n  yearn:{\n  \tDAI:{\n  \t  junior:{\n  \t    address:'0x000000000000000000000000000000000000'\n  \t  },\n  \t  senior:{\n  \t    address:'0x000000000000000000000000000000000000'\n  \t  }\n  \t}\n  }\n  */\n};\nexport default availableTranches;","const TransactionToastMessages = {\n    initialized: {\n      message: \"{action} request initialized\",\n      secondaryMessage: \"Confirm with your wallet provider\",\n      actionHref: \"\",\n      actionText: \"\",\n      variant: \"default\",\n      icon: \"InfoOutline\"\n    },\n    started: {\n      message: \"{action} request submitted\",\n      secondaryMessage: \"Confirm with your wallet provider\",\n      actionHref: \"\",\n      actionText: \"\",\n      variant: \"default\",\n      icon: \"InfoOutline\"\n    },\n    pending: {\n      message: \"Processing {action} request...\",\n      secondaryMessage: \"This may take a few minutes\",\n      actionHref: \"\",\n      actionText: \"\",\n      variant: \"processing\",\n      icon: \"InfoOutline\"\n    },\n    confirmed: {\n      message: \"First block confirmed\",\n      secondaryMessage: \"Your {action} request is in progress\",\n      actionHref: \"\",\n      actionText: \"\",\n      variant: \"processing\",\n      icon: 'CheckCircle'\n    },\n    success: {\n      message: \"{action} request completed\",\n      variant: \"success\",\n      icon: 'CheckCircle'\n    },\n    error: {\n      message: \"{action} request failed\",\n      secondaryMessage: \"Could not complete transaction.\",\n      actionHref: \"\",\n      actionText: \"\",\n      variant: \"failure\",\n      icon: \"Block\"\n    }\n  };\n\n  export default TransactionToastMessages;\n","import React from \"react\";\nimport { ToastMessage } from \"rimble-ui\";\nimport TransactionToastMessages from \"./TransactionToastMessages\";\n\nclass TransactionToastUtil extends React.Component {\n  // Determines if collections are same size\n  collectionHasNewObject = (prevCollection, currentCollection) => {\n    return (\n      typeof prevCollection === \"undefined\" ||\n      Object.keys(prevCollection).length !==\n        Object.keys(currentCollection).length\n    );\n  };\n\n  // Returns object from currentCollection that doesn't exist in prevCollection\n  getNewObjectFromCollection = (prevCollection, currentCollection) => {\n    if (typeof prevCollection !== \"undefined\") {\n      const objectKey = Object.keys(currentCollection).filter(key => {\n        return !Object.keys(prevCollection).includes(key);\n      });\n      return currentCollection[objectKey];\n    } else {\n      return Object.keys(currentCollection).map(key => {\n        return currentCollection[key];\n      });\n    }\n  };\n\n  // Compare two collections of objects, return single object from current collection that differs from prev collection\n  getUpdatedObjectFromCollection = (prevCollection, currentCollection) => {\n    const updatedTransaction = Object.keys(prevCollection)\n      .map(key => {\n        if (\n          prevCollection[key].lastUpdated !== currentCollection[key].lastUpdated\n        ) {\n          return currentCollection[key];\n        } else {\n          return null;\n        }\n      })\n      .filter(object => object !== null);\n    return updatedTransaction[0];\n  };\n\n  // Returns an transaction from a collection based on a given identifier\n  getTransactionFromCollection = (identifier, collection) => {\n    const object = collection[`tx${identifier}`];\n    return object;\n  };\n\n  // Returns either a new object or finds an updated object in a collection against a previous collection\n  getUpdatedTransaction = (prevCollection, currentCollection) => {\n    let tx = null;\n    let currentTx = {};\n    let prevTx = {};\n\n    if (this.collectionHasNewObject(prevCollection, currentCollection)) {\n      tx = this.getNewObjectFromCollection(prevCollection, currentCollection);\n    } else {\n      currentTx = this.getUpdatedObjectFromCollection(\n        prevCollection,\n        currentCollection\n      );\n      if (currentTx) {\n        prevTx = this.getTransactionFromCollection(\n          currentTx.created,\n          prevCollection\n        );\n      } else {\n        return false;\n      }\n\n      if (currentTx.status !== prevTx.status) {\n        tx = currentTx;\n      }\n    }\n    return tx;\n  };\n\n  // Check for updates to the transactions collection\n  processTransactionUpdates = prevProps => {\n    let tx = null;\n    if (Object.keys(this.props.transactions).length) {\n      tx = this.getUpdatedTransaction(\n        prevProps.transactions,\n        this.props.transactions\n      );\n    }\n\n    if (tx) {\n      this.showTransactionToast(tx);\n    }\n  };\n\n  showTransactionToast = transaction => {\n    // console.log(\"showTransactionToast: \", { ...transaction });\n    // Get text info for toast\n    let toastMeta = this.getTransactionToastMeta(transaction);\n    toastMeta.colorTheme = this.props.themeMode;\n    toastMeta.closeElem = true;\n    // console.log('toastMeta',toastMeta);\n\n    // Show toast\n    window.toastProvider.addMessage(\".\", toastMeta);\n  };\n\n  getTransactionToastMeta = transaction => {\n    let transactionToastMeta = {};\n    let status = transaction.status;\n\n    switch (status) {\n      case \"initialized\":\n        transactionToastMeta = TransactionToastMessages.initialized;\n        break;\n      case \"started\":\n        transactionToastMeta = TransactionToastMessages.started;\n        break;\n      case \"pending\":\n        transactionToastMeta = TransactionToastMessages.pending;\n        break;\n      case \"confirmed\":\n        transactionToastMeta = TransactionToastMessages.confirmed;\n        break;\n      case \"success\":\n        transactionToastMeta = TransactionToastMessages.success;\n        break;\n      case \"error\":\n        transactionToastMeta = TransactionToastMessages.error;\n        break;\n      default:\n        // do nothing\n        break;\n    }\n\n    let transactionAction = '';\n    switch (transaction.method){\n      case 'redeemIdleToken':\n        transactionAction = 'Redeem';\n      break;\n      case 'redeemGovTokens':\n        transactionAction = 'Redeem (Gov Tokens)';\n      break;\n      case 'mintIdleToken':\n      case 'mintIdleTokensProxy':\n        transactionAction = 'Lending';\n      break;\n      case 'migrateFromToIdle':\n      case 'migrateFromCompoundToIdle':\n      case 'migrateFromFulcrumToIdle':\n      case 'migrateFromAaveToIdle':\n      case 'migrateFromIearnToIdle':\n      case 'bridgeIdleV1ToIdleV2':\n        transactionAction = 'Migration';\n      break;\n      case 'executeMetaTransaction':\n        transactionAction = 'Meta-Tx';\n      break;\n      case 'approve':\n        transactionAction = 'Approve';\n      break;\n      case 'rebalance':\n        transactionAction = 'Rebalance';\n      break;\n      default:\n        transactionAction = transaction.method.charAt(0).toUpperCase() + transaction.method.substr(1);\n      break;\n    }\n\n    transactionToastMeta = JSON.parse(JSON.stringify(transactionToastMeta));\n\n    let newMessage = transactionToastMeta.message.replace('{action}',transactionAction);\n    newMessage = newMessage.charAt(0).toUpperCase() + newMessage.slice(1);\n    transactionToastMeta.message = newMessage;\n    transactionToastMeta.closeElem = true;\n    transactionToastMeta.colorTheme = this.props.themeMode;\n\n    return transactionToastMeta;\n  };\n\n  componentDidUpdate(prevProps, prevState) {\n    this.processTransactionUpdates(prevProps);\n  }\n\n  render() {\n    return (\n      <div>\n        <ToastMessage.Provider ref={node => (window.toastProvider = node)} />\n      </div>\n    );\n  }\n}\n\nexport default TransactionToastUtil;\n","import Web3 from \"web3\";\nimport jQuery from 'jquery';\nimport theme from \"../theme\";\nimport Tos from \"../Tos/Tos\";\nimport themeDark from \"../theme-dark\";\nimport connectors from './connectors';\nimport Web3Provider from 'web3-react';\nimport { Web3Consumer } from 'web3-react';\nimport CookieConsent from \"react-cookie-consent\";\nimport RimbleWeb3 from \"../utilities/RimbleWeb3\";\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport React, { Component, Suspense } from \"react\";\nimport GeneralUtil from \"../utilities/GeneralUtil\";\nimport Header from \"../utilities/components/Header\";\nimport globalConfigs from '../configs/globalConfigs';\nimport ScrollToTop from \"../ScrollToTop/ScrollToTop\";\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport PageNotFound from \"../PageNotFound/PageNotFound\";\nimport Web3Debugger from \"../Web3Debugger/Web3Debugger\";\nimport availableTokens from '../configs/availableTokens';\nimport availableTranches from '../configs/availableTranches';\nimport TransactionToastUtil from \"../utilities/TransactionToastUtil\";\nimport { HashRouter as Router, Switch, Route } from \"react-router-dom\";\nimport { ThemeProvider, Box, Text, Link, Image, Flex } from 'rimble-ui';\n\n// Lazy Loading\nconst Landing = React.lazy(() => import(\"../Landing/Landing\"));\nconst Dashboard = React.lazy(() => import('../Dashboard/Dashboard'));\nconst Governance = React.lazy(() => import('../Governance/Governance'));\n\nclass App extends Component {\n  state = {\n    network:null,\n    cachedData:{},\n    buyToken: null,\n    currentEnv:null,\n    selectedTab: '1',\n    route: \"default\", // or 'onboarding'\n    themeMode:'light',\n    connecting: false,\n    tokenConfig: null,\n    genericError: null,\n    customAddress: null,\n    connectorName: null,\n    selectedToken: null,\n    selectedTheme:theme,\n    currentSection:null,\n    walletProvider: null,\n    availableTokens: null,\n    buyModalOpened: false,\n    selectedStrategy: null,\n    toastMessageProps: null,\n    callbackAfterLogin: null,\n    width: window.innerWidth,\n    availableStrategies: null,\n    height: window.innerHeight,\n    unsubscribeFromHistory: null,\n    enableUnderlyingWithdraw: false,\n  };\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  closeToastMessage = (e) => {\n    if (e){\n      e.preventDefault();\n    }\n    this.setState({\n      toastMessageProps:null\n    });\n  }\n\n  showToastMessage = (props) => {\n    this.setState({\n      toastMessageProps:props\n    });\n  }\n\n  processCustomParam = (props,prevProps) => {\n    // const params = props ? props.match.params : null;\n    // const prevParams = prevProps ? prevProps.match.params : null;\n\n    // Reset params\n    /*\n    if ( prevParams && params && prevParams.customParam !== params.customParam && (!params || !params.customParam || params.customParam === undefined)){\n      this.setState({\n        customAddress:null,\n        enableUnderlyingWithdraw:false\n      });\n    } else if (params && typeof params.customParam === 'string') {\n      // Check if custom address\n      if (params.customParam.toLowerCase().match(/0x[\\w]{40}/) && this.state.customAddress !== params.customParam){\n        this.setCustomAddress(params.customParam);\n      } else if (params && params.customParam === 'withdraw' && !this.state.enableUnderlyingWithdraw){\n        this.setState({\n          customAddress:null,\n          enableUnderlyingWithdraw:true\n        });\n      }\n    }\n    */\n  }\n\n  clearCachedData = async (callback=null,clear_all=false) => {\n\n    const cachedData = {...this.state.cachedData};\n    Object.keys(cachedData).forEach( key => {\n      const data = cachedData[key];\n      if (data.expirationDate !== null){\n        delete cachedData[key];\n      }\n    });\n\n    const storedCachedData = clear_all ? {} : this.functionsUtil.getStoredItem('cachedData');\n    Object.keys(storedCachedData).forEach( key => {\n      const storedData = storedCachedData[key];\n      if (storedData.expirationDate !== null){\n        delete storedCachedData[key];\n      }\n    });\n\n    this.functionsUtil.setLocalStorage('cachedData',storedCachedData,true);\n\n    await this.setState({\n      cachedData\n    },() => {\n      if (typeof callback === 'function'){\n        callback();\n      }\n    });\n    return true;\n  }\n\n  setCachedData = (key,data,TTL=null,useLocalStorage=false) => {\n\n    key = key.toLowerCase();\n    const cachedKeyFound = this.state.cachedData[key];\n    const currentTime = parseInt(Date.now()/1000);\n\n    const update_key = !cachedKeyFound || ( (cachedKeyFound.expirationDate !== null && cachedKeyFound.expirationDate>=currentTime) || JSON.stringify(cachedKeyFound.data) !== JSON.stringify(data));\n\n    let output = false;\n\n    if (update_key){\n      const expirationDate = TTL ? currentTime+(TTL) : null;\n\n      // Save cached data in local storage\n      if (useLocalStorage){\n        let storedCachedData = this.functionsUtil.getStoredItem('cachedData');\n        if (!storedCachedData){\n          storedCachedData = {};\n        }\n\n        // const storedData = typeof data === 'object' ? JSON.stringify(data) : data;\n\n        storedCachedData = {\n          ...storedCachedData,\n          [key]:{\n            data,\n            expirationDate\n          }\n        };\n        // console.log('STORED CACHE - INSERT KEY',key,data);\n        this.functionsUtil.setLocalStorage('cachedData',storedCachedData,true);\n      }\n\n      // Set new cached data state\n      this.setState((prevState) => ({\n        cachedData: {\n          ...prevState.cachedData,\n          [key]:{\n            data,\n            expirationDate\n          }\n        }\n      }),() => {\n        window.cachedData = this.state.cachedData;\n      });\n\n      output = true;\n    }\n\n    return output;\n  }\n\n  setCallbackAfterLogin = (callbackAfterLogin) => {\n    this.setState({\n      callbackAfterLogin\n    });\n  }\n\n  setCustomAddress = (customAddress) => {\n    // Reset customAddress if not well formatted\n    if (customAddress && !customAddress.toLowerCase().match(/0x[\\w]{40}/)){\n      customAddress = null;\n    }\n\n    if (customAddress !== this.state.customAddress){\n      this.setState({\n        customAddress,\n        enableUnderlyingWithdraw:false\n      });\n    }\n  }\n\n  async selectTab(e, tabIndex) {\n    return this.setState(state => ({...state, selectedTab: tabIndex}));\n  }\n\n  async loadAvailableTokens() {\n    const newState = {};\n    const availableStrategies = {};\n    const requiredNetwork = this.state.network && this.state.network.isCorrectNetwork ? (this.state.network.current.id || this.state.network.required.id) : globalConfigs.network.requiredNetwork;\n\n    // console.log('loadAvailableTokens',this.state.network,requiredNetwork,availableTokens);\n\n    // Load available strategies\n    Object.keys(availableTokens[requiredNetwork]).forEach((strategy) => {\n      availableStrategies[strategy] = Object.keys(availableTokens[requiredNetwork][strategy]).reduce( (enabledTokens,token) => {\n        const tokenConfig = availableTokens[requiredNetwork][strategy][token];\n        const envEnabled = !tokenConfig.enabledEnvs || !tokenConfig.enabledEnvs.length || tokenConfig.enabledEnvs.includes(this.state.currentEnv);\n        if (tokenConfig.enabled && envEnabled){\n          enabledTokens[token] = tokenConfig;\n        }\n        return enabledTokens;\n      },{});\n    });\n\n    newState.availableStrategies = availableStrategies;\n\n    // Load strategy\n    const selectedStrategy = this.state.selectedStrategy;\n    if (selectedStrategy && availableStrategies[selectedStrategy]){\n      newState.availableTokens = availableStrategies[selectedStrategy];\n\n      // Load token\n      const selectedToken = this.state.selectedToken;\n      if (selectedToken && newState.availableTokens[selectedToken]){\n        newState.tokenConfig = newState.availableTokens[selectedToken];\n      }\n    }\n\n    // console.log('loadAvailableTokens',newState);\n\n    await this.setState(newState);\n  }\n\n  async setStrategyToken(selectedStrategy,selectedToken){\n\n    const callback = () => {\n      this.loadAvailableTokens();\n    }\n\n    const newState = {\n      tokenConfig:!selectedToken ? null : this.state.tokenConfig,\n      availableTokens:!selectedToken ? null : this.state.availableTokens,\n      selectedToken:!selectedToken ? selectedToken :this.state.selectedToken,\n      selectedStrategy:!selectedStrategy ? selectedStrategy :this.state.selectedStrategy,\n    };\n\n    if (selectedStrategy && this.state.availableStrategies && selectedStrategy !== this.state.selectedStrategy && Object.keys(this.state.availableStrategies).includes(selectedStrategy.toLowerCase())){\n      newState.selectedStrategy = selectedStrategy.toLowerCase();\n    }\n\n    if (selectedToken && selectedToken !== this.state.selectedToken) {\n      if ( this.state.availableTokens && Object.keys(this.state.availableTokens).includes(selectedToken.toUpperCase()) ){\n        newState.selectedToken = selectedToken.toUpperCase();\n        newState.tokenConfig = this.state.availableTokens[selectedToken];\n      } else if (this.state.availableStrategies && Object.keys(this.state.availableStrategies[selectedStrategy]).includes(selectedToken.toUpperCase())) {\n        newState.selectedToken = selectedToken.toUpperCase();\n        newState.tokenConfig = this.state.availableStrategies[selectedStrategy][newState.selectedToken];\n        newState.availableTokens = this.state.availableStrategies[selectedStrategy];\n      }\n    }\n\n    // console.log('setStrategyToken',newState);\n\n    await this.setState(newState,callback);\n  }\n\n  async setStrategy(selectedStrategy) {\n\n    const callback = () => {\n      this.loadAvailableTokens();\n    }\n\n    if (selectedStrategy && selectedStrategy !== this.state.selectedStrategy && Object.keys(this.state.availableStrategies).includes(selectedStrategy.toLowerCase())){\n      selectedStrategy = selectedStrategy.toLowerCase();\n      await this.setState({\n        selectedStrategy\n      },callback);\n    } else if (!selectedStrategy) {\n      await this.setState({\n        selectedStrategy\n      },callback);\n    }\n  }\n\n  async setToken(selectedToken) {\n\n    const callback = () => {\n      this.loadAvailableTokens();\n    }\n\n    if (selectedToken && selectedToken !== this.state.selectedToken && Object.keys(this.state.availableTokens).includes(selectedToken.toUpperCase())){\n      selectedToken = selectedToken.toUpperCase();\n      const newState = {\n        selectedToken\n      };\n      newState.tokenConfig = this.state.availableTokens[selectedToken];\n      await this.setState(newState,callback);\n    } else if(!selectedToken) {\n      await this.setState({\n        selectedToken,\n        tokenConfig:null\n      },callback);\n    }\n  }\n\n  async componentWillMount() {\n\n    this.loadUtils();\n\n    window.BNify = this.functionsUtil.BNify;\n\n    // Suppress warnings and errors in production\n    const isProduction = window.location.origin.toLowerCase().includes(globalConfigs.baseURL.toLowerCase());\n    if (isProduction){\n      window.console.error = () => {};\n      window.console.warn = () => {};\n    }\n\n    window.jQuery = jQuery;\n\n    if (window.localStorage){\n      this.functionsUtil.removeStoredItem('context');\n\n      // Clear all localStorage data except walletProvider and connectorName if version has changed\n      const version = this.functionsUtil.getStoredItem('version',false);\n      if (version !== globalConfigs.version){\n        // Clear cached data\n        this.clearCachedData(()=>{\n          // Reset Localstorage\n          this.functionsUtil.clearStoredData(['walletProvider','connectorName','themeMode']);\n          this.functionsUtil.setLocalStorage('version',globalConfigs.version);\n        },true);\n      }\n    }\n\n    const themeMode = this.functionsUtil.getStoredItem('themeMode',false);\n    if (themeMode){\n      this.setThemeMode(themeMode);\n    }\n\n    window.closeIframe = (w) => {\n      const iFrames = document.getElementsByTagName('iframe');\n      for (let i=0;i<iFrames.length;i++){\n        const iframe = iFrames[i];\n        if (iframe.contentWindow === w){\n          window.jQuery(iframe).parents('.iframe-container')[0].remove();\n        }\n      }\n    }\n\n    window.addEventListener('resize', this.handleWindowSizeChange);\n\n    this.loadCustomAddress();\n    this.loadCurrentEnvironment();\n  }\n\n  loadCurrentEnvironment(){\n    const isLive = this.functionsUtil.checkUrlOrigin();\n    const currentEnv = isLive ? 'live' : 'beta';\n    this.setState({\n      currentEnv\n    },() => {\n      this.loadAvailableTokens();\n    })\n  }\n\n  loadCustomAddress(){\n    if (!this.state.customAddress){\n      const walletProvider = this.functionsUtil.getWalletProvider('Infura');\n      if (walletProvider === 'custom'){\n        const customAddress = this.functionsUtil.getCustomAddress();\n        if (customAddress && customAddress !== this.state.customAddress){\n          this.setState({\n            customAddress\n          });\n        }\n      }\n    }\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('resize', this.handleWindowSizeChange);\n  }\n\n  componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const currentSectionChanged = prevState.currentSection !== this.state.currentSection;\n    if (currentSectionChanged){\n      if (this.state.currentSection === 'landing'){\n        this.setThemeMode('light',false);\n      } else {\n        // Get stored Mode\n        const themeMode = this.functionsUtil.getStoredItem('themeMode',false) || this.functionsUtil.getGlobalConfig(['dashboard','theme','mode']);\n        this.setThemeMode(themeMode);\n      }\n    }\n\n    const tokenChanged = prevState.selectedToken !== this.state.selectedToken;\n    const strategyChanged = prevState.selectedStrategy !== this.state.selectedStrategy;\n    const networkChanged = JSON.stringify(prevState.network) !== JSON.stringify(this.state.network);\n\n    if (tokenChanged || strategyChanged || networkChanged){\n      this.loadAvailableTokens();\n    }\n  }\n\n  componentDidMount() {\n\n    // Close iFrame\n    // if (window.self !== window.top && window.top.location.href.indexOf(globalConfigs.baseURL) !== -1 && typeof window.parent.closeIframe === 'function' ){\n    //   window.parent.closeIframe(window.self);\n    // }\n\n    window.showToastMessage = this.showToastMessage;\n    window.closeToastMessage = this.closeToastMessage;\n\n    if (localStorage){\n      let connectorName = localStorage.getItem('connectorName') ? localStorage.getItem('connectorName') : 'Infura';\n      let walletProvider = localStorage.getItem('walletProvider') ? localStorage.getItem('walletProvider') : 'Infura';\n\n      // Check Ledger Live\n      const isLedgerLive = window.location.href.includes(\"ledger-live=1\");\n      if (isLedgerLive){\n        connectorName = 'ledgerLive';\n        walletProvider = 'ledger';\n      }\n      // console.log('isLedgerLive',isLedgerLive,connectorName,walletProvider);\n\n      this.setConnector(connectorName,walletProvider);\n    }\n  }\n\n  handleWindowSizeChange = () => {\n    const newState = {\n      width:this.state.width,\n      height:this.state.height,\n    };\n\n    const widthChanged = window.innerWidth !== this.state.width;\n    const heightChanged = window.innerHeight !== this.state.height;\n\n    if (widthChanged || heightChanged){\n      if (widthChanged){\n        newState.width = window.innerWidth;\n      }\n      if (heightChanged){\n        newState.height = window.innerHeight;\n      }\n      return this.setState(newState);\n    }\n\n    return null;\n  };\n\n  // Optional parameters to pass into RimbleWeb3\n  config = globalConfigs.network;\n\n  showRoute(route) {\n    return this.setState({ route });\n  }\n\n  closeBuyModal(e) {\n    if (e){\n      e.preventDefault();\n    }\n    return this.setState({\n      buyToken:null,\n      buyModalOpened:false\n    });\n  }\n\n  openBuyModal(e,buyToken) {\n    e.preventDefault();\n\n    return this.setState({\n      buyToken,\n      buyModalOpened:true\n    });\n  }\n\n  async logout(){\n    // Reset Custom Address\n    this.setState({\n      customAddress:null\n    });\n    // Clear cached data\n    this.clearCachedData(()=>{\n      // Reset Localstorage\n      this.functionsUtil.clearStoredData(['version','themeMode','lastLogin','cachedData']);\n    });\n  }\n\n  setNetwork(network){\n    this.setState({\n      network\n    });\n  }\n\n  setConnector(connectorName,walletProvider){\n\n    let connectorInfo = globalConfigs.connectors[connectorName.toLowerCase()];\n    if (!connectorInfo && walletProvider){\n      connectorInfo = globalConfigs.connectors[walletProvider.toLowerCase()];\n    }\n\n    // console.log('setConnector - BEFORE',connectorInfo,connectorName,walletProvider);\n\n    if ( (connectorInfo && !connectorInfo.enabled) || (connectorName !== 'Injected' && !Object.keys(globalConfigs.connectors).includes(connectorName.toLowerCase())) || (walletProvider && !Object.keys(globalConfigs.connectors).includes(walletProvider.toLowerCase()))) {\n      connectorName = 'Infura';\n      walletProvider = 'Infura';\n    } else if ( connectorName === 'Injected' ){\n      const hasMetamask = GeneralUtil.hasMetaMask();\n      const hasDapper = GeneralUtil.hasDapper()\n\n      // Check if injected connector is valid\n      switch (walletProvider){\n        case 'Metamask':\n          if (!hasMetamask && hasDapper){\n            walletProvider = 'Dapper';\n          }\n        break;\n        case 'Dapper':\n          if (!hasDapper && hasMetamask){\n            walletProvider = 'Metamask';\n          }\n        break;\n        default:\n        break;\n      }\n    }\n\n    // console.log('setConnector - AFTER',connectorName,walletProvider);\n\n    this.functionsUtil.setLocalStorage('connectorName', connectorName);\n    this.functionsUtil.setLocalStorage('walletProvider', walletProvider);\n\n    return this.setState({\n      connectorName,\n      walletProvider\n    },() => {\n      this.loadCustomAddress();\n    });\n  }\n\n  setThemeMode(themeMode,store=true){\n    let selectedTheme = null;\n\n    // Check Dark Mode Enabled\n    const darkModeEnabled = this.functionsUtil.getGlobalConfig(['dashboard','theme','darkModeEnabled']);\n    if (themeMode === 'dark' && !darkModeEnabled){\n      themeMode = 'light';\n    }\n\n    switch (themeMode){\n      default:\n      case 'light':\n        selectedTheme = theme;\n      break;\n      case 'dark':\n        selectedTheme = themeDark;\n      break;\n    }\n\n    if (store){\n      this.functionsUtil.setLocalStorage('themeMode',themeMode);\n    }\n\n    this.setState({\n      themeMode,\n      selectedTheme\n    });\n  }\n\n  setCurrentSection(currentSection){\n    this.setState({\n      currentSection\n    });\n  }\n\n  render() {\n    const isMobile = this.state.width <= 768;\n    const governanceEnabled = this.functionsUtil.getGlobalConfig(['governance','enabled']);\n\n    // console.log(this.state.selectedToken,this.state.tokenConfig);\n\n    const SuspenseLoader = (\n      <Flex\n        width={1}\n        minHeight={'100vh'}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n        backgroundColor={'selectBg'}\n      >\n        <FlexLoader\n          textProps={{\n            textSize:4,\n            fontWeight:2\n          }}\n          loaderProps={{\n            mb:3,\n            size:'80px',\n            color:'primary'\n          }}\n          flexProps={{\n            my:3,\n            flexDirection:'column'\n          }}\n          text={''}\n        />\n      </Flex>\n    );\n\n    return (\n      <Router>\n        <ScrollToTop />\n        <ThemeProvider\n          theme={this.state.selectedTheme}\n        >\n          <Web3Provider\n            web3Api={Web3}\n            connectors={connectors}\n            libraryName={'web3.js'}\n          >\n            <Web3Consumer>\n              {context => {\n                return (\n                  <RimbleWeb3\n                    context={context}\n                    isMobile={isMobile}\n                    config={this.config}\n                    connectors={connectors}\n                    theme={this.state.selectedTheme}\n                    cachedData={this.state.cachedData}\n                    availableTranches={availableTranches}\n                    tokenConfig={this.state.tokenConfig}\n                    setNetwork={this.setNetwork.bind(this)}\n                    customAddress={this.state.customAddress}\n                    selectedToken={this.state.selectedToken}\n                    connectorName={this.state.connectorName}\n                    walletProvider={this.state.walletProvider}\n                    setConnector={this.setConnector.bind(this)}\n                    availableTokens={this.state.availableTokens}\n                    setCachedData={this.setCachedData.bind(this)}\n                    clearCachedData={this.clearCachedData.bind(this)}\n                    callbackAfterLogin={this.state.callbackAfterLogin}\n                    availableStrategies={this.state.availableStrategies}\n                    setCallbackAfterLogin={this.setCallbackAfterLogin.bind(this)}\n                    enableUnderlyingWithdraw={this.state.enableUnderlyingWithdraw}\n                  >\n                    <RimbleWeb3.Consumer>\n                      {({\n                        web3,\n                        modals,\n                        network,\n                        account,\n                        initWeb3,\n                        simpleID,\n                        biconomy,\n                        contracts,\n                        transaction,\n                        initAccount,\n                        initContract,\n                        transactions,\n                        initSimpleID,\n                        permitClient,\n                        tokenDecimals,\n                        accountBalance,\n                        needsPreflight,\n                        validateAccount,\n                        rejectValidation,\n                        accountValidated,\n                        getTokenDecimals,\n                        getAccountBalance,\n                        accountBalanceLow,\n                        accountInizialized,\n                        accountBalanceToken,\n                        userRejectedConnect,\n                        initializeContracts,\n                        erc20ForwarderClient,\n                        rejectAccountConnect,\n                        contractsInitialized,\n                        userRejectedValidation,\n                        accountValidationPending,\n                        connectAndValidateAccount,\n                        contractMethodSendWrapper\n                      }) => {\n                        return (\n                        <Box>\n                          <Switch>\n                            <Route\n                              path=\"/dashboard/:section?/:param1?/:param2?/:param3?\"\n                              render={\n                                (props) => \n                                  <Suspense\n                                    fallback={SuspenseLoader}\n                                  >\n                                    <Dashboard\n                                      {...props}\n                                      web3={web3}\n                                      modals={modals}\n                                      network={network}\n                                      context={context}\n                                      account={account}\n                                      isDashboard={true}\n                                      initWeb3={initWeb3}\n                                      biconomy={biconomy}\n                                      isMobile={isMobile}\n                                      simpleID={simpleID}\n                                      contracts={contracts}\n                                      initAccount={initAccount}\n                                      permitClient={permitClient}\n                                      initSimpleID={initSimpleID}\n                                      initContract={initContract}\n                                      transactions={transactions}\n                                      buyToken={this.state.buyToken}\n                                      logout={this.logout.bind(this)}\n                                      accountBalance={accountBalance}\n                                      themeMode={this.state.themeMode}\n                                      theme={this.state.selectedTheme}\n                                      validateAccount={validateAccount}\n                                      connecting={this.state.connecting}\n                                      cachedData={this.state.cachedData}\n                                      setToken={this.setToken.bind(this)}\n                                      accountValidated={accountValidated}\n                                      getTokenDecimals={getTokenDecimals}\n                                      rejectValidation={rejectValidation}\n                                      tokenConfig={this.state.tokenConfig}\n                                      availableTranches={availableTranches}\n                                      getAccountBalance={getAccountBalance}\n                                      accountBalanceLow={accountBalanceLow}\n                                      accountInizialized={accountInizialized}\n                                      selectedToken={this.state.selectedToken}\n                                      connectorName={this.state.connectorName}\n                                      setStrategy={this.setStrategy.bind(this)}\n                                      userRejectedConnect={userRejectedConnect}\n                                      accountBalanceToken={accountBalanceToken}\n                                      initializeContracts={initializeContracts}\n                                      walletProvider={this.state.walletProvider}\n                                      buyModalOpened={this.state.buyModalOpened}\n                                      erc20ForwarderClient={erc20ForwarderClient}\n                                      contractsInitialized={contractsInitialized}\n                                      openBuyModal={this.openBuyModal.bind(this)}\n                                      rejectAccountConnect={rejectAccountConnect}\n                                      handleMenuClick={this.selectTab.bind(this)}\n                                      setConnector={this.setConnector.bind(this)}\n                                      setThemeMode={this.setThemeMode.bind(this)}\n                                      availableTokens={this.state.availableTokens}\n                                      closeBuyModal={this.closeBuyModal.bind(this)}\n                                      setCachedData={this.setCachedData.bind(this)}\n                                      selectedStrategy={this.state.selectedStrategy}\n                                      userRejectedValidation={userRejectedValidation}\n                                      clearCachedData={this.clearCachedData.bind(this)}\n                                      setStrategyToken={this.setStrategyToken.bind(this)}\n                                      accountValidationPending={accountValidationPending}\n                                      availableStrategies={this.state.availableStrategies}\n                                      setCurrentSection={this.setCurrentSection.bind(this)}\n                                      connectAndValidateAccount={connectAndValidateAccount}\n                                      contractMethodSendWrapper={contractMethodSendWrapper}\n                                      setCallbackAfterLogin={this.setCallbackAfterLogin.bind(this)}\n                                    />\n                                  </Suspense>\n\n                              }\n                            >\n                            </Route>\n                            {\n                              governanceEnabled && \n                                <Route\n                                  path=\"/governance/:section?/:item_id?\"\n                                  render={\n                                    (props) =>\n                                      <Suspense\n                                        fallback={SuspenseLoader}\n                                      >\n                                        <Governance\n                                          {...props}\n                                          web3={web3}\n                                          modals={modals}\n                                          network={network}\n                                          context={context}\n                                          account={account}\n                                          initWeb3={initWeb3}\n                                          biconomy={biconomy}\n                                          isMobile={isMobile}\n                                          simpleID={simpleID}\n                                          isGovernance={true}\n                                          contracts={contracts}\n                                          initAccount={initAccount}\n                                          initSimpleID={initSimpleID}\n                                          initContract={initContract}\n                                          transactions={transactions}\n                                          buyToken={this.state.buyToken}\n                                          logout={this.logout.bind(this)}\n                                          accountBalance={accountBalance}\n                                          themeMode={this.state.themeMode}\n                                          theme={this.state.selectedTheme}\n                                          validateAccount={validateAccount}\n                                          connecting={this.state.connecting}\n                                          cachedData={this.state.cachedData}\n                                          setToken={this.setToken.bind(this)}\n                                          accountValidated={accountValidated}\n                                          getTokenDecimals={getTokenDecimals}\n                                          rejectValidation={rejectValidation}\n                                          tokenConfig={this.state.tokenConfig}\n                                          getAccountBalance={getAccountBalance}\n                                          accountBalanceLow={accountBalanceLow}\n                                          accountInizialized={accountInizialized}\n                                          selectedToken={this.state.selectedToken}\n                                          connectorName={this.state.connectorName}\n                                          setStrategy={this.setStrategy.bind(this)}\n                                          userRejectedConnect={userRejectedConnect}\n                                          accountBalanceToken={accountBalanceToken}\n                                          initializeContracts={initializeContracts}\n                                          walletProvider={this.state.walletProvider}\n                                          buyModalOpened={this.state.buyModalOpened}\n                                          contractsInitialized={contractsInitialized}\n                                          openBuyModal={this.openBuyModal.bind(this)}\n                                          rejectAccountConnect={rejectAccountConnect}\n                                          handleMenuClick={this.selectTab.bind(this)}\n                                          setConnector={this.setConnector.bind(this)}\n                                          setThemeMode={this.setThemeMode.bind(this)}\n                                          availableTokens={this.state.availableTokens}\n                                          closeBuyModal={this.closeBuyModal.bind(this)}\n                                          setCachedData={this.setCachedData.bind(this)}\n                                          selectedStrategy={this.state.selectedStrategy}\n                                          userRejectedValidation={userRejectedValidation}\n                                          clearCachedData={this.clearCachedData.bind(this)}\n                                          setStrategyToken={this.setStrategyToken.bind(this)}\n                                          accountValidationPending={accountValidationPending}\n                                          availableStrategies={this.state.availableStrategies}\n                                          setCurrentSection={this.setCurrentSection.bind(this)}\n                                          connectAndValidateAccount={connectAndValidateAccount}\n                                          contractMethodSendWrapper={contractMethodSendWrapper}\n                                          setCallbackAfterLogin={this.setCallbackAfterLogin.bind(this)}\n                                        />\n                                      </Suspense>\n                                  }\n                                >\n                                </Route>\n                            }\n                            <Route>\n                              <Header\n                                modals={modals}\n                                network={network}\n                                context={context}\n                                account={account}\n                                initWeb3={initWeb3}\n                                isMobile={isMobile}\n                                contracts={contracts}\n                                initAccount={initAccount}\n                                initContract={initContract}\n                                buyToken={this.state.buyToken}\n                                accountBalance={accountBalance}\n                                logout={this.logout.bind(this)}\n                                validateAccount={validateAccount}\n                                connecting={this.state.connecting}\n                                accountValidated={accountValidated}\n                                getTokenDecimals={getTokenDecimals}\n                                rejectValidation={rejectValidation}\n                                tokenConfig={this.state.tokenConfig}\n                                getAccountBalance={getAccountBalance}\n                                accountBalanceLow={accountBalanceLow}\n                                selectedToken={this.state.selectedToken}\n                                connectorName={this.state.connectorName}\n                                userRejectedConnect={userRejectedConnect}\n                                accountBalanceToken={accountBalanceToken}\n                                walletProvider={this.state.walletProvider}\n                                buyModalOpened={this.state.buyModalOpened}\n                                contractsInitialized={contractsInitialized}\n                                openBuyModal={this.openBuyModal.bind(this)}\n                                rejectAccountConnect={rejectAccountConnect}\n                                handleMenuClick={this.selectTab.bind(this)}\n                                setConnector={this.setConnector.bind(this)}\n                                availableTokens={this.state.availableTokens}\n                                closeBuyModal={this.closeBuyModal.bind(this)}\n                                userRejectedValidation={userRejectedValidation}\n                                accountValidationPending={accountValidationPending}\n                                connectAndValidateAccount={connectAndValidateAccount}\n                                setToken={ e => { this.setToken(e) } }\n                              />\n\n                              {this.state.route === \"onboarding\" ? (\n                                <Web3Debugger\n                                  web3={web3}\n                                  account={account}\n                                  accountBalance={accountBalance}\n                                  accountBalanceToken={accountBalanceToken}\n                                  accountBalanceLow={accountBalanceLow}\n                                  initAccount={initAccount}\n                                  rejectAccountConnect={rejectAccountConnect}\n                                  userRejectedConnect={userRejectedConnect}\n                                  accountValidated={accountValidated}\n                                  accountValidationPending={accountValidationPending}\n                                  rejectValidation={rejectValidation}\n                                  userRejectedValidation={userRejectedValidation}\n                                  validateAccount={validateAccount}\n                                  connectAndValidateAccount={connectAndValidateAccount}\n                                  modals={modals}\n                                  network={network}\n                                  transaction={transaction}\n                                />\n                              ) : null}\n\n                              {this.state.route === \"default\" ? (\n                                <Switch>\n                                  <Route exact path=\"/\"\n                                    render={ (props) =>\n                                      <Suspense\n                                        fallback={SuspenseLoader}\n                                      >\n                                        <Landing\n                                          {...props}\n                                          web3={web3}\n                                          network={network}\n                                          account={account}\n                                          isMobile={isMobile}\n                                          simpleID={simpleID}\n                                          contracts={contracts}\n                                          initContract={initContract}\n                                          innerWidth={this.state.width}\n                                          logout={this.logout.bind(this)}\n                                          innerHeight={this.state.height}\n                                          accountBalance={accountBalance}\n                                          themeMode={this.state.themeMode}\n                                          theme={this.state.selectedTheme}\n                                          cachedData={this.state.cachedData}\n                                          connecting={this.state.connecting}\n                                          selectedTab={this.state.selectedTab}\n                                          tokenConfig={this.state.tokenConfig}\n                                          accountBalanceLow={accountBalanceLow}\n                                          getAccountBalance={getAccountBalance}\n                                          availableTranches={availableTranches}\n                                          customAddress={this.state.customAddress}\n                                          selectedToken={this.state.selectedToken}\n                                          accountBalanceToken={accountBalanceToken}\n                                          closeToastMessage={this.closeToastMessage}\n                                          contractsInitialized={contractsInitialized}\n                                          openBuyModal={this.openBuyModal.bind(this)}\n                                          setThemeMode={this.setThemeMode.bind(this)}\n                                          processCustomParam={this.processCustomParam}\n                                          availableTokens={this.state.availableTokens}\n                                          setCachedData={this.setCachedData.bind(this)}\n                                          updateSelectedTab={this.selectTab.bind(this)}\n                                          toastMessageProps={this.state.toastMessageProps}\n                                          clearCachedData={this.clearCachedData.bind(this)}\n                                          availableStrategies={this.state.availableStrategies}\n                                          setCurrentSection={this.setCurrentSection.bind(this)}\n                                          connectAndValidateAccount={connectAndValidateAccount}\n                                          setToken={ e => { this.setToken(e) } }\n                                        />\n                                        <CookieConsent\n                                          expires={365}\n                                          buttonText={\"Ok\"}\n                                          location={\"bottom\"}\n                                          acceptOnScroll={true}\n                                          cookieName={\"cookieAccepted\"}\n                                          acceptOnScrollPercentage={5}\n                                          style={{background: \"rgba(255,255,255,0.95)\",zIndex:'9999999'}}\n                                          buttonStyle={{display: isMobile ? \"block\" : \"none\", backgroundColor:'#0036ff', color: 'white', marginTop: isMobile ? \"0px\" : \"15px\"}}\n                                        >\n                                          <Flex flexDirection={'row'} alignItems={['flex-start','center']} justifyContent={'flex-start'} maxHeight={['150px','initial']} style={ isMobile ? {overflowY:'scroll'} : null }>\n                                            <Image display={['none','block']} src={'images/cookie.svg'} width={'42px'} height={'42px'} />\n                                            <Text pl={[0,3]} color={'dark-gray'} fontSize={1} textAlign={'justify'}>\n                                              This website or its third-party tools process personal data (e.g. browsing data or IP addresses) and use cookies or other identifiers, which are necessary for its functioning and required to achieve the purposes illustrated in the cookie policy. To learn more, please refer to the <Link href={'https://www.iubenda.com/privacy-policy/61211749/cookie-policy'} target={'_blank'} rel=\"nofollow noopener noreferrer\" hoverColor={'blue'}>cookie policy</Link>.\n                                              You accept the use of cookies or other identifiers by closing or dismissing this notice, by scrolling this page, by clicking a link or button or by continuing to browse otherwise.\n                                            </Text>\n                                          </Flex>\n                                        </CookieConsent>\n                                      </Suspense>\n                                    }\n                                  ></Route>\n                                  <Route exact path=\"/terms-of-service\">\n                                    <Tos />\n                                  </Route>\n                                  <Route>\n                                    <PageNotFound />\n                                  </Route>\n                                </Switch>\n                              ) : null}\n                            </Route>\n                          </Switch>\n                          <TransactionToastUtil\n                            transactions={transactions}\n                            themeMode={this.state.themeMode}\n                          />\n                        </Box>\n                      )}}\n                    </RimbleWeb3.Consumer>\n                  </RimbleWeb3>\n                );\n              }}\n            </Web3Consumer>\n          </Web3Provider>\n        </ThemeProvider>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport * as Sentry from '@sentry/browser';\nimport App from './App/App';\nimport * as serviceWorker from './serviceWorker';\n\nif (window.location.hostname !== 'localhost') {\n  Sentry.init({\n    dsn: \"https://56f5c0bce273442390d7f25698fefe53@sentry.io/1547544\",\n    beforeSend(event, hint) {\n      let output = event;\n      const error = hint.originalException;\n      if (error && error.message){\n        if (error.message.match(/Failed to subscribe to new newBlockHeaders/i)){\n          output = false;\n        }\n      }\n      return output;\n    }\n  });\n}\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();","import React, { Component } from 'react';\nimport { Flex, Icon, Text } from \"rimble-ui\";\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass ConnectBox extends Component {\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  render() {\n    return (\n      <DashboardCard\n        cardProps={{\n          p:3,\n          mt:3,\n          ...this.props.cardProps\n        }}\n      >\n        <Flex\n          alignItems={'center'}\n          flexDirection={'column'}\n        >\n          <Icon\n            size={'1.8em'}\n            name={'Input'}\n            color={'cellText'}\n          />\n          <Text\n            mt={2}\n            fontSize={2}\n            color={'cellText'}\n            textAlign={'center'}\n          >\n            Please connect with your wallet interact with Idle.\n          </Text>\n          <RoundButton\n            buttonProps={{\n              mt:2,\n              width:[1,1/2]\n            }}\n            handleClick={this.props.connectAndValidateAccount}\n          >\n            Connect\n          </RoundButton>\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default ConnectBox;\n","import theme from '../theme';\nimport React, { Component } from 'react';\nimport styles from './TransactionListFilters.module.scss';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport TableCellHeader from '../TableCellHeader/TableCellHeader';\nimport { Flex, Text, Icon, Radio, Button, Link } from \"rimble-ui\";\n\nclass TransactionListFilters extends Component {\n\n  state = {\n    maxWidth:0.4,\n    minWidth:0.18,\n    maxHeight:425,\n    isOpened:false,\n    activeFilters:{\n      status:null,\n      assets:null,\n      actions:null\n    }\n  }\n\n  setFilter = (filter,value) => {\n    this.setState((prevState) => ({\n      activeFilters:{\n        ...prevState.activeFilters,\n        [filter]:value\n      }\n    }));\n  }\n\n  applyFilters = (toggle=true) => {\n    if (typeof this.props.applyFilters === 'function'){\n      this.props.applyFilters(this.state.activeFilters);\n    }\n    if (toggle){\n      this.toggleOpened();\n    }\n  }\n\n  resetFilter = (filter) => {\n    this.setState((prevState) => ({\n      activeFilters:{\n        ...prevState.activeFilters,\n        [filter]:null\n      }\n    }),() => {\n      this.applyFilters(false);\n    });\n  }\n\n  resetFilters = (toggle=true) => {\n    this.setState({\n      activeFilters:{\n        status:null,\n        assets:null,\n        actions:null\n      }\n    },() => {\n      if (typeof this.props.resetFilters === 'function'){\n        this.props.resetFilters();\n      }\n      if (toggle){\n        this.toggleOpened();\n      }\n    })\n  }\n\n  toggleOpened = () => {\n    this.setState((prevState) => ({\n      isOpened: !prevState.isOpened\n    }));\n  }\n\n  render() {\n    return (\n      <Flex\n        mb={3}\n        top={0}\n        width={1}\n        zIndex={1}\n        flexDirection={'column'}\n        alignItems={'flex-start'}\n        justifyContent={'center'}\n        position={['relative','absolute']}\n      >\n        <DashboardCard\n          cardProps={{\n            py:2,\n            px:3,\n            width:[1, this.state.isOpened ? this.state.maxWidth : this.state.minWidth ],\n            style:{\n              transition:'width 0.3s ease-in-out'\n            }\n          }}\n          isInteractive={ !this.state.isOpened }\n          handleClick={ !this.state.isOpened ? this.toggleOpened : null }\n        >\n          <Flex\n            width={1}\n            style={{\n              cursor:'pointer'\n            }}\n            alignItems={'center'}\n            flexDirection={'row'}\n            justifyContent={'space-between'}\n            onClick={ this.state.isOpened ? this.toggleOpened : null }\n          >\n            <Text\n              fontSize={2}\n              fontWeight={500}\n              color={'copyColor'}\n            >\n              Filters\n            </Text>\n            <Icon\n              color={'copyColor'}\n              size={ this.props.isMobile ? '1.3em' : '1.5em'}\n              name={ this.state.isOpened ? 'Close' : 'Tune' }\n            />\n          </Flex>\n          <Flex\n            flexDirection={'column'}\n            style={{\n              overflow:'hidden',\n              transition:'max-height 0.3s ease-in-out',\n              maxHeight:this.state.isOpened ? this.state.maxHeight : 0\n            }}\n          >\n            <Flex\n              mt={2}\n              py={2}\n              width={1}\n              flexDirection={'row'}\n              borderTop={`1px solid ${theme.colors.divider}`}\n            >\n              {\n                Object.keys(this.props.filters).map((filterCategory) => {\n                  const filterValues = this.props.filters[filterCategory];\n                  return (\n                    <Flex\n                      flexDirection={'column'}\n                      key={`filter_${filterCategory}`}\n                      style={{\n                        flexBasis:'0',\n                        flex:'1 1 0px'\n                      }}\n                    >\n                      <TableCellHeader\n                        pb={2}\n                        fontWeight={3}\n                        fontSize={[0,2]}\n                        color={'cellText'}\n                      >\n                        {filterCategory.toUpperCase()}\n                      </TableCellHeader>\n                      {\n                        Object.keys(filterValues).map((filterValue) => {\n                          const filterLabel = filterValues[filterValue];\n                          const isChecked = this.state.activeFilters[filterCategory]===filterValue;\n                          return (\n                            <Radio\n                              my={2}\n                              fontSize={[0,2]}\n                              label={filterLabel}\n                              checked={isChecked}\n                              className={styles.radioBtn}\n                              key={`filter_${filterCategory}_${filterValue}`}\n                              onChange={ e => this.setFilter(filterCategory,filterValue) }\n                            />\n                          );\n                        })\n                      }\n                    </Flex>\n                  );\n                })\n              }\n            </Flex>\n            <Flex\n              flexDirection={'row'}\n            >\n              <Button.Text\n                fontWeight={4}\n                fontSize={[2,3]}\n                mainColor={'copyColor'}\n                onClick={this.applyFilters}\n              >\n                Apply filters\n              </Button.Text>\n              <Button.Text\n                ml={3}\n                fontWeight={4}\n                fontSize={[2,3]}\n                mainColor={'copyColor'}\n                onClick={this.resetFilters}\n              >\n                Reset\n              </Button.Text>\n            </Flex>\n          </Flex>\n        </DashboardCard>\n        {\n          !this.state.isOpened && this.props.activeFilters && Object.values(this.props.activeFilters).filter( v => (v !== null) ).length>0 &&\n            <Flex\n              mt={3}\n              width={1}\n              flexDirection={['column','row']}\n              alignItems={['flex-start','flex-end']}\n              justifyContent={['flex-end','flex-start']}\n            >\n              {\n                Object.keys(this.props.activeFilters).map((filterName) => {\n                  const filterValue = this.props.activeFilters[filterName];\n                  if (filterValue !== null){\n                    const filterLabel = this.props.filters[filterName][filterValue];\n                    return (\n                      <DashboardCard\n                        cardProps={{\n                          py:2,\n                          px:3,\n                          mb:[2,0],\n                          mr:[0,3],\n                          width:[1,this.state.minWidth]\n                        }}\n                        isInteractive={true}\n                        key={`filter_${filterName}`}\n                      >\n                        <Flex\n                          width={1}\n                          style={{\n                            cursor:'pointer'\n                          }}\n                          alignItems={'center'}\n                          flexDirection={'row'}\n                          justifyContent={'space-between'}\n                          onClick={e => this.resetFilter(filterName)}\n                        >\n                          <Text\n                            fontSize={2}\n                            fontWeight={500}\n                            color={'cellText'}\n                            style={{\n                              textTransform:'capitalize'\n                            }}\n                          >\n                            {filterLabel}\n                          </Text>\n                          <Icon\n                            name={'Close'}\n                            color={'cellText'}\n                            size={ this.props.isMobile ? '1.3em' : '1.5em'}\n                          />\n                        </Flex>\n                      </DashboardCard>\n                    );\n                  }\n                  return null;\n                })\n              }\n              <Link\n                mt={[2,0]}\n                fontSize={[3,2]}\n                fontWeight={[3]}\n                color={'dark-gray'}\n                hoverColor={'copyColor'}\n                textAlign={['center','left']}\n                onClick={ e => this.resetFilters(false) }\n              >\n                Clear all filters\n              </Link>\n            </Flex>\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default TransactionListFilters;","import React, { Component } from 'react';\n// import style from './TransactionsList.module.scss';\nimport TableRow from '../TableRow/TableRow';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport TableHeader from '../TableHeader/TableHeader';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport { Flex, Heading, Text, Link, Icon } from \"rimble-ui\";\nimport TransactionField from '../TransactionField/TransactionField';\nimport TransactionListFilters from '../TransactionListFilters/TransactionListFilters';\n\nclass TransactionsList extends Component {\n\n  state = {\n    page:1,\n    prevTxs:{},\n    txsPerPage:5,\n    loading:false,\n    totalTxs:null,\n    totalPages:null,\n    activeFilters:{\n      status:null,\n      assets:null,\n      actions:null,\n    },\n    filters:{\n      actions:{\n        deposit:'Deposit',\n        redeem:'Redeem',\n        send:'Send',\n        receive:'Receive',\n        migrate:'Migrate',\n        swap:'Swap-In',\n        swapout:'Swap-Out',\n        withdraw:'Withdraw',\n        // curvein:'CurveIn',\n        // curveout:'CurveOut',\n        // curvezapin:'CurveZapIn',\n        // curvezapout:'CurveZapOut',\n      },\n      status:{\n        completed:'Completed',\n        pending:'Pending',\n        failed:'Failed'\n      },\n      assets:{}\n    },\n    renderedTxs:null,\n    processedTxs:null,\n    lastBlockNumber:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  prevPage(e){\n    if (e){\n      e.preventDefault();\n    }\n    const page = Math.max(1,this.state.page-1);\n    this.setState({\n      page\n    });\n  }\n\n  nextPage(e){\n    if (e){\n      e.preventDefault();\n    }\n    const page = Math.min(this.state.totalPages,this.state.page+1);this.processTxs(page);\n    this.setState({\n      page\n    });\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n    this.loadTxs();\n  }\n\n  applyFilters = activeFilters => {\n    this.setState({\n      activeFilters\n    },() => {\n      this.processTxs();\n    });\n  }\n\n  resetFilters = () => {\n    this.setState({\n      activeFilters:{\n        status:null,\n        assets:null,\n        actions:null,\n      }\n    },() => {\n      this.processTxs();\n    });\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n    const transactionsChanged = JSON.stringify(prevProps.transactions) !== JSON.stringify(this.props.transactions);\n    const tokenChanged = JSON.stringify(prevProps.enabledTokens) !== JSON.stringify(this.props.enabledTokens);\n\n    if (tokenChanged || transactionsChanged){\n      this.setState({\n        page:1,\n        prevTxs:{}\n      },()=>{\n        this.loadTxs();\n      })\n      return false;\n    }\n    const pageChanged = prevState.page !== this.state.page;\n    if (pageChanged){\n      this.processTxs();\n    }\n  }\n\n  async loadTxs(count,endBlockNumber='latest'){\n    if (!this.props.account){\n      return false;\n    }\n\n    count = count ? count : 0;\n\n    this.setState({\n      loading:true\n    });\n\n    const firstBlockNumber = this.functionsUtil.getGlobalConfig(['network','firstBlockNumber']);\n\n    // Take last block number, is null take first block number\n    let prevTxs = {...this.state.prevTxs};\n    let lastBlockNumber = Math.max(firstBlockNumber,this.state.lastBlockNumber);\n\n    let enabledTokens = this.props.enabledTokens;\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    const assets = {...this.state.filters.assets};\n\n    enabledTokens.forEach((token) => {\n      assets[token] = token;\n    });\n\n    let actions = this.props.availableActions || {...this.state.filters.actions};\n    \n    const enabledActions = typeof this.props.enabledActions !== 'undefined' ? this.props.enabledActions : [];\n\n    if (enabledActions.length){\n      actions = {};\n      enabledActions.forEach( action => {\n        actions[action.toLowerCase()] = action;\n      });\n    }\n\n    const etherscanTxs = this.props.transactionsList || await this.functionsUtil.getEtherscanTxs(this.props.account,lastBlockNumber,'latest',enabledTokens);\n\n    // console.log('TransactionsList',etherscanTxs);\n\n    // Merge new txs with previous ones\n    if (etherscanTxs && etherscanTxs.length){\n      etherscanTxs.forEach((tx) => {\n        if (tx.hashKey){\n          prevTxs[tx.hashKey] = tx;\n        } else {\n          prevTxs[`t${tx.timeStamp}`] = tx;\n        }\n      });\n    }\n\n    const lastTx = Object.values(prevTxs).pop();\n\n    // Update last block number\n    if (lastTx && lastTx.blockNumber && (!this.state.lastBlockNumber || lastTx.blockNumber>this.state.lastBlockNumber)){\n      lastBlockNumber = parseInt(lastTx.blockNumber)+1;\n    }\n\n    return this.setState( prevState => ({\n      prevTxs,\n      loading:false,\n      lastBlockNumber,\n      filters:{\n        ...prevState.filters,\n        assets,\n        actions\n      }\n    }), () => {\n      this.processTxs()\n    });\n  };\n\n  processTxs = (page=null) => {\n\n    page = page ? page : this.state.page;\n\n    const availableActions = Object.keys(this.state.filters.actions).map( action => (action.toLowerCase()) );\n\n    // Sort prevTxs by timeStamp\n    const txsIndexes = Object.values(this.state.prevTxs)\n                        .filter(tx => (!!parseFloat(tx.value))) // Filter txs with value\n                        .filter(tx => (\n                          (this.state.activeFilters.status === null || (tx.status && tx.status.toLowerCase() === this.state.activeFilters.status.toLowerCase())) && \n                          (this.state.activeFilters.assets === null || (tx.token && tx.token.toLowerCase() === this.state.activeFilters.assets.toLowerCase())) &&\n                          ( tx.action && availableActions.includes(tx.action.toLowerCase()) && (this.state.activeFilters.actions === null || (tx.action.toLowerCase() === this.state.activeFilters.actions.toLowerCase()) ))\n                        )) // Filter by activeFilters\n                        .sort((a,b) => (a.timeStamp > b.timeStamp) ? -1 : 1 );\n\n    // Calculate max number of pages\n    const totalTxs = txsIndexes.length;\n    const totalPages = Math.ceil(totalTxs/this.state.txsPerPage);\n\n    const processedTxs = [];\n\n    // console.log(this.state.prevTxs,txsIndexes);\n\n    txsIndexes.forEach((tx, i) => {\n      const selectedToken = tx.token;\n      const tokenConfig = this.props.availableTokens && this.props.availableTokens[selectedToken] ? this.props.availableTokens[selectedToken] : this.functionsUtil.getGlobalConfig(['stats','tokens',selectedToken]);\n      const decimals = Math.min(tokenConfig.decimals,8);\n      \n      const date = new Date(tx.timeStamp*1000);\n      const action = tx.action ? tx.action : this.functionsUtil.getTxAction(tx,tokenConfig);\n\n      const parsedValue = parseFloat(tx.tokenAmount);\n\n      const amount = parsedValue ? (this.props.isMobile ? parsedValue.toFixed(4) : parsedValue.toFixed(decimals)) : '-';\n      const momentDate = this.functionsUtil.strToMoment(date);\n\n      // Save new params\n      tx.action = action;\n      tx.amount = amount;\n      tx.momentDate = momentDate;\n      tx.status = tx.status ? tx.status : 'Completed';\n\n      if (i>=((page-1)*this.state.txsPerPage) && i<((page-1)*this.state.txsPerPage)+this.state.txsPerPage) {\n        processedTxs.push(tx);\n      }\n    });\n\n    // console.log('processedTxs',this.state.page,txsIndexes,processedTxs);\n\n    const loading = false;\n  \n    this.setState({\n      loading,\n      totalTxs,\n      totalPages,\n      processedTxs\n    });\n  }\n\n  render() {\n\n    const hasActiveFilters = Object.values(this.state.activeFilters).filter( v => (v !== null) ).length>0;\n\n    // console.log('processedTxs',this.state.processedTxs);\n    const processedTxs = this.state.processedTxs ? Object.values(this.state.processedTxs) : null;\n\n    return (\n      <Flex flexDirection={'column'} width={1} m={'0 auto'}>\n        {\n          this.state.loading ? (\n            <FlexLoader\n              flexProps={{\n                flexDirection:'row',\n                minHeight:this.props.height\n              }}\n              loaderProps={{\n                size:'30px'\n              }}\n              textProps={{\n                ml:2\n              }}\n              text={'Loading transactions...'}\n            />\n          ) : (\n            <Flex\n              width={1}\n              position={'relative'}\n              flexDirection={'column'}\n              id={'transactions-list-container'}\n              pt={[0, hasActiveFilters ? '116px' : 5]}\n            >\n              <TransactionListFilters\n                {...this.props}\n                filters={this.state.filters}\n                activeFilters={this.state.activeFilters}\n                resetFilters={this.resetFilters.bind(this)}\n                applyFilters={this.applyFilters.bind(this)}\n              />\n              {\n                processedTxs && processedTxs.length ? (\n                  <Flex\n                    width={1}\n                    flexDirection={'column'}\n                  >\n                    <TableHeader\n                      cols={this.props.cols}\n                      isMobile={this.props.isMobile}\n                    />\n                    <Flex\n                      id={'transactions-list'}\n                      flexDirection={'column'}\n                    >\n                      {\n                        processedTxs.map( (tx,index) => {\n                          const txHash = tx.hash;\n                          const txHashKey = tx.hashKey;\n                          const handleClick = (e) => {\n                            return (txHash ? window.open(this.functionsUtil.getEtherscanTransactionUrl(txHash)) : null);\n                          };\n\n                          return (\n                            <TableRow\n                              {...this.props}\n                              rowProps={{\n                                isInteractive:true\n                              }}\n                              hash={txHash}\n                              transaction={tx}\n                              key={`tx-${index}`}\n                              handleClick={handleClick}\n                              rowId={`tx-col-${txHashKey}`}\n                              cardId={`tx-card-${txHashKey}`}\n                              fieldComponent={TransactionField}\n                            />\n                          );\n                        })\n                      }\n                    </Flex>\n                    <Flex\n                      height={'50px'}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                      justifyContent={'flex-end'}\n                      id={'transactions-list-pagination'}\n                    >\n                      <Flex mr={3}>\n                        <Link mr={1} onClick={ e => this.prevPage(e) }>\n                          <Icon\n                            name={'KeyboardArrowLeft'}\n                            size={'2em'}\n                            color={ this.state.page>1 ? 'arrowActive' : 'arrowInactive' }\n                          />\n                        </Link>\n                        <Link onClick={ e => this.nextPage(e) }>\n                          <Icon\n                            name={'KeyboardArrowRight'}\n                            size={'2em'}\n                            color={ this.state.page<this.state.totalPages ? 'arrowActive' : 'arrowInactive' }\n                          />\n                        </Link>\n                      </Flex>\n                      <Flex alignItems={'center'}>\n                        <Text \n                          fontSize={1}\n                          fontWeight={3}\n                          color={'cellText'}\n                        >\n                          Page {this.state.page} of {this.state.totalPages}\n                        </Text>\n                      </Flex>\n                    </Flex>\n                  </Flex>\n                ) : (\n                  <Heading.h3 textAlign={'center'} fontFamily={'sansSerif'} fontWeight={2} fontSize={[2]} color={'dark-gray'}>\n                    There are no transactions\n                  </Heading.h3>\n                )\n              }\n            </Flex>\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default TransactionsList;\n","import React, { Component } from 'react';\nimport styles from './Migrate.module.scss';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\nimport TransactionField from '../TransactionField/TransactionField';\nimport FastBalanceSelector from '../FastBalanceSelector/FastBalanceSelector';\nimport { Box, Flex, Text, Icon, Checkbox, Input, Link, Image } from \"rimble-ui\";\n\nclass Migrate extends Component {\n\n  state = {\n    nonce:0,\n    loading:true,\n    action:'migrate',\n    processing:{\n      approve:{\n        txHash:null,\n        loading:false\n      },\n      migrate:{\n        txHash:null,\n        loading:false\n      },\n      redeem:{\n        txHash:null,\n        loading:false\n      }\n    },\n    inputValue:{},\n    usePermit:false,\n    oldTokenName:null,\n    oldIdleTokens:null,\n    skipMigration:false,\n    buttonDisabled:true,\n    migrationEnabled:null,\n    fastBalanceSelector:{},\n    oldContractBalance:null,\n    biconomyLimitReached:false,\n    metaTransactionsEnabled:true,\n    oldContractTokenDecimals:null,\n    migrationContractApproved:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  setAction = (action) => {\n    if (action !== null){\n      this.setState({\n        action\n      });\n    }\n  }\n\n  toggleSkipMigration = (skipMigration) => {\n    this.setState({\n      skipMigration\n    });\n\n    if (typeof this.props.toggleSkipMigration === 'function'){\n      this.props.toggleSkipMigration(skipMigration);\n    }\n  }\n\n  changeInputValue = (e) => {\n    if (!this.state.action){\n      return false;\n    }\n    const amount = e.target.value.length && !isNaN(e.target.value) ? this.functionsUtil.BNify(e.target.value) : this.functionsUtil.BNify(0);\n\n    this.setState((prevState) => ({\n      fastBalanceSelector:{\n        ...prevState.fastBalanceSelector,\n        [this.state.action]: null\n      },\n      inputValue:{\n        ...prevState.inputValue,\n        [this.state.action]: amount\n      }\n    }));\n  }\n\n  checkButtonDisabled = (amount=null) => {\n    if (!this.state.action){\n      return false;\n    }\n    if (!amount){\n      amount = this.state.inputValue[this.state.action];\n    }\n    let buttonDisabled = true;\n    if (amount){\n      buttonDisabled = amount.lte(0);\n      switch (this.state.action){\n        case 'migrate':\n        case 'redeem':\n          buttonDisabled = buttonDisabled || amount.gt(this.state.oldIdleTokens);\n        break;\n        default:\n        break;\n      }\n    }\n    this.setState({\n      buttonDisabled\n    });\n  }\n\n  setInputValue = () => {\n    if (!this.state.action || this.state.fastBalanceSelector[this.state.action] === null){\n      return false;\n    }\n\n    let amount = null;\n    const selectedPercentage = this.functionsUtil.BNify(this.state.fastBalanceSelector[this.state.action]).div(100);\n\n    switch(this.state.action){\n      case 'migrate':\n      case 'redeem':\n        amount = this.state.oldIdleTokens ? this.functionsUtil.BNify(this.state.oldIdleTokens).times(selectedPercentage) : null;\n      break;\n      default:\n      break;\n    }\n\n    this.setState((prevState) => ({\n      inputValue:{\n        ...prevState.inputValue,\n        [this.state.action]: amount\n      }\n    }));\n  }\n\n  setFastBalanceSelector = (percentage) => {\n    if (!this.state.action){\n      return false;\n    }\n    this.setState((prevState) => ({\n      fastBalanceSelector:{\n        ...prevState.fastBalanceSelector,\n        [this.state.action]: percentage\n      }\n    }));\n  }\n\n  executeAction = async () => {\n\n    const inputValue = this.state.inputValue[this.state.action];\n\n    if (this.state.buttonDisabled || !inputValue || this.functionsUtil.BNify(inputValue).lte(0)){\n      return false;\n    }\n\n    const loading = true;\n\n    switch (this.state.action){\n      case 'redeem':\n\n        if (!this.props.tokenConfig.migration || !this.props.tokenConfig.migration.oldContract){\n          return false;\n        }\n\n        const oldContractName = this.props.tokenConfig.migration.oldContract.name;\n\n        const idleTokenToRedeem = this.functionsUtil.normalizeTokenAmount(inputValue,18);\n\n        // Get amounts for best allocations\n        const _skipRebalance = true;\n        let paramsForRedeem = null;\n\n        /*\n        if (this.props.account){\n          const callParams = { from: this.props.account, gas: this.props.web3.utils.toBN(5000000) };\n          paramsForRedeem = await this.functionsUtil.genericContractCall(oldContractName,'getParamsForRedeemIdleToken',[idleTokenToRedeem, _skipRebalance],callParams);\n        }\n        */\n\n        const _clientProtocolAmountsRedeem = paramsForRedeem && paramsForRedeem.length ? paramsForRedeem[1] : [];\n        const gasLimitRedeem = _clientProtocolAmountsRedeem.length && _clientProtocolAmountsRedeem.indexOf('0') === -1 ? this.functionsUtil.BNify(1500000) : this.functionsUtil.BNify(1000000);\n\n        const callbackRedeem = (tx,error) => {\n          const txSucceeded = tx.status === 'success';\n\n          // Send Google Analytics event\n          const eventData = {\n            eventCategory: `Redeem_old`,\n            eventAction: this.props.selectedToken,\n            eventLabel: tx.status,\n            eventValue: parseInt(inputValue)\n          };\n\n          if (error){\n            eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n          }\n\n          // Send Google Analytics event\n          if (error || eventData.status !== 'error'){\n            this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n          }\n\n          this.setState((prevState) => ({\n            processing: {\n              ...prevState.processing,\n              [this.state.action]:{\n                txHash:null,\n                loading:false\n              }\n            }\n          }));\n\n          if (txSucceeded){\n            this.setState((prevState) => ({\n              inputValue:{\n                ...prevState.inputValue,\n                [this.state.action]: this.functionsUtil.BNify(0)\n              }\n            }));\n          }\n        };\n\n        const callbackReceiptRedeem = (tx) => {\n          const txHash = tx.transactionHash;\n          this.setState((prevState) => ({\n            processing: {\n              ...prevState.processing,\n              [this.state.action]:{\n                ...prevState.processing[this.state.action],\n                txHash\n              }\n            }\n          }));\n        };\n\n        this.props.contractMethodSendWrapper(oldContractName, 'redeemIdleToken', [\n          idleTokenToRedeem, _skipRebalance, _clientProtocolAmountsRedeem\n        ], null, callbackRedeem, callbackReceiptRedeem, gasLimitRedeem);\n      break;\n      default:\n      break;\n    }\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        [this.state.action]:{\n          ...prevState.processing[this.state.action],\n          loading\n        }\n      }\n    }));\n  }\n\n  componentWillMount(){\n    this.loadUtils();\n    this.checkMigration();\n  }\n\n  componentDidMount(){\n    \n  }\n\n  componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const accountChanged = prevProps.account !== this.props.account;\n    const biconomyChanged = prevProps.biconomy !== this.props.biconomy;\n    const usePermitChanged = prevProps.usePermit !== this.props.usePermit;\n    const tokenChanged = prevProps.selectedToken !== this.props.selectedToken || (!prevProps.tokenConfig && this.props.tokenConfig);\n\n    if (tokenChanged || accountChanged || biconomyChanged || usePermitChanged){\n      this.checkMigration();\n    }\n\n    const actionChanged = this.state.action !== prevState.action;\n    const fastBalanceSelectorChanged = this.state.fastBalanceSelector[this.state.action] !== prevState.fastBalanceSelector[this.state.action];\n    if (actionChanged || fastBalanceSelectorChanged){\n      this.setInputValue();\n    }\n\n    const inputValueChanged = prevState.inputValue !== this.state.inputValue;\n    if (inputValueChanged){\n      this.checkButtonDisabled();\n    }\n\n    const contractApprovedChanged = prevState.migrationContractApproved !== this.state.migrationContractApproved;\n    if (contractApprovedChanged){\n      // console.log(this.props.selectedToken,'contractApprovedChanged',this.state.migrationContractApproved);\n      if (typeof this.props.callbackApprove === 'function'){\n        this.props.callbackApprove(this.state.migrationContractApproved);\n      }\n    }\n  }\n\n  toggleMetaTransactionsEnabled = (metaTransactionsEnabled) => {\n    this.setState({\n      metaTransactionsEnabled\n    });\n  }\n\n  checkMigrationContractApproved = async () => {\n    if (this.props.tokenConfig.migration && this.props.tokenConfig.migration.migrationContract){\n      const migrationContractInfo = this.props.tokenConfig.migration.migrationContract;\n      const migrationContractName = migrationContractInfo.name;\n      const migrationContract = this.functionsUtil.getContractByName(migrationContractName);\n      if (migrationContract){\n        const oldContractName = this.props.tokenConfig.migration.oldContract.name;\n        const tokenApproved = await this.functionsUtil.checkTokenApproved(oldContractName,migrationContractInfo.address,this.props.account);\n        return tokenApproved;\n      }\n    }\n    return false;\n  }\n\n  checkMigration = async () => {\n\n    if (!this.props.tokenConfig || !this.props.account){\n      return false;\n    }\n\n    let loading = true;\n    this.setState({\n      loading,\n      processing:{\n        approve:{\n          txHash:null,\n          loading:false\n        },\n        migrate:{\n          txHash:null,\n          loading:false\n        },\n        redeem:{\n          txHash:null,\n          loading:false\n        }\n      },\n    });\n\n    let migrationEnabled = false;\n    let oldTokenName = 'idleTokens';\n    let oldIdleTokensConverted = null;\n    let oldContractTokenDecimals = null;\n    let migrationContractApproved = false;\n    let oldTokenPrice = this.functionsUtil.BNify(0);\n    let oldIdleTokens = this.functionsUtil.BNify(0);\n    let oldContractBalance = this.functionsUtil.BNify(0);\n    const getTokenPrice = this.props.getTokenPrice !== undefined ? this.props.getTokenPrice : true;\n\n    // Check migration contract enabled and balance\n    if (this.props.tokenConfig.migration && this.props.tokenConfig.migration.enabled){\n      const oldContractInfo = this.props.tokenConfig.migration.oldContract;\n      const oldContractABI = oldContractInfo.abi;\n      const oldContractName = oldContractInfo.name;\n      let oldContract = this.functionsUtil.getContractByName(oldContractName);\n\n      // Initialize contract\n      if (!oldContract && oldContractABI){\n        oldContract = await this.props.initContract(oldContractName,oldContractInfo.address,oldContractABI);\n      }\n\n      let migrationContract = this.functionsUtil.getContractByName(this.props.tokenConfig.migration.migrationContract.name);\n\n      if (!migrationContract && this.props.tokenConfig.migration.migrationContract.abi){\n        migrationContract = await this.props.initContract(this.props.tokenConfig.migration.migrationContract.name,this.props.tokenConfig.migration.migrationContract.address,this.props.tokenConfig.migration.migrationContract.abi);\n      }\n\n      if (oldContract && migrationContract){\n\n        oldTokenName = this.props.tokenConfig.migration.oldContract.token;\n\n        [\n          oldContractTokenDecimals,\n          migrationContractApproved,\n          oldContractBalance,\n          oldTokenPrice,\n        ] = await Promise.all([\n          // Get old contract token decimals\n          this.functionsUtil.getTokenDecimals(oldContractName),\n          // Check migration contract approval\n          this.checkMigrationContractApproved(),\n          // Check old contractBalance\n          this.functionsUtil.getContractBalance(oldContractName,this.props.account),\n          // Get token price\n          (getTokenPrice ? this.functionsUtil.genericContractCall(oldContractName,'tokenPrice') : null)\n        ]);\n\n        // console.log('Migration',oldContractName,migrationContractApproved,this.props.selectedToken,oldContractBalance ? oldContractBalance.toString() : null,oldTokenPrice ? oldTokenPrice.toString() : null);\n\n        if (oldContractBalance){\n          // Convert old idleTokens\n          oldIdleTokens = this.functionsUtil.fixTokenDecimals(oldContractBalance,oldContractTokenDecimals);\n          if (oldTokenPrice){\n            oldTokenPrice = this.functionsUtil.fixTokenDecimals(oldTokenPrice,this.props.tokenConfig.decimals);\n            oldIdleTokensConverted = this.functionsUtil.BNify(oldIdleTokens).times(this.functionsUtil.BNify(oldTokenPrice));\n          }\n          // Enable migration if old contract balance if greater than 0\n          migrationEnabled = this.functionsUtil.BNify(oldContractBalance).gt(0);\n        }\n      }\n    }\n    \n    loading = false;\n\n    // If use Permit don't ask for Approve\n    const usePermit = this.props.usePermit;\n\n    const newState = {\n      loading,\n      usePermit,\n      oldTokenName,\n      oldIdleTokens,\n      migrationEnabled,\n      oldContractBalance,\n      oldIdleTokensConverted,\n      oldContractTokenDecimals,\n      migrationContractApproved\n    };\n\n    if (this.props.biconomy){\n      const biconomyLimits = await this.functionsUtil.checkBiconomyLimits(this.props.account);\n      if (biconomyLimits && !biconomyLimits.allowed){\n        newState.biconomyLimitReached = true;\n      }\n    }\n\n    if (typeof this.props.migrationEnabledCallback === 'function'){\n      this.props.migrationEnabledCallback(migrationEnabled);\n    }\n\n    // console.log('checkMigration',this.props.selectedToken,'usePermit',this.props.usePermit,'migrationContractApproved',newState.migrationContractApproved);\n\n    // Set migration contract balance\n    return this.setState(newState);\n  }\n\n  disapproveMigration = async (e) => {\n    if (e){\n      e.preventDefault();\n    }\n    const migrationContractInfo = this.props.tokenConfig.migration.migrationContract;\n    const migrationContract = this.functionsUtil.getContractByName(migrationContractInfo.name);\n    if (migrationContract){\n      this.disableERC20(null,this.props.tokenConfig.migration.oldContract.name,migrationContractInfo.address);\n    }\n  }\n\n  cancelTransaction = async () => {\n    this.setState({\n      processing: {\n        approve:{\n          txHash:null,\n          loading:false\n        },\n        migrate:{\n          txHash:null,\n          loading:false\n        },\n        redeem:{\n          txHash:null,\n          loading:false\n        }\n      },\n    });\n  }\n\n  approveMigration = async (e) => {\n    if (e){\n      e.preventDefault();\n    }\n    const migrationContractInfo = this.props.tokenConfig.migration.migrationContract;\n    const migrationContract = this.functionsUtil.getContractByName(migrationContractInfo.name);\n    if (migrationContract){\n\n      // Check if the migration contract is approved\n      const migrationContractApproved = await this.checkMigrationContractApproved();\n\n      if (!migrationContractApproved){\n\n        const callbackApprove = (tx,error) => {\n          // Send Google Analytics event\n          const eventData = {\n            eventCategory: 'Migrate',\n            eventAction: 'approve',\n            eventLabel: tx ? tx.status : null\n          };\n\n          const txSucceeded = tx && tx.status === 'success';\n\n          // console.log('callbackApprove',tx,error);\n\n          if (error){\n            eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n          }\n\n          // Send Google Analytics event\n          if (error || eventData.status !== 'error'){\n            this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n          }\n\n          this.setState((prevState) => ({\n            migrationContractApproved: txSucceeded, // True\n            processing: {\n              ...prevState.processing,\n              approve:{\n                txHash:null,\n                loading:false\n              }\n            }\n          }));\n\n          if (typeof this.props.callbackApprove === 'function' && txSucceeded){\n            this.props.callbackApprove(tx);\n          }\n\n          this.checkMigration();\n        };\n\n        const callbackReceiptApprove = (tx) => {\n          const txHash = tx.transactionHash;\n          this.setState((prevState) => ({\n            processing: {\n              ...prevState.processing,\n              approve:{\n                ...prevState.processing.approve,\n                txHash\n              }\n            }\n          }));\n        };\n\n        this.functionsUtil.enableERC20(this.props.tokenConfig.migration.oldContract.name,migrationContractInfo.address,callbackApprove,callbackReceiptApprove);\n\n        this.setState((prevState) => ({\n          processing: {\n            ...prevState.processing,\n            approve:{\n              txHash:null,\n              loading:true\n            }\n          },\n          migrationContractApproved:false\n        }));\n      } else {\n        this.setState({\n          migrationContractApproved:true\n        });\n      }\n    }\n  }\n\n  migrate = async (e,migrationMethod) => {\n    e.preventDefault();\n\n    const migrationContractInfo = this.props.tokenConfig.migration.migrationContract;\n    const migrationContract = this.functionsUtil.getContractByName(migrationContractInfo.name);\n    if (migrationContract){\n\n      // Check if the migration contract is approved\n      // const migrationContractApproved = await this.checkMigrationContractApproved();\n\n      // if (!migrationContractApproved){\n      //   return this.approveMigration();\n      // } else {\n        const callbackMigrate = (tx,error) => {\n\n          if (!error && tx && tx.status === 'error'){\n            error = {\n              message:'Unknown error'\n            };\n          } else if (!tx && error){\n            tx = {\n              status:'error'\n            };\n          }\n\n          const txSucceeded = tx && tx.status === 'success';\n\n          // Send Google Analytics event\n          const eventData = {\n            eventCategory: 'Migrate',\n            eventAction: migrationMethod,\n            eventLabel: tx ? tx.status : null,\n            eventValue: parseInt(oldIdleTokens)\n          };\n\n          if (error){\n            eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n          }\n\n          // Send Google Analytics event\n          if (error || eventData.status !== 'error'){\n            this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n          }\n\n          // console.log('callbackMigrate',tx,tx.status,txSucceeded,error,this.props.migrationCallback);\n\n          if (txSucceeded){\n            // Toast message\n            window.toastProvider.addMessage(`Migration completed`, {\n              secondaryMessage: `Your funds has been migrated`,\n              colorTheme: 'light',\n              actionHref: \"\",\n              actionText: \"\",\n              variant: \"success\",\n            });\n\n            if (this.props.migrationCallback && typeof this.props.migrationCallback === 'function'){\n              this.props.migrationCallback(tx);\n            }\n\n          } else { // Show migration error toast only for real error\n            window.toastProvider.addMessage(`Migration error`, {\n              secondaryMessage: `The migration has failed, try again...`,\n              colorTheme: 'light',\n              actionHref: \"\",\n              actionText: \"\",\n              variant: \"failure\",\n            });\n\n            // Check migration if failed\n            this.checkMigration();\n          }\n\n          this.setState((prevState) => ({\n            migrationEnabled:txSucceeded ? false : true,\n            processing: {\n              ...prevState.processing,\n              migrate:{\n                txHash:null,\n                loading:false\n              }\n            }\n          }));\n        }\n\n        const callbackReceiptMigrate = (tx) => {\n          const txHash = tx.transactionHash;\n          this.setState((prevState) => ({\n            processing: {\n              ...prevState.processing,\n              migrate:{\n                ...prevState.processing.migrate,\n                txHash\n              }\n            }\n          }));\n        };\n\n        const callbackPermit = () => {\n          if (typeof this.props.callbackPermit === 'function'){\n            this.props.callbackPermit();\n          }\n        }\n\n        const useMetaTx = this.props.useMetaTx !== false && this.props.biconomy && this.state.metaTransactionsEnabled && !this.state.biconomyLimitReached;\n\n        // Call migration contract function to migrate funds\n        const oldIdleTokens = this.state.oldIdleTokens;\n        const toMigrate = this.props.showBalanceSelector ? this.functionsUtil.integerValue(this.functionsUtil.normalizeTokenAmount(this.state.inputValue[this.state.action],this.state.oldContractTokenDecimals)) : this.functionsUtil.integerValue(this.state.oldContractBalance);\n        // const toMigrate =  this.functionsUtil.normalizeTokenAmount('1',this.state.oldContractTokenDecimals).toString(); // TEST AMOUNT\n\n        let _skipRebalance = typeof this.props.tokenConfig.skipMintForDeposit !== 'undefined' ? this.props.tokenConfig.skipMintForDeposit : this.functionsUtil.getGlobalConfig(['contract','methods','migrate','skipRebalance']);\n\n        // Mint if someone mint over X amount\n        let minAmountForRebalance = null;\n        \n        if (_skipRebalance){\n\n          // Check if the amount is over a certain amount to rebalance the pool\n          if (useMetaTx){\n            minAmountForRebalance = this.functionsUtil.getGlobalConfig(['contract','methods','migrate','minAmountForRebalanceMetaTx']);\n          } else {\n            minAmountForRebalance = this.functionsUtil.getGlobalConfig(['contract','methods','migrate','minAmountForRebalance']);\n          }\n\n          if (minAmountForRebalance){\n            const amountToDeposit = await this.functionsUtil.convertTokenBalance(oldIdleTokens,this.props.selectedToken,this.props.tokenConfig,false);\n            if (amountToDeposit.gte(this.functionsUtil.BNify(minAmountForRebalance))){\n              _skipRebalance = false;\n            }\n          }\n        }\n\n        let migrationParams = this.props.migrationParams ? this.props.migrationParams : [toMigrate,this.props.tokenConfig.migration.oldContract.address,this.props.tokenConfig.idle.address,this.props.tokenConfig.address,_skipRebalance];\n\n        if (typeof migrationParams === 'function'){\n          migrationParams = migrationParams(toMigrate);\n        }\n\n        // Check if Biconomy is enabled\n        if (useMetaTx){\n          const functionSignature = migrationContract.methods[migrationMethod](...migrationParams).encodeABI();\n          this.functionsUtil.sendBiconomyTxWithPersonalSign(migrationContractInfo.name, functionSignature, callbackMigrate, callbackReceiptMigrate);\n          // this.functionsUtil.sendBiconomyTx(migrationContractInfo.name, migrationContractInfo.address, functionSignature, callbackMigrate, callbackReceiptMigrate);\n        } else {\n          const permitContract = this.functionsUtil.getContractByName(this.props.tokenConfig.name);\n          const functionInfo = migrationContractInfo.functions.find( f => f.name === migrationMethod );\n          if (this.props.usePermit && permitContract){\n            this.functionsUtil.sendTxWithPermit(this.props.tokenConfig.name, this.props.account, migrationContractInfo.name, functionInfo.permitName, migrationParams, callbackMigrate, callbackReceiptMigrate, callbackPermit);\n          } else {\n            // Send migration tx\n            this.functionsUtil.contractMethodSendWrapper(migrationContractInfo.name, migrationMethod, migrationParams, callbackMigrate, callbackReceiptMigrate);\n          }\n        }\n\n        // debugger;\n\n        this.setState((prevState) => ({\n          processing: {\n            ...prevState.processing,\n            migrate:{\n              txHash:null,\n              loading:true\n            }\n          }\n        }));\n      // }\n    }\n\n    return false;\n  }\n\n  render() {\n\n    if (!this.props.tokenConfig || !this.props.selectedToken){\n      return null;\n    }\n\n    const contractApproved = this.props.usePermit || this.state.migrationContractApproved;\n    const batchMigrationInfo = this.functionsUtil.getGlobalConfig(['tools','batchMigration']);\n    const batchMigrationEnabled = batchMigrationInfo.enabled && typeof batchMigrationInfo.props.availableTokens[this.props.tokenConfig.idle.token] !== 'undefined';\n    const batchMigrationDepositEnabled = batchMigrationInfo.depositEnabled;\n\n    // console.log('contractApproved',contractApproved,this.props.usePermit,this.state.migrationContractApproved);\n\n    const SkipMigrationComponent = (props) => (\n      <DashboardCard\n        cardProps={{\n          pt:2,\n          pb:3,\n          px:2,\n          mb:2,\n          display:'flex',\n          alignItems:'center',\n          flexDirection:'column',\n          justifyContent:'center',\n          mt:this.state.skipMigration ? 3 : 2,\n        }}\n      >\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Icon\n            size={'1.8em'}\n            color={'cellText'}\n            name={'FastForward'}\n          />\n        </Flex>\n        <Checkbox\n          required={false}\n          checked={this.state.skipMigration}\n          label={`Skip migration and deposit in Idle v4`}\n          onChange={ e => this.toggleSkipMigration(e.target.checked) }\n        />\n      </DashboardCard>\n    );\n\n    const biconomyEnabled = this.functionsUtil.getGlobalConfig(['network','providers','biconomy','enabled']) && !this.state.biconomyLimitReached;\n\n    return (\n      this.state.loading && this.props.account ? (\n        <DashboardCard\n          cardProps={{\n            p:3,\n            mt:3,\n            minHeight:'195px',\n            style:{\n              display:'flex',\n              alignItems:'center',\n              justifyContent:'center'\n            }\n          }}\n        >\n          <FlexLoader\n            flexProps={{\n              flexDirection:'row'\n            }}\n            loaderProps={{\n              size:'30px'\n            }}\n            textProps={{\n              ml:2\n            }}\n            text={'Checking migration...'}\n          />\n        </DashboardCard>\n      ) : (\n        (this.state.migrationEnabled && !this.state.skipMigration) ? (\n          <Box width={1}>\n            {\n              !this.props.isMigrationTool &&\n              <Flex\n                mt={3}\n                flexDirection={'column'}\n              >\n                <DashboardCard\n                  cardProps={{\n                    p:3,\n                  }}\n                >\n                  <Flex\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                  >\n                    <Icon\n                      size={'2.3em'}\n                      color={'cellText'}\n                      name={ this.props.isMigrationTool ? 'SwapHoriz' : 'Warning' }\n                    />\n                    <Text\n                      mt={1}\n                      fontSize={2}\n                      color={'cellText'}\n                      textAlign={'center'}\n                    >\n                      { this.props.migrateTextBefore !== null ? this.props.migrateTextBefore : null }\n                      { this.props.migrateTextBefore !== null &&\n                        <br />\n                      }\n                      You { !this.props.isMigrationTool ? 'still' : '' } have <strong>{this.state.oldIdleTokens.toFixed(4)} {this.state.oldTokenName} {this.state.oldIdleTokensConverted ? `(${this.state.oldIdleTokensConverted.toFixed(4)} ${this.props.selectedToken})` : ''}</strong> to migrate.<br />\n                      { this.props.migrateText !== null ? this.props.migrateText : 'Please use the section below to migrate or redeem your old tokens.' }\n                    </Text>\n                  </Flex>\n                </DashboardCard>\n              </Flex>\n            }\n            {\n              (this.props.showActions === undefined || this.props.showActions) && \n                <Flex\n                  mt={2}\n                  flexDirection={'column'}\n                >\n                  {\n                    !this.props.isMigrationTool && \n                      <SkipMigrationComponent />\n                  }\n                  <Text mb={2}>\n                    Choose the action:\n                  </Text>\n                  <Flex\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    justifyContent={'space-between'}\n                  >\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        width:0.48,\n                        onMouseDown:() => {\n                          this.setAction('migrate');\n                        }\n                      }}\n                      isInteractive={true}\n                      isActive={ this.state.action === 'migrate' }\n                    >\n                      <Flex\n                        my={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'center'}\n                      >\n                        <TransactionField\n                          transaction={{\n                            action:'migrate'\n                          }}\n                          fieldInfo={{\n                            name:'icon',\n                            props:{\n                              mr:3\n                            }\n                          }}\n                        />\n                        <Text\n                          fontSize={3}\n                          fontWeight={3}\n                        >\n                          Migrate\n                        </Text>\n                      </Flex>\n                    </DashboardCard>\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        width:0.48,\n                        onMouseDown:() => {\n                          this.setAction('redeem');\n                        }\n                      }}\n                      isInteractive={true}\n                      isActive={ this.state.action === 'redeem' }\n                    >\n                      <Flex\n                        my={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'center'}\n                      >\n                        <TransactionField\n                          transaction={{\n                            action:'redeem'\n                          }}\n                          fieldInfo={{\n                            name:'icon',\n                            props:{\n                              mr:3\n                            }\n                          }}\n                        />\n                        <Text\n                          fontSize={3}\n                          fontWeight={3}\n                        >\n                          Redeem\n                        </Text>\n                      </Flex>\n                    </DashboardCard>\n                  </Flex>\n                </Flex>\n            }\n            {\n              this.state.action === 'migrate' ? (\n                <Flex\n                  mt={1}\n                  mb={3}\n                  flexDirection={'column'}\n                >\n                  {\n                    (batchMigrationEnabled && batchMigrationDepositEnabled && !this.props.isMigrationTool) &&\n                      <Flex\n                        mb={3}\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'center'}\n                      >\n                        <Link\n                          textAlign={'center'}\n                          hoverColor={'primary'}\n                          href={`/#/dashboard/tools/${batchMigrationInfo.route}/${this.props.tokenConfig.idle.token}`}\n                        >\n                          Gas fees too high? Save gas with our Batch Migrator!\n                        </Link>\n                        <Icon\n                          ml={1}\n                          size={'1em'}\n                          color={'primary'}\n                          name={'LocalGasStation'}\n                        />\n                      </Flex>\n                  }\n                  {\n                    contractApproved ? (\n                      this.state.processing.migrate.loading ? (\n                        <Flex\n                          mt={3}\n                          flexDirection={'column'}\n                        >\n                          <TxProgressBar\n                            {...this.props}\n                            hash={this.state.processing.migrate.txHash}\n                            endMessage={`Finalizing migration request...`}\n                            cancelTransaction={this.cancelTransaction.bind(this)}\n                            waitText={ this.props.waitText ? this.props.waitText : 'Migration estimated in'}\n                            sendingMessage={ this.props.biconomy && this.state.metaTransactionsEnabled ? 'Sending meta-transaction...' : 'Sending transaction...' }\n                          />\n                        </Flex>\n                      ) : this.props.showBalanceSelector ? (\n                        <Flex\n                          mt={1}\n                          flexDirection={'column'}\n                        >\n                          <Flex\n                            mb={3}\n                            width={1}\n                            flexDirection={'column'}\n                          >\n                            <Flex\n                              mb={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={this.props.balanceSelectorInfo ? 'space-between' : 'flex-end'}\n                            >\n                              {\n                                this.props.balanceSelectorInfo && (\n                                  <Flex\n                                    width={1}\n                                    maxWidth={'50%'}\n                                    alignItems={'center'}\n                                    flexDirection={'row'}\n                                  >\n                                    <Text\n                                      fontSize={1}\n                                      fontWeight={3}\n                                      textAlign={'left'}\n                                      style={{\n                                        maxWidth:'100%',\n                                        overflow:'hidden',\n                                        whiteSpace:'nowrap',\n                                        textOverflow:'ellipsis'\n                                      }}\n                                      color={this.props.balanceSelectorInfo.color ? this.props.balanceSelectorInfo.color : 'copyColor'}\n                                    >\n                                      {this.props.balanceSelectorInfo.text}\n                                    </Text>\n                                  </Flex>\n                                )\n                              }\n                              {\n                                this.state.oldIdleTokens && (\n                                  <Flex\n                                    width={1}\n                                    maxWidth={'50%'}\n                                    alignItems={'center'}\n                                    flexDirection={'row'}\n                                    justifyContent={'flex-end'}\n                                  >\n                                    <Link\n                                      fontSize={1}\n                                      fontWeight={3}\n                                      color={'dark-gray'}\n                                      textAlign={'right'}\n                                      hoverColor={'copyColor'}\n                                      onClick={ (e) => this.setFastBalanceSelector(100) }\n                                    >\n                                      Balance: {this.state.oldIdleTokens.toFixed(6)} {this.props.selectedToken}\n                                    </Link>\n                                  </Flex>\n                                )\n                              }\n                            </Flex>\n                            <Input\n                              min={0}\n                              type={\"number\"}\n                              required={true}\n                              height={'3.4em'}\n                              borderRadius={2}\n                              fontWeight={500}\n                              borderColor={'cardBorder'}\n                              backgroundColor={'cardBg'}\n                              boxShadow={'none !important'}\n                              placeholder={'Insert amount'}\n                              onChange={this.changeInputValue.bind(this)}\n                              border={`1px solid ${this.props.theme.colors.divider}`}\n                              value={this.state.inputValue[this.state.action] ? this.functionsUtil.BNify(this.state.inputValue[this.state.action]).toFixed() : ''}\n                            />\n                            <Flex\n                              mt={2}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'space-between'}\n                            >\n                              {\n                                [25,50,75,100].map( percentage => (\n                                  <FastBalanceSelector\n                                    percentage={percentage}\n                                    key={`selector_${percentage}`}\n                                    onMouseDown={()=>this.setFastBalanceSelector(percentage)}\n                                    isActive={this.state.fastBalanceSelector[this.state.action] === parseInt(percentage)}\n                                  />\n                                ))\n                              }\n                            </Flex>\n                          </Flex>\n                          <Flex\n                            mt={1}\n                            width={1}\n                            alignItems={'center'}\n                            justifyContent={'center'}\n                          >\n                            {\n                              this.props.tokenConfig.migration.migrationContract.functions.map((functionInfo,i) => {\n                                const functionName = functionInfo.name;\n                                return (\n                                  <RoundButton\n                                    buttonProps={{\n                                      width:[1,0.5],\n                                      disabled:this.state.buttonDisabled,\n                                      mainColor:this.props.theme.colors.migrate\n                                    }}\n                                    key={`migrate_${i}`}\n                                    handleClick={ e => this.migrate(e,functionName) }\n                                  >\n                                    { functionInfo.label }\n                                  </RoundButton>\n                                )\n                              })\n                            }\n                          </Flex>\n                        </Flex>\n                      ) : (\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            mt:2,\n                          }}\n                        >\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            {\n                              this.props.migrationImage ? (\n                                <Image\n                                  {...this.props.migrationImage}\n                                />\n                              ) : (\n                                <Icon\n                                  size={'2.3em'}\n                                  color={'cellText'}\n                                  name={ this.props.migrationIcon ? this.props.migrationIcon : (this.props.isMigrationTool ? 'SwapHoriz' : 'Repeat') }\n                                />\n                              )\n                            }\n                            <Text\n                              mt={1}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              {\n                                this.props.migrationText ? (\n                                  <Text.span\n                                    migrationTextProps={this.props.migrationTextProps}\n                                    dangerouslySetInnerHTML={{\n                                      __html:this.props.migrationText\n                                    }}\n                                  >\n                                  </Text.span>\n                                ) : (\n                                  <Text.span\n                                    color={'cellText'}\n                                  >\n                                    You are one step away from the migration of your { this.props.isMigrationTool ? this.state.oldIdleTokens.toFixed(4) : 'old' } {this.state.oldTokenName}{ this.props.isMigrationTool ? ` into the Idle ${this.props.tokenConfig.token} ${this.props.selectedStrategy} strategy` : '' }!\n                                  </Text.span>\n                                )\n                              }\n                            </Text>\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'space-between'}\n                            >\n                            {\n                              biconomyEnabled && \n                                <Flex\n                                  py={3}\n                                  px={2}\n                                  mt={2}\n                                  width={1}\n                                  borderRadius={2}\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                  justifyContent={'center'}\n                                  backgroundColor={'dashboardBg'}\n                                  border={`1px solid ${this.props.theme.colors.boxBorder}`}\n                                >\n                                  <Text\n                                    mt={1}\n                                    fontSize={1}\n                                    color={'cellText'}\n                                    textAlign={'center'}\n                                  >\n                                    {\n                                      this.props.biconomy ?\n                                        `Meta-Transactions allow you to migrate without spending a dime! But, if you are stuck, please disable it and try again.`\n                                      :\n                                        'Your wallet does not support Meta-transactions, you are still able to migrate with a normal transaction.'\n                                    }\n                                  </Text>\n                                  {\n                                  this.props.biconomy &&\n                                    <Checkbox\n                                      mt={2}\n                                      required={false}\n                                      label={\"Migrate with Meta-Transaction\"}\n                                      checked={this.state.metaTransactionsEnabled}\n                                      onChange={ e => this.toggleMetaTransactionsEnabled(e.target.checked) }\n                                    />\n                                  }\n                                </Flex>\n                            }\n                            {\n                              this.props.tokenConfig.migration.migrationContract.functions.map((functionInfo,i) => {\n                                const functionName = functionInfo.name;\n                                return (\n                                  <RoundButton\n                                    buttonProps={{\n                                      mt:3,\n                                      width:[1,0.5],\n                                      mainColor:this.props.theme.colors.migrate\n                                    }}\n                                    key={`migrate_${i}`}\n                                    handleClick={ e => this.migrate(e,functionName) }\n                                  >\n                                    { functionInfo.label }\n                                  </RoundButton>\n                                )\n                              })\n                            }\n                            </Flex>\n                          </Flex>\n                        </DashboardCard>\n                      )\n                    ) : this.state.processing.approve.loading ? (\n                      <Flex\n                        mt={3}\n                        flexDirection={'column'}\n                      >\n                        <TxProgressBar\n                          {...this.props}\n                          waitText={`Approve estimated in`}\n                          hash={this.state.processing.approve.txHash}\n                          endMessage={`Finalizing approve request...`}\n                          cancelTransaction={this.cancelTransaction.bind(this)}\n                        />\n                      </Flex>\n                    ) : (\n                      <DashboardCard\n                        cardProps={{\n                          p:3,\n                          mt:2,\n                        }}\n                      >\n                        <Flex\n                          alignItems={'center'}\n                          flexDirection={'column'}\n                        >\n                          <Icon\n                            size={'2.3em'}\n                            name={'LockOpen'}\n                            color={'cellText'}\n                          />\n                          <Text\n                            mt={1}\n                            fontSize={2}\n                            color={'cellText'}\n                            textAlign={'center'}\n                          >\n                            {\n                              this.props.approveText ? this.props.approveText : `To migrate your ${ !this.props.isMigrationTool ? 'old' : '' } ${this.state.oldTokenName} you need to approve our Smart-Contract first.`\n                            }\n                          </Text>\n                          <RoundButton\n                            buttonProps={{\n                              mt:3,\n                              width:[1,1/2]\n                            }}\n                            handleClick={this.approveMigration.bind(this)}\n                          >\n                            Approve\n                          </RoundButton>\n                        </Flex>\n                      </DashboardCard>\n                    )\n                  }\n                </Flex>\n              ) : (\n                !this.state.processing[this.state.action].loading ? (\n                  <Flex\n                    mt={3}\n                    flexDirection={'column'}\n                  >\n                    <Input\n                      min={0}\n                      type={\"number\"}\n                      required={true}\n                      height={'3.4em'}\n                      borderRadius={2}\n                      fontWeight={500}\n                      className={styles.input}\n                      borderColor={'cardBorder'}\n                      backgroundColor={'cardBg'}\n                      boxShadow={'none !important'}\n                      onChange={this.changeInputValue.bind(this)}\n                      border={`1px solid ${this.props.theme.colors.divider}`}\n                      placeholder={`Insert ${this.state.oldTokenName} amount`}\n                      value={this.state.inputValue[this.state.action] !== null ? this.functionsUtil.BNify(this.state.inputValue[this.state.action]).toString() : ''}\n                    />\n                    <Flex\n                      mt={3}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                      justifyContent={'space-between'}\n                    >\n                      <FastBalanceSelector\n                        percentage={25}\n                        onMouseDown={()=>this.setFastBalanceSelector(25)}\n                        isActive={this.state.fastBalanceSelector[this.state.action] === parseInt(25)}\n                      />\n                      <FastBalanceSelector\n                        percentage={50}\n                        onMouseDown={()=>this.setFastBalanceSelector(50)}\n                        isActive={this.state.fastBalanceSelector[this.state.action] === parseInt(50)}\n                      />\n                      <FastBalanceSelector\n                        percentage={75}\n                        onMouseDown={()=>this.setFastBalanceSelector(75)}\n                        isActive={this.state.fastBalanceSelector[this.state.action] === parseInt(75)}\n                      />\n                      <FastBalanceSelector\n                        percentage={100}\n                        onMouseDown={()=>this.setFastBalanceSelector(100)}\n                        isActive={this.state.fastBalanceSelector[this.state.action] === parseInt(100)}\n                      />\n                    </Flex>\n                    <Flex\n                      mt={3}\n                      justifyContent={'center'}\n                    >\n                      <RoundButton\n                        buttonProps={{\n                          width:[1,1/2],\n                          disabled:this.state.buttonDisabled,\n                          style:{\n                            textTransform:'capitalize'\n                          }\n                        }}\n                        handleClick={this.state.buttonDisabled ? null : this.executeAction.bind(this) }\n                      >\n                        {this.state.action}\n                      </RoundButton>\n                    </Flex>\n                  </Flex>\n                ) : (\n                  <Flex\n                    mt={4}\n                    flexDirection={'column'}\n                  >\n                    <TxProgressBar\n                      {...this.props}\n                      cancelTransaction={this.cancelTransaction.bind(this)}\n                      hash={this.state.processing[this.state.action].txHash}\n                      endMessage={`Finalizing ${this.state.action} request...`}\n                      waitText={`${this.functionsUtil.capitalize(this.state.action)} estimated in`}\n                    />\n                  </Flex>\n                )\n              )\n            }\n          </Box>\n        ) : (\n          <Flex\n            width={1}\n            alignItems={'center'}\n            flexDirection={'column'}\n            justifyContent={'center'}\n          >\n            {\n              (!this.props.isMigrationTool && this.state.migrationEnabled) && \n                <SkipMigrationComponent />\n            }\n            {\n              this.props.children ? this.props.children : null\n            }\n          </Flex>\n        )\n      )\n    )\n  }\n}\n\nexport default Migrate;","import React, { Component } from 'react';\nimport { Flex, Box, Text } from \"rimble-ui\";\n\nclass ChartCustomTooltipRow extends Component {\n\n  async componentWillMount(){\n    \n  }\n\n  async componentDidUpdate(prevProps,prevState){\n\n  }\n\n  render() {\n    return (\n      <Flex\n        mb={2}\n        width={1}\n        alignItems={'center'}\n        flexDirection={'row'}\n      >\n        <Flex\n          pr={2}\n          style={{\n            flexBasis:'0',\n            flex:'1 1 0px'\n          }}\n          alignItems={'center'}\n          justifyContent={'flex-start'}\n        > \n          {\n            this.props.color && \n            <Box\n              mr={2}\n              width={'10px'}\n              height={'10px'}\n              borderRadius={'50%'}\n              backgroundColor={this.props.color}\n            >\n            </Box>\n          }\n          <Text\n            fontSize={1}\n            fontWeight={2}\n            textAlign={'left'}\n            color={'dark-gray'}\n            style={{\n              textTransform:'capitalize'\n            }}\n          >\n            {this.props.label}\n          </Text>\n        </Flex>\n        <Flex\n          style={{\n            flexBasis:'0',\n            flex:'1 1 0px'\n          }}\n          alignItems={'center'}\n          justifyContent={'flex-end'}\n        >\n          <Text\n            fontSize={1}\n            fontWeight={3}\n            color={'cellText'}\n            textAlign={'right'}\n            style={{\n              whiteSpace:'nowrap'\n            }}\n            dangerouslySetInnerHTML={{\n              __html: this.props.value\n            }}\n          >\n          </Text>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default ChartCustomTooltipRow;\n","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport TableRow from '../TableRow/TableRow';\nimport AssetField from '../AssetField/AssetField';\nimport TableHeader from '../TableHeader/TableHeader';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass AssetsList extends Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  render() {\n\n    let enabledTokens = this.props.enabledTokens;\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    return (\n      <Flex id=\"assets-list-container\" width={1} flexDirection={'column'}>\n        <TableHeader\n          {...this.props}\n          cols={this.props.cols}\n          isMobile={this.props.isMobile}\n        />\n        <Flex id=\"assets-list\" flexDirection={'column'}>\n          {\n            enabledTokens.map(token => {\n              const tokenConfig = this.props.availableTokens[token];\n              if (!tokenConfig){\n                return null;\n              }\n              return (\n                <TableRow\n                  token={token}\n                  {...this.props}\n                  key={`asset-${token}`}\n                  tokenConfig={tokenConfig}\n                  rowId={`asset-col-${token}`}\n                  cardId={`asset-card-${token}`}\n                  fieldComponent={this.props.fieldComponent || AssetField}\n                />\n              );\n            })\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default AssetsList;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"footer\":\"Footer_footer__38P6I\",\"link\":\"Footer_link__13yZU\"};","import React from \"react\";\nimport styles from './ModalCard.module.scss';\nimport { Box, Flex, Card, Button, Heading, Image } from \"rimble-ui\";\n\nconst ModalCard = ({children, closeFunc, ...props}) => (\n  <Card\n    p={0}\n    border={0}\n    mx={'auto'}\n    my={'auto'}\n    height={'auto'}\n    borderRadius={2}\n    overflow={'auto'}\n    width={ props.width ? props.width : 'auto' }\n    minWidth={ props.minWidth ? props.minWidth : 'auto' }\n    maxWidth={ props.maxWidth ? props.maxWidth : '960px'}\n  >\n    <Box\n      top={'0'}\n      zIndex={1}\n      right={'0'}\n      position={\"absolute\"}\n    >\n      <Button.Text\n        icononly\n        icon={\"Close\"}\n        size={'2.5em'}\n        onClick={closeFunc}\n        mainColor={ props.mainColor ? props.mainColor :  'copyColor' }\n      />\n    </Box>\n    <Flex\n      height={'100%'}\n      flex={'1 1 auto'}\n      flexDirection={'column'}\n      className={[ props.bgLayer ? styles.bg : null]}\n      style={{\n        overflow: 'auto',\n        backgroundRepeat:'no-repeat',\n        backgroundPosition:'bottom right',\n        backgroundSize: !props.background ? '65%' : null,\n        backgroundImage:'url(/images/bg-bottom-right.png)',\n        background: props.background ? props.background : null,\n      }}\n      backgroundColor={'cardBg'}\n    >\n      {children}\n    </Flex>\n  </Card>\n);\n\nModalCard.Header = (props) => (\n  <Box\n    width={1}\n    mb={[2,3]}\n    pb={[2,2]}\n    pt={ props.pt ? props.pt : (props.icon ? 3 : [5,3]) }\n    borderBottom={ props.borderBottom ? props.borderBottom : '1px solid #eee' }\n  >\n    <Flex\n      px={[1,2]}\n      alignItems={'center'}\n      flexDirection={'column'}\n    >\n      { props.icon && <Image width={ props.iconHeight ? props.iconHeight : '50px' } src={props.icon} /> }\n      <Heading.h3\n        mb={0}\n        fontSize={[3,3]}\n        color={'copyColor'}\n        textAlign={'center'}\n        mt={props.icon ? 2 : 0}\n        fontFamily={'sansSerif'}\n        {...props.titleProps}\n      >\n        {props.title}\n      </Heading.h3>\n      {\n        props.subtitle &&\n        <Heading.h4\n          pt={[1,2]}\n          fontWeight={2}\n          fontSize={[2,2]}\n          lineHeight={1.5}\n          color={'dark-gray'}\n          textAlign={'center'}\n          {...props.subtitleProps}\n        >\n          {props.subtitle}\n        </Heading.h4>\n      }\n      {\n        props.subtitle2 &&\n        <Heading.h4 pt={0} fontSize={[2,2]} textAlign={'center'} fontWeight={2} lineHeight={1.5} color={'dark-gray'}>\n          {props.subtitle2}\n        </Heading.h4>\n      }\n    </Flex>\n  </Box>\n);\n\nModalCard.Body = ({children, ...props}) => (\n  <Box\n    width={1}\n    px={[3,5]}\n    {...props}\n  >\n    {children}\n  </Box>\n);\n/*\nModalCard.Body = ({children, ...props}) => (\n  <Flex flex={'1 1 auto'} style={{ overflow: 'auto' }} >\n    <Box width={1} px={[4,5]} py={[3,4]} m={'auto'}>\n      {children}\n    </Box>\n  </Flex>\n);\n*/\n\nModalCard.Footer = ({children, ...props}) => (\n  <Flex\n    flex={'1 0 auto'}\n    justifyContent={'center'}\n    borderTop={1}\n    borderColor={'light-gray'}\n    px={[0,3]}\n    py={3}\n  >\n    {children}\n  </Flex>\n);\n\n\nModalCard.BackButton = ({onClick, ...props}) => (\n  <Box\n    position={'absolute'}\n    top={'0'}\n    left={'0'}\n    m={3}\n    bg={'white'}\n  >\n    <Button.Outline\n      onClick={onClick}\n      icononly\n      icon={'ArrowBack'}\n      size={'2.5em'}\n    />\n  </Box>\n);\n\nexport default ModalCard;\n","import { tint, shade, readableColor } from 'polished';\n\n// rimble base colors\nconst baseColors = {\n  black: '#000e1a',\n  white: '#FFF',\n  blue: '#0036ff',\n  darkBlue: '#0028be',\n  green: '#28C081',\n  yellow: '#FD9D28',\n  red: '#DC2C10',\n  blurple: '#4E3FCE',\n  consensysblue: '#3259D6',\n};\n\n// rimble palette\nconst colors = {\n  blurple: {\n    base: baseColors.blurple,\n    text: readableColor(baseColors.blurple),\n    light: [null, tint(0.2, baseColors.blurple)],\n    dark: [null, shade(0.2, baseColors.blurple)],\n  },\n  blue: {\n    base: baseColors.blue,\n    text: readableColor(baseColors.blue),\n    light: [null, tint(0.9, baseColors.blue)],\n    dark: [null, shade(0.4, baseColors.blue)],\n  },\n  green: {\n    base: baseColors.green,\n    text: baseColors.white,\n    light: [null, tint(0.9, baseColors.green)],\n    dark: [null, shade(0.4, baseColors.green)],\n  },\n  yellow: {\n    base: baseColors.yellow,\n    text: readableColor(baseColors.yellow),\n    light: [null, tint(0.9, baseColors.yellow)],\n    dark: [null, shade(0.4, baseColors.yellow)],\n  },\n  red: {\n    base: baseColors.red,\n    text: readableColor(baseColors.red),\n    light: [null, tint(0.9, baseColors.red)],\n    dark: [null, shade(0.4, baseColors.red)],\n  },\n};\n\nconst blurple = colors.blurple;\nconst blue = colors.blue;\nconst green = colors.green;\nconst yellow = colors.yellow;\nconst red = colors.red;\n\nexport { blurple };\nexport { blue };\nexport { green };\nexport { yellow };\nexport { red };\nexport default baseColors;\n","import { Flex, Icon } from \"rimble-ui\";\nimport React, { Component } from 'react';\n\nclass VariationNumber extends Component {\n\n  render() {\n\n    const IconDirection = () => (\n      <Icon\n        color={ this.props.direction === 'up' ?  '#6dd400' : '#f7b500' }\n        name={ this.props.direction === 'up' ?  'ArrowDropUp' : 'ArrowDropDown' }\n        size={ this.props.iconSize ? this.props.iconSize : ( this.props.isMobile ? '1.4em' : '2em') }\n      />\n    );\n\n    return (\n      <Flex\n        alignItems={'center'}\n        flexDirection={'row'}\n        width={ this.props.width ? this.props.width : 1 }\n        justifyContent={this.props.justifyContent ? this.props.justifyContent : 'center'}\n      >\n        {\n          (!this.props.iconPos || this.props.iconPos==='left') &&\n            <IconDirection />\n        }\n        {this.props.children}\n        {\n          this.props.iconPos==='right' &&\n            <IconDirection />\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default VariationNumber;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"searchInput\":\"GenericSelector_searchInput__vl2hJ\",\"genericSelector\":\"GenericSelector_genericSelector__1Nqkd\",\"dark\":\"GenericSelector_dark__zCOnP\",\"searchInputHidden\":\"GenericSelector_searchInputHidden__2Zm1B\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loading-dots\":\"LoadingSpinner_loading-dots__2-3YZ\",\"loading-dots--dot\":\"LoadingSpinner_loading-dots--dot__2Y25C\",\"dot-keyframes\":\"LoadingSpinner_dot-keyframes__3SU_M\"};","import {\n  Link as RouterLink,\n} from \"react-router-dom\";\nimport ExtLink from '../ExtLink/ExtLink';\nimport React, { Component } from 'react';\nimport styles from './Footer.module.scss';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport { Flex, Text, Heading, Image, Link } from 'rimble-ui';\n\nclass Footer extends Component {\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount() {\n    this.loadUtils();\n  }\n\n  render() {\n    const currYear = new Date().getFullYear();\n    const governanceEnabled = this.functionsUtil.getGlobalConfig(['governance','enabled']);\n    const columnWidth = governanceEnabled ? 1/4 : 1/3;\n    return (\n      <Flex\n        pl={0}\n        id={\"footer\"}\n        alignItems={'center'}\n        flexDirection={'column'}\n        className={styles.footer}\n        backgroundColor={'white'}\n        justifyContent={'flex-start'}\n      >\n        <Flex\n          width={1}\n          px={[3,6]}\n          justifyContent={'center'}\n        >\n          <Flex\n            width={1}\n            height={['auto','100%']}\n            alignItems={'flex-start'}\n            maxWidth={['35em','70em']}\n            justifyContent={'flex-start'}\n            flexDirection={['column','row']}\n          >\n            <Flex width={[1,columnWidth]} flexDirection={'column'} height={['auto','100%']}>\n              <Heading.h3 textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,3]} my={3} color={'dark-gray'}>\n                Resources\n              </Heading.h3>\n              <Flex width={1} flexDirection={'column'}>\n                <ExtLink\n                  pb={[3,2]}\n                  color={'blue'}\n                  fontSize={[3,2]}\n                  hoverColor={'blue'}\n                  fontFamily={'sansSerif'}\n                  textAlign={['center','left']}\n                  href={'https://developers.idle.finance'}\n                >\n                  <span role=\"img\" aria-label=\"documentation\">📚</span> Documentation\n                </ExtLink>\n                <ExtLink\n                  pb={[3,2]}\n                  color={'blue'}\n                  fontSize={[3,2]}\n                  hoverColor={'blue'}\n                  fontFamily={'sansSerif'}\n                  textAlign={['center','left']}\n                  href={'https://www.notion.so/idlelabs/Idle-Finance-Brand-Assets-fd63e4161cb64c999531646c7549bc4b'}\n                >\n                  <span role=\"img\" aria-label=\"brand-assets\">🎨</span> Brand Assets\n                </ExtLink>\n                <Flex pb={[3,2]} width={1} justifyContent={['center','flex-start']}>\n                  <RouterLink\n                    color={'blue'}\n                    to=\"/terms-of-service\"\n                    className={styles.link}\n                  >\n                    <Text\n                      fontWeight={3}\n                      color={'blue'}\n                      fontSize={[3,2]}\n                      hoverColor={'blue'}\n                      fontFamily={'sansSerif'}\n                      textAlign={['center','left']}\n                    >\n                      <span role=\"img\" aria-label=\"terms-of-service\">📑</span> Terms of Service\n                    </Text>\n                  </RouterLink>\n                </Flex>\n                <ExtLink\n                  pb={[3,2]}\n                  color={'blue'}\n                  fontSize={[3,2]}\n                  hoverColor={'blue'}\n                  fontFamily={'sansSerif'}\n                  textAlign={['center','left']}\n                  href={'https://www.iubenda.com/privacy-policy/61211749'}\n                >\n                  <span role=\"img\" aria-label=\"privacy-policy\">🕵️‍♂️</span> Privacy Policy\n                </ExtLink>\n                <ExtLink\n                  pb={[3,2]}\n                  color={'blue'}\n                  fontSize={[3,2]}\n                  hoverColor={'blue'}\n                  fontFamily={'sansSerif'}\n                  textAlign={['center','left']}\n                  href={'https://www.iubenda.com/privacy-policy/61211749/cookie-policy'}\n                >\n                  <span role=\"img\" aria-label=\"cookie-policy\">🍪</span> Cookie Policy\n                </ExtLink>\n              </Flex>\n            </Flex>\n            {\n              governanceEnabled && \n                <Flex width={[1,columnWidth]} flexDirection={'column'} height={['auto','100%']}>\n                  <Heading.h3 textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,3]} my={3} color={'dark-gray'}>\n                    Governance\n                  </Heading.h3>\n                  <Flex width={1} flexDirection={'column'}>\n                    <Flex pb={[3,2]} width={1} justifyContent={['center','flex-start']}>\n                      <RouterLink\n                        color={'blue'}\n                        to={\"/governance\"}\n                        className={styles.link}\n                      >\n                        <Text textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} fontWeight={3} color={'blue'} hoverColor={'blue'}>\n                          <span role=\"img\" aria-label=\"governance-overview\">🏛</span> Overview\n                        </Text>\n                      </RouterLink>\n                    </Flex>\n                    <Flex pb={[3,2]} width={1} justifyContent={['center','flex-start']}>\n                      <RouterLink\n                        color={'blue'}\n                        className={styles.link}\n                        to={\"/governance/proposals\"}\n                      >\n                        <Text textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} fontWeight={3} color={'blue'} hoverColor={'blue'}>\n                          <span role=\"img\" aria-label=\"governance-proposals\">💡</span> Proposals\n                        </Text>\n                      </RouterLink>\n                    </Flex>\n                    <Flex pb={[3,2]} width={1} justifyContent={['center','flex-start']}>\n                      <RouterLink\n                        color={'blue'}\n                        className={styles.link}\n                        to={\"/governance/leaderboard\"}\n                      >\n                        <Text textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} fontWeight={3} color={'blue'} hoverColor={'blue'}>\n                          <span role=\"img\" aria-label=\"governance-leaderboard\">📋</span> Leaderboard\n                        </Text>\n                      </RouterLink>\n                    </Flex>\n                    <Flex pb={[3,2]} width={1} justifyContent={['center','flex-start']}>\n                      <ExtLink href=\"https://gov.idle.finance/\">\n                        <Text textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} fontWeight={3} color={'blue'} hoverColor={'blue'}>\n                          <span role=\"img\" aria-label=\"governance-forum\">🤝</span> Forum\n                        </Text>\n                      </ExtLink>\n                    </Flex>\n                    <Flex pb={[3,2]} width={1} justifyContent={['center','flex-start']}>\n                      <ExtLink href=\"https://www.notion.so/idlelabs/ffe8115b7b53489ab0a7f84e656e4bb0?v=916250f54ff24daabad72cf095fd6d88\">\n                        <Text textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} fontWeight={3} color={'blue'} hoverColor={'blue'}>\n                          <span role=\"img\" aria-label=\"governance-forum\">🌎</span> Team\n                        </Text>\n                      </ExtLink>\n                    </Flex>\n                  </Flex>\n                </Flex>\n            }\n            <Flex width={[1,columnWidth]} flexDirection={'column'} height={['auto','100%']}>\n              <Heading.h3 textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,3]} my={3} color={'dark-gray'}>\n                Start a Conversation\n              </Heading.h3>\n              <Link textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} color={'blue'} hoverColor={'blue'}>\n                <span role=\"img\" aria-label=\"email\">✉️</span> info@idle.finance\n              </Link>\n            </Flex>\n            <Flex width={[1,columnWidth]} flexDirection={'column'}>\n              <Heading.h3 textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,3]} my={3} color={'dark-gray'}>\n                Explore\n              </Heading.h3>\n              <Flex flexDirection={'row'} justifyContent={['space-evenly','flex-start']}>\n                <ExtLink href=\"https://twitter.com/idlefinance\">\n                  <Image src=\"images/social/twitter.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://t.me/idlefinance\">\n                  <Image src=\"images/social/telegram.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://discord.gg/mpySAJp\">\n                  <Image src=\"images/social/discord.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://medium.com/@idlefinance\">\n                  <Image src=\"images/social/medium.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://github.com/Idle-Labs/\">\n                  <Image src=\"images/social/github.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://www.linkedin.com/company/idlefinance\">\n                  <Image src=\"images/social/linkedin.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://defipulse.com/defi-list\">\n                  <Image src=\"images/social/defi-pulse.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n              </Flex>\n            </Flex>\n          </Flex>\n        </Flex>\n        <Flex\n          width={1}\n          height={['auto','100%']}\n          flexDirection={'column'}\n          alignItems={['center','flex-end']}\n          justifyContent={['center','flex-end']}\n        >\n          <Flex\n            p={2}\n            width={1}\n            alignItems={'center'}\n            justifyContent={'center'}\n            backgroundColor={'dark-blue'}\n            flexDirection={['column','row']}\n          >\n            <Text\n              color={'white'}\n              textAlign={['center','flex-end']}\n            >\n              &copy; {currYear} - Idle Labs Inc.\n            </Text>\n            <RouterLink\n              color={'blue'}\n              to={'/terms-of-service'}\n              style={{textDecoration:'none'}}\n            >\n              <Text\n                pl={2}\n                color={'#0df'}\n                textAlign={['center','flex-end']}\n              >\n                Terms of Service\n              </Text>\n            </RouterLink>\n          </Flex>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default Footer;\n","import React, { Component } from 'react';\nimport styles from './TableCellHeader.module.scss';\nimport { Flex, Heading, Icon, Link, Tooltip } from \"rimble-ui\";\n\nclass TableCellHeader extends Component {\n  render() {\n\n    const ColTitle = (props) => (\n      <Heading.h4\n        fontWeight={[3,4]}\n        color={'cellTitle'}\n        style={{\n          width:'100%',\n          whiteSpace:'nowrap'\n        }}\n        fontSize={['10px',3]}\n        lineHeight={'initial'}\n        {...props}\n      >\n        {props.children}\n      </Heading.h4>\n    );\n\n    return (\n      <Flex\n        width={this.props.width}\n      >\n        {\n          (this.props.desc && this.props.desc.length>1) ? (\n            <Flex\n              alignItems={'center'}\n            >\n              <ColTitle\n                {...this.props}\n              />\n              <Link\n                style={{\n                  cursor:'pointer'\n                }}\n                onClick={ e => this.props.openTooltipModal(this.props.title,this.props.desc) }\n              >\n                <Tooltip\n                  placement={'top'}\n                  message={'Click to read the description'}\n                >\n                  <Icon\n                    ml={1}\n                    name={\"Info\"}\n                    color={'cellTitle'}\n                    className={styles.tooltip}\n                    size={ this.props.isMobile ? '1em' : '1.2em'}\n                  />\n                </Tooltip>\n              </Link>\n            </Flex>\n          ) : (\n            <ColTitle\n              {...this.props}\n            />\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default TableCellHeader;\n","import { Flex, Text } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass ChartCustomTooltip extends Component {\n\n  async componentWillMount(){\n\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    \n  }\n\n  render() {\n    return (\n      <DashboardCard\n        key={this.props.point.id}\n        cardProps={{\n          py:2,\n          px:3,\n          width:1,\n          left: this.props.point.data.itemPos && this.props.point.data.itemPos>50 ? '-110%' : '0'\n        }}\n      >\n        <Flex\n          width={1}\n          flexDirection={'column'}\n        >\n          {\n            this.props.point.data.xFormatted && \n              <Text\n                mb={2}\n                fontSize={1}\n                fontWeight={3}\n                color={'cellText'}\n                textAlign={'left'}\n              >\n                {this.props.point.data.xFormatted}\n              </Text>\n          }\n          {this.props.children}\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default ChartCustomTooltip;\n","import React, { Component } from 'react';\nimport SmartNumber from '../SmartNumber/SmartNumber';\nimport { Text, Icon, Image, Button } from \"rimble-ui\";\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass CustomField extends Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n  componentUnmounted = false;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n    \n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  render(){\n    const fieldInfo = this.props.fieldInfo;\n\n    const fieldProps = {\n      fontWeight:3,\n      fontSize:[0,2],\n      color:'cellText'\n    };\n\n    // Replace props\n    if (fieldInfo.props && Object.keys(fieldInfo.props).length){\n      Object.keys(fieldInfo.props).forEach(p => {\n        fieldProps[p] = fieldInfo.props[p];\n      });\n    }\n\n    // Merge with funcProps\n    if (fieldInfo.funcProps && Object.keys(fieldInfo.funcProps).length){\n      Object.keys(fieldInfo.funcProps).forEach(p => {\n        if (typeof fieldInfo.funcProps[p]==='function'){\n          fieldProps[p] = fieldInfo.funcProps[p](this.props);\n        }\n      });\n    }\n\n    let CustomComponent = null;\n    let componentHasChildren = false;\n    const fieldType = fieldInfo.type;\n    const fieldPath = fieldInfo.path;\n    let customValue = fieldPath ? this.functionsUtil.getArrayPath(fieldPath,this.props.row) : null;\n\n    switch (fieldType){\n      case 'image':\n        CustomComponent = Image;\n        fieldProps.src = customValue;\n      break;\n      case 'number':\n        customValue = this.functionsUtil.BNify(customValue).toString();\n        CustomComponent = SmartNumber;\n        fieldProps.number = customValue;\n      break;\n      case 'icon':\n        CustomComponent = Icon;\n        fieldProps.name = customValue;\n      break;\n      case 'button':\n        CustomComponent = Button;\n        componentHasChildren = true;\n        customValue = fieldInfo.label || fieldProps.label;\n        fieldProps.onClick=() => fieldProps.handleClick(this.props)\n      break;\n      default:\n        CustomComponent = Text;\n        componentHasChildren = true;\n      break;\n    }\n\n    if (!customValue){\n      return null;\n    }\n\n    // Add custom field extra props\n    if (fieldPath){\n      const customFieldName = Object.values(fieldPath).pop();\n      if (this.props.row[`${customFieldName}Props`]){\n        const customFieldProps = this.props.row[`${customFieldName}Props`];\n        // Replace props\n        if (customFieldProps && Object.keys(customFieldProps).length){\n          Object.keys(customFieldProps).forEach(p => {\n            fieldProps[p] = customFieldProps[p];\n          });\n        }\n      }\n    }\n\n    return CustomComponent ? (componentHasChildren ? (<CustomComponent {...fieldProps}>{customValue}</CustomComponent>) : (<CustomComponent {...fieldProps} />) ) : null;\n  }\n}\n\nexport default CustomField;","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport TableRow from '../TableRow/TableRow';\nimport CustomField from '../CustomField/CustomField';\nimport TableHeader from '../TableHeader/TableHeader';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass CustomList extends Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  render() {\n\n    return (\n      <Flex id=\"custom-list-container\" width={1} flexDirection={'column'}>\n        <TableHeader\n          {...this.props}\n          cols={this.props.cols}\n          isMobile={this.props.isMobile}\n        />\n        <Flex id=\"custom-list\" flexDirection={'column'}>\n          {\n            this.props.rows.map( (row,rowIndex) => {\n              return (\n                <TableRow\n                  row={row}\n                  {...this.props}\n                  key={`asset-${rowIndex}`}\n                  fieldComponent={CustomField}\n                  rowId={`asset-col-${rowIndex}`}\n                  cardId={`asset-card-${rowIndex}`}\n                />\n              );\n            })\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default CustomList;","import React, { Component } from 'react';\nimport { Flex, Loader, Text } from \"rimble-ui\";\n\nclass FlexLoader extends Component {\n  render() {\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        justifyContent={'center'}\n        {...this.props.flexProps}\n      >\n        <Loader {...this.props.loaderProps} />\n        {\n          this.props.text &&\n            <Text {...this.props.textProps}>{this.props.text}</Text>\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default FlexLoader;\n","import { Heading } from \"rimble-ui\";\nimport React, { Component } from 'react';\n\nclass Title extends Component {\n  render() {\n    const props = {\n      fontWeight:4,\n      fontSize:[4,6],\n      color:'copyColor',\n      textAlign:'center',\n      lineHeight:'initial',\n    };\n\n    // Replace props\n    if (this.props && Object.keys(this.props).length){\n      Object.keys(this.props).forEach(p => {\n        props[p] = this.props[p];\n      });\n    }\n\n    const HeadingComponent = this.props.component ? this.props.component : Heading.h1;\n\n    return (\n      <HeadingComponent\n        {...props}\n      >\n        {this.props.children}\n      </HeadingComponent>\n    );\n  }\n}\n\nexport default Title;\n","import { Line } from '@nivo/line';\nimport CountUp from 'react-countup';\nimport React, { Component } from 'react';\nimport { linearGradientDef } from '@nivo/core'\nimport SmartNumber from '../SmartNumber/SmartNumber';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericChart from '../GenericChart/GenericChart';\nimport CustomTooltip from '../CustomTooltip/CustomTooltip';\nimport VariationNumber from '../VariationNumber/VariationNumber';\nimport AllocationChart from '../AllocationChart/AllocationChart';\nimport CustomTooltipRow from '../CustomTooltip/CustomTooltipRow';\nimport { Image, Text, Loader, Button, Tooltip, Icon, Flex } from \"rimble-ui\";\n\nclass AssetField extends Component {\n\n  state = {\n    ready:false\n  };\n\n  // Utils\n  functionsUtil = null;\n  componentUnmounted = false;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n    this.loadField();\n  }\n\n  async setStateSafe(newState,callback=null) {\n    if (!this.componentUnmounted){\n      return this.setState(newState,callback);\n    }\n    return null;\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const tokenChanged = prevProps.token !== this.props.token;\n    const accountChanged = prevProps.account !== this.props.account;\n    const mobileChanged = prevProps.isMobile !== this.props.isMobile;\n    const themeModeChanged = prevProps.themeMode !== this.props.themeMode;\n    const fieldChanged = prevProps.fieldInfo.name !== this.props.fieldInfo.name;\n    const contractInitialized = prevProps.contractsInitialized !== this.props.contractsInitialized && this.props.contractsInitialized;\n    const transactionsChanged = prevProps.transactions && this.props.transactions && Object.values(prevProps.transactions).filter(tx => (tx.status==='success')).length !== Object.values(this.props.transactions).filter(tx => (tx.status==='success')).length;\n\n    if (fieldChanged || tokenChanged || accountChanged || transactionsChanged || (contractInitialized && !this.state.ready)){\n      this.setStateSafe({\n        ready:false\n      },() => {\n        this.loadField();\n      });\n    } else if (mobileChanged || themeModeChanged){\n      const oldState = Object.assign({},this.state);\n      this.setStateSafe({\n        ready:false\n      },() => {\n        this.setState(oldState);\n      });\n    }\n  }\n\n  loadField = async(fieldName=null) => {\n    // Exit if component unmounted\n    // console.log('loadField',this.props.fieldInfo.name,this.props.account,this.props.token,this.props.tokenConfig);\n\n    if (this.componentUnmounted || !this.props.token || !this.props.tokenConfig){\n      return false;\n    }\n\n    const isRisk = this.props.selectedStrategy === 'risk';\n\n    const setState = fieldName === null;\n    const fieldInfo = this.props.fieldInfo;\n    if (!fieldName){\n      fieldName = fieldInfo.name;\n    }\n\n    const fieldProps = fieldInfo.props;\n    const decimals = fieldProps && fieldProps.decimals ? fieldProps.decimals : ( this.props.isMobile ? 2 : 3 );\n    // const addCurveApy = typeof this.props.addCurveApy !== 'undefined' ? this.props.addCurveApy : false;\n    const addGovTokens = typeof this.props.addGovTokens !== 'undefined' ? this.props.addGovTokens : true;\n\n    let output = null;\n    if (this.props.token){\n      switch (fieldName){\n        case 'tokenBalance':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              tokenBalance:output.toString()\n            });\n          }\n        break;\n        case 'govTokens':\n          const govTokens = this.functionsUtil.getTokenGovTokens(this.props.tokenConfig);\n          const getGovTokensDistributionSpeed = await this.functionsUtil.getGovTokensDistributionSpeed(this.props.tokenConfig);\n          this.setStateSafe({\n            govTokens,\n            getGovTokensDistributionSpeed\n          });\n        break;\n        case 'tokenPrice':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            let tokenPrice = '-';\n            if (typeof this.props.tokenConfig.showPrice === 'undefined' || this.props.tokenConfig.showPrice){\n              tokenPrice = output.toString();\n            }\n            this.setStateSafe({\n              tokenPrice\n            });\n          }\n        break;\n        case 'fee':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              fee:output.toString()\n            });\n          }\n        break;\n        case 'amountToMigrate':\n          const {\n            oldContractBalanceFormatted\n          } = await this.functionsUtil.checkMigration(this.props.tokenConfig,this.props.account,addGovTokens);\n\n          if (setState && oldContractBalanceFormatted){\n            this.setStateSafe({\n              amountToMigrate:oldContractBalanceFormatted.toString()\n            });\n            output = oldContractBalanceFormatted;\n          }\n        break;\n        case 'amountLent':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              amountLent:output.toString()\n            });\n          }\n        break;\n        case 'idleTokenBalance':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              idleTokenBalance:output.toString()\n            });\n          }\n        break;\n        case 'redeemableBalanceCounterCurve':\n          const {\n            redeemableBalanceCurveEnd,\n            redeemableBalanceCurveStart\n          } = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n\n          if (redeemableBalanceCurveStart && redeemableBalanceCurveEnd){\n            if (setState){\n              this.setStateSafe({\n                ready:true,\n                redeemableBalanceCurveEnd,\n                redeemableBalanceCurveStart\n              });\n            }\n\n            output = {\n              redeemableBalanceCurveEnd,\n              redeemableBalanceCurveStart\n            };\n          }\n        break;\n        case 'redeemableBalanceCounter':\n          const {\n            redeemableBalanceEnd,\n            redeemableBalanceStart\n          } = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n\n          if (redeemableBalanceStart && redeemableBalanceEnd){\n            if (setState){\n              this.setStateSafe({\n                ready:true,\n                redeemableBalanceEnd,\n                redeemableBalanceStart\n              });\n            }\n\n            output = {\n              redeemableBalanceEnd,\n              redeemableBalanceStart\n            };\n          }\n        break;\n        case 'earnings':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              earnings:output.toString()\n            });\n          }\n        break;\n        case 'feesCounter':\n          const [earningsCounter,feePercentage] = await Promise.all([\n            this.loadField('earningsCounter'),\n            this.functionsUtil.getTokenFees(this.props.tokenConfig)\n          ]);\n\n          if (earningsCounter && earningsCounter.earningsStart && earningsCounter.earningsEnd && feePercentage){\n\n            const feesStart = earningsCounter.earningsStart.times(feePercentage);\n            const feesEnd = earningsCounter.earningsEnd.times(feePercentage);\n\n            if (setState){\n              this.setStateSafe({\n                ready:true,\n                feesEnd,\n                feesStart\n              });\n            }\n\n            output = {\n              feesEnd,\n              feesStart\n            };\n          }\n        break;\n        case 'earningsCounterCurve':\n          const [curveApy,earningsCurveStart,amountLentCurve] = await Promise.all([\n            this.functionsUtil.getCurveAPY(),\n            this.functionsUtil.loadAssetField('earningsCurve',this.props.token,this.props.tokenConfig,this.props.account,addGovTokens),\n            this.functionsUtil.loadAssetField('amountLentCurve',this.props.token,this.props.tokenConfig,this.props.account,addGovTokens)\n          ]);\n\n          if (amountLentCurve && earningsCurveStart && curveApy){\n            const earningsCurveEnd = amountLentCurve.gt(0) ? amountLentCurve.times(curveApy.div(100)).plus(earningsCurveStart) : 0;\n\n            if (setState){\n              this.setStateSafe({\n                ready:true,\n                earningsCurveEnd,\n                earningsCurveStart\n              });\n            }\n\n            output = {\n              earningsCurveEnd,\n              earningsCurveStart\n            };\n          }\n        break;\n        case 'earningsCounter':\n          let [tokenAPY2,earningsStart,amountLent2] = await Promise.all([\n            this.functionsUtil.loadAssetField('apy',this.props.token,this.props.tokenConfig,this.props.account,addGovTokens),\n            this.functionsUtil.loadAssetField('earnings',this.props.token,this.props.tokenConfig,this.props.account,addGovTokens),\n            this.functionsUtil.loadAssetField('amountLent',this.props.token,this.props.tokenConfig,this.props.account,addGovTokens)\n          ]);\n\n\n          if (amountLent2 && earningsStart && tokenAPY2){\n            const earningsEnd = amountLent2.gt(0) ? amountLent2.times(tokenAPY2.div(100)).plus(earningsStart) : 0;\n\n            if (setState){\n              this.setStateSafe({\n                ready:true,\n                earningsEnd,\n                earningsStart\n              });\n            }\n\n            output = {\n              earningsEnd,\n              earningsStart\n            };\n          }\n        break;\n        case 'redeemableBalance':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              redeemableBalance:output.toString()\n            });\n          }\n        break;\n        case 'score':\n          const tokenScore = await this.functionsUtil.getTokenScore(this.props.tokenConfig,isRisk);\n          if (setState){\n            this.setStateSafe({\n              score:tokenScore ? tokenScore : false\n            });\n          }\n          output = tokenScore;\n        break;\n        case 'pool':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              poolSize:output.toString()\n            });\n          }\n        break;\n        case 'earningsPercCurve':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              earningsPercCurveDirection:parseFloat(output)>0 ? 'up' : 'down',\n              earningsPercCurve:parseFloat(output).toFixed(decimals)\n            });\n          }\n        break;\n        case 'earningsPerc':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              earningsPerc:parseFloat(output).toFixed(decimals),\n              earningsPercDirection:parseFloat(output)>0 ? 'up' : 'down'\n            });\n          }\n        break;\n        case 'apr':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            let tokenAPR = '-';\n            if (typeof this.props.tokenConfig.showAPR === 'undefined' || this.props.tokenConfig.showAPR){\n              tokenAPR = parseFloat(output).toFixed(decimals);\n            }\n            this.setStateSafe({\n              tokenAPR\n            });\n          }\n        break;\n        case 'oldApy':\n          if (this.props.tokenConfig.migration && this.props.tokenConfig.migration.oldContract){\n            const oldTokenConfig = Object.assign({},this.props.tokenConfig);\n            oldTokenConfig.idle = Object.assign({},this.props.tokenConfig.migration.oldContract);\n            oldTokenConfig.protocols = Object.values(this.props.tokenConfig.protocols);\n\n            // Override token with name\n            oldTokenConfig.idle.token = oldTokenConfig.idle.name;\n\n            // Replace protocols with old protocols\n            if (oldTokenConfig.migration.oldProtocols){\n              oldTokenConfig.migration.oldProtocols.forEach( oldProtocol => {\n                const foundProtocol = oldTokenConfig.protocols.find( p => (p.name === oldProtocol.name) );\n                if (foundProtocol){\n                  const protocolPos = oldTokenConfig.protocols.indexOf(foundProtocol);\n                  oldTokenConfig.protocols[protocolPos] = oldProtocol;\n                }\n              });\n            }\n\n            output = await this.functionsUtil.loadAssetField('apy',this.props.token,oldTokenConfig,this.props.account,false);\n\n          } else {\n            output = await this.loadField('apyNoGov');\n          }\n\n          if (output && setState){\n            if (!output.isNaN()){\n              this.setStateSafe({\n                oldAPY:parseFloat(output).toFixed(decimals)\n              });\n            } else {\n              this.setStateSafe({\n                oldAPY:false\n              });\n            }\n          }\n        break;\n        case 'apyNoGov':\n          output = await this.functionsUtil.loadAssetField('apy',this.props.token,this.props.tokenConfig,this.props.account,false);\n          // debugger;\n          if (output && setState){\n            if (!output.isNaN()){\n              this.setStateSafe({\n                tokenAPYNoGov:parseFloat(output).toFixed(decimals)\n              });\n            } else {\n              this.setStateSafe({\n                tokenAPYNoGov:false\n              });\n            }\n          }\n        break;\n        case 'curveApy':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          // debugger;\n          if (output && setState){\n            if (!output.isNaN()){\n              this.setStateSafe({\n                curveApy:parseFloat(output).toFixed(decimals)\n              });\n            } else {\n              this.setStateSafe({\n                curveApy:false\n              });\n            }\n          }\n        break;\n        case 'curveAvgSlippage':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          // debugger;\n          if (output && setState){\n            if (!output.isNaN()){\n              this.setStateSafe({\n                curveAvgSlippage:(parseFloat(output)*100).toFixed(decimals)\n              });\n            } else {\n              this.setStateSafe({\n                curveAvgSlippage:false\n              });\n            }\n          }\n        break;\n\n        case 'apy':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          // debugger;\n          if (output && setState){\n            if (!output.isNaN()){\n              const tokenAPY = parseFloat(output).toFixed(decimals);\n              const showTooltip = !this.props.isMobile && (fieldInfo.showTooltip !== undefined && fieldInfo.showTooltip);\n              const govTokensAprs = showTooltip ? await this.functionsUtil.getGovTokensAprs(this.props.token,this.props.tokenConfig) : null;\n              this.setStateSafe({\n                tokenAPY,\n                govTokensAprs\n              });\n            } else {\n              this.setStateSafe({\n                tokenAPY:false\n              });\n            }\n          }\n        break;\n        case 'allocationChart':\n          let allocationChartWidth = 0;\n          let allocationChartHeight = 0;\n\n          const resizeAllocationChart = () => {\n            const allocationChartRowElement = document.getElementById(this.props.parentId) ? document.getElementById(this.props.parentId) : document.getElementById(this.props.rowId);\n            if (allocationChartRowElement){\n              const $allocationChartRowElement = window.jQuery(allocationChartRowElement);\n              allocationChartWidth = $allocationChartRowElement.innerWidth()-parseFloat($allocationChartRowElement.css('padding-right'))-parseFloat($allocationChartRowElement.css('padding-left'));\n              allocationChartHeight = $allocationChartRowElement.innerHeight();\n\n              // Make it a square\n              allocationChartWidth = parseInt(allocationChartWidth)>0 ? Math.min(allocationChartWidth,allocationChartHeight) : allocationChartHeight;\n              allocationChartHeight = allocationChartWidth;\n\n\n              if (allocationChartWidth !== this.state.allocationChartWidth){\n                if (setState){\n                  this.setStateSafe({\n                    allocationChartWidth,\n                    allocationChartHeight\n                  });\n                }\n              }\n            }\n          }\n\n          // Set chart width and Height and set listener\n          resizeAllocationChart();\n          window.removeEventListener('resize', resizeAllocationChart.bind(this));\n          window.addEventListener('resize', resizeAllocationChart.bind(this));\n\n          if (setState){\n            this.setStateSafe({\n              allocationChartWidth,\n              allocationChartHeight\n            });\n          }\n        break;\n        case 'aprChart':\n          // Set start timestamp for v3 tokens\n          const aprChartEndTimestamp = isRisk ? this.functionsUtil.getGlobalConfig(['stats','versions','v3','endTimestamp']) : null;\n          const aprChartStartTimestamp = isRisk ? aprChartEndTimestamp-(7*24*60*60) : Math.max(this.functionsUtil.getGlobalConfig(['stats','versions','v3','startTimestamp']),parseInt(this.functionsUtil.strToMoment(this.functionsUtil.strToMoment(new Date()).format('DD/MM/YYYY 00:00:00'),'DD/MM/YYYY HH:mm:ss').subtract(7,'days')._d.getTime()/1000));\n\n          // Check for cached data\n          let aprChartData = null;\n          const cachedDataKey = `aprChart_${this.props.tokenConfig.address}_${isRisk}`;\n          const cachedData = this.functionsUtil.getCachedData(cachedDataKey);\n\n          aprChartData = [{\n            id:this.props.token,\n            color: this.props.color ? this.props.color : 'hsl('+this.functionsUtil.getGlobalConfig(['stats','tokens',this.props.token,'color','hsl']).join(',')+')',\n            data: []\n          }];\n\n          if (cachedData !== null){\n            aprChartData = cachedData;\n          } else {\n\n            // FAKE CHART DATA\n            if (this.props.token === 'COMP'){\n              aprChartData[0].data = [];\n              const startTimestamp = new Date().getTime();\n              let y = 20;\n              for (var i=0; i<=16; i++) {\n                const mDate = this.functionsUtil.strToMoment(startTimestamp).add(i,'day');\n                const x = mDate.format(\"YYYY/MM/DD HH:mm\");\n                // Grow\n                if ((i>=5 && i<=10) || (i>=13)){\n                  y+=Math.random()*4+2; // Risk\n                  // y+=Math.random()*7+4; // Best\n                // Decrease\n                } else {\n                  y-=Math.random()*3+1; // Risk\n                  // y-=Math.random()*3+1; // Best\n                }\n                aprChartData[0].data.push({x,y});\n              }\n            } else {\n              const frequencySeconds = this.functionsUtil.getFrequencySeconds('hour',12);\n              const apiResultsAprChart = await this.functionsUtil.getTokenApiData(this.props.tokenConfig.address,isRisk,aprChartStartTimestamp,aprChartEndTimestamp,false,frequencySeconds);\n\n              // if (isRisk){\n              //   debugger;\n              // }\n\n              apiResultsAprChart.forEach((d,i) => {\n                const x = this.functionsUtil.strToMoment(d.timestamp*1000).format(\"YYYY/MM/DD HH:mm\");\n                const y = parseFloat(this.functionsUtil.fixTokenDecimals(d.idleRate,18));\n                aprChartData[0].data.push({ x, y });\n              });\n            }\n\n            this.functionsUtil.setCachedData(cachedDataKey,aprChartData);\n          }\n\n\n          // Add same value\n          if (aprChartData[0].data.length === 1){\n            const newPoint = Object.assign({},aprChartData[0].data[0]);\n            newPoint.x = this.functionsUtil.strToMoment(newPoint,\"YYYY/MM/DD HH:mm\").add(1,'hours').format(\"YYYY/MM/DD HH:mm\")\n            aprChartData[0].data.push(newPoint);\n          }\n\n          let aprChartWidth = 0;\n          let aprChartHeight = 0;\n\n          const resizeAprChart = () => {\n            const aprChartRowElement = document.getElementById(this.props.parentId) ? document.getElementById(this.props.parentId) : document.getElementById(this.props.rowId);\n            if (aprChartRowElement){\n              const $aprChartRowElement = window.jQuery(aprChartRowElement);\n              aprChartWidth = $aprChartRowElement.innerWidth()-parseFloat($aprChartRowElement.css('padding-right'))-parseFloat($aprChartRowElement.css('padding-left'));\n              aprChartHeight = $aprChartRowElement.innerHeight();\n              if (aprChartWidth !== this.state.aprChartWidth || !this.state.aprChartHeight){\n                this.setStateSafe({\n                  aprChartWidth,\n                  aprChartHeight: this.state.aprChartHeight ? this.state.aprChartHeight : aprChartHeight\n                });\n              }\n            }\n          }\n\n          // Set chart width and Height and set listener\n          resizeAprChart();\n          window.removeEventListener('resize', resizeAprChart.bind(this));\n          window.addEventListener('resize', resizeAprChart.bind(this));\n\n          // Set chart type\n          const aprChartType = Line;\n\n          const aprChartProps = {\n            pointSize:0,\n            lineWidth:1,\n            useMesh:false,\n            axisLeft:null,\n            animate:false,\n            axisBottom:null,\n            enableArea:true,\n            areaOpacity:0.1,\n            curve:'monotoneX',\n            enableGridX:false,\n            enableGridY:false,\n            pointBorderWidth:2,\n            isInteractive:true,\n            colors:d => d.color,\n            defs:[\n              linearGradientDef('gradientArea', [\n                  { offset: 0, color: '#faf047' },\n                  { offset: 50, color: '#e4b400' },\n              ])\n            ],\n            enableSlices:this.props.isMobile ? false : 'x',\n            yFormat:value => parseFloat(value).toFixed(2)+'%',\n            fill:[\n              { match: { id: this.props.token } , id: 'gradientArea' },\n            ],\n            margin: { top: 10, right: 0, bottom: 0, left: 0 },\n            sliceTooltip:(slideData) => {\n              const { slice } = slideData;\n              const point = slice.points[0];\n              return (\n                <CustomTooltip\n                  point={point}\n                >\n                  {\n                  typeof slice.points === 'object' && slice.points.length &&\n                    slice.points.map(point => {\n                      const protocolName = point.serieId;\n                      const protocolEarning = point.data.yFormatted;\n                      // const protocolApy = point.data.apy;\n                      return (\n                        <CustomTooltipRow\n                          key={point.id}\n                          color={point.color}\n                          label={protocolName}\n                          value={protocolEarning}\n                        />\n                      );\n                    })\n                  }\n                </CustomTooltip>\n              );\n            }\n          };\n\n          if (this.props.chartProps){\n            // Replace props\n            if (this.props.chartProps && Object.keys(this.props.chartProps).length){\n              Object.keys(this.props.chartProps).forEach(p => {\n                aprChartProps[p] = this.props.chartProps[p];\n              });\n            }\n          }\n\n          if (setState){\n            this.setStateSafe({\n              ready:true,\n              aprChartType,\n              aprChartData,\n              aprChartProps,\n              aprChartWidth,\n              aprChartHeight\n            });\n          }\n          output = aprChartData;\n        break;\n        case 'performanceChart':\n          let firstTokenPrice = null;\n          let firstIdleBlock = null;\n          /*\n          let performanceChartWidth = 0;\n          let performanceChartHeight = 0;\n\n          const performanceChartRowElement = document.getElementById(this.props.rowId) ? document.getElementById(this.props.rowId) : document.getElementById(this.props.parentId);\n          if (performanceChartRowElement){\n            performanceChartWidth = parseFloat(performanceChartRowElement.offsetWidth)>0 ? performanceChartRowElement.offsetWidth* (this.props.colProps ? this.props.colProps.width : 1) : 0;\n            performanceChartHeight = parseFloat(performanceChartRowElement.offsetHeight);\n          }\n          */\n\n          let performanceChartWidth = 0;\n          let performanceChartHeight = 0;\n\n          const resizePerformanceChart = () => {\n            const PerformanceChartRowElement = document.getElementById(this.props.parentId) ? document.getElementById(this.props.parentId) : document.getElementById(this.props.rowId);\n            if (PerformanceChartRowElement){\n              const $PerformanceChartRowElement = window.jQuery(PerformanceChartRowElement);\n              performanceChartWidth = $PerformanceChartRowElement.innerWidth()-parseFloat($PerformanceChartRowElement.css('padding-right'))-parseFloat($PerformanceChartRowElement.css('padding-left'));\n              performanceChartHeight = $PerformanceChartRowElement.innerHeight();\n              if (performanceChartWidth !== this.state.performanceChartWidth || !this.state.performanceChartHeight){\n                this.setStateSafe({\n                  performanceChartWidth,\n                  performanceChartHeight: this.state.performanceChartHeight ? this.state.performanceChartHeight : performanceChartHeight\n                });\n              }\n            }\n          }\n\n          // Set chart width and Height and set listener\n          resizePerformanceChart();\n          window.removeEventListener('resize', resizePerformanceChart.bind(this));\n          window.addEventListener('resize', resizePerformanceChart.bind(this));\n\n          const apr_end_date = this.functionsUtil.strToMoment(this.functionsUtil.strToMoment(new Date()).subtract(1,'day').format('YYYY-MM-DD 23:59'),'YYYY-MM-DD HH:mm');\n          const apr_start_date = apr_end_date.clone().subtract(1,'week');\n\n          // Set start timestamp for v3 tokens\n          const apr_start_timestamp =  Math.max(this.functionsUtil.getGlobalConfig(['stats','versions','v3','startTimestamp']),parseInt(apr_start_date._d.getTime()/1000));\n          // const apr_end_timestamp = parseInt(apr_end_date._d.getTime()/1000);\n\n          let apiResultsPerformanceChart = await this.functionsUtil.getTokenApiData(this.props.tokenConfig.address,isRisk,apr_start_timestamp,null,false,43200);\n\n          const idleTokenPerformance = apiResultsPerformanceChart.map((d,i) => {\n            let y = 0;\n            const x = this.functionsUtil.strToMoment(d.timestamp*1000).format(\"YYYY/MM/DD HH:mm\");\n            const tokenPrice = this.functionsUtil.fixTokenDecimals(d.idlePrice,this.props.tokenConfig.decimals);\n\n            if (!firstTokenPrice){\n              firstTokenPrice = tokenPrice;\n            } else {\n              y = parseFloat(tokenPrice.div(firstTokenPrice).minus(1).times(100));\n            }\n\n            if (firstIdleBlock === null){\n              firstIdleBlock = parseInt(d.blocknumber);\n            }\n\n            return { x, y };\n          });\n\n          const performanceChartData = [{\n            id:'Idle',\n            color: 'hsl('+this.functionsUtil.getGlobalConfig(['stats','tokens',this.props.token,'color','hsl']).join(',')+')',\n            data: idleTokenPerformance\n          }];\n\n          // Set chart type\n          const performanceChartType = Line;\n\n          const performanceChartProps = {\n            pointSize:0,\n            lineWidth:1,\n            useMesh:false,\n            animate:false,\n            axisLeft:null,\n            axisBottom:null,\n            enableArea:true,\n            enableGridX:false,\n            enableGridY:false,\n            curve:'monotoneX',\n            enableSlices:false,\n            pointBorderWidth:1,\n            colors:d => d.color,\n            pointLabelYOffset:-12,\n            margin: { top: 0, right: 0, bottom: 0, left: 0 }\n          };\n\n          if (this.props.chartProps){\n            // Replace props\n            if (this.props.chartProps && Object.keys(this.props.chartProps).length){\n              Object.keys(this.props.chartProps).forEach(p => {\n                performanceChartProps[p] = this.props.chartProps[p];\n              });\n            }\n          }\n\n          if (setState){\n            this.setStateSafe({\n              ready:true,\n              performanceChartType,\n              performanceChartData,\n              performanceChartProps,\n              performanceChartWidth,\n              performanceChartHeight\n            });\n          }\n          output = performanceChartData;\n        break;\n        case 'custom':\n          const path = fieldInfo.path;\n          output = this.functionsUtil.getArrayPath(path,this.props.tokenConfig);\n          if (output){\n            this.setStateSafe({\n              [fieldName]:output\n            });\n          }\n        break;\n        default:\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              ready:true,\n              [fieldName]:output\n            });\n          }\n        break;\n      }\n    }\n\n    return output;\n  }\n\n  render(){\n    const fieldInfo = this.props.fieldInfo;\n    let output = null;\n\n    const showLoader = fieldInfo.showLoader === undefined || fieldInfo.showLoader;\n    const loader = showLoader ? (<Loader size=\"20px\" />) : null;\n\n    const fieldProps = {\n      fontWeight:3,\n      fontSize:[0,2],\n      color:'cellText',\n      flexProps:{\n        justifyContent:'flex-start'\n      }\n    };\n\n    // Replace props\n    if (fieldInfo.props && Object.keys(fieldInfo.props).length){\n      Object.keys(fieldInfo.props).forEach(p => {\n        fieldProps[p] = fieldInfo.props[p];\n      });\n    }\n\n    // Merge with funcProps\n    if (fieldInfo.funcProps && Object.keys(fieldInfo.funcProps).length){\n      Object.keys(fieldInfo.funcProps).forEach(p => {\n        if (typeof fieldInfo.funcProps[p]==='function'){\n          fieldProps[p] = fieldInfo.funcProps[p](this.props);\n        }\n      });\n    }\n\n    const tokenConfig = this.props.tokenConfig || this.functionsUtil.getGlobalConfig(['stats','tokens',this.props.token]);\n      \n    const maxPrecision = fieldProps && fieldProps.maxPrecision ? fieldProps.maxPrecision : 5;\n    const decimals = fieldProps && fieldProps.decimals ? fieldProps.decimals : ( this.props.isMobile ? 2 : 3 );\n    const minPrecision = fieldProps && fieldProps.minPrecision ? fieldProps.minPrecision : ( this.props.isMobile ? 3 : 4 );\n\n    switch (fieldInfo.name){\n      case 'iconTooltip':\n        const icon1 = tokenConfig && tokenConfig.icon ? tokenConfig.icon : `images/tokens/${this.props.token}.svg`;\n        output = (\n          <Tooltip\n            placement={'top'}\n            message={this.props.token}\n            {...fieldInfo.tooltipProps}\n          >\n            <Image src={icon1} {...fieldProps} />\n          </Tooltip>\n        );\n      break;\n      case 'icon':\n        const icon2 = tokenConfig && tokenConfig.icon ? tokenConfig.icon : `images/tokens/${this.props.token}.svg`;\n        output = (\n          <Image src={icon2} {...fieldProps} />\n        );\n      break;\n      case 'tokenName':\n        output = (\n          <Text {...fieldProps}>{this.props.token}</Text>\n        );\n      break;\n      case 'strategyIcon':\n        const strategyIcon = this.functionsUtil.getGlobalConfig(['strategies',this.props.tokenConfig.strategy,'icon']);\n        if (strategyIcon){\n          output = (\n            <Image src={strategyIcon} {...fieldProps} />\n          );\n        }\n      break;\n      case 'strategyName':\n        const strategyName = this.functionsUtil.getGlobalConfig(['strategies',this.props.tokenConfig.strategy,'title']);\n        output = (\n          <Text {...fieldProps}>{strategyName}</Text>\n        );\n      break;\n      case 'tokenBalance':\n        output = this.state.tokenBalance ? (\n          <SmartNumber {...fieldProps} minPrecision={minPrecision} number={this.state.tokenBalance} />\n        ) : loader\n      break;\n      case 'fee':\n        output = this.state.fee ? (\n          <SmartNumber {...fieldProps} minPrecision={minPrecision} number={this.state.fee} />\n        ) : loader\n      break;\n      case 'tokenPrice':\n        output = this.state.tokenPrice ? (\n          <SmartNumber {...fieldProps} minPrecision={minPrecision} number={this.state.tokenPrice} />\n        ) : loader\n      break;\n      case 'amountToMigrate':\n        output = this.state.amountToMigrate ? (\n          <SmartNumber {...fieldProps} minPrecision={minPrecision} number={this.state.amountToMigrate} />\n        ) : loader\n      break;\n      case 'idleTokenBalance':\n        output = this.state.idleTokenBalance ? (\n          <SmartNumber {...fieldProps} minPrecision={minPrecision} number={this.state.idleTokenBalance} />\n        ) : loader\n      break;\n      case 'redeemableBalanceCounterCurve':\n        output = this.state.ready && this.state.redeemableBalanceCurveStart && this.state.redeemableBalanceCurveEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.redeemableBalanceCurveEnd)}\n            start={parseFloat(this.state.redeemableBalanceCurveStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'redeemableBalanceCounter':\n        output = this.state.ready && this.state.redeemableBalanceStart && this.state.redeemableBalanceEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.redeemableBalanceEnd)}\n            start={parseFloat(this.state.redeemableBalanceStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'feesCounter':\n        output = this.state.ready && this.state.feesStart && this.state.feesEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.feesEnd)}\n            start={parseFloat(this.state.feesStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'earningsCounterCurve':\n        output = this.state.ready && this.state.earningsCurveStart && this.state.earningsCurveEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.earningsCurveEnd)}\n            start={parseFloat(this.state.earningsCurveStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'earningsCounter':\n        output = this.state.ready && this.state.earningsStart && this.state.earningsEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.earningsEnd)}\n            start={parseFloat(this.state.earningsStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'redeemableBalance':\n        output = this.state.redeemableBalance ? (\n          <SmartNumber {...fieldProps} decimals={decimals} minPrecision={minPrecision} maxPrecision={maxPrecision} number={this.state.redeemableBalance} />\n        ) : loader\n      break;\n      case 'govTokens':\n        output = this.state.govTokens && Object.keys(this.state.govTokens).length>0 ? (\n          <Flex\n            width={1}\n            alignItems={'center'}\n            flexDirection={'row'}\n            justifyContent={'flex-start'}\n          >\n            {\n              Object.values(this.state.govTokens).map( (govTokenConfig,govTokenIndex) => (\n                <AssetField\n                  token={govTokenConfig.token}\n                  tokenConfig={govTokenConfig}\n                  key={`asset_${govTokenIndex}`}\n                  fieldInfo={{\n                    name:'iconTooltip',\n                    tooltipProps:{\n                      message:`${govTokenConfig.token}`+(this.state.getGovTokensDistributionSpeed && this.state.getGovTokensDistributionSpeed[govTokenConfig.token] ? `: ${this.state.getGovTokensDistributionSpeed[govTokenConfig.token].toFixed(decimals)}/${govTokenConfig.distributionFrequency} (for the whole pool)` : '')\n                    },\n                    props:{\n                      borderRadius:'50%',\n                      position:'relative',\n                      height:['1.1em','2em'],\n                      ml:govTokenIndex ? '-10px' : 0,\n                      zIndex:Object.values(this.state.govTokens).length-govTokenIndex,\n                      boxShadow:['1px 1px 1px 0px rgba(0,0,0,0.1)','1px 2px 3px 0px rgba(0,0,0,0.1)'],\n                    }\n                  }}\n                />\n              ))\n            }\n          </Flex>\n        ) : this.state.govTokens ? (\n          <Text {...fieldProps}>-</Text>\n        ) : loader\n      break;\n      case 'amountLentCurve':\n        output = this.state.amountLentCurve ? (\n          <SmartNumber {...fieldProps} decimals={decimals} minPrecision={minPrecision} maxPrecision={maxPrecision} number={this.state.amountLentCurve} />\n        ) : loader\n      break;\n      case 'amountLent':\n        output = this.state.amountLent ? (\n          <SmartNumber {...fieldProps} decimals={decimals} minPrecision={minPrecision} maxPrecision={maxPrecision} number={this.state.amountLent} />\n        ) : loader\n      break;\n      case 'pool':\n        output = this.state.poolSize ? (\n          <SmartNumber {...fieldProps} decimals={decimals} minPrecision={minPrecision} maxPrecision={maxPrecision} number={this.state.poolSize} />\n        ) : loader\n      break;\n      case 'score':\n        output = (this.props.tokenConfig && this.props.tokenConfig.defiScoreDisabled) ? <Text {...fieldProps}>N/A</Text> : ((this.state.score !== undefined && this.state.score !== null && this.functionsUtil.BNify(this.state.score).gt(0)) ? (\n          <SmartNumber {...fieldProps} decimals={2} number={this.state.score} />\n        ) : this.functionsUtil.BNify(this.state.score).lte(0) ? '-' : loader)\n      break;\n      case 'earningsPerc':\n        output = this.state.earningsPerc ?\n          (typeof fieldInfo.showDirection === 'undefined' || fieldInfo.showDirection) ? (\n            <VariationNumber\n              isMobile={this.props.isMobile}\n              direction={this.state.earningsPercDirection}\n            >\n              <Text {...fieldProps}>{this.state.earningsPerc}%</Text>\n            </VariationNumber>\n          ) : (\n            <Text {...fieldProps}>{this.state.earningsPerc}%</Text>\n          )\n        : loader\n      break;\n      case 'earningsPercCurve':\n        output = this.state.earningsPercCurve ?\n          (typeof fieldInfo.showDirection === 'undefined' || fieldInfo.showDirection) ? (\n            <VariationNumber\n              isMobile={this.props.isMobile}\n              direction={this.state.earningsPercCurveDirection}\n            >\n              <Text {...fieldProps}>{this.state.earningsPercCurve}%</Text>\n            </VariationNumber>\n          ) : (\n            <Text {...fieldProps}>{this.state.earningsPercCurve}%</Text>\n          )\n        : loader\n      break;\n      case 'earningsCurve':\n        output = this.state.earningsCurve ? (\n          <VariationNumber\n            direction={'up'}\n            isMobile={this.props.isMobile}\n          >\n            <SmartNumber\n              {...fieldProps}\n              decimals={decimals}\n              minPrecision={minPrecision}\n              number={this.state.earningsCurve}\n            />\n          </VariationNumber>\n        ) : loader\n      break;\n      case 'earnings':\n        output = this.state.earnings ? (\n          <VariationNumber\n            direction={'up'}\n            isMobile={this.props.isMobile}\n          >\n            <SmartNumber\n              {...fieldProps}\n              decimals={decimals}\n              minPrecision={minPrecision}\n              number={this.state.earnings}\n            />\n          </VariationNumber>\n        ) : loader\n      break;\n      case 'idleDistribution':\n        const governanceTokenName = this.functionsUtil.getGlobalConfig(['governance','props','tokenName']);\n        const idleTokenConfig = this.functionsUtil.getGlobalConfig(['govTokens',governanceTokenName]);\n        output = this.state.idleDistribution ? (\n          <Text {...fieldProps}>+{this.state.idleDistribution.toFixed(decimals)} IDLE/{idleTokenConfig.distributionFrequency}</Text>\n        ) : loader\n      break;\n      case 'userDistributionSpeed':\n        output = this.state.userDistributionSpeed ? (\n          <Text {...fieldProps}>{this.state.userDistributionSpeed.toFixed(decimals)}/{this.props.tokenConfig.distributionFrequency}</Text>\n        ) : loader\n      break;\n      case 'distributionSpeed':\n        output = this.state.distributionSpeed ? (\n          <Text {...fieldProps}>{this.state.distributionSpeed.toFixed(decimals)}</Text>\n        ) : loader\n      break;\n      case 'apr':\n        output = this.state.tokenAPR ? (\n          <Text {...fieldProps}>{this.state.tokenAPR}{!isNaN(parseFloat(this.state.tokenAPR)) ? '%' : ''}</Text>\n        ) : loader\n      break;\n      case 'oldApy':\n        output = this.state.oldAPY !== undefined ? (\n          <Text {...fieldProps}>{this.state.oldAPY !== false ? this.state.oldAPY : '-' }<small>%</small></Text>\n        ) : loader\n      break;\n      case 'apyNoGov':\n        output = this.state.tokenAPYNoGov !== undefined ? (\n          <Text {...fieldProps}>{this.state.tokenAPYNoGov !== false ? this.state.tokenAPYNoGov : '-' }<small>%</small></Text>\n        ) : loader\n      break;\n      case 'curveApy':\n        output = this.state.curveApy !== undefined ? (\n          <Text {...fieldProps}>{this.state.curveApy !== false ? this.state.curveApy : '-' }<small>%</small></Text>\n        ) : loader\n      break;\n      case 'curveAvgSlippage':\n        output = this.state.curveAvgSlippage !== undefined ? (\n          <Text {...fieldProps}>{this.state.curveAvgSlippage !== false ? this.state.curveAvgSlippage : '-' }<small>%</small></Text>\n        ) : loader\n      break;\n      case 'apy':\n        output = this.state.tokenAPY !== undefined ? (\n          <Flex\n            alignItems={'center'}\n            flexDirection={'row'}\n          >\n            <Text {...fieldProps}>{this.state.tokenAPY !== false ? this.state.tokenAPY : '-' }<small>%</small></Text>\n            {\n              this.state.govTokensAprs && Object.keys(this.state.govTokensAprs).length>0 && \n                <AssetField\n                  fieldInfo={{\n                    name:'tooltip',\n                    props:{\n                      iconProps:{\n                        ml:1\n                      },\n                      placement:'top',\n                      message:Object.keys(this.state.govTokensAprs).map( govToken => {\n                        const distributionFrequency = this.functionsUtil.getGlobalConfig(['govTokens',govToken,'distributionFrequency']);\n                        const tooltipMode = this.functionsUtil.getGlobalConfig(['govTokens',govToken,'aprTooltipMode']);\n                        let value = this.state.govTokensAprs[govToken].toFixed(decimals);\n                        switch (tooltipMode){\n                          default:\n                          case 'apr':\n                            value += '%';\n                          break;\n                          case 'distribution':\n                            value = `${value}/${distributionFrequency}`;\n                          break;\n                        }\n                        return `${govToken}: ${value}`\n                      }).join('; ')\n                    }\n                  }}\n                />\n            }\n          </Flex>\n        ) : loader\n      break;\n      case 'button':\n        const buttonLabel = typeof fieldInfo.label === 'function' ? fieldInfo.label(this.props) : fieldInfo.label;\n        output = (\n          <Button {...fieldProps} onClick={() => fieldProps.handleClick(this.props) }>{buttonLabel}</Button>\n        );\n      break;\n      case 'performanceChart':\n        output = this.state.performanceChartData ? (\n          <GenericChart\n            {...this.state.performanceChartProps}\n            type={this.state.performanceChartType}\n            data={this.state.performanceChartData}\n            width={this.state.performanceChartWidth}\n            height={this.state.performanceChartHeight}\n          />\n        ) : loader\n      break;\n      case 'allocationChart':\n        output = this.state.allocationChartWidth && this.state.allocationChartHeight ? (\n          <AllocationChart\n            {...this.props}\n            loaderProps={{\n              size:'20px'\n            }}\n            loaderText={''}\n            selectedToken={this.props.token}\n            width={this.state.allocationChartWidth}\n            height={this.state.allocationChartHeight}\n            inline={typeof this.props.inline !== 'undefined' ? this.props.inline : true}\n            showLoader={typeof this.props.showLoader !== 'undefined' ? this.props.showLoader : false}\n          />\n        ) : loader\n      break;\n      case 'tooltip':\n        output = (\n          <Tooltip\n            {...fieldProps}\n          >\n            <Icon\n              ml={2}\n              name={\"Info\"}\n              size={'1em'}\n              color={'cellTitle'}\n              {...fieldProps.iconProps}\n            />\n          </Tooltip>\n        );\n      break;\n      case 'aprChart':\n        output = this.state.aprChartData ? (\n          <GenericChart\n            {...this.state.aprChartProps}\n            type={this.state.aprChartType}\n            data={this.state.aprChartData}\n            width={this.state.aprChartWidth}\n            height={this.state.aprChartHeight}\n          />\n        ) : loader\n      break;\n      case 'custom':\n        let CustomComponent = null;\n        let customValue = this.state[fieldInfo.name];\n        switch (fieldInfo.type){\n          case 'number':\n            customValue = this.functionsUtil.BNify(customValue).toString();\n            CustomComponent = SmartNumber;\n            fieldProps.number = customValue;\n          break;\n          case 'icon':\n            CustomComponent = Icon;\n            fieldProps.name = customValue;\n            const customFieldName = Object.values(fieldInfo.path).pop();\n            if (this.props.tokenConfig[`${customFieldName}Props`]){\n              const customFieldProps = this.props.tokenConfig[`${customFieldName}Props`];\n              // Replace props\n              if (customFieldProps && Object.keys(customFieldProps).length){\n                Object.keys(customFieldProps).forEach(p => {\n                  fieldProps[p] = customFieldProps[p];\n                });\n              }\n            }\n          break;\n          default:\n            CustomComponent = Text;\n          break;\n        }\n        output = customValue ? (\n          <CustomComponent {...fieldProps}>{customValue}</CustomComponent>\n        ) : loader\n      break;\n      default:\n        let formattedValue = this.state[fieldInfo.name];\n        if (this.state[fieldInfo.name] && this.state[fieldInfo.name]._isBigNumber){\n          formattedValue = this.state[fieldInfo.name].toFixed(decimals);\n        }\n        output = this.state[fieldInfo.name] ? (\n          <Text {...fieldProps}>{formattedValue}</Text>\n        ) : loader\n      break;\n    }\n    return output;\n  }\n}\n\nexport default AssetField;\n","import { Button } from \"rimble-ui\";\nimport React, { Component } from 'react';\n\nclass RoundButton extends Component {\n  render() {\n    const buttonProps = Object.assign({\n      width:1,\n      fontSize:3,\n      fontWeight:3,\n      height:'45px',\n      boxShadow:null,\n      borderRadius:4,\n      mainColor:'blue'\n    },this.props.buttonProps);\n\n    return (\n       <Button\n        {...buttonProps}\n        onClick={this.props.handleClick}\n       >\n        {this.props.children}\n       </Button>\n    );\n  }\n}\n\nexport default RoundButton;\n","import React, { Component } from \"react\";\nimport { Button, Image, Flex, Text, Icon, Box } from 'rimble-ui';\n\nclass ImageButton extends Component {\n\n  render() {\n\n    const isMobile = typeof this.props.isMobile !== 'undefined' ? this.props.isMobile : false;\n    const image = this.props.imageSrc ? (<Image width={'auto'} src={this.props.imageSrc} {...this.props.imageProps} />) : ( this.props.iconName ? (<Icon name={this.props.iconName} {...this.props.iconProps} />) : null );\n    const caption = (<Text textAlign={ isMobile ? 'left' : 'center'} fontSize={2} fontWeight={3} color={'dark-gray'}>{this.props.caption}</Text>);\n\n    return (\n        <Button\n          color={'white'}\n          borderRadius={3}\n          px={ isMobile ? [3,4] : 4 }\n          py={ isMobile ? 0 : [3,4] }\n          my={ isMobile ? 2 : [2,2] }\n          mx={ isMobile ? 0 : [0,2] }\n          onClick={ this.props.handleClick }\n          height={ isMobile ? '58px' : ['150px','170px']}\n          mainColor={this.props.isActive ? 'cardBgHover' : 'cardBg'}\n          contrastColor={this.props.isActive ? 'cardBgHover' : 'cardBg'}\n          width={this.props.width ? this.props.width : (isMobile ? '100%' : ['150px','170px'])}\n          style={this.props.buttonStyle ? this.props.buttonStyle : (isMobile ? {justifyContent:'flex-start'} : null)}\n          {...this.props.buttonProps}\n        >\n          <>\n            {\n              this.props.badge && (\n                <Box\n                  position={'absolute'}\n                  borderRadius={'16px'}\n                  backgroundColor={ this.props.badge.bgColor ? this.props.badge.bgColor : 'blue' }\n                  style={ isMobile ? {right:'-25px',top:'-17px'} : {right:'-25px',top:'-25px'} }\n                  px={['5px','7px']}\n                  py={['1px','3px']}\n                >\n                  <Text\n                    fontWeight={3}\n                    fontSize={'10px'}\n                    color={ this.props.badge.color ? this.props.badge.color : '#fff' }\n                  >\n                  {this.props.badge.text}\n                  </Text>\n                </Box>\n              )\n            }\n            <Flex flexDirection={ isMobile ? 'row' : 'column'} justifyContent={ isMobile ? 'flex-start' : 'center'} alignItems={'center'}>\n              <Flex width={ isMobile ? '45px' : 1 } mr={ isMobile ? 2 : 0 } justifyContent={ isMobile ? 'flex-start' : 'center' }>\n                { this.props.captionPos && this.props.captionPos === 'top' ? caption : image }\n              </Flex>\n              <Flex width={ isMobile ? 'auto' : 1 } flexDirection={'column'} justifyContent={ isMobile ? 'flex-start' : 'center' } >\n                { this.props.captionPos && this.props.captionPos === 'top' ? image : caption }\n                {\n                  this.props.subcaption && this.props.subcaption.split('\\n').map((v,i) => {\n                    // Smaller caption for second line\n                    if (i){\n                      v = (<small>{v}</small>);\n                    }\n                    return (\n                      <Text key={`subcaption_${i}`} lineHeight={'1.3'} textAlign={ isMobile ? 'left' : 'center'} color={'darkGray'} fontWeight={1} fontSize={1}>{v}</Text>\n                    );\n                  })\n                }\n              </Flex>\n            </Flex>\n          </>\n        </Button>\n    );\n  }\n}\nexport default ImageButton;\n"],"sourceRoot":""}